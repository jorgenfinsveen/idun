Running from: /cluster/home/jorgfi
Job: vulkan_sim  ID: 23038245  Nodes: idun-07-01


ENVIRONMENT INFO
---------------------------
	- OS:	 Ubuntu 20.04.6 LTS
	- CPU:	 Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz
	- RAM:	 753Gi

Sat Sep  6 13:18:47 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 575.57.08              Driver Version: 575.57.08      CUDA Version: 12.9     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  Tesla V100-PCIE-32GB           On  |   00000000:12:00.0 Off |                    0 |
| N/A   26C    P0             23W /  250W |       0MiB /  32768MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+


SIMULATION SETUP
---------------------
	- Device config:	 /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/configs/tested-cfgs/CUSTOM
	- gpgpu_ptx_sim_mode:	 0
	- Scene:		 12
	- Dimensions:
		- Width:	 128
		- Height:	 128
	- Samples:		 2
	- Shader type:		 5




STARTING SIMULATION...
--------------------------------------------------------



GPGPU-Sim version 4.0.0 - Vulkan-Sim version 2.0.0 (build gpgpu-sim_git-commit-dc742faa6e5fcfaf415fe51eab71dcf9345388fd-modified_585.0) configured with GPUWattch.

----------------------------------------------------------------------------
INFO - If you only care about PTX execution, ignore this message. GPGPU-Sim supports PTX execution in modern CUDA.
If you want to run PTXPLUS (sm_1x SASS) with a modern card configuration - set the envronment variable
$PTXAS_CUDA_INSTALL_PATH to point a CUDA version compabible with your card configurations (i.e. 8+ for PASCAL, 9+ for VOLTA etc..)
For example: "export $PTXAS_CUDA_INSTALL_PATH=/usr/local/cuda-9.1"

The following text describes why:
If you are using PTXPLUS, only sm_1x is supported and it requires that the app and simulator binaries are compiled in CUDA 4.2 or less.
The simulator requires it since CUDA headers desribe struct sizes in the exec which change from gen to gen.
The apps require 4.2 because new versions of CUDA tools have dropped parsing support for generating sm_1x
When running using modern config (i.e. volta) and PTXPLUS with CUDA 4.2, the $PTXAS_CUDA_INSTALL_PATH env variable is required to get proper register usage
(and hence occupancy) using a version of CUDA that knows the register usage on the real card.

----------------------------------------------------------------------------
setup_environment succeeded
MESA: Linking to LLVM resource bind packing.
Vulkan SDK Header Version: 296

Vulkan Instance Extensions: 
- VK_KHR_device_group_creation (0.0.1)
- VK_KHR_external_fence_capabilities (0.0.1)
- VK_KHR_external_memory_capabilities (0.0.1)
- VK_KHR_external_semaphore_capabilities (0.0.1)
- VK_KHR_get_physical_device_properties2 (0.0.2)
- VK_KHR_get_surface_capabilities2 (0.0.1)
- VK_KHR_surface (0.0.25)
- VK_KHR_surface_protected_capabilities (0.0.1)
- VK_KHR_xcb_surface (0.0.6)
- VK_KHR_xlib_surface (0.0.6)
- VK_EXT_debug_report (0.0.10)
- VK_EXT_debug_utils (0.0.2)
- VK_KHR_portability_enumeration (0.0.1)
- VK_LUNARG_direct_driver_loading (0.0.1)

Vulkan Instance Layers: 
- VK_LAYER_NV_optimus (1.4.303) : NVIDIA Optimus layer
- VK_LAYER_NV_present (1.4.303) : NVIDIA GR2608 layer

Vulkan Devices: 
- [0] UnknownVendor 'llvmpipe (LLVM 10.0.0, 256 bits)' (CPU: vulkan 1.3.254, driver llvmpipe Mesa 23.2.0-devel (git-b8f3e3980e) (LLVM 10.0.0) - 0.0.1)

Setting Device [0]:
Getting ray tracing pipeline properties...
- loading '../../../Scenes/Blender_2.83/Cube_042.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0635717s
- loading '../../../Scenes/Blender_2.83/Cube_132.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0536788s
- loading '../../../Scenes/Blender_2.83/BezierCurve_009.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0705585s
- loading '../../../Scenes/Blender_2.83/Cube_076.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.0733971s
- loading '../../../Scenes/Blender_2.83/Cube_078.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0589461s
- loading '../../../Scenes/Blender_2.83/light_X_warning_006.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.048885s
- loading '../../../Scenes/Blender_2.83/Cylinder_030.obj'... (288 vertices, 360 unique vertices, 1 materials) 0.0514142s
- loading '../../../Scenes/Blender_2.83/Cube_065.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.11615s
- loading '../../../Scenes/Blender_2.83/Power_Pole_ID.obj'... (438 vertices, 438 unique vertices, 1 materials) 0.0702722s
- loading '../../../Scenes/Blender_2.83/Text_001.obj'... (28068 vertices, 9509 unique vertices, 1 materials) 0.117283s
- loading '../../../Scenes/Blender_2.83/_Grill_017.obj'... (2862 vertices, 3596 unique vertices, 1 materials) 0.0703713s
- loading '../../../Scenes/Blender_2.83/Cube_109.obj'... (6546 vertices, 2179 unique vertices, 1 materials) 0.0474668s
- loading '../../../Scenes/Blender_2.83/Cube_055.obj'... (2124 vertices, 856 unique vertices, 1 materials) 0.0481849s
- loading '../../../Scenes/Blender_2.83/Cylinder_072.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.124189s
- loading '../../../Scenes/Blender_2.83/boatback_008.obj'... (3078 vertices, 2360 unique vertices, 1 materials) 0.118069s
- loading '../../../Scenes/Blender_2.83/Cube_082.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0385172s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_007.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0562236s
- loading '../../../Scenes/Blender_2.83/boxes_001.obj'... (318 vertices, 315 unique vertices, 1 materials) 0.0838645s
- loading '../../../Scenes/Blender_2.83/Charlie_001.obj'... (31032 vertices, 15032 unique vertices, 1 materials) 0.125138s
- loading '../../../Scenes/Blender_2.83/Cylinder_011.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0798931s
- loading '../../../Scenes/Blender_2.83/Text_002.obj'... (15288 vertices, 5143 unique vertices, 1 materials) 0.079212s
- loading '../../../Scenes/Blender_2.83/Cylinder_010.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0493572s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_001.obj'... (2184 vertices, 2204 unique vertices, 6 materials) 0.0409591s
- loading '../../../Scenes/Blender_2.83/Cylinder_006.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.0463979s
- loading '../../../Scenes/Blender_2.83/Cube_006.obj'... (318 vertices, 306 unique vertices, 1 materials) 0.0840607s
- loading '../../../Scenes/Blender_2.83/Cube_067.obj'... (6477 vertices, 8222 unique vertices, 1 materials) 0.0936131s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_016.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.0552303s
- loading '../../../Scenes/Blender_2.83/Cube_004.obj'... (1242 vertices, 1467 unique vertices, 1 materials) 0.0531502s
- loading '../../../Scenes/Blender_2.83/BezierCurve_014.obj'... (11808 vertices, 2132 unique vertices, 1 materials) 0.115585s
- loading '../../../Scenes/Blender_2.83/Cube_128.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0303558s
- loading '../../../Scenes/Blender_2.83/Cube_028.obj'... (2688 vertices, 2678 unique vertices, 1 materials) 0.0617827s
- loading '../../../Scenes/Blender_2.83/Cube_080.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0686166s
- loading '../../../Scenes/Blender_2.83/boxes_004.obj'... (48 vertices, 20 unique vertices, 1 materials) 0.0374004s
- loading '../../../Scenes/Blender_2.83/BezierCurve_013.obj'... (11808 vertices, 2132 unique vertices, 1 materials) 0.11019s
- loading '../../../Scenes/Blender_2.83/20191230_134947_060.obj'... (5922 vertices, 5730 unique vertices, 1 materials) 0.0952544s
- loading '../../../Scenes/Blender_2.83/Cylinder_012.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0481076s
- loading '../../../Scenes/Blender_2.83/boatback_007.obj'... (708 vertices, 694 unique vertices, 1 materials) 0.0915073s
- loading '../../../Scenes/Blender_2.83/boatback_013.obj'... (165 vertices, 117 unique vertices, 1 materials) 0.0253133s
- loading '../../../Scenes/Blender_2.83/20191230_134947_011.obj'... (21504 vertices, 21200 unique vertices, 1 materials) 0.157937s
- loading '../../../Scenes/Blender_2.83/Cylinder_021.obj'... (5022 vertices, 5331 unique vertices, 1 materials) 0.0526602s
- loading '../../../Scenes/Blender_2.83/Cube_059.obj'... (11994 vertices, 14468 unique vertices, 2 materials) 0.108668s
- loading '../../../Scenes/Blender_2.83/Cube_074.obj'... (21156 vertices, 26956 unique vertices, 1 materials) 0.12612s
- loading '../../../Scenes/Blender_2.83/BezierCurve_007.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.116319s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_004.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.064018s
- loading '../../../Scenes/Blender_2.83/Steady_Breeze_Chimney_Steam.obj'... (12 vertices, 4 unique vertices, 1 materials) 0.0555447s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_017.obj'... (6144 vertices, 2413 unique vertices, 7 materials) 0.081627s
- loading '../../../Scenes/Blender_2.83/Boss_001.obj'... (89253 vertices, 42613 unique vertices, 1 materials) 0.298507s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_009.obj'... (6144 vertices, 2380 unique vertices, 7 materials) 0.0627881s
- loading '../../../Scenes/Blender_2.83/Cylinder_036.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0914664s
- loading '../../../Scenes/Blender_2.83/Cube_071.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0913866s
- loading '../../../Scenes/Blender_2.83/Cube_034.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.0627826s
- loading '../../../Scenes/Blender_2.83/boatback_004.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.0422106s
- loading '../../../Scenes/Blender_2.83/Text_005.obj'... (228 vertices, 84 unique vertices, 1 materials) 0.0582511s
- loading '../../../Scenes/Blender_2.83/_Steel_Cover_001.obj'... (948 vertices, 808 unique vertices, 1 materials) 0.0696187s
- loading '../../../Scenes/Blender_2.83/Cube_017.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0418343s
- loading '../../../Scenes/Blender_2.83/BezierCurve_002.obj'... (24696 vertices, 9777 unique vertices, 2 materials) 0.0984934s
- loading '../../../Scenes/Blender_2.83/Cube_5597.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0795869s
- loading '../../../Scenes/Blender_2.83/Cylinder_017.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.0480155s
- loading '../../../Scenes/Blender_2.83/cables_repeating.obj'... (9693 vertices, 7052 unique vertices, 1 materials) 0.0758489s
- loading '../../../Scenes/Blender_2.83/Wall_Electrical.obj'... (22710 vertices, 7533 unique vertices, 2 materials) 0.0910694s
- loading '../../../Scenes/Blender_2.83/boatback_015.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.031974s
- loading '../../../Scenes/Blender_2.83/Cube_083.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.027677s
- loading '../../../Scenes/Blender_2.83/Phone_Booth_001.obj'... (4008 vertices, 2894 unique vertices, 6 materials) 0.0659885s
- loading '../../../Scenes/Blender_2.83/boatback_024.obj'... (264 vertices, 298 unique vertices, 1 materials) 0.072098s
- loading '../../../Scenes/Blender_2.83/Cylinder_009.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0144734s
- loading '../../../Scenes/Blender_2.83/Cube_077.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.0452358s
- loading '../../../Scenes/Blender_2.83/Cube_087.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0900557s
- loading '../../../Scenes/Blender_2.83/Cube_038.obj'... (4428 vertices, 2494 unique vertices, 3 materials) 0.0461114s
- loading '../../../Scenes/Blender_2.83/BezierCurve_016.obj'... (11304 vertices, 2041 unique vertices, 1 materials) 0.0627992s
- loading '../../../Scenes/Blender_2.83/Cube_126.obj'... (4428 vertices, 2494 unique vertices, 3 materials) 0.0269153s
- loading '../../../Scenes/Blender_2.83/20191230_134947_012.obj'... (21504 vertices, 21184 unique vertices, 1 materials) 0.085596s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_015.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.0471372s
- loading '../../../Scenes/Blender_2.83/Cylinder_029.obj'... (360 vertices, 364 unique vertices, 3 materials) 0.0450705s
- loading '../../../Scenes/Blender_2.83/Cylinder_024.obj'... (3000 vertices, 2040 unique vertices, 3 materials) 0.037411s
- loading '../../../Scenes/Blender_2.83/Cube_054.obj'... (48 vertices, 44 unique vertices, 1 materials) 0.046104s
- loading '../../../Scenes/Blender_2.83/20191230_134947_015.obj'... (5922 vertices, 5727 unique vertices, 1 materials) 0.0711562s
- loading '../../../Scenes/Blender_2.83/_Grill_003.obj'... (5808 vertices, 7508 unique vertices, 1 materials) 0.0753919s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_022.obj'... (6144 vertices, 2372 unique vertices, 7 materials) 0.0510012s
- loading '../../../Scenes/Blender_2.83/Cube_104.obj'... (11994 vertices, 14472 unique vertices, 2 materials) 0.0737351s
- loading '../../../Scenes/Blender_2.83/BezierCurve_010.obj'... (22248 vertices, 4017 unique vertices, 1 materials) 0.0874353s
- loading '../../../Scenes/Blender_2.83/Cube_043.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.037156s
- loading '../../../Scenes/Blender_2.83/Cube_002.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0570212s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_003.obj'... (2184 vertices, 2230 unique vertices, 6 materials) 0.0296053s
- loading '../../../Scenes/Blender_2.83/Cube_107.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0954118s
- loading '../../../Scenes/Blender_2.83/Cube_022.obj'... (2676 vertices, 2930 unique vertices, 1 materials) 0.0452277s
- loading '../../../Scenes/Blender_2.83/Cube_068.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0713924s
- loading '../../../Scenes/Blender_2.83/Pier.obj'... (900 vertices, 374 unique vertices, 1 materials) 0.0330984s
- loading '../../../Scenes/Blender_2.83/boatback_005.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.0140887s
- loading '../../../Scenes/Blender_2.83/Cylinder_008.obj'... (996 vertices, 1132 unique vertices, 1 materials) 0.0220743s
- loading '../../../Scenes/Blender_2.83/Backpacks_002.obj'... (19938 vertices, 39600 unique vertices, 1 materials) 0.142197s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_012.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.0458481s
- loading '../../../Scenes/Blender_2.83/Gondolier_002.obj'... (90228 vertices, 180036 unique vertices, 1 materials) 0.339083s
- loading '../../../Scenes/Blender_2.83/BezierCurve.obj'... (15624 vertices, 2821 unique vertices, 1 materials) 0.0957186s
- loading '../../../Scenes/Blender_2.83/Cube_095.obj'... (852 vertices, 978 unique vertices, 2 materials) 0.0700221s
- loading '../../../Scenes/Blender_2.83/Cube_036.obj'... (852 vertices, 978 unique vertices, 2 materials) 0.0343943s
- loading '../../../Scenes/Blender_2.83/Cylinder_018.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.0247149s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_018.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.0143859s
- loading '../../../Scenes/Blender_2.83/Cylinder_027.obj'... (1626 vertices, 901 unique vertices, 3 materials) 0.0269141s
- loading '../../../Scenes/Blender_2.83/_Steel_Cover_005.obj'... (948 vertices, 808 unique vertices, 1 materials) 0.028713s
- loading '../../../Scenes/Blender_2.83/BezierCurve_030.obj'... (2160 vertices, 724 unique vertices, 4 materials) 0.0274702s
- loading '../../../Scenes/Blender_2.83/boatback_010.obj'... (102 vertices, 90 unique vertices, 1 materials) 0.0450506s
- loading '../../../Scenes/Blender_2.83/Plane_006.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.067098s
- loading '../../../Scenes/Blender_2.83/boatback_006.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.0353448s
- loading '../../../Scenes/Blender_2.83/Cube_108.obj'... (852 vertices, 978 unique vertices, 2 materials) 0.0160105s
- loading '../../../Scenes/Blender_2.83/Cube_015.obj'... (2520 vertices, 1716 unique vertices, 2 materials) 0.0217518s
- loading '../../../Scenes/Blender_2.83/SWAT_001.obj'... (62826 vertices, 41928 unique vertices, 4 materials) 0.172915s
- loading '../../../Scenes/Blender_2.83/Cube_003.obj'... (1242 vertices, 1467 unique vertices, 1 materials) 0.0496234s
- loading '../../../Scenes/Blender_2.83/Cube_086.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0514584s
- loading '../../../Scenes/Blender_2.83/Backpacks_001.obj'... (25893 vertices, 51206 unique vertices, 1 materials) 0.147845s
- loading '../../../Scenes/Blender_2.83/SWAT_002.obj'... (62826 vertices, 41928 unique vertices, 4 materials) 0.191672s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_008.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0258267s
- loading '../../../Scenes/Blender_2.83/Cube_049.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0306787s
- loading '../../../Scenes/Blender_2.83/Wall_Electrical_002.obj'... (22710 vertices, 7532 unique vertices, 2 materials) 0.0892192s
- loading '../../../Scenes/Blender_2.83/Cube_106.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0745351s
- loading '../../../Scenes/Blender_2.83/20191230_134947_005.obj'... (5922 vertices, 5761 unique vertices, 1 materials) 0.0568543s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_004.obj'... (2184 vertices, 2192 unique vertices, 6 materials) 0.0688951s
- loading '../../../Scenes/Blender_2.83/Cube_081.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0394858s
- loading '../../../Scenes/Blender_2.83/BezierCurve_006.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0413584s
- loading '../../../Scenes/Blender_2.83/boatback_021.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.0397204s
- loading '../../../Scenes/Blender_2.83/20191230_134947_029.obj'... (21504 vertices, 21188 unique vertices, 1 materials) 0.107615s
- loading '../../../Scenes/Blender_2.83/_Robot_Flyers_001.obj'... (1092 vertices, 364 unique vertices, 1 materials) 0.0469085s
- loading '../../../Scenes/Blender_2.83/light_X_warning_001.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.0472838s
- loading '../../../Scenes/Blender_2.83/Cube_040.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0636388s
- loading '../../../Scenes/Blender_2.83/boatback_014.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.0412383s
- loading '../../../Scenes/Blender_2.83/boatback_018.obj'... (1038 vertices, 966 unique vertices, 1 materials) 0.0595837s
- loading '../../../Scenes/Blender_2.83/Cylinder_2683.obj'... (35160 vertices, 11745 unique vertices, 1 materials) 0.101144s
- loading '../../../Scenes/Blender_2.83/BezierCurve_008.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0679669s
- loading '../../../Scenes/Blender_2.83/Cube_131.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0304767s
- loading '../../../Scenes/Blender_2.83/Cube_018.obj'... (19296 vertices, 10848 unique vertices, 1 materials) 0.0991153s
- loading '../../../Scenes/Blender_2.83/Cylinder_007.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.0676951s
- loading '../../../Scenes/Blender_2.83/Cube_019.obj'... (19296 vertices, 10848 unique vertices, 1 materials) 0.0917729s
- loading '../../../Scenes/Blender_2.83/Cube_014.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0362012s
- loading '../../../Scenes/Blender_2.83/Cube_011.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0669667s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_011.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.0441325s
- loading '../../../Scenes/Blender_2.83/Cube_012.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0954616s
- loading '../../../Scenes/Blender_2.83/Cylinder_073.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0574934s
- loading '../../../Scenes/Blender_2.83/BezierCurve_042.obj'... (294336 vertices, 54197 unique vertices, 1 materials) 0.853225s
- loading '../../../Scenes/Blender_2.83/BezierCurve_004.obj'... (8712 vertices, 1573 unique vertices, 1 materials) 0.085897s
- loading '../../../Scenes/Blender_2.83/Cube_098.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0600058s
- loading '../../../Scenes/Blender_2.83/Cylinder_002.obj'... (804 vertices, 850 unique vertices, 1 materials) 0.0466167s
- loading '../../../Scenes/Blender_2.83/20191230_134947_009.obj'... (5922 vertices, 5756 unique vertices, 1 materials) 0.0682845s
- loading '../../../Scenes/Blender_2.83/Armature_007.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0858365s
- loading '../../../Scenes/Blender_2.83/Cube_048.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0249206s
- loading '../../../Scenes/Blender_2.83/CyberSean.obj'... (90072 vertices, 50202 unique vertices, 1 materials) 0.273364s
- loading '../../../Scenes/Blender_2.83/Cube_008.obj'... (2700 vertices, 1815 unique vertices, 2 materials) 0.0226249s
- loading '../../../Scenes/Blender_2.83/Power_Meter_3.obj'... (5490 vertices, 1896 unique vertices, 6 materials) 0.0261517s
- loading '../../../Scenes/Blender_2.83/Gondolier_001.obj'... (90228 vertices, 40813 unique vertices, 1 materials) 0.252599s
- loading '../../../Scenes/Blender_2.83/KaitlinSarong_002.obj'... (79602 vertices, 41748 unique vertices, 1 materials) 0.222924s
- loading '../../../Scenes/Blender_2.83/Cube_027.obj'... (7200 vertices, 2634 unique vertices, 1 materials) 0.050232s
- loading '../../../Scenes/Blender_2.83/Cylinder_004.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.035855s
- loading '../../../Scenes/Blender_2.83/boatback_003.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.0166082s
- loading '../../../Scenes/Blender_2.83/Text.obj'... (7068 vertices, 2398 unique vertices, 1 materials) 0.0242435s
- loading '../../../Scenes/Blender_2.83/Cube_110.obj'... (6720 vertices, 4774 unique vertices, 3 materials) 0.0738221s
- loading '../../../Scenes/Blender_2.83/Armature_006.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0393016s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_006.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0401663s
- loading '../../../Scenes/Blender_2.83/Cube_130.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0241919s
- loading '../../../Scenes/Blender_2.83/Cube_030.obj'... (360 vertices, 237 unique vertices, 1 materials) 0.0434437s
- loading '../../../Scenes/Blender_2.83/Cylinder_020.obj'... (32874 vertices, 29340 unique vertices, 1 materials) 0.100391s
- loading '../../../Scenes/Blender_2.83/Cube_013.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0757943s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_021.obj'... (6144 vertices, 2372 unique vertices, 7 materials) 0.0204941s
- loading '../../../Scenes/Blender_2.83/Cube_123.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0346943s
- loading '../../../Scenes/Blender_2.83/Armature_003.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0592438s
- loading '../../../Scenes/Blender_2.83/Cube_039.obj'... (8316 vertices, 6454 unique vertices, 2 materials) 0.102983s
- loading '../../../Scenes/Blender_2.83/20191230_134947_013.obj'... (21504 vertices, 21186 unique vertices, 1 materials) 0.115189s
- loading '../../../Scenes/Blender_2.83/Cube_035.obj'... (2124 vertices, 856 unique vertices, 1 materials) 0.0334985s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_002.obj'... (27540 vertices, 9558 unique vertices, 3 materials) 0.0560082s
- loading '../../../Scenes/Blender_2.83/Cube_026.obj'... (9762 vertices, 9196 unique vertices, 4 materials) 0.0343426s
- loading '../../../Scenes/Blender_2.83/BezierCurve_003.obj'... (8784 vertices, 1586 unique vertices, 1 materials) 0.0722244s
- loading '../../../Scenes/Blender_2.83/Cylinder.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.027558s
- loading '../../../Scenes/Blender_2.83/Power_Meter_2.obj'... (97656 vertices, 32903 unique vertices, 5 materials) 0.130008s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_010.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.0424794s
- loading '../../../Scenes/Blender_2.83/BezierCurve_001.obj'... (15624 vertices, 2821 unique vertices, 1 materials) 0.0889492s
- loading '../../../Scenes/Blender_2.83/Cube_021.obj'... (3372 vertices, 5159 unique vertices, 1 materials) 0.0400574s
- loading '../../../Scenes/Blender_2.83/Cube_100.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0880456s
- loading '../../../Scenes/Blender_2.83/Armature_005.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0351676s
- loading '../../../Scenes/Blender_2.83/BezierCurve_041.obj'... (288 vertices, 52 unique vertices, 1 materials) 0.0471903s
- loading '../../../Scenes/Blender_2.83/boxes_005.obj'... (48 vertices, 20 unique vertices, 1 materials) 0.042142s
- loading '../../../Scenes/Blender_2.83/light_X_warning_003.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.0281771s
- loading '../../../Scenes/Blender_2.83/Cube_009.obj'... (2685 vertices, 1766 unique vertices, 1 materials) 0.0575874s
- loading '../../../Scenes/Blender_2.83/light_X_warning_002.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.0383341s
- loading '../../../Scenes/Blender_2.83/boxes_006.obj'... (318 vertices, 311 unique vertices, 1 materials) 0.00653305s
- loading '../../../Scenes/Blender_2.83/Cylinder_040.obj'... (8856 vertices, 3126 unique vertices, 5 materials) 0.0430178s
- loading '../../../Scenes/Blender_2.83/20191230_134947_002.obj'... (21504 vertices, 21214 unique vertices, 1 materials) 0.120184s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_014.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.0407079s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_019.obj'... (6144 vertices, 2420 unique vertices, 7 materials) 0.021116s
- loading '../../../Scenes/Blender_2.83/Cube_023.obj'... (228 vertices, 220 unique vertices, 1 materials) 0.0381335s
- loading '../../../Scenes/Blender_2.83/Cube_1320.obj'... (1836 vertices, 612 unique vertices, 1 materials) 0.0506943s
- loading '../../../Scenes/Blender_2.83/boxes_003.obj'... (48 vertices, 20 unique vertices, 1 materials) 0.0366957s
- loading '../../../Scenes/Blender_2.83/Cylinder_015.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0235993s
- loading '../../../Scenes/Blender_2.83/Cube_075.obj'... (360 vertices, 237 unique vertices, 1 materials) 0.0421163s
- loading '../../../Scenes/Blender_2.83/Cube_063.obj'... (900 vertices, 374 unique vertices, 1 materials) 0.0395555s
- loading '../../../Scenes/Blender_2.83/Cylinder_028.obj'... (3588 vertices, 2347 unique vertices, 3 materials) 0.0246013s
- loading '../../../Scenes/Blender_2.83/Cube_033.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0248487s
- loading '../../../Scenes/Blender_2.83/Cube_085.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0339874s
- loading '../../../Scenes/Blender_2.83/Cylinder_042.obj'... (828 vertices, 620 unique vertices, 1 materials) 0.0355404s
- loading '../../../Scenes/Blender_2.83/Cube_111.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.045384s
- loading '../../../Scenes/Blender_2.83/20191230_134947_010.obj'... (21504 vertices, 21188 unique vertices, 1 materials) 0.09827s
- loading '../../../Scenes/Blender_2.83/boatback_016.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.040578s
- loading '../../../Scenes/Blender_2.83/Cylinder_022.obj'... (5022 vertices, 5349 unique vertices, 1 materials) 0.0419029s
- loading '../../../Scenes/Blender_2.83/Cube_060.obj'... (666 vertices, 664 unique vertices, 1 materials) 0.0477896s
- loading '../../../Scenes/Blender_2.83/Cube_016.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0385907s
- loading '../../../Scenes/Blender_2.83/Cube_005.obj'... (318 vertices, 306 unique vertices, 1 materials) 0.0566194s
- loading '../../../Scenes/Blender_2.83/Cube_020.obj'... (11538 vertices, 17654 unique vertices, 4 materials) 0.0725988s
- loading '../../../Scenes/Blender_2.83/BezierCurve_040.obj'... (6120 vertices, 1105 unique vertices, 1 materials) 0.0562577s
- loading '../../../Scenes/Blender_2.83/Cube_127.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0449541s
- loading '../../../Scenes/Blender_2.83/Cube_041.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0238895s
- loading '../../../Scenes/Blender_2.83/Cylinder_037.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0492832s
- loading '../../../Scenes/Blender_2.83/Cube_029.obj'... (2067 vertices, 1313 unique vertices, 1 materials) 0.0606435s
- loading '../../../Scenes/Blender_2.83/Cube_079.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0720924s
- loading '../../../Scenes/Blender_2.83/Text_006.obj'... (22032 vertices, 7439 unique vertices, 1 materials) 0.0682099s
- loading '../../../Scenes/Blender_2.83/Cube_064.obj'... (11994 vertices, 14472 unique vertices, 2 materials) 0.0580324s
- loading '../../../Scenes/Blender_2.83/Cube_093.obj'... (6546 vertices, 2179 unique vertices, 1 materials) 0.0411935s
- loading '../../../Scenes/Blender_2.83/BezierCurve_017.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0802958s
- loading '../../../Scenes/Blender_2.83/Cube_072.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0621602s
- loading '../../../Scenes/Blender_2.83/Cube_112.obj'... (7152 vertices, 4924 unique vertices, 3 materials) 0.0276569s
- loading '../../../Scenes/Blender_2.83/Cube_102.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0536976s
- loading '../../../Scenes/Blender_2.83/Cylinder_071.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0525131s
- loading '../../../Scenes/Blender_2.83/BezierCurve_027.obj'... (9612 vertices, 3471 unique vertices, 1 materials) 0.0720355s
- loading '../../../Scenes/Blender_2.83/Backpacks_004.obj'... (19938 vertices, 39604 unique vertices, 1 materials) 0.0919064s
- loading '../../../Scenes/Blender_2.83/BezierCurve_005.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0834808s
- loading '../../../Scenes/Blender_2.83/Cube_050.obj'... (2313 vertices, 956 unique vertices, 1 materials) 0.023188s
- loading '../../../Scenes/Blender_2.83/Text_004.obj'... (10584 vertices, 3564 unique vertices, 1 materials) 0.0407615s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_003.obj'... (18441 vertices, 6795 unique vertices, 7 materials) 0.0691508s
- loading '../../../Scenes/Blender_2.83/boatback_025.obj'... (264 vertices, 298 unique vertices, 1 materials) 0.0186442s
- loading '../../../Scenes/Blender_2.83/boxes_002.obj'... (318 vertices, 315 unique vertices, 1 materials) 0.0202455s
- loading '../../../Scenes/Blender_2.83/Cube_099.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.029352s
- loading '../../../Scenes/Blender_2.83/Cube_066.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0339399s
- loading '../../../Scenes/Blender_2.83/Plane_015.obj'... (36 vertices, 12 unique vertices, 1 materials) 0.0548433s
- loading '../../../Scenes/Blender_2.83/_Grill_002.obj'... (5808 vertices, 7512 unique vertices, 1 materials) 0.0664413s
- loading '../../../Scenes/Blender_2.83/Power_Meter_4.obj'... (48414 vertices, 16119 unique vertices, 5 materials) 0.104838s
- loading '../../../Scenes/Blender_2.83/aaass.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0442334s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_001.obj'... (18441 vertices, 6787 unique vertices, 7 materials) 0.0830781s
- loading '../../../Scenes/Blender_2.83/Low_Drift_Complex_Steam_004.obj'... (12 vertices, 4 unique vertices, 1 materials) 0.00443642s
- loading '../../../Scenes/Blender_2.83/Armature_002.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0458851s
- loading '../../../Scenes/Blender_2.83/Cube_047.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.00384625s
- loading '../../../Scenes/Blender_2.83/Armature_004.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0390769s
- loading '../../../Scenes/Blender_2.83/20191230_134947_014.obj'... (5922 vertices, 5712 unique vertices, 1 materials) 0.0518217s
- loading '../../../Scenes/Blender_2.83/boatback_022.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.00557327s
- loading '../../../Scenes/Blender_2.83/Cube_007.obj'... (2100 vertices, 1030 unique vertices, 1 materials) 0.0451798s
- loading '../../../Scenes/Blender_2.83/Cylinder_016.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0326249s
- loading '../../../Scenes/Blender_2.83/_scaffold_000.obj'... (1068 vertices, 1068 unique vertices, 2 materials) 0.00850857s
- loading '../../../Scenes/Blender_2.83/BezierCurve_011.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0640201s
- loading '../../../Scenes/Blender_2.83/Cube_073.obj'... (1740 vertices, 858 unique vertices, 1 materials) 0.051711s
- loading '../../../Scenes/Blender_2.83/Cube_094.obj'... (6546 vertices, 2179 unique vertices, 1 materials) 0.04369s
- loading '../../../Scenes/Blender_2.83/Cube_129.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.00399149s
- loading '../../../Scenes/Blender_2.83/Wall_Electrical_001.obj'... (22710 vertices, 7533 unique vertices, 2 materials) 0.0895874s
- loading '../../../Scenes/Blender_2.83/Cube_031.obj'... (2124 vertices, 856 unique vertices, 1 materials) 0.0344536s
- loading '../../../Scenes/Blender_2.83/Cube_069.obj'... (6477 vertices, 8222 unique vertices, 1 materials) 0.053121s
- loading '../../../Scenes/Blender_2.83/Cube_045.obj'... (1920 vertices, 640 unique vertices, 1 materials) 0.0244048s
- loading '../../../Scenes/Blender_2.83/boatback_011.obj'... (102 vertices, 90 unique vertices, 1 materials) 0.0561015s
- loading '../../../Scenes/Blender_2.83/20191230_134947_007.obj'... (5922 vertices, 5728 unique vertices, 1 materials) 0.0943849s
- loading '../../../Scenes/Blender_2.83/Backpacks_003.obj'... (19938 vertices, 39600 unique vertices, 1 materials) 0.153751s
- loading '../../../Scenes/Blender_2.83/Cube_062.obj'... (288 vertices, 96 unique vertices, 2 materials) 0.0450635s
- loading '../../../Scenes/Blender_2.83/BezierCurve_028.obj'... (2160 vertices, 724 unique vertices, 4 materials) 0.101103s
- loading '../../../Scenes/Blender_2.83/Cube_1490.obj'... (1800 vertices, 600 unique vertices, 1 materials) 0.0399709s
- loading '../../../Scenes/Blender_2.83/Cube_051.obj'... (3015 vertices, 1044 unique vertices, 1 materials) 0.0644566s
- loading '../../../Scenes/Blender_2.83/Plane_012.obj'... (329676 vertices, 112397 unique vertices, 3 materials) 0.396068s
- loading '../../../Scenes/Blender_2.83/20191230_134947_004.obj'... (21504 vertices, 21209 unique vertices, 1 materials) 0.0976733s
- loading '../../../Scenes/Blender_2.83/boatback_020.obj'... (1008 vertices, 958 unique vertices, 1 materials) 0.0468643s
- loading '../../../Scenes/Blender_2.83/Plane_976.obj'... (1170 vertices, 1421 unique vertices, 1 materials) 0.0226669s
- loading '../../../Scenes/Blender_2.83/Cube_052.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0198405s
- loading '../../../Scenes/Blender_2.83/20191230_134947_006.obj'... (5922 vertices, 5722 unique vertices, 1 materials) 0.0686432s
- loading '../../../Scenes/Blender_2.83/BezierCurve_032.obj'... (6120 vertices, 1105 unique vertices, 1 materials) 0.0658349s
- loading '../../../Scenes/Blender_2.83/boatback_019.obj'... (1296 vertices, 882 unique vertices, 1 materials) 0.0445275s
- loading '../../../Scenes/Blender_2.83/Cylinder_023.obj'... (2640 vertices, 1680 unique vertices, 3 materials) 0.0515725s
- loading '../../../Scenes/Blender_2.83/Cylinder_014.obj'... (996 vertices, 1052 unique vertices, 1 materials) 0.00453275s
- loading '../../../Scenes/Blender_2.83/Cube.obj'... (35115 vertices, 30510 unique vertices, 1 materials) 0.110239s
- loading '../../../Scenes/Blender_2.83/Cube_056.obj'... (468 vertices, 378 unique vertices, 3 materials) 0.0277827s
- loading '../../../Scenes/Blender_2.83/BezierCurve_015.obj'... (11304 vertices, 2041 unique vertices, 1 materials) 0.098104s
- loading '../../../Scenes/Blender_2.83/20191230_134947_001.obj'... (21504 vertices, 21239 unique vertices, 1 materials) 0.0916694s
- loading '../../../Scenes/Blender_2.83/Cube_084.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0363717s
- loading '../../../Scenes/Blender_2.83/Cube_070.obj'... (6477 vertices, 8222 unique vertices, 1 materials) 0.0693867s
- loading '../../../Scenes/Blender_2.83/boatback_023.obj'... (264 vertices, 298 unique vertices, 1 materials) 0.0281928s
- loading '../../../Scenes/Blender_2.83/Cube_2182.obj'... (1326 vertices, 1187 unique vertices, 1 materials) 0.0344874s
- loading '../../../Scenes/Blender_2.83/Boss_002.obj'... (89253 vertices, 42613 unique vertices, 1 materials) 0.262954s
- loading '../../../Scenes/Blender_2.83/boatback_017.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.0303521s
- loading '../../../Scenes/Blender_2.83/Cube_024.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.047513s
- loading '../../../Scenes/Blender_2.83/Cylinder_070.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0688347s
- loading '../../../Scenes/Blender_2.83/_Robot_Flyers.obj'... (1092 vertices, 364 unique vertices, 1 materials) 0.0155072s
- loading '../../../Scenes/Blender_2.83/Cylinder_025.obj'... (2661 vertices, 1651 unique vertices, 3 materials) 0.0454061s
- loading '../../../Scenes/Blender_2.83/BezierCurve_012.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0631739s
- loading '../../../Scenes/Blender_2.83/KaitlinSarong_001.obj'... (79602 vertices, 41748 unique vertices, 1 materials) 0.260242s
- loading '../../../Scenes/Blender_2.83/Armature_001.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0515576s
- loading '../../../Scenes/Blender_2.83/Cube_053.obj'... (666 vertices, 664 unique vertices, 1 materials) 0.0589228s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_020.obj'... (18441 vertices, 6787 unique vertices, 7 materials) 0.0364573s
- loading '../../../Scenes/Blender_2.83/Cube_001.obj'... (23580 vertices, 8937 unique vertices, 1 materials) 0.0721332s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_013.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.0593198s
- loading '../../../Scenes/Blender_2.83/boatback_009.obj'... (165 vertices, 117 unique vertices, 1 materials) 0.0376402s
- loading '../../../Scenes/Blender_2.83/Cube_101.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0549136s
- loading '../../../Scenes/Blender_2.83/_Grill_001.obj'... (5808 vertices, 7474 unique vertices, 1 materials) 0.0632027s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_002.obj'... (2184 vertices, 2230 unique vertices, 6 materials) 0.059582s
- loading '../../../Scenes/Blender_2.83/Cylinder_039.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0364898s
- loading '../../../Scenes/Blender_2.83/Cube_105.obj'... (12012 vertices, 15278 unique vertices, 2 materials) 0.0987782s
- loading '../../../Scenes/Blender_2.83/Cylinder_005.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.0134409s
- loading '../../../Scenes/Blender_2.83/Cylinder_001.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.0485742s
- loading '../../../Scenes/Blender_2.83/Backpacks.obj'... (22251 vertices, 44033 unique vertices, 1 materials) 0.104429s
- loading '../../../Scenes/Blender_2.83/Cube_103.obj'... (11994 vertices, 14468 unique vertices, 2 materials) 0.0602751s
- loading '../../../Scenes/Blender_2.83/Cube_032.obj'... (318 vertices, 306 unique vertices, 1 materials) 0.0477203s
- loading '../../../Scenes/Blender_2.83/Cube_025.obj'... (2088 vertices, 1312 unique vertices, 2 materials) 0.0450089s
- loading '../../../Scenes/Blender_2.83/Mounted_Box_2_001.obj'... (4167 vertices, 1401 unique vertices, 1 materials) 0.00725708s
- loading '../../../Scenes/Blender_2.83/Cube_057.obj'... (468 vertices, 378 unique vertices, 3 materials) 0.045953s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_005.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0291549s
- loading '../../../Scenes/Blender_2.83/Cylinder_013.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.117288s
- loading '../../../Scenes/Blender_2.83/Cube_058.obj'... (24 vertices, 24 unique vertices, 1 materials) 0.0601082s
- loading '../../../Scenes/Blender_2.83/Cube_046.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0596384s
- loading '../../../Scenes/Blender_2.83/boatback_001.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.00860784s
- loading '../../../Scenes/Blender_2.83/Cylinder_003.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.00481191s
- loading '../../../Scenes/Blender_2.83/boatback_002.obj'... (735 vertices, 469 unique vertices, 1 materials) 0.0245268s
- loading '../../../Scenes/Blender_2.83/boatback_012.obj'... (102 vertices, 90 unique vertices, 1 materials) 0.0384323s
- loading '../../../Scenes/Blender_2.83/Cube_115.obj'... (4428 vertices, 2494 unique vertices, 3 materials) 0.0395129s
- loading '../../../Scenes/Blender_2.83/Cylinder_066.obj'... (8856 vertices, 3126 unique vertices, 5 materials) 0.0227808s
- loading '../../../Scenes/Blender_2.83/Cylinder_031.obj'... (288 vertices, 360 unique vertices, 1 materials) 0.0258728s
- loading '../../../Scenes/Blender_2.83/Text_003.obj'... (11808 vertices, 3983 unique vertices, 1 materials) 0.0268845s
- loading '../../../Scenes/Blender_2.83/Cylinder_026.obj'... (72 vertices, 64 unique vertices, 3 materials) 0.00355099s
- loading '../../../Scenes/Blender_2.83/Cylinder_019.obj'... (804 vertices, 850 unique vertices, 1 materials) 0.00376768s
- loading '../../../Scenes/Blender_2.83/20191230_134947_008.obj'... (5922 vertices, 5756 unique vertices, 1 materials) 0.0560484s
- loading '../../../Scenes/Blender_2.83/Cube_010.obj'... (312 vertices, 312 unique vertices, 1 materials) 0.0690287s
- loading '../../../Scenes/Blender_2.83/Cube_133.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0186368s
- loading '../../../Scenes/Blender_2.83/The_Water.obj'... (12 vertices, 4 unique vertices, 1 materials) 0.0404637s
- loading '../../../Scenes/Blender_2.83/20191230_134947_003.obj'... (21504 vertices, 21214 unique vertices, 1 materials) 0.133994s
done loading
- loading '../assets/textures/white.png'... (1 x 1 x 3) 0.0140162s
RTV: Creating device buffer Vertices of size 70442964
LVP: vkBuffer size 70442964 created at 0x55ef3080aec8
RTV: New vkBuffer created at 0x55ef3080aec8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef343f7a90; llvmpipe_resource 0x55ef343f7a90; pipe_memory_allocation 0x14f67a0c3000;
LVP: Binding lvp_buffer 0x55ef2ff4ee40: buffer->bo: 0x55ef343f7a90; buffer->pmem: 0x14f67a0c3000; memory-offset: 0;


        *** GPGPU-Sim Simulator Version 4.0.0 - Vulkan-Sim version 2.0.0  [build gpgpu-sim_git-commit-dc742faa6e5fcfaf415fe51eab71dcf9345388fd_modified_1.0] ***


GPGPU-Sim PTX: simulation mode 0 (can change with PTX_SIM_MODE_FUNC environment variable:
               1=functional simulation only, 0=detailed performance simulator)
GPGPU-Sim PTX: overriding embedded ptx with ptx file (PTX_SIM_USE_PTX_FILE is set)
GPGPU-Sim: Configuration options:

-save_embedded_ptx                      0 # saves ptx files embedded in binary as <n>.ptx
-keep                                   0 # keep intermediate files created by GPGPU-Sim when interfacing with external programs
-gpgpu_ptx_save_converted_ptxplus                    0 # Saved converted ptxplus to a file
-gpgpu_occupancy_sm_number                   75 # The SM number to pass to ptxas when getting register usage for computing GPU occupancy. This parameter is required in the config.
-ptx_opcode_latency_int      4,13,4,5,145,32 # Opcode latencies for integers <ADD,MAX,MUL,MAD,DIV,SHFL>Default 1,1,19,25,145,32
-ptx_opcode_latency_fp          4,13,4,5,39 # Opcode latencies for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,30
-ptx_opcode_latency_dp         8,19,8,8,330 # Opcode latencies for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,335
-ptx_opcode_latency_sfu                  100 # Opcode latencies for SFU instructionsDefault 8
-ptx_opcode_latency_tesnor                   64 # Opcode latencies for Tensor instructionsDefault 64
-ptx_opcode_initiation_int          2,2,2,2,8,4 # Opcode initiation intervals for integers <ADD,MAX,MUL,MAD,DIV,SHFL>Default 1,1,4,4,32,4
-ptx_opcode_initiation_fp            2,2,2,2,4 # Opcode initiation intervals for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,5
-ptx_opcode_initiation_dp          4,4,4,4,130 # Opcode initiation intervals for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,130
-ptx_opcode_initiation_sfu                    8 # Opcode initiation intervals for sfu instructionsDefault 8
-ptx_opcode_initiation_tensor                   64 # Opcode initiation intervals for tensor instructionsDefault 64
-cdp_latency         7200,8000,100,12000,1600 # CDP API latency <cudaStreamCreateWithFlags, cudaGetParameterBufferV2_init_perWarp, cudaGetParameterBufferV2_perKernel, cudaLaunchDeviceV2_init_perWarp, cudaLaunchDevicV2_perKernel>Default 7200,8000,100,12000,1600
-network_mode                           2 # Interconnection network mode
-inter_config_file                   mesh # Interconnection network config file
-icnt_in_buffer_limit                  512 # in_buffer_limit
-icnt_out_buffer_limit                  512 # out_buffer_limit
-icnt_subnets                           2 # subnets
-icnt_arbiter_algo                      1 # arbiter_algo
-icnt_verbose                           0 # inct_verbose
-icnt_grant_cycles                      1 # grant_cycles
-gpgpu_ptx_use_cuobjdump                    1 # Use cuobjdump to extract ptx and sass from binaries
-gpgpu_experimental_lib_support                    0 # Try to extract code from cuda libraries [Broken because of unknown cudaGetExportTable]
-checkpoint_option                      0 #  checkpointing flag (0 = no checkpoint)
-checkpoint_kernel                      1 #  checkpointing during execution of which kernel (1- 1st kernel)
-checkpoint_CTA                         0 #  checkpointing after # of CTA (< less than total CTA)
-resume_option                          0 #  resume flag (0 = no resume)
-resume_kernel                          0 #  Resume from which kernel (1= 1st kernel)
-resume_CTA                             0 #  resume from which CTA 
-checkpoint_CTA_t                       0 #  resume from which CTA 
-checkpoint_insn_Y                      0 #  resume from which CTA 
-gpgpu_ptx_convert_to_ptxplus                    0 # Convert SASS (native ISA) to ptxplus and run ptxplus
-gpgpu_ptx_force_max_capability                   75 # Force maximum compute capability
-gpgpu_ptx_inst_debug_to_file                    0 # Dump executed instructions' debug information to file
-gpgpu_ptx_inst_debug_file       inst_debug.txt # Executed instructions' debug output file
-gpgpu_ptx_inst_debug_thread_uid                    1 # Thread UID for executed instructions' debug output
-gpgpu_simd_model                       1 # 1 = post-dominator
-gpgpu_simd_rec_time_out                   -1 # -1 = no reconvergence time out
-gpgpu_simd_rec_size                    6 # number of physical entries in the reconvergence table
-gpgpu_simd_st_size                     6 # number of physical entries in the splits table
-gpgpu_simd_rec_replacement                    0 # reconvergence table replacement policy
-gpgpu_simd_st_replacement                    0 # splits table replacement policy
-gpgpu_shader_core_pipeline              1024:32 # shader core pipeline config, i.e., {<nthread>:<warpsize>}
-gpgpu_tex_cache:l1  N:4:128:256,L:R:m:N:L,T:512:8,128:2 # per-shader L1 texture cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>:<rf>}
-gpgpu_const_cache:l1 N:128:64:8,L:R:f:N:L,S:2:64,4 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_rt_cache:l1   S:32:128:16,L:R:m:L:P,A:256:256,32:0,32 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_rt_use_l1                        1 # use existing L1 cache instead of dedicated L0 cache 
-gpgpu_rt_perfect_mem                    0 # assume 0 latency BVH accesses 
-gpgpu_rt_coherence_engine                    0 # enable coherency engine (ray sorting) 
-gpgpu_rt_coherence_engine_config 100,10,16,g,0,3,2,0.25 # max cycles, hash 
-gpgpu_rt_disable_rt_cache                    0 # bypass RT cache and connect RT unit directly to interconnect 
-gpgpu_rt_max_warps                     4 # max number of warps concurrently in one rt core 
-gpgpu_rt_max_mshr                     64 # max number of MSHR entries in RT unit 
-gpgpu_rt_coalesce_warps                    0 # try to coalesce memory requests between warps 
-gpgpu_rt_intersection_latency        4,8,8,4,8,8,8 # latency of pipelined intersection tests (7 types)
-gpgpu_rt_intersection_table_type                    0 # type of intersection table
-gpgpu_cache:il1     N:64:128:16,L:R:f:N:L,S:2:48,4 # shader L1 instruction cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:dl1     S:1:128:256,L:L:s:N:L,A:256:8,16:0,32 # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_l1_banks                         4 # The number of L1 cache banks
-gpgpu_l1_banks_byte_interleaving                   32 # l1 banks byte interleaving granularity
-gpgpu_l1_banks_hashing_function                    0 # l1 banks hashing function
-gpgpu_l1_latency                      20 # L1 Hit Latency
-gpgpu_smem_latency                    20 # smem Latency
-gpgpu_cache:dl1PrefL1                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_cache:dl1PrefShared                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_gmem_skip_L1D                    0 # global memory access skip L1D cache (implements -Xptxas -dlcm=cg, default=no skip)
-gpgpu_perfect_mem                      0 # enable perfect memory mode (no cache miss)
-n_regfile_gating_group                    4 # group of lanes that should be read/written together)
-gpgpu_clock_gated_reg_file                    0 # enable clock gated reg file for power calculations
-gpgpu_clock_gated_lanes                    0 # enable clock gated lanes for power calculations
-gpgpu_shader_registers                32768 # Number of registers per shader core. Limits number of concurrent CTAs. (default 8192)
-gpgpu_registers_per_block                32768 # Maximum number of registers per CTA. (default 8192)
-gpgpu_ignore_resources_limitation                    0 # gpgpu_ignore_resources_limitation (default 0)
-gpgpu_shader_cta                      16 # Maximum number of concurrent CTAs in shader (default 8)
-gpgpu_num_cta_barriers                   16 # Maximum number of named barriers per CTA (default 16)
-gpgpu_n_clusters                       8 # number of processing clusters
-gpgpu_n_cores_per_cluster                    1 # number of simd cores per cluster
-gpgpu_n_cluster_ejection_buffer_size                   32 # number of packets in ejection buffer
-gpgpu_n_ldst_response_buffer_size                    2 # number of response packets in ld/st unit ejection buffer
-gpgpu_shmem_per_block                65536 # Size of shared memory per thread block or CTA (default 48kB)
-gpgpu_shmem_size                   65536 # Size of shared memory per shader core (default 16kB)
-gpgpu_adaptive_cache_config                    0 # adaptive_cache_config
-gpgpu_shmem_sizeDefault                65536 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefL1                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefShared                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_num_banks                   32 # Number of banks in the shared memory in each shader core (default 16)
-gpgpu_shmem_limited_broadcast                    0 # Limit shared memory to do one broadcast per cycle (default on)
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_mem_unit_ports                    1 # The number of memory transactions allowed per core cycle
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_warpdistro_shader                   -1 # Specify which shader core to collect the warp size distribution from
-gpgpu_warp_issue_shader                    0 # Specify which shader core to collect the warp issue distribution from
-gpgpu_local_mem_map                    1 # Mapping from local memory space address to simulated GPU physical address space (default = enabled)
-gpgpu_num_reg_banks                   16 # Number of register banks (default = 8)
-gpgpu_reg_bank_use_warp_id                    0 # Use warp ID in mapping registers to banks (default = off)
-gpgpu_sub_core_model                    1 # Sub Core Volta/Pascal model (default = off)
-gpgpu_enable_specialized_operand_collector                    0 # enable_specialized_operand_collector
-gpgpu_operand_collector_num_units_sp                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_dp                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_units_sfu                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_int                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_units_tensor_core                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_mem                    2 # number of collector units (default = 2)
-gpgpu_operand_collector_num_units_gen                    8 # number of collector units (default = 0)
-gpgpu_operand_collector_num_in_ports_sp                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_dp                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_in_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_int                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_in_ports_tensor_core                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_gen                    8 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sp                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_dp                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_int                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_tensor_core                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_gen                    8 # number of collector unit in ports (default = 0)
-gpgpu_coalesce_arch                   75 # Coalescing arch (GT200 = 13, Fermi = 20)
-gpgpu_num_sched_per_core                    4 # Number of warp schedulers per core
-gpgpu_max_insn_issue_per_warp                    1 # Max number of instructions that can be issued per warp in one cycle by scheduler (either 1 or 2)
-gpgpu_dual_issue_diff_exec_units                    1 # should dual issue use two different execution unit resources (Default = 1)
-gpgpu_simt_core_sim_order                    1 # Select the simulation order of cores in a cluster (0=Fix, 1=Round-Robin)
-gpgpu_pipeline_widths 4,0,4,4,4,4,0,4,4,4,8,4,4,4,4 # Pipeline widths ID_OC_SP,ID_OC_DP,ID_OC_INT,ID_OC_SFU,ID_OC_MEM,OC_EX_SP,OC_EX_DP,OC_EX_INT,OC_EX_SFU,OC_EX_MEM,EX_WB,ID_OC_TENSOR_CORE,OC_EX_TENSOR_CORE,ID_OC_RT,OC_EX_RT
-gpgpu_tensor_core_avail                    1 # Tensor Core Available (default=0)
-gpgpu_num_sp_units                     4 # Number of SP units (default=1)
-gpgpu_num_dp_units                     0 # Number of DP units (default=0)
-gpgpu_num_int_units                    4 # Number of INT units (default=0)
-gpgpu_num_sfu_units                    4 # Number of SF units (default=1)
-gpgpu_num_tensor_core_units                    4 # Number of tensor_core units (default=1)
-gpgpu_num_rt_core_units                    1 # Number of rt core units (default=1)
-gpgpu_num_mem_units                    1 # Number if ldst units (default=1) WARNING: not hooked up to anything
-gpgpu_scheduler                      gto # Scheduler configuration: < lrr | gto | two_level_active > If two_level_active:<num_active_warps>:<inner_prioritization>:<outer_prioritization>For complete list of prioritization values see shader.h enum scheduler_prioritization_typeDefault: gto
-gpgpu_concurrent_kernel_sm                    0 # Support concurrent kernels on a SM (default = disabled)
-gpgpu_perfect_inst_const_cache                    1 # perfect inst and const cache mode, so all inst and const hits in the cache(default = disabled)
-gpgpu_inst_fetch_throughput                    4 # the number of fetched intruction per warp each cycle
-gpgpu_reg_file_port_throughput                    2 # the number ports of the register file
-specialized_unit_1         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_2         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_3         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_4         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_5         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_6         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_7         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_8         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-gpgpu_perf_sim_memcpy                    1 # Fill the L2 cache on memcpy
-gpgpu_simple_dram_model                    0 # simple_dram_model with fixed latency and BW
-gpgpu_dram_scheduler                    1 # 0 = fifo, 1 = FR-FCFS (defaul)
-gpgpu_dram_partition_queues          64:64:64:64 # i2$:$2d:d2$:$2i
-l2_ideal                               0 # Use a ideal L2 cache that always hit
-gpgpu_cache:dl2     S:64:128:16,L:B:m:L:P,A:192:4,32:0,32 # unified banked L2 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>}
-gpgpu_cache:dl2_texture_only                    0 # L2 cache used for texture only
-gpgpu_n_mem                            4 # number of memory modules (e.g. memory controllers) in gpu
-gpgpu_n_sub_partition_per_mchannel                    1 # number of memory subpartition in each memory module
-gpgpu_n_mem_per_ctrlr                    1 # number of memory chips per memory controller
-gpgpu_memlatency_stat                   14 # track and display latency statistics 0x2 enables MC, 0x4 enables queue logs
-gpgpu_frfcfs_dram_sched_queue_size                   64 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_return_queue_size                  192 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_buswidth                    2 # default = 4 bytes (8 bytes per cycle at DDR)
-gpgpu_dram_burst_length                    8 # Burst length of each DRAM request (default = 4 data bus cycle)
-dram_data_command_freq_ratio                    2 # Frequency ratio between DRAM data bus and command bus (default = 2 times, i.e. DDR)
-gpgpu_dram_timing_opt nbk=16:CCD=4:RRD=10:RCD=20:RAS=50:RP=20:RC=62: CL=20:WL=8:CDLR=9:WR=20:nbkgrp=4:CCDL=4:RTPL=4 # DRAM timing parameters = {nbk:tCCD:tRRD:tRCD:tRAS:tRP:tRC:CL:WL:tCDLR:tWR:nbkgrp:tCCDL:tRTPL}
-gpgpu_l2_rop_latency                  160 # ROP queue latency (default 85)
-dram_latency                         100 # DRAM latency (default 30)
-dram_dual_bus_interface                    0 # dual_bus_interface (default = 0) 
-dram_bnk_indexing_policy                    0 # dram_bnk_indexing_policy (0 = normal indexing, 1 = Xoring with the higher bits) (Default = 0)
-dram_bnkgrp_indexing_policy                    1 # dram_bnkgrp_indexing_policy (0 = take higher bits, 1 = take lower bits) (Default = 0)
-dram_seperate_write_queue_enable                    0 # Seperate_Write_Queue_Enable
-dram_write_queue_size             32:28:16 # Write_Queue_Size
-dram_elimnate_rw_turnaround                    0 # elimnate_rw_turnaround i.e set tWTR and tRTW = 0
-icnt_flit_size                        40 # icnt_flit_size
-gpgpu_mem_addr_mapping dramid@8;00000000.00000000.00000000.00000000.0000RRRR.RRRRRRRR.RBBBCCCC.BCCSSSSS # mapping memory address to dram model {dramid@<start bit>;<memory address map>}
-gpgpu_mem_addr_test                    0 # run sweep test to check address mapping for aliased address
-gpgpu_mem_address_mask                    1 # 0 = old addressing mask, 1 = new addressing mask, 2 = new add. mask + flipped bank sel and chip sel bits
-gpgpu_memory_partition_indexing                    0 # 0 = no indexing, 1 = bitwise xoring, 2 = IPoly, 3 = custom indexing
-gpuwattch_xml_file         gpuwattch.xml # GPUWattch XML file
-power_simulation_enabled                    0 # Turn on power simulator (1=On, 0=Off)
-power_per_cycle_dump                    0 # Dump detailed power output each cycle
-power_trace_enabled                    1 # produce a file for the power trace (1=On, 0=Off)
-power_trace_zlevel                     6 # Compression level of the power trace output log (0=no comp, 9=highest)
-steady_power_levels_enabled                    1 # produce a file for the steady power levels (1=On, 0=Off)
-steady_state_definition                  8:4 # allowed deviation:number of samples
-gpgpu_intermittent_stats                    0 # print intermittent stats
-gpgpu_intermittent_stats_freq                10000 # intermittent stats frequency
-gpgpu_max_cycle                        0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_insn                         0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_cta                          0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_completed_cta                    0 # terminates gpu simulation early (0 = no limit)
-gpgpu_runtime_stat                   500 # display runtime statistics such as dram utilization {<freq>:<flag>}
-liveness_message_freq                    1 # Minimum number of seconds between simulation liveness messages (0 = always print)
-gpgpu_compute_capability_major                    7 # Major compute capability version number
-gpgpu_compute_capability_minor                    5 # Minor compute capability version number
-gpgpu_flush_l1_cache                    1 # Flush L1 cache at the end of each kernel call
-gpgpu_flush_l2_cache                    0 # Flush L2 cache at the end of each kernel call
-gpgpu_deadlock_detect                    1 # Stop the simulation at deadlock (1=on (default), 0=off)
-gpgpu_ptx_instruction_classification                    1 # if enabled will classify ptx instruction types per kernel (Max 255 kernels now)
-gpgpu_ptx_sim_mode                     0 # Select between Performance (default) or Functional simulation (1)
-gpgpu_clock_domains 1365.0:1365.0:1365.0:3500.0 # Clock Domain Frequencies in MhZ {<Core Clock>:<ICNT Clock>:<L2 Clock>:<DRAM Clock>}
-gpgpu_max_concurrent_kernel                    8 # maximum kernels that can run concurrently on GPU
-gpgpu_cflog_interval                    0 # Interval between each snapshot in control flow logger
-visualizer_enabled                     0 # Turn on visualizer output (1=On, 0=Off)
-visualizer_outputfile       regular_ship16 # Specifies the output log file for visualizer
-visualizer_zlevel                      6 # Compression level of the visualizer output log (0=no comp, 9=highest)
-gpgpu_stack_size_limit                 1024 # GPU thread stack size
-gpgpu_heap_size_limit              8388608 # GPU malloc heap size 
-gpgpu_runtime_sync_depth_limit                    2 # GPU device runtime synchronize depth
-gpgpu_runtime_pending_launch_count_limit                 2048 # GPU device runtime pending launch count
-trace_enabled                          0 # Turn on traces
-trace_components                    none # comma seperated list of traces to enable. Complete list found in trace_streams.tup. Default none
-trace_sampling_core                    0 # The core which is printed using CORE_DPRINTF. Default 0
-trace_sampling_memory_partition                   -1 # The memory partition which is printed using MEMPART_DPRINTF. Default -1 (i.e. all)
-enable_ptx_file_line_stats                    1 # Turn on PTX source line statistic profiling. (1 = On)
-ptx_line_stats_filename gpgpu_inst_stats.txt # Output file for PTX source line statistics.
-gpgpu_kernel_launch_latency                 5000 # Kernel launch latency in cycles. Default: 0
-gpgpu_cdp_enabled                      0 # Turn on CDP
-gpgpu_TB_launch_latency                    0 # thread block launch latency in cycles. Default: 0
-gpgpu_max_simulated_rt_kernels                    1 # Max simulated kernels, used to limit how many frames we render. Default: 0
Streaming cache with 4096 mshr
GPGPU-Sim: Ray Coherence Engine Settings:
	Enabled: No
	Max cycles: 100
	Max packets: 16
	Sorting hash: grid-spherical
	Bits: 3-2
DRAM Timing Options:
nbk                                    16 # number of banks
CCD                                     4 # column to column delay
RRD                                    10 # minimal delay between activation of rows in different banks
RCD                                    20 # row to column delay
RAS                                    50 # time needed to activate row
RP                                     20 # time needed to precharge (deactivate) row
RC                                     62 # row cycle time
CDLR                                    9 # switching from write to read (changes tWTR)
WR                                     20 # last data-in to row precharge
CL                                     20 # CAS latency
WL                                      8 # Write latency
nbkgrp                                  4 # number of bank groups
CCDL                                    4 # column to column delay between accesses to different bank groups
RTPL                                    4 # read to precharge delay between accesses to different bank groups
Total number of memory sub partition = 4
addr_dec_mask[CHIP]  = 0000000000000300 	high:10 low:8
addr_dec_mask[BK]    = 000000000001c080 	high:17 low:7
addr_dec_mask[ROW]   = 000000003ffe0000 	high:30 low:17
addr_dec_mask[COL]   = 0000000000003c7f 	high:14 low:0
addr_dec_mask[BURST] = 000000000000001f 	high:5 low:0
sub_partition_id_mask = 0000000000000000
GPGPU-Sim uArch: clock freqs: 1365000000.000000:1365000000.000000:1365000000.000000:3500000000.000000
GPGPU-Sim uArch: clock periods: 0.00000000073260073260:0.00000000073260073260:0.00000000073260073260:0.00000000028571428571
*** Initializing Memory Statistics ***
GPGPU-Sim uArch: performance model initialization complete.
gpgpusim: binding gpgpusim buffer 0xc0000000 (size 70442964) to vulkan buffer 0x14f67a0c3000
LVP: gpgpusim buffer size 70442964 allocated at 0xc0000000
RTV: Bind buffer memory for vkBuffer 0x55ef3080aec8
LVP: vkBuffer size 70442964 created at 0x55ef37b6cfa8
RTV: New vkBuffer created at 0x55ef37b6cfa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef48c4fb40; llvmpipe_resource 0x55ef48c4fb40; pipe_memory_allocation 0x14f675d93000;
LVP: Binding lvp_buffer 0x55ef48c4fac0: buffer->bo: 0x55ef48c4fb40; buffer->pmem: 0x14f675d93000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc432e000 (size 70442964) to vulkan buffer 0x14f675d93000
LVP: gpgpusim buffer size 70442964 allocated at 0xc432e000
RTV: Bind buffer memory for vkBuffer 0x55ef37b6cfa8
LVP: Finding mapped memory for mem 0x55ef48c4fd50: mem->pmem 0x14f675d93000 
LVP: Identified at 0x14f675d93000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Indices of size 20703720
LVP: vkBuffer size 20703720 created at 0x55ef37b6cfa8
RTV: New vkBuffer created at 0x55ef37b6cfa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef59909760; llvmpipe_resource 0x55ef59909760; pipe_memory_allocation 0x55ef5990a000;
LVP: Binding lvp_buffer 0x55ef48c4fd50: buffer->bo: 0x55ef59909760; buffer->pmem: 0x55ef5990a000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc865c000 (size 20703720) to vulkan buffer 0x55ef5990a000
LVP: gpgpusim buffer size 20703720 allocated at 0xc865c000
RTV: Bind buffer memory for vkBuffer 0x55ef37b6cfa8
LVP: vkBuffer size 20703720 created at 0x55ef59907d78
RTV: New vkBuffer created at 0x55ef59907d78
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbc2ab0; llvmpipe_resource 0x55ef5fbc2ab0; pipe_memory_allocation 0x55ef5fbc3000;
LVP: Binding lvp_buffer 0x55ef59909630: buffer->bo: 0x55ef5fbc2ab0; buffer->pmem: 0x55ef5fbc3000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc9a1aa00 (size 20703720) to vulkan buffer 0x55ef5fbc3000
LVP: gpgpusim buffer size 20703720 allocated at 0xc9a1aa00
RTV: Bind buffer memory for vkBuffer 0x55ef59907d78
LVP: Finding mapped memory for mem 0x55ef5fbc2cc0: mem->pmem 0x55ef5fbc3000 
LVP: Identified at 0x55ef5fbc3000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Materials of size 18432
LVP: vkBuffer size 18432 created at 0x55ef59907d78
RTV: New vkBuffer created at 0x55ef59907d78
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbc3000; llvmpipe_resource 0x55ef5fbc3000; pipe_memory_allocation 0x55ef5fbc4000;
LVP: Binding lvp_buffer 0x55ef5fbc2cc0: buffer->bo: 0x55ef5fbc3000; buffer->pmem: 0x55ef5fbc4000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadd9400 (size 18432) to vulkan buffer 0x55ef5fbc4000
LVP: gpgpusim buffer size 18432 allocated at 0xcadd9400
RTV: Bind buffer memory for vkBuffer 0x55ef59907d78
LVP: vkBuffer size 18432 created at 0x55ef65e7c1d8
RTV: New vkBuffer created at 0x55ef65e7c1d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbd9c10; llvmpipe_resource 0x55ef5fbd9c10; pipe_memory_allocation 0x55ef5fbda000;
LVP: Binding lvp_buffer 0x55ef65e7c300: buffer->bo: 0x55ef5fbd9c10; buffer->pmem: 0x55ef5fbda000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadddc00 (size 18432) to vulkan buffer 0x55ef5fbda000
LVP: gpgpusim buffer size 18432 allocated at 0xcadddc00
RTV: Bind buffer memory for vkBuffer 0x55ef65e7c1d8
LVP: Finding mapped memory for mem 0x55ef5fbd9e20: mem->pmem 0x55ef5fbda000 
LVP: Identified at 0x55ef5fbda000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Offsets of size 2560
LVP: vkBuffer size 2560 created at 0x55ef65e7c1d8
RTV: New vkBuffer created at 0x55ef65e7c1d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbda000; llvmpipe_resource 0x55ef5fbda000; pipe_memory_allocation 0x55ef5fbdb000;
LVP: Binding lvp_buffer 0x55ef5fbd9e20: buffer->bo: 0x55ef5fbda000; buffer->pmem: 0x55ef5fbdb000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade2400 (size 2560) to vulkan buffer 0x55ef5fbdb000
LVP: gpgpusim buffer size 2560 allocated at 0xcade2400
RTV: Bind buffer memory for vkBuffer 0x55ef65e7c1d8
LVP: vkBuffer size 2560 created at 0x55ef5fbf06d8
RTV: New vkBuffer created at 0x55ef5fbf06d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbdd610; llvmpipe_resource 0x55ef5fbdd610; pipe_memory_allocation 0x55ef5fbf1000;
LVP: Binding lvp_buffer 0x55ef5fbf0800: buffer->bo: 0x55ef5fbdd610; buffer->pmem: 0x55ef5fbf1000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade2e00 (size 2560) to vulkan buffer 0x55ef5fbf1000
LVP: gpgpusim buffer size 2560 allocated at 0xcade2e00
RTV: Bind buffer memory for vkBuffer 0x55ef5fbf06d8
LVP: Finding mapped memory for mem 0x55ef5fbdd820: mem->pmem 0x55ef5fbf1000 
LVP: Identified at 0x55ef5fbf1000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer AABBs of size 7680
LVP: vkBuffer size 7680 created at 0x55ef5fbf06d8
RTV: New vkBuffer created at 0x55ef5fbf06d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbf1000; llvmpipe_resource 0x55ef5fbf1000; pipe_memory_allocation 0x55ef5fbf3000;
LVP: Binding lvp_buffer 0x55ef5fbdd820: buffer->bo: 0x55ef5fbf1000; buffer->pmem: 0x55ef5fbf3000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade3800 (size 7680) to vulkan buffer 0x55ef5fbf3000
LVP: gpgpusim buffer size 7680 allocated at 0xcade3800
RTV: Bind buffer memory for vkBuffer 0x55ef5fbf06d8
LVP: vkBuffer size 7680 created at 0x55ef5fbf2c38
RTV: New vkBuffer created at 0x55ef5fbf2c38
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbfbd90; llvmpipe_resource 0x55ef5fbfbd90; pipe_memory_allocation 0x55ef5fbfd000;
LVP: Binding lvp_buffer 0x55ef5fbf2d60: buffer->bo: 0x55ef5fbfbd90; buffer->pmem: 0x55ef5fbfd000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade5600 (size 7680) to vulkan buffer 0x55ef5fbfd000
LVP: gpgpusim buffer size 7680 allocated at 0xcade5600
RTV: Bind buffer memory for vkBuffer 0x55ef5fbf2c38
LVP: Finding mapped memory for mem 0x55ef5fbfbfa0: mem->pmem 0x55ef5fbfd000 
LVP: Identified at 0x55ef5fbfd000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Procedurals of size 5120
LVP: vkBuffer size 5120 created at 0x55ef5fbf2c38
RTV: New vkBuffer created at 0x55ef5fbf2c38
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fbfd000; llvmpipe_resource 0x55ef5fbfd000; pipe_memory_allocation 0x55ef5fc06000;
LVP: Binding lvp_buffer 0x55ef5fbfbfa0: buffer->bo: 0x55ef5fbfd000; buffer->pmem: 0x55ef5fc06000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade7400 (size 5120) to vulkan buffer 0x55ef5fc06000
LVP: gpgpusim buffer size 5120 allocated at 0xcade7400
RTV: Bind buffer memory for vkBuffer 0x55ef5fbf2c38
LVP: vkBuffer size 5120 created at 0x55ef5fc056a8
RTV: New vkBuffer created at 0x55ef5fc056a8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc0a090; llvmpipe_resource 0x55ef5fc0a090; pipe_memory_allocation 0x55ef5fc0b000;
LVP: Binding lvp_buffer 0x55ef5fc057d0: buffer->bo: 0x55ef5fc0a090; buffer->pmem: 0x55ef5fc0b000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade8800 (size 5120) to vulkan buffer 0x55ef5fc0b000
LVP: gpgpusim buffer size 5120 allocated at 0xcade8800
RTV: Bind buffer memory for vkBuffer 0x55ef5fc056a8
LVP: Finding mapped memory for mem 0x55ef5fc0a2a0: mem->pmem 0x55ef5fc0b000 
LVP: Identified at 0x55ef5fc0b000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer CubeAABBs of size 7680
LVP: vkBuffer size 7680 created at 0x55ef5fc056a8
RTV: New vkBuffer created at 0x55ef5fc056a8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc0b000; llvmpipe_resource 0x55ef5fc0b000; pipe_memory_allocation 0x55ef5fc11000;
LVP: Binding lvp_buffer 0x55ef5fc0a2a0: buffer->bo: 0x55ef5fc0b000; buffer->pmem: 0x55ef5fc11000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade9c00 (size 7680) to vulkan buffer 0x55ef5fc11000
LVP: gpgpusim buffer size 7680 allocated at 0xcade9c00
RTV: Bind buffer memory for vkBuffer 0x55ef5fc056a8
LVP: vkBuffer size 7680 created at 0x55ef5fc10aa8
RTV: New vkBuffer created at 0x55ef5fc10aa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc19390; llvmpipe_resource 0x55ef5fc19390; pipe_memory_allocation 0x55ef5fc1a000;
LVP: Binding lvp_buffer 0x55ef5fc10bd0: buffer->bo: 0x55ef5fc19390; buffer->pmem: 0x55ef5fc1a000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadeba00 (size 7680) to vulkan buffer 0x55ef5fc1a000
LVP: gpgpusim buffer size 7680 allocated at 0xcadeba00
RTV: Bind buffer memory for vkBuffer 0x55ef5fc10aa8
LVP: Finding mapped memory for mem 0x55ef5fc195a0: mem->pmem 0x55ef5fc1a000 
LVP: Identified at 0x55ef5fc1a000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer ProceduralCubes of size 5120
LVP: vkBuffer size 5120 created at 0x55ef5fc10aa8
RTV: New vkBuffer created at 0x55ef5fc10aa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc1a000; llvmpipe_resource 0x55ef5fc1a000; pipe_memory_allocation 0x55ef5fc23000;
LVP: Binding lvp_buffer 0x55ef5fc195a0: buffer->bo: 0x55ef5fc1a000; buffer->pmem: 0x55ef5fc23000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcaded800 (size 5120) to vulkan buffer 0x55ef5fc23000
LVP: gpgpusim buffer size 5120 allocated at 0xcaded800
RTV: Bind buffer memory for vkBuffer 0x55ef5fc10aa8
LVP: vkBuffer size 5120 created at 0x55ef5fc22c58
RTV: New vkBuffer created at 0x55ef5fc22c58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc27790; llvmpipe_resource 0x55ef5fc27790; pipe_memory_allocation 0x55ef5fc28000;
LVP: Binding lvp_buffer 0x55ef5fc22d80: buffer->bo: 0x55ef5fc27790; buffer->pmem: 0x55ef5fc28000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadeec00 (size 5120) to vulkan buffer 0x55ef5fc28000
LVP: gpgpusim buffer size 5120 allocated at 0xcadeec00
RTV: Bind buffer memory for vkBuffer 0x55ef5fc22c58
LVP: Finding mapped memory for mem 0x55ef5fc279a0: mem->pmem 0x55ef5fc28000 
LVP: Identified at 0x55ef5fc28000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer CylinderAABBs of size 7680
LVP: vkBuffer size 7680 created at 0x55ef5fc22c58
RTV: New vkBuffer created at 0x55ef5fc22c58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc27790; llvmpipe_resource 0x55ef5fc27790; pipe_memory_allocation 0x55ef5fc2e000;
LVP: Binding lvp_buffer 0x55ef5fc279a0: buffer->bo: 0x55ef5fc27790; buffer->pmem: 0x55ef5fc2e000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf0000 (size 7680) to vulkan buffer 0x55ef5fc2e000
LVP: gpgpusim buffer size 7680 allocated at 0xcadf0000
RTV: Bind buffer memory for vkBuffer 0x55ef5fc22c58
LVP: vkBuffer size 7680 created at 0x55ef5fc2de58
RTV: New vkBuffer created at 0x55ef5fc2de58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc36190; llvmpipe_resource 0x55ef5fc36190; pipe_memory_allocation 0x55ef5fc37000;
LVP: Binding lvp_buffer 0x55ef5fc2def0: buffer->bo: 0x55ef5fc36190; buffer->pmem: 0x55ef5fc37000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf1e00 (size 7680) to vulkan buffer 0x55ef5fc37000
LVP: gpgpusim buffer size 7680 allocated at 0xcadf1e00
RTV: Bind buffer memory for vkBuffer 0x55ef5fc2de58
LVP: Finding mapped memory for mem 0x55ef5fc363a0: mem->pmem 0x55ef5fc37000 
LVP: Identified at 0x55ef5fc37000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer ProceduralCylinders of size 5120
LVP: vkBuffer size 5120 created at 0x55ef5fc2de58
RTV: New vkBuffer created at 0x55ef5fc2de58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc36190; llvmpipe_resource 0x55ef5fc36190; pipe_memory_allocation 0x55ef5fc40000;
LVP: Binding lvp_buffer 0x55ef5fc363a0: buffer->bo: 0x55ef5fc36190; buffer->pmem: 0x55ef5fc40000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf3c00 (size 5120) to vulkan buffer 0x55ef5fc40000
LVP: gpgpusim buffer size 5120 allocated at 0xcadf3c00
RTV: Bind buffer memory for vkBuffer 0x55ef5fc2de58
LVP: vkBuffer size 5120 created at 0x55ef5fc3fa58
RTV: New vkBuffer created at 0x55ef5fc3fa58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc44110; llvmpipe_resource 0x55ef5fc44110; pipe_memory_allocation 0x55ef5fc45000;
LVP: Binding lvp_buffer 0x55ef5fc44090: buffer->bo: 0x55ef5fc44110; buffer->pmem: 0x55ef5fc45000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf5000 (size 5120) to vulkan buffer 0x55ef5fc45000
LVP: gpgpusim buffer size 5120 allocated at 0xcadf5000
RTV: Bind buffer memory for vkBuffer 0x55ef5fc3fa58
LVP: Finding mapped memory for mem 0x55ef5fc44320: mem->pmem 0x55ef5fc45000 
LVP: Identified at 0x55ef5fc45000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
LVP: vkBuffer size 4 created at 0x55ef5fbc3fd8
RTV: New vkBuffer created at 0x55ef5fbc3fd8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc44110; llvmpipe_resource 0x55ef5fc44110; pipe_memory_allocation 0x55ef5fc45000;
LVP: Binding lvp_buffer 0x55ef5fc44320: buffer->bo: 0x55ef5fc44110; buffer->pmem: 0x55ef5fc45000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf6400 (size 4) to vulkan buffer 0x55ef5fc45000
LVP: gpgpusim buffer size 4 allocated at 0xcadf6400
RTV: Bind buffer memory for vkBuffer 0x55ef5fbc3fd8
LVP: Finding mapped memory for mem 0x55ef5fc44090: mem->pmem 0x55ef5fc45000 
LVP: Identified at 0x55ef5fc45000
LVP: Image created at 0x55ef5fbdafe8
RTV: Creating image at 0x55ef5fc45020
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef5fc450e0; llvmpipe_resource 0x55ef5fc450e0; pipe_memory_allocation 0x55ef5fc4b000;
gpgpusim: binding gpgpusim buffer 0xcadf6500 (size 256) to vulkan buffer 0x55ef5fc4b000
LVP: Image 0x55ef5fc45020 bound to pmem 0x55ef5fc4b000 using pointer 0xcadf6500
LVP: Creating image_view for image 0x55ef5fc45020
RTV: Creating image view at 0x55ef5fc45750
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER_TO_IMAGE2
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5ec0
RTV: Rounding size of BVH structure up to 0x5f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x90c0
RTV: Rounding size of BVH structure up to 0x9100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1214c0
RTV: Rounding size of BVH structure up to 0x121500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38cc0
RTV: Rounding size of BVH structure up to 0x38d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2eec0
RTV: Rounding size of BVH structure up to 0x2ef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c2c0
RTV: Rounding size of BVH structure up to 0x2c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2a3c0
RTV: Rounding size of BVH structure up to 0x2a400
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x68c0
RTV: Rounding size of BVH structure up to 0x6900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27dac0
RTV: Rounding size of BVH structure up to 0x27db00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9e0c0
RTV: Rounding size of BVH structure up to 0x9e100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x52c0
RTV: Rounding size of BVH structure up to 0x5300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17cc0
RTV: Rounding size of BVH structure up to 0x17d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf00c0
RTV: Rounding size of BVH structure up to 0xf0100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x33ec0
RTV: Rounding size of BVH structure up to 0x33f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5c0
RTV: Rounding size of BVH structure up to 0x600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf00c0
RTV: Rounding size of BVH structure up to 0xf0100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2d40
RTV: Rounding size of BVH structure up to 0x2e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x66ac0
RTV: Rounding size of BVH structure up to 0x66b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5bc0
RTV: Rounding size of BVH structure up to 0xf5c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19dcc0
RTV: Rounding size of BVH structure up to 0x19dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c0
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x31e40
RTV: Rounding size of BVH structure up to 0x31f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x740140
RTV: Rounding size of BVH structure up to 0x740200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1ec0
RTV: Rounding size of BVH structure up to 0x1f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x106c0
RTV: Rounding size of BVH structure up to 0x10700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1fc2c0
RTV: Rounding size of BVH structure up to 0x1fc300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xc12c0
RTV: Rounding size of BVH structure up to 0xc1300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10cd40
RTV: Rounding size of BVH structure up to 0x10ce00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x49dc0
RTV: Rounding size of BVH structure up to 0x49e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4bc0
RTV: Rounding size of BVH structure up to 0x4c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5bdc0
RTV: Rounding size of BVH structure up to 0x5be00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xea0c0
RTV: Rounding size of BVH structure up to 0xea100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5bdc0
RTV: Rounding size of BVH structure up to 0x5be00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fc40
RTV: Rounding size of BVH structure up to 0x19fd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x72c0
RTV: Rounding size of BVH structure up to 0x7300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x3c2c0
RTV: Rounding size of BVH structure up to 0x3c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xec0
RTV: Rounding size of BVH structure up to 0xf00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x716c0
RTV: Rounding size of BVH structure up to 0x71700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5cc0
RTV: Rounding size of BVH structure up to 0xf5d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c20c0
RTV: Rounding size of BVH structure up to 0x1c2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x34ac0
RTV: Rounding size of BVH structure up to 0x34b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x128c0
RTV: Rounding size of BVH structure up to 0x12900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x132c0
RTV: Rounding size of BVH structure up to 0x13300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19c9c0
RTV: Rounding size of BVH structure up to 0x19ca00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7562c0
RTV: Rounding size of BVH structure up to 0x756300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1350c0
RTV: Rounding size of BVH structure up to 0x135100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11ac0
RTV: Rounding size of BVH structure up to 0x11b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11ac0
RTV: Rounding size of BVH structure up to 0x11b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1eac0
RTV: Rounding size of BVH structure up to 0x1eb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x106c0
RTV: Rounding size of BVH structure up to 0x10700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c8c0
RTV: Rounding size of BVH structure up to 0x1c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x20c0
RTV: Rounding size of BVH structure up to 0x2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11ac0
RTV: Rounding size of BVH structure up to 0x11b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2dcc0
RTV: Rounding size of BVH structure up to 0x2dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x51df40
RTV: Rounding size of BVH structure up to 0x51e000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17cc0
RTV: Rounding size of BVH structure up to 0x17d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2158c0
RTV: Rounding size of BVH structure up to 0x215900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x51d8c0
RTV: Rounding size of BVH structure up to 0x51d900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10cd40
RTV: Rounding size of BVH structure up to 0x10ce00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xcec0
RTV: Rounding size of BVH structure up to 0xcf00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x118c0
RTV: Rounding size of BVH structure up to 0x11900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xefec0
RTV: Rounding size of BVH structure up to 0xeff00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1530c0
RTV: Rounding size of BVH structure up to 0x153100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1530c0
RTV: Rounding size of BVH structure up to 0x153100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17e80c0
RTV: Rounding size of BVH structure up to 0x17e8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb40c0
RTV: Rounding size of BVH structure up to 0xb4100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x751640
RTV: Rounding size of BVH structure up to 0x751700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x342c0
RTV: Rounding size of BVH structure up to 0x34300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x33fc0
RTV: Rounding size of BVH structure up to 0x34000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7562c0
RTV: Rounding size of BVH structure up to 0x756300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x677f40
RTV: Rounding size of BVH structure up to 0x678000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x834c0
RTV: Rounding size of BVH structure up to 0x83500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x48cc0
RTV: Rounding size of BVH structure up to 0x48d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x8a2c0
RTV: Rounding size of BVH structure up to 0x8a300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x65c0
RTV: Rounding size of BVH structure up to 0x6600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x29b4c0
RTV: Rounding size of BVH structure up to 0x29b500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xa9bc0
RTV: Rounding size of BVH structure up to 0xa9c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fa40
RTV: Rounding size of BVH structure up to 0x19fb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c2c0
RTV: Rounding size of BVH structure up to 0x2c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeeec0
RTV: Rounding size of BVH structure up to 0xeef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xcb340
RTV: Rounding size of BVH structure up to 0xcb400
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb40c0
RTV: Rounding size of BVH structure up to 0xb4100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x310cc0
RTV: Rounding size of BVH structure up to 0x310d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1350c0
RTV: Rounding size of BVH structure up to 0x135100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x520c0
RTV: Rounding size of BVH structure up to 0x52100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x48c0
RTV: Rounding size of BVH structure up to 0x4900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5c0
RTV: Rounding size of BVH structure up to 0x600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x32ec0
RTV: Rounding size of BVH structure up to 0x32f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x68c0
RTV: Rounding size of BVH structure up to 0x6900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5e9c0
RTV: Rounding size of BVH structure up to 0x5ea00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x31fc0
RTV: Rounding size of BVH structure up to 0x32000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x37c0
RTV: Rounding size of BVH structure up to 0x3800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x165c0
RTV: Rounding size of BVH structure up to 0x16600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5c0
RTV: Rounding size of BVH structure up to 0x600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x65c0
RTV: Rounding size of BVH structure up to 0x6600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x128c0
RTV: Rounding size of BVH structure up to 0x12900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x465c0
RTV: Rounding size of BVH structure up to 0x46600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10ec0
RTV: Rounding size of BVH structure up to 0x10f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x66cc0
RTV: Rounding size of BVH structure up to 0x66d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xdcc0
RTV: Rounding size of BVH structure up to 0xdd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x52c0
RTV: Rounding size of BVH structure up to 0x5300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1178c0
RTV: Rounding size of BVH structure up to 0x117900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e0c0
RTV: Rounding size of BVH structure up to 0x7e100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x289c0
RTV: Rounding size of BVH structure up to 0x28a00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xe2ec0
RTV: Rounding size of BVH structure up to 0xe2f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5cc0
RTV: Rounding size of BVH structure up to 0xf5d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2eec0
RTV: Rounding size of BVH structure up to 0x2ef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x932c0
RTV: Rounding size of BVH structure up to 0x93300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xc6cc0
RTV: Rounding size of BVH structure up to 0xc6d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19c9c0
RTV: Rounding size of BVH structure up to 0x19ca00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2e5c0
RTV: Rounding size of BVH structure up to 0x2e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x6d0c0
RTV: Rounding size of BVH structure up to 0x6d100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9c8c0
RTV: Rounding size of BVH structure up to 0x9c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4bc0
RTV: Rounding size of BVH structure up to 0x4c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x68c0
RTV: Rounding size of BVH structure up to 0x6900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4c0
RTV: Rounding size of BVH structure up to 0x500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x717c0
RTV: Rounding size of BVH structure up to 0x71800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x179440
RTV: Rounding size of BVH structure up to 0x179500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9c8c0
RTV: Rounding size of BVH structure up to 0x9c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c0
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x256c0
RTV: Rounding size of BVH structure up to 0x25700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x111c0
RTV: Rounding size of BVH structure up to 0x11200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1f2c0
RTV: Rounding size of BVH structure up to 0x1f300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2eec0
RTV: Rounding size of BVH structure up to 0x2ef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10cd40
RTV: Rounding size of BVH structure up to 0x10ce00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c2c0
RTV: Rounding size of BVH structure up to 0x2c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x171c0
RTV: Rounding size of BVH structure up to 0x17200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x20c0
RTV: Rounding size of BVH structure up to 0x2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19c9c0
RTV: Rounding size of BVH structure up to 0x19ca00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x36c0
RTV: Rounding size of BVH structure up to 0x3700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c8c0
RTV: Rounding size of BVH structure up to 0x1c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb2c0
RTV: Rounding size of BVH structure up to 0xb300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1bac0
RTV: Rounding size of BVH structure up to 0x1bb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xa9b6c0
RTV: Rounding size of BVH structure up to 0xa9b700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fa40
RTV: Rounding size of BVH structure up to 0x19fb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x147c0
RTV: Rounding size of BVH structure up to 0x14800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17dc0
RTV: Rounding size of BVH structure up to 0x17e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e0c0
RTV: Rounding size of BVH structure up to 0x7e100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf9c0
RTV: Rounding size of BVH structure up to 0xfa00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x33dc0
RTV: Rounding size of BVH structure up to 0x33e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x12cc0
RTV: Rounding size of BVH structure up to 0x12d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2d0a40
RTV: Rounding size of BVH structure up to 0x2d0b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9ac0
RTV: Rounding size of BVH structure up to 0x9b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xea0c0
RTV: Rounding size of BVH structure up to 0xea100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fc40
RTV: Rounding size of BVH structure up to 0x19fd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4bc0
RTV: Rounding size of BVH structure up to 0x4c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x184c0
RTV: Rounding size of BVH structure up to 0x18500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7401c0
RTV: Rounding size of BVH structure up to 0x740200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xcec0
RTV: Rounding size of BVH structure up to 0xcf00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x35440
RTV: Rounding size of BVH structure up to 0x35500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x677f40
RTV: Rounding size of BVH structure up to 0x678000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xdcc0
RTV: Rounding size of BVH structure up to 0xdd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9c8c0
RTV: Rounding size of BVH structure up to 0x9c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1b08c0
RTV: Rounding size of BVH structure up to 0x1b0900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2d40
RTV: Rounding size of BVH structure up to 0x2e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x70ac0
RTV: Rounding size of BVH structure up to 0x70b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5ec0
RTV: Rounding size of BVH structure up to 0xf5f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1cac40
RTV: Rounding size of BVH structure up to 0x1cad00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5bc0
RTV: Rounding size of BVH structure up to 0xf5c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x52c0
RTV: Rounding size of BVH structure up to 0x5300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2b0c0
RTV: Rounding size of BVH structure up to 0x2b100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x231c0
RTV: Rounding size of BVH structure up to 0x23200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9ac0
RTV: Rounding size of BVH structure up to 0x9b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x6c0
RTV: Rounding size of BVH structure up to 0x700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9740
RTV: Rounding size of BVH structure up to 0x9800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x20c0
RTV: Rounding size of BVH structure up to 0x2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5bdc0
RTV: Rounding size of BVH structure up to 0x5be00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5e9c0
RTV: Rounding size of BVH structure up to 0x5ea00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5ec0
RTV: Rounding size of BVH structure up to 0x5f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x79cc0
RTV: Rounding size of BVH structure up to 0x79d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x16c0
RTV: Rounding size of BVH structure up to 0x1700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4ec0
RTV: Rounding size of BVH structure up to 0x4f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c0
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
RTV: Total accel structure size = 0x3900 + 0x1200 + 0x200 + 0x41800 + 0x12100 + 0x47900 + 0x5f00 + 0x7e600 + 0x9100 + 0x121500 + 0x38d00 + 0x2ef00 + 0x2c300 + 0x1dd00 + 0x2a400 + 0x12100 + 0x32100 + 0x6900 + 0x27db00 + 0x10300 + 0x9e100 + 0x10300 + 0x2c700 + 0xf300 + 0x5300 + 0x7e600 + 0x32100 + 0x17d00 + 0xf0100 + 0x1200 + 0x33f00 + 0x12100 + 0x600 + 0xf0100 + 0x73300 + 0x10300 + 0xeb00 + 0x2e00 + 0x19fe00 + 0x66b00 + 0xf5c00 + 0x19dd00 + 0x87100 + 0x32100 + 0x200 + 0x31f00 + 0x740200 + 0x32100 + 0x1dd00 + 0x7e600 + 0x41800 + 0xeb00 + 0x1f00 + 0x10700 + 0x3900 + 0x1fc300 + 0xf8100 + 0x10300 + 0xc1300 + 0x10ce00 + 0xb500 + 0x12100 + 0x49e00 + 0x4c00 + 0x10300 + 0x41800 + 0x12100 + 0x5be00 + 0xea100 + 0x5be00 + 0x19fd00 + 0x32100 + 0x7300 + 0x3c300 + 0xf00 + 0x73300 + 0x71700 + 0x32100 + 0xf5d00 + 0x1c2100 + 0x3900 + 0x3900 + 0x2c700 + 0xf8100 + 0x34b00 + 0x7e600 + 0x12900 + 0xeb00 + 0x13300 + 0x19ca00 + 0x32100 + 0x756300 + 0x135100 + 0x11b00 + 0x11b00 + 0x10300 + 0x32100 + 0x1eb00 + 0x10700 + 0x1c900 + 0x2100 + 0x200 + 0xeb00 + 0x11b00 + 0x2dd00 + 0x51e000 + 0x17d00 + 0x12100 + 0x215900 + 0x51d900 + 0x32100 + 0x1200 + 0x10ce00 + 0xf8100 + 0x73300 + 0x2c700 + 0x12100 + 0x87100 + 0xb500 + 0x19fe00 + 0xcf00 + 0x47900 + 0x3900 + 0xb500 + 0x11900 + 0xeff00 + 0x87100 + 0x1200 + 0x153100 + 0xf300 + 0x153100 + 0x27f00 + 0x3900 + 0x32100 + 0x27f00 + 0x1dd00 + 0x17e8100 + 0xb4100 + 0xf8100 + 0xf300 + 0x73300 + 0x200 + 0x3900 + 0x751700 + 0x34300 + 0x34000 + 0x756300 + 0x678000 + 0x83500 + 0xf300 + 0xeb00 + 0x48d00 + 0x8a300 + 0x200 + 0x32100 + 0x1200 + 0x6600 + 0x29b500 + 0x27f00 + 0x32100 + 0x1200 + 0x200 + 0xa9c00 + 0x19fb00 + 0x2c300 + 0xeef00 + 0xcb400 + 0xb4100 + 0x10300 + 0x310d00 + 0x32100 + 0x135100 + 0x52100 + 0xf8100 + 0x200 + 0x4900 + 0x600 + 0x47900 + 0x32f00 + 0x47900 + 0x6900 + 0x5ea00 + 0x19fe00 + 0x32100 + 0x32000 + 0x3800 + 0x16600 + 0x600 + 0x10300 + 0x6600 + 0x12900 + 0x46600 + 0x27f00 + 0x12100 + 0x10f00 + 0x12100 + 0x19fe00 + 0xb500 + 0x66d00 + 0xdd00 + 0x3900 + 0x5300 + 0x117900 + 0x7e100 + 0x1200 + 0x3900 + 0x1dd00 + 0x28a00 + 0x12100 + 0xe2f00 + 0xf5d00 + 0x2ef00 + 0x87100 + 0x7e600 + 0x93300 + 0xf8100 + 0x1dd00 + 0xc6d00 + 0x19ca00 + 0x87100 + 0x2e600 + 0x6d100 + 0x9c900 + 0x4c00 + 0x6900 + 0xf8100 + 0x7e600 + 0x500 + 0x71800 + 0x179500 + 0x200 + 0x9c900 + 0x200 + 0x200 + 0x3900 + 0x200 + 0x73300 + 0xb500 + 0x25700 + 0x10300 + 0x11200 + 0x87100 + 0x1f300 + 0x2ef00 + 0x1200 + 0x10ce00 + 0x2c300 + 0x7e600 + 0x17200 + 0x2100 + 0x73300 + 0x19ca00 + 0x3700 + 0x1c900 + 0xb300 + 0x1bb00 + 0xa9b700 + 0x19fb00 + 0x14800 + 0x17e00 + 0x1200 + 0x73300 + 0x7e100 + 0xfa00 + 0x33e00 + 0x12d00 + 0x2d0b00 + 0x9b00 + 0xea100 + 0x19fd00 + 0x12100 + 0x7e600 + 0x4c00 + 0x18500 + 0x740200 + 0xb500 + 0x41800 + 0x1dd00 + 0xcf00 + 0x35500 + 0x87100 + 0x678000 + 0x200 + 0xdd00 + 0x9c900 + 0x1b0900 + 0x32100 + 0x2e00 + 0xf8100 + 0x70b00 + 0x2c700 + 0x1dd00 + 0xf5f00 + 0xf300 + 0x10300 + 0x1cad00 + 0xf5c00 + 0x5300 + 0x2b100 + 0x23200 + 0x9b00 + 0x32100 + 0x10300 + 0x700 + 0x3900 + 0xb500 + 0xf300 + 0x9800 + 0x2100 + 0x5be00 + 0x5ea00 + 0x5f00 + 0x79d00 + 0x1700 + 0xf300 + 0x73300 + 0x4f00 + 0x1200 + 0x200 + 0x19fe00 + ... = 0xd2b1a00
LVP: vkBuffer size 220928512 created at 0x55ef5fc45968
RTV: New vkBuffer created at 0x55ef5fc45968
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef34ca3300; llvmpipe_resource 0x55ef34ca3300; pipe_memory_allocation 0x14f66ce10000;
LVP: Binding lvp_buffer 0x55ef5fc44090: buffer->bo: 0x55ef34ca3300; buffer->pmem: 0x14f66ce10000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf6600 (size 220928512) to vulkan buffer 0x14f66ce10000
LVP: gpgpusim buffer size 220928512 allocated at 0xcadf6600
RTV: Bind buffer memory for vkBuffer 0x55ef5fc45968
LVP: vkBuffer size 117351040 created at 0x55ef5fc442f8
RTV: New vkBuffer created at 0x55ef5fc442f8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55ef99614570; llvmpipe_resource 0x55ef99614570; pipe_memory_allocation 0x14f681015000;
LVP: Binding lvp_buffer 0x55ef5fc45a70: buffer->bo: 0x55ef99614570; buffer->pmem: 0x14f681015000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xd80a8000 (size 117351040) to vulkan buffer 0x14f681015000
LVP: gpgpusim buffer size 117351040 allocated at 0xd80a8000
RTV: Bind buffer memory for vkBuffer 0x55ef5fc442f8
RTV: Created buffer for 0xd2b1a00 size BLAS at 0x55ef5fc44090
RTV: Creating bottom level acceleration structure 0...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x0 = 0x14f66ce10000 allocated to accel structure 0x55ef33e6dec0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ce10000 to 0xcadf6600
RTV: Building BLAS into 0x55ef33e6dec0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55be9c0
Compressed Node: i	exp: (0, 1, 2)	origin: (8.010547, 4.235130, 10.611778)
Children:
	0x55efb55bea28: (74, 135, 11), (142, 172, 130)
	0x55efb55bf340: (23, 0, 0), (125, 155, 44)
	0x55efb55bfc98: (0, 7, 86), (110, 172, 130)
	0x55efb55c03c0: (8, 30, 0), (77, 62, 118)
	0x55efb55c0570: (39, 30, 59), (96, 121, 65)
	0x55efb55c0840: (41, 94, 6), (109, 118, 125)
EMBREE: Set dst_map 0x14f66ce10000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x0 for accel 0x55ef33e6dec0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ce10000
EMBREE: Pack root 0x55efb55be9c0 to root_map 0x14f66ce10040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 1...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3900 = 0x14f66ce13900 allocated to accel structure 0x55ef33e6dd70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ce13900 to 0xcadf9f00
RTV: Building BLAS into 0x55ef33e6dd70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55bee80
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.055093, 9.206492, -36.706772)
Children:
	0x55efb55beee8: (4, 149, 0), (230, 237, 141)
	0x55efb55bf080: (0, 159, 102), (232, 253, 233)
	0x55efb55bf218: (12, 0, 60), (123, 177, 227)
	0x55efb55bf3c0: (95, 0, 20), (214, 160, 160)
	0x55efb55bf468: (95, 0, 60), (214, 177, 227)
	0x55efb55bf500: (12, 0, 21), (103, 167, 128)
EMBREE: Set dst_map 0x14f66ce13900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3900 for accel 0x55ef33e6dd70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ce13900
EMBREE: Pack root 0x55efb55bee80 to root_map 0x14f66ce13940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 2...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x4b00 = 0x14f66ce14b00 allocated to accel structure 0x55ef315725a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ce14b00 to 0xcadfb100
RTV: Building BLAS into 0x55ef315725a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f66ce14b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x4b00 for accel 0x55ef315725a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ce14b00
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f66ce14b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 3...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x4d00 = 0x14f66ce14d00 allocated to accel structure 0x55ef31572600
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ce14d00 to 0xcadfb300
RTV: Building BLAS into 0x55ef31572600
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (0, -1, -1)	origin: (-0.243381, 11.502707, 8.720557)
Children:
	0x55efb55c1ee8: (133, 0, 29), (227, 217, 186)
	0x55efb55da160: (0, 13, 0), (41, 229, 161)
	0x55efb55e4840: (34, 105, 73), (174, 229, 144)
	0x55efb55e5640: (31, 73, 75), (183, 124, 155)
	0x55efb55e5af0: (31, 0, 0), (202, 87, 155)
	0x55efb55e5f18: (36, 73, 3), (197, 223, 89)
EMBREE: Set dst_map 0x14f66ce14d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x4d00 for accel 0x55ef31572600
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ce14d00
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66ce14d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 4...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x46500 = 0x14f66ce56500 allocated to accel structure 0x55ef33f1c090
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ce56500 to 0xcae3cb00
RTV: Building BLAS into 0x55ef33f1c090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c7300
Compressed Node: i	exp: (-2, -2, -1)	origin: (-36.088058, 1.849942, 33.997559)
Children:
	0x55efb55c7368: (0, 0, 116), (156, 78, 181)
	0x55efb55c49a8: (0, 0, 53), (156, 37, 117)
	0x55efb55c6568: (36, 77, 129), (119, 137, 234)
	0x55efb55d0dc0: (36, 77, 57), (119, 128, 134)
	0x55efb55d2618: (42, 35, 66), (113, 78, 117)
	0x55efb55d3378: (38, 95, 0), (117, 137, 63)
EMBREE: Set dst_map 0x14f66ce56500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x46500 for accel 0x55ef33f1c090
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ce56500
EMBREE: Pack root 0x55efb55c7300 to root_map 0x14f66ce56540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 5...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x58600 = 0x14f66ce68600 allocated to accel structure 0x55efb55be950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ce68600 to 0xcae4ec00
RTV: Building BLAS into 0x55efb55be950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (0, 2, 1)	origin: (-0.849864, 9.674242, -12.342413)
Children:
	0x55efb55c34e8: (0, 14, 73), (207, 127, 150)
	0x55efb55e1dd8: (7, 105, 0), (200, 146, 87)
	0x55efb55e6e30: (42, 0, 35), (165, 24, 98)
	0x55efb55e8c18: (7, 76, 57), (200, 123, 87)
	0x55efb55e95d0: (59, 0, 5), (148, 146, 94)
	0x55efb55e9c98: (10, 43, 71), (197, 78, 84)
EMBREE: Set dst_map 0x14f66ce68600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x58600 for accel 0x55efb55be950
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ce68600
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66ce68640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 6...
RTV: Creating acceleration struction of size 0x5f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9ff00 = 0x14f66ceaff00 allocated to accel structure 0x55efb55be9b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ceaff00 to 0xcae96500
RTV: Building BLAS into 0x55efb55be9b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 188 triangles added; total: 188
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c7300
Compressed Node: i	exp: (1, 3, 1)	origin: (-8.963638, 0.429549, 10.909657)
Children:
	0x55efb55c7368: (0, 73, 0), (78, 133, 77)
	0x55efb55c3f18: (160, 0, 158), (167, 1, 165)
	0x55efb55c4240: (74, 0, 72), (167, 75, 165)
	0x55efb55c4368: (74, 0, 69), (167, 75, 161)
	0x55efb55c4418: (70, 0, 73), (162, 75, 165)
	0x55efb55c44c8: (70, 0, 69), (164, 74, 160)
EMBREE: Set dst_map 0x14f66ceaff00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9ff00 for accel 0x55efb55be9b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ceaff00
EMBREE: Pack root 0x55efb55c7300 to root_map 0x14f66ceaff40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 7...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa5e00 = 0x14f66ceb5e00 allocated to accel structure 0x55efb55bea50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ceb5e00 to 0xcae9c400
RTV: Building BLAS into 0x55efb55bea50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (3, 2, 1)	origin: (-7.380075, -0.110149, -9.382076)
Children:
	0x55efb55c34e8: (59, 137, 0), (210, 170, 248)
	0x55efb55e22d0: (0, 137, 4), (108, 170, 223)
	0x55efb55f1390: (88, 1, 189), (210, 157, 248)
	0x55efb55f7528: (0, 13, 171), (109, 149, 230)
	0x55efb55fae38: (138, 14, 2), (206, 143, 219)
	0x55efb55fd348: (0, 0, 4), (69, 160, 44)
EMBREE: Set dst_map 0x14f66ceb5e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa5e00 for accel 0x55efb55bea50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ceb5e00
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66ceb5e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 8...
RTV: Creating acceleration struction of size 0x9100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x124400 = 0x14f66cf34400 allocated to accel structure 0x55efb55beaf0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66cf34400 to 0xcaf1aa00
RTV: Building BLAS into 0x55efb55beaf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 288 triangles added; total: 288
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c7300
Compressed Node: i	exp: (-3, 0, -4)	origin: (-4.791358, 12.466628, -16.529924)
Children:
	0x55efb55c7368: (8, 159, 0), (233, 221, 51)
	0x55efb55c3528: (0, 2, 32), (22, 175, 133)
	0x55efb55c4780: (208, 3, 31), (233, 175, 133)
	0x55efb55c5798: (0, 0, 95), (222, 39, 135)
	0x55efb55c5f58: (10, 8, 24), (226, 175, 123)
	0x55efb55c6338: (7, 98, 24), (222, 175, 83)
EMBREE: Set dst_map 0x14f66cf34400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x124400 for accel 0x55efb55beaf0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66cf34400
EMBREE: Pack root 0x55efb55c7300 to root_map 0x14f66cf34440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 9...
RTV: Creating acceleration struction of size 0x121500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x121500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x12d500 = 0x14f66cf3d500 allocated to accel structure 0x55efb55bed20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66cf3d500 to 0xcaf23b00
RTV: Building BLAS into 0x55efb55bed20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 9256 triangles added; total: 9256
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (3, -1, -3)	origin: (3.590457, 10.925159, -37.199673)
Children:
	0x55efb55cfbe8: (0, 39, 0), (48, 167, 145)
	0x55efb55ea988: (135, 39, 0), (161, 165, 145)
	0x55efb5600658: (51, 39, 0), (78, 167, 145)
	0x55efb5613688: (112, 0, 0), (135, 125, 145)
	0x55efb5624fc0: (164, 39, 0), (191, 167, 145)
	0x55efb5636948: (79, 0, 0), (109, 165, 145)
EMBREE: Set dst_map 0x14f66cf3d500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x12d500 for accel 0x55efb55bed20
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66cf3d500
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66cf3d540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 10...
RTV: Creating acceleration struction of size 0x38d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x38d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x24ea00 = 0x14f66d05ea00 allocated to accel structure 0x55efb55bda90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d05ea00 to 0xcb045000
RTV: Building BLAS into 0x55efb55bda90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1816 triangles added; total: 1816
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (1, -1, 2)	origin: (-5.180636, 11.394192, 7.661726)
Children:
	0x55efb55c1ee8: (0, 0, 0), (73, 88, 198)
	0x55efb55d2ea8: (113, 103, 0), (199, 236, 103)
	0x55efb55d6e68: (32, 16, 0), (169, 211, 103)
	0x55efb55da698: (95, 131, 77), (153, 234, 197)
	0x55efb55ddca0: (114, 141, 8), (199, 209, 209)
	0x55efb55e0200: (10, 13, 102), (150, 209, 198)
EMBREE: Set dst_map 0x14f66d05ea00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x24ea00 for accel 0x55efb55bda90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d05ea00
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d05ea40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 11...
RTV: Creating acceleration struction of size 0x2ef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2ef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x287700 = 0x14f66d097700 allocated to accel structure 0x55efb55bdaf0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d097700 to 0xcb07dd00
RTV: Building BLAS into 0x55efb55bdaf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1500 triangles added; total: 1500
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (-1, 2, -2)	origin: (54.096577, 8.849975, -12.354340)
Children:
	0x55efb55c1ee8: (25, 179, 0), (206, 203, 165)
	0x55efb55d7840: (0, 138, 0), (131, 184, 119)
	0x55efb55dd4f8: (95, 0, 35), (146, 9, 165)
	0x55efb55def48: (62, 73, 82), (97, 97, 99)
	0x55efb55dfa68: (32, 80, 73), (132, 157, 108)
	0x55efb55e0448: (39, 4, 73), (125, 188, 108)
EMBREE: Set dst_map 0x14f66d097700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x287700 for accel 0x55efb55bdaf0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d097700
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d097740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 12...
RTV: Creating acceleration struction of size 0x2c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2b6600 = 0x14f66d0c6600 allocated to accel structure 0x55efb55c7830
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d0c6600 to 0xcb0acc00
RTV: Building BLAS into 0x55efb55c7830
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1412 triangles added; total: 1412
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (1, 0, 1)	origin: (-9.722721, 0.738900, -7.940585)
Children:
	0x55efb55c1ee8: (72, 42, 32), (151, 203, 135)
	0x55efb55d1bc8: (130, 84, 67), (169, 208, 135)
	0x55efb55d64d0: (0, 0, 0), (39, 123, 64)
	0x55efb55da5c0: (25, 41, 0), (45, 115, 12)
	0x55efb55dc118: (54, 41, 79), (87, 132, 103)
	0x55efb55ddb08: (7, 2, 4), (93, 166, 97)
EMBREE: Set dst_map 0x14f66d0c6600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2b6600 for accel 0x55efb55c7830
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d0c6600
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d0c6640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 13...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2e2900 = 0x14f66d0f2900 allocated to accel structure 0x55efb55c78d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d0f2900 to 0xcb0d8f00
RTV: Building BLAS into 0x55efb55c78d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (1, -2, 1)	origin: (-5.219146, 9.667202, -17.833858)
Children:
	0x55efb55c1ee8: (0, 0, 117), (188, 203, 181)
	0x55efb55d2570: (0, 16, 69), (127, 187, 119)
	0x55efb55d5e00: (10, 0, 0), (105, 203, 84)
	0x55efb55d8f30: (23, 0, 0), (188, 19, 144)
	0x55efb55d90e0: (23, 184, 0), (188, 203, 144)
	0x55efb55d9358: (25, 14, 0), (188, 189, 142)
EMBREE: Set dst_map 0x14f66d0f2900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2e2900 for accel 0x55efb55c78d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d0f2900
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d0f2940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 14...
RTV: Creating acceleration struction of size 0x2a400
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2a400) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x300600 = 0x14f66d110600 allocated to accel structure 0x55efb55c7970
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d110600 to 0xcb0f6c00
RTV: Building BLAS into 0x55efb55c7970
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1350 triangles added; total: 1350
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (3, 2, 3)	origin: (-1.108457, 4.464162, 6.675488)
Children:
	0x55efb55c1ee8: (94, 0, 177), (209, 218, 194)
	0x55efb55d0dc8: (0, 0, 171), (96, 214, 193)
	0x55efb55d5318: (169, 0, 23), (224, 219, 50)
	0x55efb55d7c70: (18, 2, 0), (85, 213, 19)
	0x55efb55da188: (83, 1, 7), (132, 216, 25)
	0x55efb55dc068: (128, 1, 14), (174, 218, 34)
EMBREE: Set dst_map 0x14f66d110600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x300600 for accel 0x55efb55c7970
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d110600
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d110640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 15...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x32aa00 = 0x14f66d13aa00 allocated to accel structure 0x55efb55bdbd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d13aa00 to 0xcb121000
RTV: Building BLAS into 0x55efb55bdbd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (-1, -2, -2)	origin: (-3.173368, 2.408471, -8.044994)
Children:
	0x55efb55c1ee8: (53, 0, 0), (117, 94, 156)
	0x55efb55c4d10: (116, 0, 0), (181, 45, 156)
	0x55efb55c6740: (129, 93, 36), (234, 165, 119)
	0x55efb55d0e88: (57, 93, 36), (134, 154, 119)
	0x55efb55d2780: (116, 42, 42), (168, 94, 113)
	0x55efb55d34d8: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x14f66d13aa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x32aa00 for accel 0x55efb55bdbd0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d13aa00
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d13aa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 16...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x33cb00 = 0x14f66d14cb00 allocated to accel structure 0x55efb55bdc70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d14cb00 to 0xcb133100
RTV: Building BLAS into 0x55efb55bdc70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (-1, 1, -1)	origin: (1.451318, 11.780621, -12.389039)
Children:
	0x55efb55c1ee8: (0, 1, 166), (118, 252, 252)
	0x55efb55d4828: (19, 0, 0), (128, 253, 24)
	0x55efb55dc640: (0, 1, 21), (146, 93, 177)
	0x55efb55de3d8: (0, 155, 21), (146, 252, 177)
	0x55efb55e0320: (0, 66, 69), (144, 182, 252)
	0x55efb55e1b40: (0, 4, 106), (119, 251, 177)
EMBREE: Set dst_map 0x14f66d14cb00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x33cb00 for accel 0x55efb55bdc70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d14cb00
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d14cb40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 17...
RTV: Creating acceleration struction of size 0x6900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x36ec00 = 0x14f66d17ec00 allocated to accel structure 0x55efb55bdd40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d17ec00 to 0xcb165200
RTV: Building BLAS into 0x55efb55bdd40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 208 triangles added; total: 208
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c1e80
Compressed Node: i	exp: (1, 2, 3)	origin: (16.024378, 6.279655, -18.017330)
Children:
	0x55efb55c1ee8: (55, 72, 33), (196, 143, 119)
	0x55efb55c2aa8: (0, 0, 0), (199, 31, 160)
	0x55efb55c4000: (0, 19, 35), (63, 83, 159)
	0x55efb55c4c50: (51, 22, 117), (189, 73, 160)
	0x55efb55c5050: (62, 25, 35), (196, 83, 39)
	0x55efb55c51e8: (184, 22, 36), (196, 113, 160)
EMBREE: Set dst_map 0x14f66d17ec00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x36ec00 for accel 0x55efb55bdd40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d17ec00
EMBREE: Pack root 0x55efb55c1e80 to root_map 0x14f66d17ec40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 18...
RTV: Creating acceleration struction of size 0x27db00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27db00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x375500 = 0x14f66d185500 allocated to accel structure 0x55efb55bdde0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d185500 to 0xcb16bb00
RTV: Building BLAS into 0x55efb55bdde0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 20404 triangles added; total: 20404
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (0, 1, 1)	origin: (-37.068924, 1.845875, 32.289604)
Children:
	0x55efb55cfbe8: (117, 101, 0), (206, 154, 57)
	0x55efb56188a8: (98, 61, 18), (216, 105, 89)
	0x55efb5655d90: (117, 2, 13), (229, 65, 60)
	0x55efb5682038: (120, 0, 56), (197, 65, 108)
	0x55efb56a1550: (58, 13, 44), (127, 65, 109)
	0x55efb56bbc80: (0, 0, 49), (126, 16, 134)
EMBREE: Set dst_map 0x14f66d185500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x375500 for accel 0x55efb55bdde0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d185500
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66d185540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 19...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x5f3000 = 0x14f66d403000 allocated to accel structure 0x55efb55bde80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d403000 to 0xcb3e9600
RTV: Building BLAS into 0x55efb55bde80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c7300
Compressed Node: i	exp: (2, 0, -1)	origin: (-0.827619, 7.815415, 12.430019)
Children:
	0x55efb55c7368: (141, 102, 104), (200, 166, 237)
	0x55efb55c4fc0: (3, 175, 5), (95, 205, 130)
	0x55efb55c6518: (61, 0, 26), (127, 105, 202)
	0x55efb55d09f0: (79, 137, 41), (117, 220, 208)
	0x55efb55d1928: (49, 96, 28), (143, 152, 192)
	0x55efb55d27e8: (0, 101, 0), (113, 181, 154)
EMBREE: Set dst_map 0x14f66d403000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x5f3000 for accel 0x55efb55bde80
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d403000
EMBREE: Pack root 0x55efb55c7300 to root_map 0x14f66d403040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 20...
RTV: Creating acceleration struction of size 0x9e100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9e100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x603300 = 0x14f66d413300 allocated to accel structure 0x55efb55bdf20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d413300 to 0xcb3f9900
RTV: Building BLAS into 0x55efb55bdf20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5056 triangles added; total: 5056
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (2, -1, -3)	origin: (7.399164, 10.398026, -37.199673)
Children:
	0x55efb55c34e8: (148, 39, 0), (192, 165, 145)
	0x55efb55e0d98: (38, 39, 0), (96, 125, 145)
	0x55efb55f0a78: (120, 39, 0), (141, 165, 145)
	0x55efb55faab0: (97, 39, 0), (113, 140, 145)
	0x55efb56043e0: (0, 39, 0), (9, 167, 145)
	0x55efb560a358: (10, 0, 0), (40, 125, 145)
EMBREE: Set dst_map 0x14f66d413300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x603300 for accel 0x55efb55bdf20
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d413300
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d413340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 21...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6a1400 = 0x14f66d4b1400 allocated to accel structure 0x55efb55c2600
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d4b1400 to 0xcb497a00
RTV: Building BLAS into 0x55efb55c2600
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c2740
Compressed Node: i	exp: (2, 0, -1)	origin: (2.440237, 7.815415, 12.771802)
Children:
	0x55efb55c27a8: (141, 102, 104), (200, 166, 237)
	0x55efb55c4fc0: (3, 175, 5), (95, 205, 130)
	0x55efb55c6518: (61, 0, 26), (127, 105, 202)
	0x55efb55d09f0: (79, 137, 41), (117, 220, 208)
	0x55efb55d1928: (49, 96, 28), (143, 152, 192)
	0x55efb55d27e8: (0, 101, 0), (113, 181, 154)
EMBREE: Set dst_map 0x14f66d4b1400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6a1400 for accel 0x55efb55c2600
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d4b1400
EMBREE: Pack root 0x55efb55c2740 to root_map 0x14f66d4b1440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 22...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6b1700 = 0x14f66d4c1700 allocated to accel structure 0x55efb55c2660
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d4c1700 to 0xcb4a7d00
RTV: Building BLAS into 0x55efb55c2660
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (-1, 1, 0)	origin: (-0.959308, 12.346039, -12.458676)
Children:
	0x55efb55c34e8: (0, 137, 0), (243, 192, 121)
	0x55efb55d3f98: (64, 0, 36), (175, 160, 112)
	0x55efb55dab70: (81, 0, 0), (156, 192, 112)
	0x55efb55dcbe0: (7, 89, 51), (235, 150, 141)
	0x55efb55de3d8: (96, 44, 20), (154, 192, 91)
	0x55efb55df028: (7, 92, 50), (235, 143, 75)
EMBREE: Set dst_map 0x14f66d4c1700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6b1700 for accel 0x55efb55c2660
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d4c1700
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d4c1740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 23...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6dde00 = 0x14f66d4ede00 allocated to accel structure 0x55efb55c26c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d4ede00 to 0xcb4d4400
RTV: Building BLAS into 0x55efb55c26c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (3, 0, 0)	origin: (0.346729, 3.566069, 11.974279)
Children:
	0x55efb55c34e8: (32, 70, 21), (93, 185, 110)
	0x55efb55c57d8: (91, 81, 71), (130, 135, 138)
	0x55efb55d01e0: (0, 100, 0), (18, 182, 39)
	0x55efb55d14e0: (40, 0, 25), (82, 79, 109)
	0x55efb55d2480: (11, 152, 14), (62, 178, 73)
	0x55efb55d2c98: (0, 90, 0), (74, 128, 87)
EMBREE: Set dst_map 0x14f66d4ede00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6dde00 for accel 0x55efb55c26c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d4ede00
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d4ede40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 24...
RTV: Creating acceleration struction of size 0x5300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6ed100 = 0x14f66d4fd100 allocated to accel structure 0x55efb55c27a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d4fd100 to 0xcb4e3700
RTV: Building BLAS into 0x55efb55c27a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 164 triangles added; total: 164
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (2, 2, 2)	origin: (5.409300, 4.902136, 10.968852)
Children:
	0x55efb55c34e8: (184, 137, 21), (226, 188, 130)
	0x55efb55c44a0: (0, 144, 0), (22, 209, 110)
	0x55efb55c4fc0: (9, 161, 0), (226, 199, 75)
	0x55efb55c5648: (2, 0, 2), (18, 193, 97)
	0x55efb55c5c30: (3, 164, 52), (221, 205, 130)
	0x55efb55c5df0: (10, 175, 74), (203, 209, 102)
EMBREE: Set dst_map 0x14f66d4fd100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6ed100 for accel 0x55efb55c27a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d4fd100
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d4fd140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 25...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6f2400 = 0x14f66d502400 allocated to accel structure 0x55efb55c2840
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d502400 to 0xcb4e8a00
RTV: Building BLAS into 0x55efb55c2840
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (3, 2, 2)	origin: (-43.629181, -0.817494, 30.011848)
Children:
	0x55efb55c34e8: (0, 136, 4), (150, 177, 131)
	0x55efb55e36b0: (101, 140, 20), (210, 177, 129)
	0x55efb55f2340: (0, 10, 0), (121, 165, 52)
	0x55efb55f7be0: (100, 21, 11), (209, 157, 44)
	0x55efb55facd8: (3, 14, 49), (71, 144, 128)
	0x55efb55fca38: (140, 0, 97), (209, 160, 129)
EMBREE: Set dst_map 0x14f66d502400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6f2400 for accel 0x55efb55c2840
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d502400
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d502440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 26...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x770a00 = 0x14f66d580a00 allocated to accel structure 0x55efb55c28e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d580a00 to 0xcb567000
RTV: Building BLAS into 0x55efb55c28e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (-1, 2, 0)	origin: (-8.517673, 8.804159, -12.773970)
Children:
	0x55efb55c34e8: (20, 0, 57), (149, 89, 224)
	0x55efb55d62b8: (2, 88, 0), (95, 131, 119)
	0x55efb55da0f0: (0, 42, 9), (116, 130, 156)
	0x55efb55dc8d0: (11, 3, 70), (112, 131, 224)
	0x55efb55df578: (2, 1, 11), (88, 127, 182)
	0x55efb55e06b0: (68, 1, 9), (149, 127, 180)
EMBREE: Set dst_map 0x14f66d580a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x770a00 for accel 0x55efb55c28e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d580a00
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d580a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 27...
RTV: Creating acceleration struction of size 0x17d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7a2b00 = 0x14f66d5b2b00 allocated to accel structure 0x55efb55c2980
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d5b2b00 to 0xcb599100
RTV: Building BLAS into 0x55efb55c2980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 760 triangles added; total: 760
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (3, 2, 2)	origin: (-3.343199, 0.997585, 7.693523)
Children:
	0x55efb55c34e8: (0, 158, 0), (65, 193, 120)
	0x55efb55d0200: (118, 165, 22), (131, 209, 132)
	0x55efb55d26c8: (26, 0, 5), (39, 172, 112)
	0x55efb55d4000: (118, 0, 25), (131, 192, 127)
	0x55efb55d5840: (20, 161, 2), (127, 199, 76)
	0x55efb55d65c0: (17, 165, 53), (124, 209, 132)
EMBREE: Set dst_map 0x14f66d5b2b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7a2b00 for accel 0x55efb55c2980
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d5b2b00
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d5b2b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 28...
RTV: Creating acceleration struction of size 0xf0100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf0100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7ba800 = 0x14f66d5ca800 allocated to accel structure 0x55efb55c2a20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d5ca800 to 0xcb5b0e00
RTV: Building BLAS into 0x55efb55c2a20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7680 triangles added; total: 7680
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3480
Compressed Node: i	exp: (4, 3, -1)	origin: (12.738438, 11.250254, -12.383741)
Children:
	0x55efb55c34e8: (0, 17, 98), (143, 29, 156)
	0x55efb5601bd8: (141, 0, 85), (188, 29, 150)
	0x55efb5612340: (70, 32, 0), (143, 44, 30)
	0x55efb561bff0: (0, 35, 2), (71, 48, 33)
	0x55efb56233f8: (142, 41, 7), (164, 68, 49)
	0x55efb56266c8: (163, 66, 27), (173, 130, 96)
EMBREE: Set dst_map 0x14f66d5ca800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7ba800 for accel 0x55efb55c2a20
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d5ca800
EMBREE: Pack root 0x55efb55c3480 to root_map 0x14f66d5ca840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 29...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8aa900 = 0x14f66d6ba900 allocated to accel structure 0x55efb55c2ac0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d6ba900 to 0xcb6a0f00
RTV: Building BLAS into 0x55efb55c2ac0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3940
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.272674, 9.279652, -36.719334)
Children:
	0x55efb55c39a8: (4, 149, 0), (230, 237, 141)
	0x55efb55c3b40: (0, 159, 102), (232, 253, 233)
	0x55efb55c3cd8: (12, 0, 60), (123, 177, 227)
	0x55efb55c3e80: (95, 0, 20), (214, 160, 160)
	0x55efb55c3f28: (95, 0, 60), (214, 177, 227)
	0x55efb55c3fc0: (12, 0, 21), (103, 167, 128)
EMBREE: Set dst_map 0x14f66d6ba900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8aa900 for accel 0x55efb55c2ac0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d6ba900
EMBREE: Pack root 0x55efb55c3940 to root_map 0x14f66d6ba940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 30...
RTV: Creating acceleration struction of size 0x33f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x33f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8abb00 = 0x14f66d6bbb00 allocated to accel structure 0x55efb55c6de0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d6bbb00 to 0xcb6a2100
RTV: Building BLAS into 0x55efb55c6de0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1660 triangles added; total: 1660
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3940
Compressed Node: i	exp: (3, 3, 2)	origin: (0.259548, 8.825325, 8.485312)
Children:
	0x55efb55c39a8: (0, 92, 96), (184, 133, 201)
	0x55efb55d4c48: (3, 105, 0), (188, 133, 105)
	0x55efb55da810: (83, 5, 130), (163, 116, 197)
	0x55efb55dd0a0: (1, 0, 98), (46, 122, 200)
	0x55efb55df340: (10, 0, 0), (21, 123, 67)
	0x55efb55e07b8: (131, 5, 31), (168, 121, 99)
EMBREE: Set dst_map 0x14f66d6bbb00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8abb00 for accel 0x55efb55c6de0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d6bbb00
EMBREE: Pack root 0x55efb55c3940 to root_map 0x14f66d6bbb40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 31...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8dfa00 = 0x14f66d6efa00 allocated to accel structure 0x55efb55c6e40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d6efa00 to 0xcb6d6000
RTV: Building BLAS into 0x55efb55c6e40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3940
Compressed Node: i	exp: (-1, -2, -2)	origin: (-39.126564, 1.853830, 30.364429)
Children:
	0x55efb55c39a8: (116, 0, 0), (181, 94, 156)
	0x55efb55c5ff8: (53, 0, 0), (117, 45, 156)
	0x55efb55d0ac0: (129, 93, 36), (234, 165, 119)
	0x55efb55d21c8: (57, 93, 36), (134, 154, 119)
	0x55efb55d3b40: (66, 42, 42), (117, 94, 113)
	0x55efb55d4800: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x14f66d6efa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8dfa00 for accel 0x55efb55c6e40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d6efa00
EMBREE: Pack root 0x55efb55c3940 to root_map 0x14f66d6efa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 32...
RTV: Creating acceleration struction of size 0x600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8f1b00 = 0x14f66d701b00 allocated to accel structure 0x55efb55c7470
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d701b00 to 0xcb6e8100
RTV: Building BLAS into 0x55efb55c7470
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10 triangles added; total: 10
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3940
Compressed Node: i	exp: (0, 0, 0)	origin: (16.400106, 6.445608, -22.557928)
Children:
	0x55efb55c39a8: (0, 2, 0), (169, 3, 158)
	0x55efb55c3a28: (0, 2, 59), (48, 211, 158)
	0x55efb55c3aa8: (59, 0, 93), (160, 213, 142)
	0x55efb55c3b28: (123, 2, 0), (171, 211, 98)
	0x55efb55c3ba8: (0, 210, 0), (171, 211, 98)
	0x55efb55c3bb4: (0, 210, 59), (171, 211, 158)
EMBREE: Set dst_map 0x14f66d701b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8f1b00 for accel 0x55efb55c7470
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d701b00
EMBREE: Pack root 0x55efb55c3940 to root_map 0x14f66d701b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 33...
RTV: Creating acceleration struction of size 0xf0100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf0100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8f2100 = 0x14f66d702100 allocated to accel structure 0x55efb55c7510
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d702100 to 0xcb6e8700
RTV: Building BLAS into 0x55efb55c7510
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7680 triangles added; total: 7680
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3940
Compressed Node: i	exp: (4, 3, -1)	origin: (-12.116438, 8.885265, -12.485441)
Children:
	0x55efb55c39a8: (0, 17, 106), (143, 29, 161)
	0x55efb5601ea0: (141, 0, 106), (188, 29, 154)
	0x55efb56129d0: (70, 31, 0), (143, 44, 22)
	0x55efb561c588: (0, 35, 0), (71, 47, 22)
	0x55efb5623900: (142, 40, 0), (164, 68, 23)
	0x55efb5626c00: (163, 66, 0), (173, 130, 23)
EMBREE: Set dst_map 0x14f66d702100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8f2100 for accel 0x55efb55c7510
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d702100
EMBREE: Pack root 0x55efb55c3940 to root_map 0x14f66d702140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 34...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9e2200 = 0x14f66d7f2200 allocated to accel structure 0x55efb55c75b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d7f2200 to 0xcb7d8800
RTV: Building BLAS into 0x55efb55c75b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3940
Compressed Node: i	exp: (1, -1, 1)	origin: (-4.803950, 10.203736, 9.443628)
Children:
	0x55efb55c39a8: (0, 39, 116), (150, 181, 143)
	0x55efb55d9c80: (117, 0, 1), (159, 213, 32)
	0x55efb55e60e8: (117, 0, 105), (160, 213, 141)
	0x55efb55f0f48: (1, 38, 0), (151, 181, 21)
	0x55efb55faeb0: (1, 124, 9), (107, 158, 129)
	0x55efb55fbb88: (134, 158, 10), (145, 176, 128)
EMBREE: Set dst_map 0x14f66d7f2200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9e2200 for accel 0x55efb55c75b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d7f2200
EMBREE: Pack root 0x55efb55c3940 to root_map 0x14f66d7f2240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 35...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa55500 = 0x14f66d865500 allocated to accel structure 0x55efb55c7650
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d865500 to 0xcb84bb00
RTV: Building BLAS into 0x55efb55c7650
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3940
Compressed Node: i	exp: (2, -1, 0)	origin: (-3.475703, 8.710422, 11.037120)
Children:
	0x55efb55c39a8: (0, 31, 18), (51, 110, 90)
	0x55efb55c5940: (91, 46, 23), (170, 96, 79)
	0x55efb55cfe98: (61, 0, 101), (117, 141, 195)
	0x55efb55d13a8: (72, 0, 0), (105, 141, 83)
	0x55efb55d2480: (49, 23, 52), (129, 118, 125)
	0x55efb55d3368: (74, 32, 65), (172, 109, 138)
EMBREE: Set dst_map 0x14f66d865500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa55500 for accel 0x55efb55c7650
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d865500
EMBREE: Pack root 0x55efb55c3940 to root_map 0x14f66d865540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 36...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa65800 = 0x14f66d875800 allocated to accel structure 0x55efb55c76f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d875800 to 0xcb85be00
RTV: Building BLAS into 0x55efb55c76f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3980
Compressed Node: i	exp: (2, -2, -1)	origin: (2.535697, 7.337254, 12.785810)
Children:
	0x55efb55c39e8: (0, 0, 0), (68, 205, 65)
	0x55efb55c6118: (93, 66, 77), (177, 214, 156)
	0x55efb55d1960: (60, 63, 50), (107, 120, 98)
	0x55efb55d3240: (46, 99, 38), (152, 151, 135)
	0x55efb55d3490: (23, 101, 19), (152, 212, 136)
	0x55efb55d3538: (45, 99, 37), (152, 212, 136)
EMBREE: Set dst_map 0x14f66d875800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa65800 for accel 0x55efb55c76f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d875800
EMBREE: Pack root 0x55efb55c3980 to root_map 0x14f66d875840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 37...
RTV: Creating acceleration struction of size 0x2e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa74300 = 0x14f66d884300 allocated to accel structure 0x55efb55c7790
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d884300 to 0xcb86a900
RTV: Building BLAS into 0x55efb55c7790
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 89 triangles added; total: 89
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3e40
Compressed Node: i	exp: (-2, 2, 1)	origin: (-0.595620, 4.244136, 7.096583)
Children:
	0x55efb55c3ea8: (0, 0, 123), (70, 231, 185)
	0x55efb55c4908: (67, 0, 0), (173, 231, 10)
	0x55efb55c5248: (66, 0, 6), (168, 33, 128)
	0x55efb55c52e0: (68, 199, 9), (166, 231, 125)
	0x55efb55c5378: (66, 32, 9), (166, 200, 128)
	0x55efb55c5384: (66, 32, 6), (168, 200, 128)
EMBREE: Set dst_map 0x14f66d884300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa74300 for accel 0x55efb55c7790
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d884300
EMBREE: Pack root 0x55efb55c3e40 to root_map 0x14f66d884340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 38...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa77100 = 0x14f66d887100 allocated to accel structure 0x55efb55c3410
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66d887100 to 0xcb86d700
RTV: Building BLAS into 0x55efb55c3410
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (3, 2, 2)	origin: (7.596109, 11.063460, -14.798249)
Children:
	0x55efb55cfbe8: (0, 158, 166), (171, 237, 221)
	0x55efb55fafc8: (150, 28, 39), (171, 195, 186)
	0x55efb561f580: (69, 0, 175), (199, 49, 226)
	0x55efb563c708: (69, 22, 0), (77, 220, 190)
	0x55efb5653788: (62, 28, 172), (170, 190, 203)
	0x55efb56682b8: (70, 24, 134), (147, 237, 193)
EMBREE: Set dst_map 0x14f66d887100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa77100 for accel 0x55efb55c3410
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66d887100
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66d887140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 39...
RTV: Creating acceleration struction of size 0x66b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x66b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc16f00 = 0x14f66da26f00 allocated to accel structure 0x55efb55c34b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66da26f00 to 0xcba0d500
RTV: Building BLAS into 0x55efb55c34b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3284 triangles added; total: 3284
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c3e40
Compressed Node: i	exp: (1, 1, 0)	origin: (-8.840171, 5.702009, 10.485927)
Children:
	0x55efb55c3ea8: (48, 12, 7), (101, 51, 230)
	0x55efb55dcf70: (63, 29, 84), (98, 77, 181)
	0x55efb55e89f0: (79, 39, 79), (94, 159, 92)
	0x55efb55f1b90: (72, 0, 0), (149, 16, 238)
	0x55efb55f4138: (0, 0, 14), (36, 16, 212)
	0x55efb55f5960: (31, 0, 0), (77, 16, 238)
EMBREE: Set dst_map 0x14f66da26f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc16f00 for accel 0x55efb55c34b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66da26f00
EMBREE: Pack root 0x55efb55c3e40 to root_map 0x14f66da26f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 40...
RTV: Creating acceleration struction of size 0xf5c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc7da00 = 0x14f66da8da00 allocated to accel structure 0x55efb55c3550
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66da8da00 to 0xcba74000
RTV: Building BLAS into 0x55efb55c3550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7862 triangles added; total: 7862
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (3, 4, 2)	origin: (22.316761, 17.342377, -21.698561)
Children:
	0x55efb55cfbe8: (0, 123, 77), (110, 153, 103)
	0x55efb55ed320: (141, 119, 42), (202, 153, 138)
	0x55efb5606700: (80, 0, 0), (155, 30, 181)
	0x55efb5615d48: (107, 22, 66), (152, 126, 115)
	0x55efb56228e8: (101, 111, 65), (145, 155, 116)
	0x55efb562deb8: (47, 0, 0), (88, 23, 181)
EMBREE: Set dst_map 0x14f66da8da00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc7da00 for accel 0x55efb55c3550
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66da8da00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66da8da40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 41...
RTV: Creating acceleration struction of size 0x19dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd73600 = 0x14f66db83600 allocated to accel structure 0x55efb55c35f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66db83600 to 0xcbb69c00
RTV: Building BLAS into 0x55efb55c35f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13240 triangles added; total: 13240
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (6, 4, 5)	origin: (-13.083219, -0.527287, -37.032532)
Children:
	0x55efb55cfbe8: (109, 32, 61), (138, 114, 101)
	0x55efb5609c90: (109, 0, 97), (118, 45, 156)
	0x55efb56348f0: (109, 33, 87), (118, 110, 199)
	0x55efb5648570: (109, 36, 0), (118, 110, 79)
	0x55efb565c298: (132, 123, 100), (135, 176, 164)
	0x55efb5668c00: (0, 182, 192), (45, 190, 197)
EMBREE: Set dst_map 0x14f66db83600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd73600 for accel 0x55efb55c35f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66db83600
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66db83640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 42...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xf11300 = 0x14f66dd21300 allocated to accel structure 0x55efb55c3690
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66dd21300 to 0xcbd07900
RTV: Building BLAS into 0x55efb55c3690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (0, 2, 0)	origin: (-2.631046, 5.037108, -11.584500)
Children:
	0x55efb55c41a8: (6, 37, 67), (159, 74, 118)
	0x55efb55e0fd8: (107, 68, 25), (185, 125, 91)
	0x55efb55eb608: (6, 113, 16), (148, 149, 75)
	0x55efb55f5b78: (16, 144, 0), (137, 172, 30)
	0x55efb55fdb10: (0, 68, 49), (120, 115, 99)
	0x55efb5603e28: (26, 0, 104), (148, 49, 156)
EMBREE: Set dst_map 0x14f66dd21300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xf11300 for accel 0x55efb55c3690
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66dd21300
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66dd21340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 43...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xf98400 = 0x14f66dda8400 allocated to accel structure 0x55efb55c3910
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66dda8400 to 0xcbd8ea00
RTV: Building BLAS into 0x55efb55c3910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daa80
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.158100, 10.110193, -12.113097)
Children:
	0x55efb55daae8: (0, 21, 154), (158, 131, 242)
	0x55efb55d4b50: (0, 32, 0), (159, 115, 28)
	0x55efb55de3a8: (3, 0, 13), (155, 136, 75)
	0x55efb55e0618: (100, 13, 34), (158, 152, 242)
	0x55efb55e2160: (0, 11, 34), (61, 152, 242)
	0x55efb55e3cb0: (0, 11, 95), (157, 131, 177)
EMBREE: Set dst_map 0x14f66dda8400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xf98400 for accel 0x55efb55c3910
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66dda8400
EMBREE: Pack root 0x55efb55daa80 to root_map 0x14f66dda8440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 44...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xfca500 = 0x14f66ddda500 allocated to accel structure 0x55efb55c39b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ddda500 to 0xcbdc0b00
RTV: Building BLAS into 0x55efb55c39b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2 triangles added; total: 2
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daa80
Compressed Node: i	exp: (2, 1, -1)	origin: (7.916481, 1.700224, 11.928228)
Children:
	0x55efb55daae8: (0, 0, 0), (226, 197, 189)
	0x55efb55daaf4: (1, 0, 2), (227, 197, 192)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
EMBREE: Set dst_map 0x14f66ddda500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xfca500 for accel 0x55efb55c39b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ddda500
EMBREE: Pack root 0x55efb55daa80 to root_map 0x14f66ddda540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 45...
RTV: Creating acceleration struction of size 0x31f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x31f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xfca700 = 0x14f66ddda700 allocated to accel structure 0x55efb55c3a50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ddda700 to 0xcbdc0d00
RTV: Building BLAS into 0x55efb55c3a50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1595 triangles added; total: 1595
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daa80
Compressed Node: i	exp: (-1, 2, 0)	origin: (21.460676, 11.166733, -12.634105)
Children:
	0x55efb55daae8: (17, 0, 72), (149, 132, 202)
	0x55efb55d6df0: (2, 94, 0), (95, 132, 108)
	0x55efb55dc9a0: (0, 38, 9), (116, 131, 144)
	0x55efb55df2f8: (20, 1, 50), (140, 86, 140)
	0x55efb55e10c0: (2, 1, 11), (107, 128, 160)
	0x55efb55e22d8: (68, 1, 9), (149, 129, 158)
EMBREE: Set dst_map 0x14f66ddda700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xfca700 for accel 0x55efb55c3a50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ddda700
EMBREE: Pack root 0x55efb55daa80 to root_map 0x14f66ddda740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 46...
RTV: Creating acceleration struction of size 0x740200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x740200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xffc600 = 0x14f66de0c600 allocated to accel structure 0x55efb55c3af0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66de0c600 to 0xcbdf2c00
RTV: Building BLAS into 0x55efb55c3af0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 59393 triangles added; total: 59393
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 2, 0)	origin: (-3.119444, 4.339679, 8.924344)
Children:
	0x55efb55dbbe8: (33, 93, 0), (79, 124, 240)
	0x55efb56752a0: (110, 0, 83), (216, 53, 224)
	0x55efb5704af0: (87, 50, 57), (162, 92, 226)
	0x55efb578fe68: (74, 89, 59), (148, 124, 225)
	0x55efb5807638: (0, 122, 75), (50, 160, 228)
	0x55efb585d350: (46, 121, 18), (109, 148, 232)
EMBREE: Set dst_map 0x14f66de0c600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xffc600 for accel 0x55efb55c3af0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66de0c600
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f66de0c640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 47...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x173c800 = 0x14f66e54c800 allocated to accel structure 0x55efb55c3b90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e54c800 to 0xcc532e00
RTV: Building BLAS into 0x55efb55c3b90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daa80
Compressed Node: i	exp: (-1, 2, 0)	origin: (-2.495448, 12.783228, -12.574805)
Children:
	0x55efb55daae8: (0, 0, 0), (133, 128, 101)
	0x55efb55d5b58: (2, 0, 86), (109, 37, 195)
	0x55efb55dc458: (0, 5, 93), (132, 88, 189)
	0x55efb55decd0: (4, 68, 83), (102, 128, 133)
	0x55efb55e0a18: (0, 4, 52), (109, 128, 180)
	0x55efb55e2710: (0, 36, 62), (132, 128, 157)
EMBREE: Set dst_map 0x14f66e54c800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x173c800 for accel 0x55efb55c3b90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e54c800
EMBREE: Pack root 0x55efb55daa80 to root_map 0x14f66e54c840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 48...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x176e900 = 0x14f66e57e900 allocated to accel structure 0x55efb55c3c30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e57e900 to 0xcc564f00
RTV: Building BLAS into 0x55efb55c3c30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daa80
Compressed Node: i	exp: (1, -2, 1)	origin: (-2.804010, 16.622112, -17.938791)
Children:
	0x55efb55daae8: (0, 0, 116), (190, 199, 185)
	0x55efb55d3370: (0, 15, 68), (129, 183, 123)
	0x55efb55d6d00: (12, 0, 0), (109, 199, 88)
	0x55efb55dbbb0: (29, 0, 0), (190, 18, 141)
	0x55efb55dbd60: (29, 180, 0), (190, 199, 141)
	0x55efb55dbf10: (31, 14, 0), (190, 184, 139)
EMBREE: Set dst_map 0x14f66e57e900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x176e900 for accel 0x55efb55c3c30
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e57e900
EMBREE: Pack root 0x55efb55daa80 to root_map 0x14f66e57e940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 49...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x178c600 = 0x14f66e59c600 allocated to accel structure 0x55efb55c3cd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e59c600 to 0xcc582c00
RTV: Building BLAS into 0x55efb55c3cd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (4, 2, 2)	origin: (35.448078, -0.024958, -5.141583)
Children:
	0x55efb55c41a8: (37, 171, 0), (131, 211, 154)
	0x55efb55e5680: (0, 171, 2), (67, 211, 139)
	0x55efb55f46f8: (55, 1, 117), (131, 196, 154)
	0x55efb55fa968: (0, 17, 106), (68, 185, 143)
	0x55efb55fe0f8: (86, 18, 1), (129, 178, 137)
	0x55efb5600640: (0, 0, 2), (43, 198, 27)
EMBREE: Set dst_map 0x14f66e59c600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x178c600 for accel 0x55efb55c3cd0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e59c600
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66e59c640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 50...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x180ac00 = 0x14f66e61ac00 allocated to accel structure 0x55efb55c3d70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e61ac00 to 0xcc601200
RTV: Building BLAS into 0x55efb55c3d70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (1, 2, 1)	origin: (6.576361, 7.094147, 12.644880)
Children:
	0x55efb55c41a8: (14, 108, 0), (244, 156, 136)
	0x55efb55dc4e8: (0, 0, 0), (245, 28, 136)
	0x55efb55e5c20: (0, 23, 0), (105, 121, 127)
	0x55efb55e8080: (60, 23, 0), (245, 139, 73)
	0x55efb55e8888: (48, 23, 60), (134, 129, 131)
	0x55efb55e9278: (132, 23, 72), (245, 139, 136)
EMBREE: Set dst_map 0x14f66e61ac00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x180ac00 for accel 0x55efb55c3d70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e61ac00
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66e61ac40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 51...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x184c400 = 0x14f66e65c400 allocated to accel structure 0x55efb55da550
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e65c400 to 0xcc642a00
RTV: Building BLAS into 0x55efb55da550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daf80
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.864779, 4.124220, 11.270550)
Children:
	0x55efb55dafe8: (0, 16, 0), (119, 136, 108)
	0x55efb55d0128: (118, 0, 99), (225, 90, 196)
	0x55efb55d29c0: (109, 28, 91), (143, 56, 128)
	0x55efb55d33f8: (57, 50, 48), (193, 90, 170)
	0x55efb55d36d8: (30, 64, 25), (193, 129, 170)
	0x55efb55d3768: (30, 89, 25), (193, 129, 170)
EMBREE: Set dst_map 0x14f66e65c400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x184c400 for accel 0x55efb55da550
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e65c400
EMBREE: Pack root 0x55efb55daf80 to root_map 0x14f66e65c440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 52...
RTV: Creating acceleration struction of size 0x1f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x185af00 = 0x14f66e66af00 allocated to accel structure 0x55efb55da5f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e66af00 to 0xcc651500
RTV: Building BLAS into 0x55efb55da5f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 60 triangles added; total: 60
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daf80
Compressed Node: i	exp: (0, -1, -3)	origin: (8.353141, 8.353414, -36.038494)
Children:
	0x55efb55dafe8: (73, 64, 0), (120, 140, 229)
	0x55efb55db298: (158, 0, 0), (207, 58, 229)
	0x55efb55db5d0: (0, 110, 0), (78, 140, 229)
	0x55efb55c41d8: (125, 32, 0), (164, 82, 229)
	0x55efb55c43f8: (0, 9, 0), (58, 112, 229)
	0x55efb55c46b0: (53, 9, 0), (58, 33, 229)
EMBREE: Set dst_map 0x14f66e66af00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x185af00 for accel 0x55efb55da5f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e66af00
EMBREE: Pack root 0x55efb55daf80 to root_map 0x14f66e66af40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 53...
RTV: Creating acceleration struction of size 0x10700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x185ce00 = 0x14f66e66ce00 allocated to accel structure 0x55efb55da690
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e66ce00 to 0xcc653400
RTV: Building BLAS into 0x55efb55da690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 524 triangles added; total: 524
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daf80
Compressed Node: i	exp: (3, 1, 2)	origin: (0.851345, 14.397640, -13.164979)
Children:
	0x55efb55dafe8: (0, 116, 0), (219, 146, 18)
	0x55efb55c5f08: (103, 0, 99), (219, 81, 134)
	0x55efb55d1108: (0, 0, 99), (104, 81, 134)
	0x55efb55d3240: (124, 58, 12), (219, 139, 104)
	0x55efb55d37f0: (0, 59, 12), (73, 139, 104)
	0x55efb55d3d40: (72, 59, 12), (125, 139, 104)
EMBREE: Set dst_map 0x14f66e66ce00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x185ce00 for accel 0x55efb55da690
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e66ce00
EMBREE: Pack root 0x55efb55daf80 to root_map 0x14f66e66ce40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 54...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x186d500 = 0x14f66e67d500 allocated to accel structure 0x55efb55da730
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e67d500 to 0xcc663b00
RTV: Building BLAS into 0x55efb55da730
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55daf80
Compressed Node: i	exp: (0, 1, 1)	origin: (-3.086811, 4.384608, 9.481003)
Children:
	0x55efb55dafe8: (49, 0, 45), (153, 152, 123)
	0x55efb55db600: (0, 7, 172), (111, 170, 250)
	0x55efb55c4600: (26, 133, 16), (67, 158, 123)
	0x55efb55c4b80: (69, 0, 0), (153, 61, 235)
	0x55efb55c4f98: (0, 96, 118), (54, 170, 251)
	0x55efb55c5400: (33, 93, 9), (104, 119, 245)
EMBREE: Set dst_map 0x14f66e67d500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x186d500 for accel 0x55efb55da730
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e67d500
EMBREE: Pack root 0x55efb55daf80 to root_map 0x14f66e67d540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 55...
RTV: Creating acceleration struction of size 0x1fc300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1fc300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1870e00 = 0x14f66e680e00 allocated to accel structure 0x55efb55da7d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e680e00 to 0xcc667400
RTV: Building BLAS into 0x55efb55da7d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 16260 triangles added; total: 16260
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (4, 4, 3)	origin: (-2.883379, 1.947104, 6.898950)
Children:
	0x55efb55cfbe8: (54, 32, 168), (150, 65, 212)
	0x55efb56160c0: (0, 0, 141), (56, 63, 188)
	0x55efb5645640: (7, 0, 0), (55, 61, 26)
	0x55efb56661c8: (22, 59, 163), (106, 104, 198)
	0x55efb5682ca0: (54, 35, 2), (158, 60, 55)
	0x55efb569ed10: (37, 129, 115), (123, 177, 155)
EMBREE: Set dst_map 0x14f66e680e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1870e00 for accel 0x55efb55da7d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e680e00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66e680e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 56...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1a6d100 = 0x14f66e87d100 allocated to accel structure 0x55efb55da870
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e87d100 to 0xcc863700
RTV: Building BLAS into 0x55efb55da870
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (4, 1, -2)	origin: (-14.647772, 11.266913, -13.569875)
Children:
	0x55efb55cfbe8: (103, 0, 0), (152, 157, 177)
	0x55efb55eaca8: (151, 0, 0), (195, 157, 177)
	0x55efb5601660: (0, 0, 0), (31, 157, 177)
	0x55efb5610700: (30, 0, 0), (55, 157, 177)
	0x55efb561f828: (84, 0, 0), (104, 157, 177)
	0x55efb562c758: (54, 0, 0), (85, 157, 177)
EMBREE: Set dst_map 0x14f66e87d100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1a6d100 for accel 0x55efb55da870
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e87d100
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66e87d140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 57...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1b65200 = 0x14f66e975200 allocated to accel structure 0x55efb55da910
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e975200 to 0xcc95b800
RTV: Building BLAS into 0x55efb55da910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dafc0
Compressed Node: i	exp: (-1, 2, -2)	origin: (0.264613, 11.384340, 10.979573)
Children:
	0x55efb55db028: (0, 137, 0), (71, 185, 140)
	0x55efb55c61f0: (56, 126, 25), (105, 187, 127)
	0x55efb55d0e70: (103, 133, 24), (187, 161, 165)
	0x55efb55d2300: (64, 103, 41), (103, 127, 118)
	0x55efb55d36c0: (81, 0, 43), (120, 23, 114)
	0x55efb55d3e50: (82, 22, 69), (104, 104, 89)
EMBREE: Set dst_map 0x14f66e975200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1b65200 for accel 0x55efb55da910
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e975200
EMBREE: Pack root 0x55efb55dafc0 to root_map 0x14f66e975240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 58...
RTV: Creating acceleration struction of size 0xc1300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xc1300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1b75500 = 0x14f66e985500 allocated to accel structure 0x55efb55da9b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66e985500 to 0xcc96bb00
RTV: Building BLAS into 0x55efb55da9b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 6180 triangles added; total: 6180
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (0, 0, 6)	origin: (13.252769, 10.962109, -44.660690)
Children:
	0x55efb55c41a8: (0, 0, 63), (240, 242, 86)
	0x55efb55e03c0: (0, 0, 42), (240, 242, 70)
	0x55efb55ed858: (98, 0, 0), (240, 139, 43)
	0x55efb55fa298: (98, 0, 85), (240, 139, 128)
	0x55efb5606be0: (0, 112, 0), (144, 242, 43)
	0x55efb56124b0: (0, 112, 85), (144, 242, 128)
EMBREE: Set dst_map 0x14f66e985500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1b75500 for accel 0x55efb55da9b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66e985500
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66e985540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 59...
RTV: Creating acceleration struction of size 0x10ce00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10ce00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1c36800 = 0x14f66ea46800 allocated to accel structure 0x55efb55daa50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ea46800 to 0xcca2ce00
RTV: Building BLAS into 0x55efb55daa50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8601 triangles added; total: 8601
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (1, 3, -1)	origin: (1.421457, 10.135881, -12.350501)
Children:
	0x55efb55cfbe8: (40, 0, 0), (177, 44, 88)
	0x55efb55ed978: (0, 53, 0), (40, 128, 124)
	0x55efb56085b0: (23, 40, 6), (104, 56, 81)
	0x55efb561fbe8: (34, 52, 0), (115, 69, 164)
	0x55efb562fc90: (33, 111, 0), (94, 133, 171)
	0x55efb563a4d0: (33, 60, 0), (116, 113, 171)
EMBREE: Set dst_map 0x14f66ea46800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1c36800 for accel 0x55efb55daa50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ea46800
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66ea46840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 60...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1d43600 = 0x14f66eb53600 allocated to accel structure 0x55efb55daaf0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66eb53600 to 0xccb39c00
RTV: Building BLAS into 0x55efb55daaf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55db480
Compressed Node: i	exp: (0, 1, 3)	origin: (3.447297, 7.570610, 7.736798)
Children:
	0x55efb55db4e8: (0, 0, 136), (84, 139, 159)
	0x55efb55c5380: (105, 0, 0), (195, 138, 24)
	0x55efb55c6878: (46, 0, 79), (133, 182, 111)
	0x55efb55d0530: (70, 0, 50), (152, 182, 81)
	0x55efb55d1150: (87, 0, 22), (171, 164, 54)
	0x55efb55d1a50: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x14f66eb53600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1d43600 for accel 0x55efb55daaf0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66eb53600
EMBREE: Pack root 0x55efb55db480 to root_map 0x14f66eb53640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 61...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1d4eb00 = 0x14f66eb5eb00 allocated to accel structure 0x55efb55dab90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66eb5eb00 to 0xccb45100
RTV: Building BLAS into 0x55efb55dab90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55db480
Compressed Node: i	exp: (-1, -2, -2)	origin: (-7.220401, 2.408471, -8.044994)
Children:
	0x55efb55db4e8: (116, 0, 0), (181, 94, 156)
	0x55efb55c6310: (53, 0, 0), (117, 45, 156)
	0x55efb55d0e40: (129, 93, 36), (234, 165, 119)
	0x55efb55d2548: (57, 93, 36), (134, 154, 119)
	0x55efb55d3e40: (66, 42, 42), (117, 94, 113)
	0x55efb55d4b98: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x14f66eb5eb00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1d4eb00 for accel 0x55efb55dab90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66eb5eb00
EMBREE: Pack root 0x55efb55db480 to root_map 0x14f66eb5eb40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 62...
RTV: Creating acceleration struction of size 0x49e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x49e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1d60c00 = 0x14f66eb70c00 allocated to accel structure 0x55efb55dac30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66eb70c00 to 0xccb57200
RTV: Building BLAS into 0x55efb55dac30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2362 triangles added; total: 2362
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (1, 2, 1)	origin: (19.477793, 6.357833, -21.624523)
Children:
	0x55efb55c41a8: (0, 180, 0), (110, 221, 139)
	0x55efb55d8d88: (64, 99, 20), (109, 121, 109)
	0x55efb55e4190: (75, 117, 17), (113, 192, 109)
	0x55efb55e8e38: (11, 0, 4), (129, 96, 136)
	0x55efb55ec440: (1, 75, 16), (113, 192, 137)
	0x55efb55ed2c0: (22, 75, 1), (106, 192, 28)
EMBREE: Set dst_map 0x14f66eb70c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1d60c00 for accel 0x55efb55dac30
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66eb70c00
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66eb70c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 63...
RTV: Creating acceleration struction of size 0x4c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1daaa00 = 0x14f66ebbaa00 allocated to accel structure 0x55efb55dacd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ebbaa00 to 0xccba1000
RTV: Building BLAS into 0x55efb55dacd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 150 triangles added; total: 150
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55db480
Compressed Node: i	exp: (0, 0, 3)	origin: (3.784298, 12.444323, 8.060608)
Children:
	0x55efb55db4e8: (0, 0, 118), (75, 80, 138)
	0x55efb55c4600: (90, 3, 0), (167, 83, 21)
	0x55efb55c4d70: (41, 62, 69), (116, 177, 96)
	0x55efb55c5400: (62, 63, 44), (141, 177, 70)
	0x55efb55c58c0: (23, 0, 93), (97, 138, 120)
	0x55efb55c5b78: (75, 3, 19), (148, 139, 47)
EMBREE: Set dst_map 0x14f66ebbaa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1daaa00 for accel 0x55efb55dacd0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ebbaa00
EMBREE: Pack root 0x55efb55db480 to root_map 0x14f66ebbaa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 64...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1daf600 = 0x14f66ebbf600 allocated to accel structure 0x55efb55dad70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ebbf600 to 0xccba5c00
RTV: Building BLAS into 0x55efb55dad70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55db480
Compressed Node: i	exp: (0, 2, -1)	origin: (5.045875, 7.966352, 11.716251)
Children:
	0x55efb55db4e8: (13, 3, 41), (72, 80, 91)
	0x55efb55c5d88: (44, 119, 37), (98, 169, 116)
	0x55efb55d0e50: (103, 52, 23), (185, 107, 162)
	0x55efb55d20f0: (0, 91, 0), (104, 98, 138)
	0x55efb55d2e40: (57, 42, 31), (104, 120, 124)
	0x55efb55d37d8: (63, 0, 40), (101, 95, 115)
EMBREE: Set dst_map 0x14f66ebbf600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1daf600 for accel 0x55efb55dad70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ebbf600
EMBREE: Pack root 0x55efb55db480 to root_map 0x14f66ebbf640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 65...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1dbf900 = 0x14f66ebcf900 allocated to accel structure 0x55efb55dae10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ebcf900 to 0xccbb5f00
RTV: Building BLAS into 0x55efb55dae10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (0, -1, -1)	origin: (-1.112061, 11.539174, 8.637441)
Children:
	0x55efb55c41a8: (133, 0, 29), (227, 217, 186)
	0x55efb55de298: (0, 13, 0), (41, 229, 161)
	0x55efb55e7ea8: (34, 105, 73), (174, 229, 144)
	0x55efb55e8c78: (31, 73, 75), (183, 124, 155)
	0x55efb55e91b0: (31, 0, 0), (202, 87, 155)
	0x55efb55e95d8: (36, 73, 3), (197, 223, 89)
EMBREE: Set dst_map 0x14f66ebcf900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1dbf900 for accel 0x55efb55dae10
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ebcf900
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66ebcf940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 66...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1e01100 = 0x14f66ec11100 allocated to accel structure 0x55efb55daeb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ec11100 to 0xccbf7700
RTV: Building BLAS into 0x55efb55daeb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (-1, -2, -2)	origin: (-19.422804, 1.852425, 31.847788)
Children:
	0x55efb55c41a8: (116, 0, 0), (181, 94, 156)
	0x55efb55c67f8: (53, 0, 0), (117, 45, 156)
	0x55efb55d13c0: (129, 93, 36), (234, 165, 119)
	0x55efb55d2ac8: (57, 93, 36), (134, 154, 119)
	0x55efb55d4480: (66, 42, 42), (117, 94, 113)
	0x55efb55d5100: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x14f66ec11100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1e01100 for accel 0x55efb55daeb0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ec11100
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66ec11140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 67...
RTV: Creating acceleration struction of size 0x5be00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5be00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1e13200 = 0x14f66ec23200 allocated to accel structure 0x55efb55daf50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ec23200 to 0xccc09800
RTV: Building BLAS into 0x55efb55daf50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2938 triangles added; total: 2938
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (1, 2, 1)	origin: (4.908996, 6.631266, -37.091202)
Children:
	0x55efb55c41a8: (118, 76, 6), (173, 164, 144)
	0x55efb55ddc28: (115, 0, 0), (173, 77, 150)
	0x55efb55e82f8: (0, 0, 88), (119, 77, 150)
	0x55efb55ecde8: (0, 119, 6), (119, 164, 141)
	0x55efb55f0b80: (0, 76, 6), (119, 120, 141)
	0x55efb55f4118: (0, 0, 6), (119, 77, 89)
EMBREE: Set dst_map 0x14f66ec23200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1e13200 for accel 0x55efb55daf50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ec23200
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66ec23240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 68...
RTV: Creating acceleration struction of size 0xea100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xea100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1e6f000 = 0x14f66ec7f000 allocated to accel structure 0x55efb55db950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ec7f000 to 0xccc65600
RTV: Building BLAS into 0x55efb55db950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7488 triangles added; total: 7488
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (-1, 2, 1)	origin: (-9.263616, 3.989027, 9.825960)
Children:
	0x55efb55cfbe8: (0, 98, 180), (230, 132, 232)
	0x55efb5603f68: (88, 49, 194), (207, 104, 227)
	0x55efb561cb58: (5, 76, 174), (105, 105, 209)
	0x55efb5627100: (84, 35, 107), (180, 95, 177)
	0x55efb562cc10: (103, 0, 0), (211, 15, 60)
	0x55efb562f6d0: (171, 13, 58), (212, 37, 110)
EMBREE: Set dst_map 0x14f66ec7f000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1e6f000 for accel 0x55efb55db950
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ec7f000
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66ec7f040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 69...
RTV: Creating acceleration struction of size 0x5be00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5be00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1f59100 = 0x14f66ed69100 allocated to accel structure 0x55efb55db9f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ed69100 to 0xccd4f700
RTV: Building BLAS into 0x55efb55db9f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2938 triangles added; total: 2938
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (1, 2, 1)	origin: (1.706173, 6.631266, -37.091202)
Children:
	0x55efb55c41a8: (118, 76, 6), (173, 164, 144)
	0x55efb55ddc28: (115, 0, 0), (173, 77, 150)
	0x55efb55e8408: (0, 0, 88), (119, 77, 150)
	0x55efb55ecf08: (0, 119, 6), (119, 164, 141)
	0x55efb55f0b18: (0, 76, 6), (119, 120, 141)
	0x55efb55f4118: (0, 0, 6), (119, 77, 89)
EMBREE: Set dst_map 0x14f66ed69100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1f59100 for accel 0x55efb55db9f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ed69100
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66ed69140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 70...
RTV: Creating acceleration struction of size 0x19fd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x1fb4f00 = 0x14f66edc4f00 allocated to accel structure 0x55efb55dba90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66edc4f00 to 0xccdab500
RTV: Building BLAS into 0x55efb55dba90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13303 triangles added; total: 13303
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (4, 3, 3)	origin: (-2.373855, 10.397636, -16.130598)
Children:
	0x55efb55cfbe8: (0, 3, 104), (142, 43, 157)
	0x55efb5603a58: (125, 27, 18), (141, 129, 129)
	0x55efb5624618: (57, 0, 0), (165, 40, 32)
	0x55efb5642be0: (57, 24, 14), (64, 156, 145)
	0x55efb5659b88: (52, 16, 18), (141, 37, 125)
	0x55efb566fa28: (58, 27, 16), (122, 63, 157)
EMBREE: Set dst_map 0x14f66edc4f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x1fb4f00 for accel 0x55efb55dba90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66edc4f00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66edc4f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 71...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2154c00 = 0x14f66ef64c00 allocated to accel structure 0x55efb55daff0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ef64c00 to 0xccf4b200
RTV: Building BLAS into 0x55efb55daff0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (-1, 2, 0)	origin: (-5.868323, 8.804159, -12.773970)
Children:
	0x55efb55c41a8: (20, 0, 57), (149, 89, 224)
	0x55efb55d6b30: (2, 88, 0), (95, 131, 119)
	0x55efb55dcb90: (0, 38, 9), (116, 130, 156)
	0x55efb55df240: (11, 3, 70), (112, 131, 224)
	0x55efb55e1e28: (2, 1, 11), (88, 127, 182)
	0x55efb55e2eb0: (68, 1, 9), (149, 127, 180)
EMBREE: Set dst_map 0x14f66ef64c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2154c00 for accel 0x55efb55daff0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ef64c00
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66ef64c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 72...
RTV: Creating acceleration struction of size 0x7300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2186d00 = 0x14f66ef96d00 allocated to accel structure 0x55efb55db090
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ef96d00 to 0xccf7d300
RTV: Building BLAS into 0x55efb55db090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 228 triangles added; total: 228
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (-2, 1, 0)	origin: (1.840123, 12.003685, -12.052712)
Children:
	0x55efb55c41a8: (1, 183, 198), (187, 202, 231)
	0x55efb55c4db0: (1, 96, 189), (187, 115, 211)
	0x55efb55c59f0: (1, 1, 119), (187, 20, 139)
	0x55efb55c6658: (0, 0, 0), (54, 22, 120)
	0x55efb55cfdc8: (0, 94, 60), (54, 116, 190)
	0x55efb55d0480: (0, 181, 1), (54, 204, 199)
EMBREE: Set dst_map 0x14f66ef96d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2186d00 for accel 0x55efb55db090
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ef96d00
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66ef96d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 73...
RTV: Creating acceleration struction of size 0x3c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x218e000 = 0x14f66ef9e000 allocated to accel structure 0x55efb55db130
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66ef9e000 to 0xccf84600
RTV: Building BLAS into 0x55efb55db130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1924 triangles added; total: 1924
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (2, 1, 0)	origin: (-2.707118, 7.464298, -11.480023)
Children:
	0x55efb55c41a8: (0, 169, 0), (223, 237, 243)
	0x55efb55df2a0: (6, 0, 0), (223, 71, 207)
	0x55efb55e48a0: (0, 40, 0), (45, 237, 215)
	0x55efb55e6338: (173, 40, 0), (223, 223, 215)
	0x55efb55e7c30: (22, 40, 146), (208, 223, 207)
	0x55efb55e8508: (6, 51, 40), (223, 237, 43)
EMBREE: Set dst_map 0x14f66ef9e000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x218e000 for accel 0x55efb55db130
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66ef9e000
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66ef9e040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 74...
RTV: Creating acceleration struction of size 0xf00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x21ca300 = 0x14f66efda300 allocated to accel structure 0x55efb55db1d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66efda300 to 0xccfc0900
RTV: Building BLAS into 0x55efb55db1d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 28 triangles added; total: 28
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (7, 6, 5)	origin: (-39.224510, -12.349403, 24.363781)
Children:
	0x55efb55c41a8: (0, 115, 0), (76, 222, 133)
	0x55efb55c4428: (75, 115, 0), (144, 222, 133)
	0x55efb55c46b0: (75, 0, 0), (144, 144, 133)
	0x55efb55c4748: (75, 0, 0), (76, 116, 133)
	0x55efb55c47c8: (75, 0, 0), (144, 0, 133)
	0x55efb55c4848: (143, 0, 0), (144, 144, 133)
EMBREE: Set dst_map 0x14f66efda300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x21ca300 for accel 0x55efb55db1d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66efda300
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66efda340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 75...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x21cb200 = 0x14f66efdb200 allocated to accel structure 0x55efb55db270
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66efdb200 to 0xccfc1800
RTV: Building BLAS into 0x55efb55db270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4140
Compressed Node: i	exp: (0, 1, 1)	origin: (-4.135934, 10.595240, 7.950121)
Children:
	0x55efb55c41a8: (0, 103, 132), (104, 163, 184)
	0x55efb55de300: (85, 102, 0), (190, 163, 42)
	0x55efb55e9fd0: (25, 0, 149), (122, 148, 190)
	0x55efb55f4b38: (110, 1, 8), (207, 127, 38)
	0x55efb55fe0f8: (24, 95, 13), (132, 142, 161)
	0x55efb55fed28: (104, 2, 23), (193, 29, 173)
EMBREE: Set dst_map 0x14f66efdb200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x21cb200 for accel 0x55efb55db270
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66efdb200
EMBREE: Pack root 0x55efb55c4140 to root_map 0x14f66efdb240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 76...
RTV: Creating acceleration struction of size 0x71700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x71700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x223e500 = 0x14f66f04e500 allocated to accel structure 0x55efb55db310
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f04e500 to 0xcd034b00
RTV: Building BLAS into 0x55efb55db310
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3628 triangles added; total: 3628
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4180
Compressed Node: i	exp: (2, 1, 0)	origin: (2.149565, 2.670417, 11.644086)
Children:
	0x55efb55c41e8: (81, 4, 56), (233, 93, 132)
	0x55efb55de208: (5, 0, 0), (90, 92, 79)
	0x55efb55e8610: (0, 71, 7), (116, 181, 119)
	0x55efb55f0cd8: (90, 71, 65), (225, 171, 167)
	0x55efb55f59a0: (174, 141, 87), (235, 179, 179)
	0x55efb55f8888: (4, 134, 41), (234, 180, 179)
EMBREE: Set dst_map 0x14f66f04e500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x223e500 for accel 0x55efb55db310
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f04e500
EMBREE: Pack root 0x55efb55c4180 to root_map 0x14f66f04e540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 77...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x22afc00 = 0x14f66f0bfc00 allocated to accel structure 0x55efb55db3b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f0bfc00 to 0xcd0a6200
RTV: Building BLAS into 0x55efb55db3b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4640
Compressed Node: i	exp: (0, 2, -1)	origin: (21.349056, 15.365964, 8.574313)
Children:
	0x55efb55c46a8: (0, 0, 24), (50, 180, 149)
	0x55efb55d5ef0: (122, 0, 42), (138, 181, 137)
	0x55efb55df400: (94, 4, 18), (130, 176, 174)
	0x55efb55e1548: (0, 0, 0), (119, 70, 161)
	0x55efb55e3050: (0, 114, 0), (119, 180, 158)
	0x55efb55e4c30: (36, 1, 24), (84, 178, 161)
EMBREE: Set dst_map 0x14f66f0bfc00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x22afc00 for accel 0x55efb55db3b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f0bfc00
EMBREE: Pack root 0x55efb55c4640 to root_map 0x14f66f0bfc40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 78...
RTV: Creating acceleration struction of size 0xf5d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x22e1d00 = 0x14f66f0f1d00 allocated to accel structure 0x55efb55db450
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f0f1d00 to 0xcd0d8300
RTV: Building BLAS into 0x55efb55db450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7864 triangles added; total: 7864
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (3, 4, 2)	origin: (22.490477, 17.035229, 2.839839)
Children:
	0x55efb55cfbe8: (0, 123, 77), (110, 153, 103)
	0x55efb55ed320: (141, 119, 42), (202, 153, 138)
	0x55efb5606798: (80, 0, 0), (155, 30, 181)
	0x55efb5615df8: (107, 22, 66), (152, 126, 115)
	0x55efb56228e8: (101, 111, 65), (145, 155, 116)
	0x55efb562dd38: (47, 0, 0), (88, 23, 181)
EMBREE: Set dst_map 0x14f66f0f1d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x22e1d00 for accel 0x55efb55db450
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f0f1d00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66f0f1d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 79...
RTV: Creating acceleration struction of size 0x1c2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1c2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x23d7a00 = 0x14f66f1e7a00 allocated to accel structure 0x55efb55db4f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f1e7a00 to 0xcd1ce000
RTV: Building BLAS into 0x55efb55db4f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 14400 triangles added; total: 14400
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (5, 3, 0)	origin: (-12.116438, 8.797215, -12.485441)
Children:
	0x55efb55cfbe8: (0, 19, 0), (68, 50, 81)
	0x55efb5615060: (66, 0, 0), (101, 61, 158)
	0x55efb5633808: (143, 94, 68), (175, 149, 80)
	0x55efb56494c0: (131, 70, 67), (200, 99, 80)
	0x55efb565e698: (97, 59, 63), (132, 115, 136)
	0x55efb5672e78: (79, 54, 0), (99, 148, 143)
EMBREE: Set dst_map 0x14f66f1e7a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x23d7a00 for accel 0x55efb55db4f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f1e7a00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66f1e7a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 80...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2599b00 = 0x14f66f3a9b00 allocated to accel structure 0x55efb55db590
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f3a9b00 to 0xcd390100
RTV: Building BLAS into 0x55efb55db590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4640
Compressed Node: i	exp: (0, 1, 1)	origin: (8.178738, 4.236791, 8.695652)
Children:
	0x55efb55c46a8: (0, 0, 127), (105, 155, 206)
	0x55efb55c4ca0: (43, 7, 1), (155, 173, 78)
	0x55efb55c52b0: (87, 135, 128), (130, 160, 235)
	0x55efb55c5780: (0, 0, 16), (85, 63, 251)
	0x55efb55c5bb0: (99, 98, 0), (156, 173, 133)
	0x55efb55c6008: (48, 94, 6), (121, 121, 241)
EMBREE: Set dst_map 0x14f66f3a9b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2599b00 for accel 0x55efb55db590
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f3a9b00
EMBREE: Pack root 0x55efb55c4640 to root_map 0x14f66f3a9b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 81...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x259d400 = 0x14f66f3ad400 allocated to accel structure 0x55efb55db630
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f3ad400 to 0xcd393a00
RTV: Building BLAS into 0x55efb55db630
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4640
Compressed Node: i	exp: (2, 1, -1)	origin: (-3.086398, 4.325600, 11.264421)
Children:
	0x55efb55c46a8: (0, 141, 0), (139, 177, 143)
	0x55efb55c5000: (1, 8, 0), (49, 177, 65)
	0x55efb55c5620: (101, 0, 84), (151, 158, 139)
	0x55efb55c5d40: (76, 33, 80), (80, 125, 90)
	0x55efb55c5fc0: (11, 33, 5), (151, 125, 139)
	0x55efb55c62d8: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x14f66f3ad400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x259d400 for accel 0x55efb55db630
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f3ad400
EMBREE: Pack root 0x55efb55c4640 to root_map 0x14f66f3ad440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 82...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x25a0d00 = 0x14f66f3b0d00 allocated to accel structure 0x55efb55db6d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f3b0d00 to 0xcd397300
RTV: Building BLAS into 0x55efb55db6d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4640
Compressed Node: i	exp: (0, 2, 0)	origin: (14.390169, 11.837451, -12.367093)
Children:
	0x55efb55c46a8: (0, 93, 0), (173, 139, 85)
	0x55efb55d3190: (46, 0, 52), (125, 86, 101)
	0x55efb55d8b00: (57, 0, 0), (112, 139, 85)
	0x55efb55de7a8: (0, 65, 46), (173, 112, 164)
	0x55efb55e0a48: (59, 0, 43), (105, 110, 85)
	0x55efb55e1450: (5, 0, 35), (168, 132, 85)
EMBREE: Set dst_map 0x14f66f3b0d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x25a0d00 for accel 0x55efb55db6d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f3b0d00
EMBREE: Pack root 0x55efb55c4640 to root_map 0x14f66f3b0d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 83...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x25cd400 = 0x14f66f3dd400 allocated to accel structure 0x55efb55db770
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f3dd400 to 0xcd3c3a00
RTV: Building BLAS into 0x55efb55db770
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (4, 1, -2)	origin: (-59.264351, 1.850430, 39.631039)
Children:
	0x55efb55cfbe8: (54, 0, 0), (104, 157, 177)
	0x55efb55eaaa8: (151, 0, 0), (195, 157, 177)
	0x55efb56014f8: (0, 0, 0), (31, 157, 177)
	0x55efb5610680: (30, 0, 0), (55, 157, 177)
	0x55efb561f6a8: (132, 0, 0), (152, 157, 177)
	0x55efb562c5f8: (103, 0, 0), (133, 157, 177)
EMBREE: Set dst_map 0x14f66f3dd400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x25cd400 for accel 0x55efb55db770
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f3dd400
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66f3dd440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 84...
RTV: Creating acceleration struction of size 0x34b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x34b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x26c5500 = 0x14f66f4d5500 allocated to accel structure 0x55efb55db810
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f4d5500 to 0xcd4bbb00
RTV: Building BLAS into 0x55efb55db810
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1684 triangles added; total: 1684
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4680
Compressed Node: i	exp: (2, 3, 1)	origin: (-9.672963, 1.807338, 9.921342)
Children:
	0x55efb55c46e8: (0, 100, 15), (65, 133, 207)
	0x55efb55d70a8: (7, 0, 0), (24, 123, 189)
	0x55efb55dd340: (110, 100, 34), (232, 123, 239)
	0x55efb55e0b00: (23, 104, 20), (215, 127, 128)
	0x55efb55e2298: (14, 107, 108), (209, 133, 222)
	0x55efb55e3ad0: (155, 0, 56), (208, 115, 228)
EMBREE: Set dst_map 0x14f66f4d5500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x26c5500 for accel 0x55efb55db810
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f4d5500
EMBREE: Pack root 0x55efb55c4680 to root_map 0x14f66f4d5540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 85...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x26fa000 = 0x14f66f50a000 allocated to accel structure 0x55efb55db8b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f50a000 to 0xcd4f0600
RTV: Building BLAS into 0x55efb55db8b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4b40
Compressed Node: i	exp: (1, 2, 3)	origin: (-37.716389, -0.699337, 30.470280)
Children:
	0x55efb55c4ba8: (0, 137, 59), (248, 170, 210)
	0x55efb55e5710: (24, 137, 0), (243, 170, 108)
	0x55efb55f4610: (0, 1, 88), (55, 157, 210)
	0x55efb55fa8b8: (17, 13, 0), (77, 149, 109)
	0x55efb55fe090: (28, 14, 107), (245, 143, 206)
	0x55efb5600788: (204, 0, 0), (243, 160, 69)
EMBREE: Set dst_map 0x14f66f50a000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x26fa000 for accel 0x55efb55db8b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f50a000
EMBREE: Pack root 0x55efb55c4b40 to root_map 0x14f66f50a040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 86...
RTV: Creating acceleration struction of size 0x12900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2778600 = 0x14f66f588600 allocated to accel structure 0x55efb55c4130
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f588600 to 0xcd56ec00
RTV: Building BLAS into 0x55efb55c4130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 592 triangles added; total: 592
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4b40
Compressed Node: i	exp: (6, 2, 1)	origin: (-32.833427, -0.816855, -9.926823)
Children:
	0x55efb55c4ba8: (127, 0, 0), (134, 242, 185)
	0x55efb55d3bc0: (0, 191, 42), (131, 208, 142)
	0x55efb55d5c08: (0, 33, 42), (33, 208, 142)
	0x55efb55d6140: (65, 27, 42), (98, 198, 142)
	0x55efb55d6580: (32, 33, 42), (66, 198, 142)
	0x55efb55d6980: (97, 27, 42), (131, 198, 142)
EMBREE: Set dst_map 0x14f66f588600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2778600 for accel 0x55efb55c4130
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f588600
EMBREE: Pack root 0x55efb55c4b40 to root_map 0x14f66f588640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 87...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x278af00 = 0x14f66f59af00 allocated to accel structure 0x55efb55c41d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f59af00 to 0xcd581500
RTV: Building BLAS into 0x55efb55c41d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4b40
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.486534, 4.133213, 7.654080)
Children:
	0x55efb55c4ba8: (0, 16, 0), (119, 136, 108)
	0x55efb55d1368: (118, 0, 99), (225, 90, 196)
	0x55efb55d3c00: (109, 28, 91), (143, 56, 128)
	0x55efb55d4638: (57, 50, 48), (193, 90, 170)
	0x55efb55d4918: (30, 64, 25), (193, 129, 170)
	0x55efb55d49a8: (30, 89, 25), (193, 129, 170)
EMBREE: Set dst_map 0x14f66f59af00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x278af00 for accel 0x55efb55c41d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f59af00
EMBREE: Pack root 0x55efb55c4b40 to root_map 0x14f66f59af40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 88...
RTV: Creating acceleration struction of size 0x13300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x13300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2799a00 = 0x14f66f5a9a00 allocated to accel structure 0x55efb55c4270
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f5a9a00 to 0xcd590000
RTV: Building BLAS into 0x55efb55c4270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 612 triangles added; total: 612
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4b40
Compressed Node: i	exp: (0, 2, -1)	origin: (-1.482858, 5.879318, 11.624033)
Children:
	0x55efb55c4ba8: (0, 47, 0), (97, 89, 163)
	0x55efb55d0ba8: (142, 67, 83), (217, 126, 146)
	0x55efb55d2bb0: (102, 0, 50), (168, 38, 150)
	0x55efb55d45a8: (98, 53, 25), (227, 59, 197)
	0x55efb55d54a8: (99, 37, 42), (157, 97, 158)
	0x55efb55d5ea0: (106, 56, 54), (153, 129, 147)
EMBREE: Set dst_map 0x14f66f5a9a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2799a00 for accel 0x55efb55c4270
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f5a9a00
EMBREE: Pack root 0x55efb55c4b40 to root_map 0x14f66f5a9a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 89...
RTV: Creating acceleration struction of size 0x19ca00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19ca00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x27acd00 = 0x14f66f5bcd00 allocated to accel structure 0x55efb55c4310
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f5bcd00 to 0xcd5a3300
RTV: Building BLAS into 0x55efb55c4310
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13202 triangles added; total: 13202
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (1, 1, 1)	origin: (4.223882, 9.111272, 11.143844)
Children:
	0x55efb55cfbe8: (0, 133, 13), (79, 240, 127)
	0x55efb55fd908: (71, 134, 20), (159, 241, 136)
	0x55efb5626b30: (84, 70, 9), (153, 142, 145)
	0x55efb563cf70: (3, 68, 6), (91, 144, 135)
	0x55efb5652a38: (69, 3, 9), (149, 81, 122)
	0x55efb5666688: (5, 0, 0), (77, 81, 122)
EMBREE: Set dst_map 0x14f66f5bcd00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x27acd00 for accel 0x55efb55c4310
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f5bcd00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66f5bcd40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 90...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x2949700 = 0x14f66f759700 allocated to accel structure 0x55efb55c43b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f759700 to 0xcd73fd00
RTV: Building BLAS into 0x55efb55c43b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c4b40
Compressed Node: i	exp: (2, -2, -1)	origin: (9.318943, 15.344007, -12.966626)
Children:
	0x55efb55c4ba8: (0, 1, 125), (131, 163, 189)
	0x55efb55d6598: (0, 24, 0), (132, 174, 17)
	0x55efb55dffc8: (0, 0, 16), (51, 198, 133)
	0x55efb55e1ac0: (83, 0, 16), (131, 198, 133)
	0x55efb55e3560: (36, 0, 52), (97, 198, 189)
	0x55efb55e4c98: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x14f66f759700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x2949700 for accel 0x55efb55c43b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f759700
EMBREE: Pack root 0x55efb55c4b40 to root_map 0x14f66f759740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 91...
RTV: Creating acceleration struction of size 0x756300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x756300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x297b800 = 0x14f66f78b800 allocated to accel structure 0x55efb55c4450
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66f78b800 to 0xcd771e00
RTV: Building BLAS into 0x55efb55c4450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 60100 triangles added; total: 60100
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (0, 2, 1)	origin: (-8.227261, 2.309378, 5.877237)
Children:
	0x55efb55dbbe8: (0, 47, 90), (124, 95, 161)
	0x55efb569ee58: (8, 117, 0), (171, 132, 124)
	0x55efb5728790: (7, 93, 84), (173, 120, 153)
	0x55efb5794198: (7, 96, 15), (207, 120, 92)
	0x55efb57fe668: (10, 0, 93), (83, 49, 176)
	0x55efb5867128: (60, 130, 0), (168, 150, 88)
EMBREE: Set dst_map 0x14f66f78b800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x297b800 for accel 0x55efb55c4450
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66f78b800
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f66f78b840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 92...
RTV: Creating acceleration struction of size 0x135100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x135100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x30d1b00 = 0x14f66fee1b00 allocated to accel structure 0x55efb55c44f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f66fee1b00 to 0xcdec8100
RTV: Building BLAS into 0x55efb55c44f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 9888 triangles added; total: 9888
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (5, 4, 2)	origin: (-10.921741, 1.872068, 9.483254)
Children:
	0x55efb55cfbe8: (0, 39, 63), (19, 88, 81)
	0x55efb5606e40: (127, 56, 122), (152, 145, 254)
	0x55efb561e028: (30, 108, 89), (77, 161, 125)
	0x55efb5634aa0: (75, 144, 106), (157, 166, 142)
	0x55efb564a498: (13, 80, 0), (62, 115, 94)
	0x55efb564f318: (13, 0, 75), (79, 101, 183)
EMBREE: Set dst_map 0x14f66fee1b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x30d1b00 for accel 0x55efb55c44f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f66fee1b00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f66fee1b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 93...
RTV: Creating acceleration struction of size 0x11b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3206c00 = 0x14f670016c00 allocated to accel structure 0x55efb55c4590
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670016c00 to 0xcdffd200
RTV: Building BLAS into 0x55efb55c4590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 564 triangles added; total: 564
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5040
Compressed Node: i	exp: (4, 3, 3)	origin: (15.672951, 6.165153, -34.006649)
Children:
	0x55efb55c50a8: (0, 125, 0), (156, 160, 185)
	0x55efb55d4528: (8, 0, 10), (34, 126, 180)
	0x55efb55d5518: (29, 0, 171), (150, 126, 180)
	0x55efb55d6120: (145, 0, 10), (150, 126, 180)
	0x55efb55d6248: (8, 0, 10), (150, 126, 19)
	0x55efb55d62f0: (12, 0, 18), (146, 0, 172)
EMBREE: Set dst_map 0x14f670016c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3206c00 for accel 0x55efb55c4590
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670016c00
EMBREE: Pack root 0x55efb55c5040 to root_map 0x14f670016c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 94...
RTV: Creating acceleration struction of size 0x11b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3218700 = 0x14f670028700 allocated to accel structure 0x55efb55c4630
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670028700 to 0xce00ed00
RTV: Building BLAS into 0x55efb55c4630
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 564 triangles added; total: 564
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5040
Compressed Node: i	exp: (3, 2, 3)	origin: (-0.436692, 6.434074, -38.176567)
Children:
	0x55efb55c50a8: (0, 193, 0), (241, 247, 143)
	0x55efb55d45f0: (189, 0, 8), (228, 194, 139)
	0x55efb55d54b0: (10, 0, 132), (196, 194, 139)
	0x55efb55d6040: (10, 0, 8), (222, 50, 139)
	0x55efb55d6200: (10, 49, 8), (11, 194, 139)
	0x55efb55d6280: (10, 49, 8), (228, 194, 15)
EMBREE: Set dst_map 0x14f670028700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3218700 for accel 0x55efb55c4630
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670028700
EMBREE: Pack root 0x55efb55c5040 to root_map 0x14f670028740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 95...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x322a200 = 0x14f67003a200 allocated to accel structure 0x55efb55c46d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67003a200 to 0xce020800
RTV: Building BLAS into 0x55efb55c46d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5040
Compressed Node: i	exp: (-1, 3, -2)	origin: (-9.313361, 2.398311, 10.580568)
Children:
	0x55efb55c50a8: (0, 106, 0), (68, 143, 135)
	0x55efb55d09f0: (54, 97, 24), (102, 145, 123)
	0x55efb55d2a48: (99, 103, 23), (181, 124, 159)
	0x55efb55d3c58: (69, 79, 52), (94, 98, 101)
	0x55efb55d4b80: (80, 0, 39), (119, 18, 108)
	0x55efb55d5408: (80, 17, 64), (102, 80, 85)
EMBREE: Set dst_map 0x14f67003a200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x322a200 for accel 0x55efb55c46d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67003a200
EMBREE: Pack root 0x55efb55c5040 to root_map 0x14f67003a240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 96...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x323a500 = 0x14f67004a500 allocated to accel structure 0x55efb55c4770
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67004a500 to 0xce030b00
RTV: Building BLAS into 0x55efb55c4770
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5040
Compressed Node: i	exp: (-1, 2, 0)	origin: (18.986553, 11.166733, -12.634105)
Children:
	0x55efb55c50a8: (17, 0, 72), (149, 132, 202)
	0x55efb55d8d30: (2, 94, 0), (95, 132, 108)
	0x55efb55de890: (0, 38, 9), (116, 131, 144)
	0x55efb55e11c8: (20, 1, 50), (140, 86, 140)
	0x55efb55e2fc0: (2, 1, 11), (107, 128, 160)
	0x55efb55e4160: (68, 1, 9), (149, 129, 158)
EMBREE: Set dst_map 0x14f67004a500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x323a500 for accel 0x55efb55c4770
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67004a500
EMBREE: Pack root 0x55efb55c5040 to root_map 0x14f67004a540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 97...
RTV: Creating acceleration struction of size 0x1eb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1eb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x326c600 = 0x14f67007c600 allocated to accel structure 0x55efb55c4810
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67007c600 to 0xce062c00
RTV: Building BLAS into 0x55efb55c4810
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 980 triangles added; total: 980
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5040
Compressed Node: i	exp: (2, 2, 1)	origin: (-2.781190, 12.822519, -12.525083)
Children:
	0x55efb55c50a8: (16, 126, 0), (93, 166, 134)
	0x55efb55d54e0: (14, 102, 0), (76, 132, 126)
	0x55efb55d85c0: (31, 0, 29), (62, 109, 125)
	0x55efb55d9248: (77, 135, 43), (204, 156, 134)
	0x55efb55dc018: (0, 0, 0), (32, 119, 88)
	0x55efb55dce90: (65, 153, 0), (204, 166, 61)
EMBREE: Set dst_map 0x14f67007c600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x326c600 for accel 0x55efb55c4810
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67007c600
EMBREE: Pack root 0x55efb55c5040 to root_map 0x14f67007c640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 98...
RTV: Creating acceleration struction of size 0x10700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x328b100 = 0x14f67009b100 allocated to accel structure 0x55efb55c48b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67009b100 to 0xce081700
RTV: Building BLAS into 0x55efb55c48b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 524 triangles added; total: 524
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5040
Compressed Node: i	exp: (3, 1, 2)	origin: (9.135196, 14.397640, -13.164979)
Children:
	0x55efb55c50a8: (0, 116, 0), (219, 146, 18)
	0x55efb55d06c8: (103, 0, 99), (219, 81, 134)
	0x55efb55d27c8: (0, 0, 99), (104, 81, 134)
	0x55efb55d4900: (124, 58, 12), (219, 139, 104)
	0x55efb55d4eb0: (0, 59, 12), (73, 139, 104)
	0x55efb55d5440: (72, 59, 12), (125, 139, 104)
EMBREE: Set dst_map 0x14f67009b100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x328b100 for accel 0x55efb55c48b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67009b100
EMBREE: Pack root 0x55efb55c5040 to root_map 0x14f67009b140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 99...
RTV: Creating acceleration struction of size 0x1c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x329b800 = 0x14f6700ab800 allocated to accel structure 0x55efb55c4950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6700ab800 to 0xce091e00
RTV: Building BLAS into 0x55efb55c4950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 912 triangles added; total: 912
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5040
Compressed Node: i	exp: (1, 4, 1)	origin: (-2.933839, 11.743355, -17.588285)
Children:
	0x55efb55c50a8: (13, 37, 26), (129, 69, 143)
	0x55efb55d3880: (0, 109, 0), (145, 138, 155)
	0x55efb55d52d8: (14, 67, 25), (129, 80, 140)
	0x55efb55d6f08: (1, 15, 23), (128, 38, 139)
	0x55efb55d88a8: (0, 0, 9), (145, 21, 155)
	0x55efb55dbc28: (1, 79, 22), (130, 114, 141)
EMBREE: Set dst_map 0x14f6700ab800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x329b800 for accel 0x55efb55c4950
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6700ab800
EMBREE: Pack root 0x55efb55c5040 to root_map 0x14f6700ab840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 100...
RTV: Creating acceleration struction of size 0x2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x32b8100 = 0x14f6700c8100 allocated to accel structure 0x55efb55c49f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6700c8100 to 0xce0ae700
RTV: Building BLAS into 0x55efb55c49f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 64 triangles added; total: 64
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5080
Compressed Node: i	exp: (-2, 1, 0)	origin: (-1.189075, 6.400959, 11.226490)
Children:
	0x55efb55c50e8: (60, 166, 0), (146, 195, 91)
	0x55efb55c5700: (0, 0, 191), (66, 198, 235)
	0x55efb55c5d38: (15, 108, 58), (122, 176, 198)
	0x55efb55c5e58: (15, 108, 57), (74, 176, 197)
	0x55efb55c5ed8: (15, 141, 89), (108, 176, 196)
	0x55efb55c5f58: (15, 108, 89), (108, 176, 198)
EMBREE: Set dst_map 0x14f6700c8100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x32b8100 for accel 0x55efb55c49f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6700c8100
EMBREE: Pack root 0x55efb55c5080 to root_map 0x14f6700c8140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 101...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x32ba200 = 0x14f6700ca200 allocated to accel structure 0x55efb55c4a90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6700ca200 to 0xce0b0800
RTV: Building BLAS into 0x55efb55c4a90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f6700ca200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x32ba200 for accel 0x55efb55c4a90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6700ca200
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f6700ca240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 102...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x32ba400 = 0x14f6700ca400 allocated to accel structure 0x55efb55c4b30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6700ca400 to 0xce0b0a00
RTV: Building BLAS into 0x55efb55c4b30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5540
Compressed Node: i	exp: (2, -2, -1)	origin: (-0.990029, 7.341716, 12.417068)
Children:
	0x55efb55c55a8: (0, 0, 0), (89, 204, 83)
	0x55efb55d0a90: (122, 41, 102), (233, 190, 204)
	0x55efb55d34c0: (79, 51, 66), (141, 107, 127)
	0x55efb55d4c60: (60, 93, 50), (200, 128, 176)
	0x55efb55d4fd8: (30, 98, 26), (200, 201, 176)
	0x55efb55d5080: (59, 93, 50), (200, 190, 176)
EMBREE: Set dst_map 0x14f6700ca400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x32ba400 for accel 0x55efb55c4b30
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6700ca400
EMBREE: Pack root 0x55efb55c5540 to root_map 0x14f6700ca440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 103...
RTV: Creating acceleration struction of size 0x11b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x32c8f00 = 0x14f6700d8f00 allocated to accel structure 0x55efb55c4bd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6700d8f00 to 0xce0bf500
RTV: Building BLAS into 0x55efb55c4bd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 564 triangles added; total: 564
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5540
Compressed Node: i	exp: (3, 3, 4)	origin: (54.247669, 8.040722, -14.172159)
Children:
	0x55efb55c55a8: (0, 125, 0), (185, 160, 156)
	0x55efb55d49d8: (4, 0, 8), (175, 126, 34)
	0x55efb55d5a30: (4, 0, 29), (13, 126, 150)
	0x55efb55d6648: (4, 0, 145), (175, 126, 150)
	0x55efb55d6770: (166, 0, 8), (175, 126, 150)
	0x55efb55d6818: (12, 0, 12), (167, 0, 146)
EMBREE: Set dst_map 0x14f6700d8f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x32c8f00 for accel 0x55efb55c4bd0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6700d8f00
EMBREE: Pack root 0x55efb55c5540 to root_map 0x14f6700d8f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 104...
RTV: Creating acceleration struction of size 0x2dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x32daa00 = 0x14f6700eaa00 allocated to accel structure 0x55efb55c4c70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6700eaa00 to 0xce0d1000
RTV: Building BLAS into 0x55efb55c4c70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1464 triangles added; total: 1464
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5540
Compressed Node: i	exp: (-1, 0, -1)	origin: (-3.531724, 7.310989, 11.716481)
Children:
	0x55efb55c55a8: (15, 62, 2), (191, 99, 187)
	0x55efb55d3bb0: (84, 0, 0), (198, 67, 192)
	0x55efb55d8ff0: (15, 0, 1), (97, 68, 192)
	0x55efb55df948: (0, 97, 30), (79, 130, 166)
	0x55efb55e2b40: (47, 97, 19), (179, 130, 172)
	0x55efb55e3ea8: (97, 79, 90), (114, 186, 98)
EMBREE: Set dst_map 0x14f6700eaa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x32daa00 for accel 0x55efb55c4c70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6700eaa00
EMBREE: Pack root 0x55efb55c5540 to root_map 0x14f6700eaa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 105...
RTV: Creating acceleration struction of size 0x51e000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x51e000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3308700 = 0x14f670118700 allocated to accel structure 0x55efb55c4d10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670118700 to 0xce0fed00
RTV: Building BLAS into 0x55efb55c4d10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 41917 triangles added; total: 41917
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 2, 0)	origin: (7.207290, 6.589542, -36.233871)
Children:
	0x55efb55dbbe8: (0, 100, 3), (117, 141, 206)
	0x55efb5692910: (2, 138, 8), (107, 189, 196)
	0x55efb5712e50: (11, 77, 21), (108, 103, 228)
	0x55efb5759d28: (20, 53, 66), (111, 81, 198)
	0x55efb578e118: (37, 0, 0), (74, 56, 161)
	0x55efb57bdc38: (81, 2, 102), (143, 56, 211)
EMBREE: Set dst_map 0x14f670118700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3308700 for accel 0x55efb55c4d10
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670118700
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f670118740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 106...
RTV: Creating acceleration struction of size 0x17d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3826700 = 0x14f670636700 allocated to accel structure 0x55efb55c4db0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670636700 to 0xce61cd00
RTV: Building BLAS into 0x55efb55c4db0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 760 triangles added; total: 760
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5540
Compressed Node: i	exp: (2, 2, 2)	origin: (-3.374784, 0.992830, 9.606323)
Children:
	0x55efb55c55a8: (0, 157, 0), (130, 193, 120)
	0x55efb55d25d0: (223, 165, 24), (248, 209, 135)
	0x55efb55d4a68: (45, 0, 5), (63, 172, 113)
	0x55efb55d6248: (229, 0, 30), (248, 192, 132)
	0x55efb55d7b80: (23, 161, 59), (237, 198, 135)
	0x55efb55d8928: (28, 165, 4), (242, 209, 81)
EMBREE: Set dst_map 0x14f670636700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3826700 for accel 0x55efb55c4db0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670636700
EMBREE: Pack root 0x55efb55c5540 to root_map 0x14f670636740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 107...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x383e400 = 0x14f67064e400 allocated to accel structure 0x55efb55c4e50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67064e400 to 0xce634a00
RTV: Building BLAS into 0x55efb55c4e50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5540
Compressed Node: i	exp: (-1, -2, -2)	origin: (-19.312681, 1.869383, 30.662657)
Children:
	0x55efb55c55a8: (116, 0, 0), (181, 94, 156)
	0x55efb55d0b78: (53, 0, 0), (117, 45, 156)
	0x55efb55d2600: (129, 93, 36), (234, 165, 119)
	0x55efb55d3d08: (57, 93, 36), (134, 154, 119)
	0x55efb55d56c0: (66, 42, 42), (117, 94, 113)
	0x55efb55d6340: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x14f67064e400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x383e400 for accel 0x55efb55c4e50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67064e400
EMBREE: Pack root 0x55efb55c5540 to root_map 0x14f67064e440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 108...
RTV: Creating acceleration struction of size 0x215900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x215900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3850500 = 0x14f670660500 allocated to accel structure 0x55efb55c4ef0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670660500 to 0xce646b00
RTV: Building BLAS into 0x55efb55c4ef0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 17072 triangles added; total: 17072
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (1, 1, 1)	origin: (0.883116, 8.461058, 11.599824)
Children:
	0x55efb55cfbe8: (38, 100, 18), (129, 252, 135)
	0x55efb5612730: (0, 0, 0), (117, 109, 114)
	0x55efb563b3d0: (120, 176, 49), (220, 253, 145)
	0x55efb565dc38: (121, 101, 30), (216, 183, 143)
	0x55efb5679fc0: (112, 3, 7), (240, 110, 67)
	0x55efb5694c68: (109, 4, 61), (240, 108, 127)
EMBREE: Set dst_map 0x14f670660500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3850500 for accel 0x55efb55c4ef0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670660500
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f670660540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 109...
RTV: Creating acceleration struction of size 0x51d900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x51d900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3a65e00 = 0x14f670875e00 allocated to accel structure 0x55efb55c4f90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670875e00 to 0xce85c400
RTV: Building BLAS into 0x55efb55c4f90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 41904 triangles added; total: 41904
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (0, 2, 0)	origin: (20.820814, 6.448864, -26.455326)
Children:
	0x55efb55dbbe8: (71, 84, 0), (224, 123, 214)
	0x55efb5695bc8: (46, 45, 3), (198, 87, 198)
	0x55efb5704628: (82, 120, 20), (237, 144, 220)
	0x55efb575c9f0: (83, 141, 45), (202, 169, 185)
	0x55efb57932c0: (119, 0, 74), (246, 47, 167)
	0x55efb57c01c8: (0, 2, 110), (115, 47, 191)
EMBREE: Set dst_map 0x14f670875e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3a65e00 for accel 0x55efb55c4f90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670875e00
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f670875e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 110...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3f83700 = 0x14f670d93700 allocated to accel structure 0x55efb55c5030
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670d93700 to 0xced79d00
RTV: Building BLAS into 0x55efb55c5030
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5a40
Compressed Node: i	exp: (-1, 1, -1)	origin: (9.612096, 11.780621, -12.389039)
Children:
	0x55efb55c5aa8: (0, 1, 166), (118, 252, 252)
	0x55efb55d7950: (19, 0, 0), (128, 253, 24)
	0x55efb55e1318: (0, 1, 21), (146, 93, 177)
	0x55efb55e3168: (0, 155, 21), (146, 252, 177)
	0x55efb55e5000: (0, 66, 69), (144, 182, 252)
	0x55efb55e6718: (0, 4, 106), (119, 251, 177)
EMBREE: Set dst_map 0x14f670d93700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3f83700 for accel 0x55efb55c5030
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670d93700
EMBREE: Pack root 0x55efb55c5a40 to root_map 0x14f670d93740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 111...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3fb5800 = 0x14f670dc5800 allocated to accel structure 0x55efb55c50d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670dc5800 to 0xcedabe00
RTV: Building BLAS into 0x55efb55c50d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5a40
Compressed Node: i	exp: (-2, -1, -2)	origin: (5.791840, 9.204057, -36.732346)
Children:
	0x55efb55c5aa8: (4, 79, 14), (230, 136, 130)
	0x55efb55c5c40: (0, 72, 103), (234, 121, 247)
	0x55efb55c5dd8: (90, 0, 0), (214, 97, 164)
	0x55efb55c5fc0: (11, 0, 0), (112, 97, 169)
	0x55efb55c6070: (11, 0, 103), (126, 90, 215)
	0x55efb55c6100: (111, 0, 93), (213, 80, 215)
EMBREE: Set dst_map 0x14f670dc5800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3fb5800 for accel 0x55efb55c50d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670dc5800
EMBREE: Pack root 0x55efb55c5a40 to root_map 0x14f670dc5840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 112...
RTV: Creating acceleration struction of size 0x10ce00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10ce00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x3fb6a00 = 0x14f670dc6a00 allocated to accel structure 0x55efb55c5170
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670dc6a00 to 0xcedad000
RTV: Building BLAS into 0x55efb55c5170
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8601 triangles added; total: 8601
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (1, 2, -1)	origin: (-2.881139, 6.236017, -11.539380)
Children:
	0x55efb55cfbe8: (31, 0, 0), (138, 69, 69)
	0x55efb55ed978: (0, 83, 0), (31, 200, 96)
	0x55efb56085b0: (18, 63, 4), (81, 88, 63)
	0x55efb561fbe8: (27, 81, 0), (89, 107, 128)
	0x55efb562fcf8: (26, 172, 0), (73, 206, 133)
	0x55efb563a550: (25, 93, 0), (91, 176, 133)
EMBREE: Set dst_map 0x14f670dc6a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x3fb6a00 for accel 0x55efb55c5170
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670dc6a00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f670dc6a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 113...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x40c3800 = 0x14f670ed3800 allocated to accel structure 0x55efb55c5210
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670ed3800 to 0xceeb9e00
RTV: Building BLAS into 0x55efb55c5210
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (4, 1, -2)	origin: (-37.519714, 1.323576, 41.951893)
Children:
	0x55efb55cfbe8: (43, 0, 0), (92, 157, 177)
	0x55efb55eab28: (0, 0, 0), (44, 157, 177)
	0x55efb56014f8: (163, 0, 0), (195, 157, 177)
	0x55efb5610580: (139, 0, 0), (164, 157, 177)
	0x55efb561f728: (91, 0, 0), (110, 157, 177)
	0x55efb562c6a8: (109, 0, 0), (140, 157, 177)
EMBREE: Set dst_map 0x14f670ed3800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x40c3800 for accel 0x55efb55c5210
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670ed3800
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f670ed3840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 114...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x41bb900 = 0x14f670fcb900 allocated to accel structure 0x55efb55c52b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f670fcb900 to 0xcefb1f00
RTV: Building BLAS into 0x55efb55c52b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (1, -1, 1)	origin: (-4.753209, 10.206945, 7.938685)
Children:
	0x55efb55cfbe8: (90, 0, 129), (161, 213, 169)
	0x55efb55e0a18: (0, 65, 114), (123, 174, 161)
	0x55efb55eb2c8: (142, 0, 28), (185, 213, 59)
	0x55efb55f5550: (29, 72, 0), (126, 173, 38)
	0x55efb55fd378: (86, 38, 16), (176, 194, 153)
	0x55efb5601540: (4, 124, 5), (52, 134, 122)
EMBREE: Set dst_map 0x14f670fcb900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x41bb900 for accel 0x55efb55c52b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f670fcb900
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f670fcb940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 115...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x422ec00 = 0x14f67103ec00 allocated to accel structure 0x55efb55c5350
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67103ec00 to 0xcf025200
RTV: Building BLAS into 0x55efb55c5350
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5a40
Compressed Node: i	exp: (0, 0, 2)	origin: (21.395897, 15.975274, 4.290071)
Children:
	0x55efb55c5aa8: (114, 65, 0), (151, 127, 158)
	0x55efb55d6c48: (0, 0, 22), (120, 197, 42)
	0x55efb55dd538: (112, 0, 0), (149, 197, 52)
	0x55efb55e0198: (78, 58, 86), (115, 136, 100)
	0x55efb55e2118: (6, 6, 82), (113, 191, 87)
	0x55efb55e4000: (5, 6, 41), (109, 191, 83)
EMBREE: Set dst_map 0x14f67103ec00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x422ec00 for accel 0x55efb55c5350
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67103ec00
EMBREE: Pack root 0x55efb55c5a40 to root_map 0x14f67103ec40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 116...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x425b300 = 0x14f67106b300 allocated to accel structure 0x55efb55c53f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67106b300 to 0xcf051900
RTV: Building BLAS into 0x55efb55c53f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5a80
Compressed Node: i	exp: (-1, -2, -2)	origin: (-41.130722, 1.853830, 30.364429)
Children:
	0x55efb55c5ae8: (116, 0, 0), (181, 94, 156)
	0x55efb55d1478: (53, 0, 0), (117, 45, 156)
	0x55efb55d2f40: (129, 93, 36), (234, 165, 119)
	0x55efb55d4648: (57, 93, 36), (134, 154, 119)
	0x55efb55d5fc0: (66, 42, 42), (117, 94, 113)
	0x55efb55d6c80: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x14f67106b300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x425b300 for accel 0x55efb55c53f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67106b300
EMBREE: Pack root 0x55efb55c5a80 to root_map 0x14f67106b340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 117...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x426d400 = 0x14f67107d400 allocated to accel structure 0x55efb55c5490
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67107d400 to 0xcf063a00
RTV: Building BLAS into 0x55efb55c5490
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (0, 2, -2)	origin: (4.246224, 9.934937, 12.673444)
Children:
	0x55efb55cfbe8: (5, 32, 0), (127, 63, 135)
	0x55efb55e17b0: (90, 57, 6), (155, 105, 124)
	0x55efb55ebf40: (6, 96, 5), (124, 126, 123)
	0x55efb55f60f8: (15, 122, 7), (115, 146, 83)
	0x55efb55fdfd8: (0, 57, 34), (100, 97, 123)
	0x55efb5604048: (21, 0, 80), (123, 41, 151)
EMBREE: Set dst_map 0x14f67107d400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x426d400 for accel 0x55efb55c5490
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67107d400
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f67107d440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 118...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x42f4500 = 0x14f671104500 allocated to accel structure 0x55efb55c5530
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671104500 to 0xcf0eab00
RTV: Building BLAS into 0x55efb55c5530
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5f40
Compressed Node: i	exp: (0, 1, 2)	origin: (0.303388, 11.811528, 7.874757)
Children:
	0x55efb55c5fa8: (0, 0, 213), (80, 140, 249)
	0x55efb55d0958: (81, 3, 0), (166, 141, 38)
	0x55efb55d1e48: (37, 1, 125), (119, 183, 173)
	0x55efb55d29c8: (56, 2, 79), (133, 183, 127)
	0x55efb55d35b0: (68, 2, 35), (146, 167, 84)
	0x55efb55d3d38: (21, 0, 168), (108, 166, 217)
EMBREE: Set dst_map 0x14f671104500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x42f4500 for accel 0x55efb55c5530
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671104500
EMBREE: Pack root 0x55efb55c5f40 to root_map 0x14f671104540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 119...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x42ffa00 = 0x14f67110fa00 allocated to accel structure 0x55efb55c55d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67110fa00 to 0xcf0f6000
RTV: Building BLAS into 0x55efb55c55d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (3, 2, 2)	origin: (-3.078175, 0.420881, -10.811305)
Children:
	0x55efb55cfbe8: (0, 138, 0), (135, 179, 61)
	0x55efb5607eb0: (119, 30, 32), (135, 147, 160)
	0x55efb562c430: (54, 138, 144), (157, 179, 182)
	0x55efb5647920: (54, 0, 30), (62, 151, 165)
	0x55efb565ebd8: (49, 135, 36), (134, 160, 160)
	0x55efb5673e98: (55, 106, 32), (102, 147, 163)
EMBREE: Set dst_map 0x14f67110fa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x42ffa00 for accel 0x55efb55c55d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67110fa00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f67110fa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 120...
RTV: Creating acceleration struction of size 0xcf00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xcf00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x449f800 = 0x14f6712af800 allocated to accel structure 0x55efb55c5670
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6712af800 to 0xcf295e00
RTV: Building BLAS into 0x55efb55c5670
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 412 triangles added; total: 412
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5f40
Compressed Node: i	exp: (-3, 2, 2)	origin: (54.495090, 9.250996, -12.128033)
Children:
	0x55efb55c5fa8: (0, 61, 12), (6, 147, 46)
	0x55efb55d16c0: (205, 53, 171), (213, 79, 244)
	0x55efb55d30e8: (209, 28, 146), (219, 53, 216)
	0x55efb55d3d50: (211, 20, 84), (219, 50, 123)
	0x55efb55d45b0: (211, 100, 200), (212, 125, 231)
	0x55efb55d4b10: (211, 0, 0), (212, 21, 15)
EMBREE: Set dst_map 0x14f6712af800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x449f800 for accel 0x55efb55c5670
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6712af800
EMBREE: Pack root 0x55efb55c5f40 to root_map 0x14f6712af840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 121...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x44ac700 = 0x14f6712bc700 allocated to accel structure 0x55efb55c5710
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6712bc700 to 0xcf2a2d00
RTV: Building BLAS into 0x55efb55c5710
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (1, 2, 0)	origin: (20.962700, 14.932918, 5.869254)
Children:
	0x55efb55cfbe8: (0, 33, 8), (78, 139, 228)
	0x55efb55e39d0: (67, 0, 0), (94, 165, 134)
	0x55efb55e7040: (67, 14, 117), (94, 152, 236)
	0x55efb55ea000: (79, 0, 48), (149, 23, 188)
	0x55efb55ebd08: (79, 143, 48), (149, 165, 188)
	0x55efb55ed8c8: (90, 0, 68), (139, 165, 168)
EMBREE: Set dst_map 0x14f6712bc700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x44ac700 for accel 0x55efb55c5710
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6712bc700
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f6712bc740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 122...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x44f4000 = 0x14f671304000 allocated to accel structure 0x55efb55bd8b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671304000 to 0xcf2ea600
RTV: Building BLAS into 0x55efb55bd8b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5f40
Compressed Node: i	exp: (2, 1, -1)	origin: (6.095877, 4.145544, 8.560542)
Children:
	0x55efb55c5fa8: (0, 0, 0), (87, 165, 77)
	0x55efb55cfd30: (83, 8, 52), (175, 177, 163)
	0x55efb55d0648: (7, 97, 7), (169, 125, 161)
	0x55efb55d09d8: (81, 33, 59), (87, 125, 71)
	0x55efb55d0c58: (0, 36, 0), (161, 63, 154)
	0x55efb55d0e70: (83, 141, 52), (87, 165, 77)
EMBREE: Set dst_map 0x14f671304000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x44f4000 for accel 0x55efb55bd8b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671304000
EMBREE: Pack root 0x55efb55c5f40 to root_map 0x14f671304040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 123...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x44f7900 = 0x14f671307900 allocated to accel structure 0x55efb55bd7c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671307900 to 0xcf2edf00
RTV: Building BLAS into 0x55efb55bd7c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5f40
Compressed Node: i	exp: (0, 1, 3)	origin: (-1.054618, 7.570610, 7.265945)
Children:
	0x55efb55c5fa8: (0, 0, 136), (84, 139, 159)
	0x55efb55d0940: (105, 0, 0), (195, 138, 24)
	0x55efb55d1e38: (46, 0, 79), (133, 182, 111)
	0x55efb55d29b0: (70, 0, 50), (152, 182, 81)
	0x55efb55d35d0: (87, 0, 22), (171, 164, 54)
	0x55efb55d3ed0: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x14f671307900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x44f7900 for accel 0x55efb55bd7c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671307900
EMBREE: Pack root 0x55efb55c5f40 to root_map 0x14f671307940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 124...
RTV: Creating acceleration struction of size 0x11900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x4502e00 = 0x14f671312e00 allocated to accel structure 0x55efb55c58f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671312e00 to 0xcf2f9400
RTV: Building BLAS into 0x55efb55c58f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 560 triangles added; total: 560
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c5f80
Compressed Node: i	exp: (3, 1, 2)	origin: (-0.439978, 8.442059, 8.481987)
Children:
	0x55efb55c5fe8: (98, 0, 164), (184, 217, 177)
	0x55efb55d0f70: (105, 1, 22), (190, 218, 62)
	0x55efb55d2b08: (7, 0, 0), (67, 244, 22)
	0x55efb55d3e50: (0, 0, 146), (59, 243, 166)
	0x55efb55d52f0: (65, 1, 12), (108, 245, 31)
	0x55efb55d6040: (57, 0, 157), (100, 244, 174)
EMBREE: Set dst_map 0x14f671312e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x4502e00 for accel 0x55efb55c58f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671312e00
EMBREE: Pack root 0x55efb55c5f80 to root_map 0x14f671312e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 125...
RTV: Creating acceleration struction of size 0xeff00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeff00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x4514700 = 0x14f671324700 allocated to accel structure 0x55efb55c5990
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671324700 to 0xcf30ad00
RTV: Building BLAS into 0x55efb55c5990
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7676 triangles added; total: 7676
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (2, 2, 1)	origin: (20.502178, 9.074520, -30.894236)
Children:
	0x55efb55cfbe8: (77, 0, 54), (142, 90, 128)
	0x55efb55f0d08: (127, 33, 58), (219, 83, 177)
	0x55efb56073d8: (130, 0, 61), (191, 42, 168)
	0x55efb56192d0: (47, 23, 39), (100, 104, 139)
	0x55efb5625a08: (0, 94, 50), (56, 142, 146)
	0x55efb562eeb0: (10, 30, 0), (60, 99, 104)
EMBREE: Set dst_map 0x14f671324700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x4514700 for accel 0x55efb55c5990
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671324700
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f671324740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 126...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x4604600 = 0x14f671414600 allocated to accel structure 0x55efb55c5a30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671414600 to 0xcf3fac00
RTV: Building BLAS into 0x55efb55c5a30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (0, 2, -2)	origin: (1.429830, 10.237099, -12.290397)
Children:
	0x55efb55cfbe8: (10, 156, 64), (184, 218, 203)
	0x55efb55df420: (13, 0, 41), (184, 64, 220)
	0x55efb55eae00: (117, 61, 26), (230, 126, 180)
	0x55efb55f4a58: (0, 58, 39), (130, 120, 230)
	0x55efb55fd5b0: (132, 117, 0), (216, 163, 160)
	0x55efb5604408: (7, 116, 61), (142, 170, 235)
EMBREE: Set dst_map 0x14f671414600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x4604600 for accel 0x55efb55c5a30
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671414600
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f671414640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 127...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x468b700 = 0x14f67149b700 allocated to accel structure 0x55efb55c5ad0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67149b700 to 0xcf481d00
RTV: Building BLAS into 0x55efb55c5ad0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c6440
Compressed Node: i	exp: (-2, -1, -2)	origin: (5.057471, 9.260567, -36.701096)
Children:
	0x55efb55c64a8: (4, 79, 14), (230, 136, 130)
	0x55efb55c6640: (0, 72, 103), (234, 121, 247)
	0x55efb55c67d8: (90, 0, 0), (214, 97, 164)
	0x55efb55cfc40: (11, 0, 0), (112, 97, 169)
	0x55efb55cfcf0: (11, 0, 103), (126, 90, 215)
	0x55efb55cfd80: (111, 0, 93), (213, 80, 215)
EMBREE: Set dst_map 0x14f67149b700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x468b700 for accel 0x55efb55c5ad0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67149b700
EMBREE: Pack root 0x55efb55c6440 to root_map 0x14f67149b740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 128...
RTV: Creating acceleration struction of size 0x153100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x153100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x468c900 = 0x14f67149c900 allocated to accel structure 0x55efb55c5b70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67149c900 to 0xcf482f00
RTV: Building BLAS into 0x55efb55c5b70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10848 triangles added; total: 10848
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (5, 4, 2)	origin: (-9.422773, 1.499443, 9.338799)
Children:
	0x55efb55cfbe8: (0, 5, 41), (29, 38, 149)
	0x55efb5610940: (118, 18, 154), (152, 40, 248)
	0x55efb56253b0: (73, 1, 216), (119, 38, 241)
	0x55efb5635a40: (79, 132, 115), (117, 154, 165)
	0x55efb5645658: (43, 0, 175), (74, 18, 220)
	0x55efb5652ea8: (27, 3, 0), (44, 21, 178)
EMBREE: Set dst_map 0x14f67149c900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x468c900 for accel 0x55efb55c5b70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67149c900
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f67149c940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 129...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x47dfa00 = 0x14f6715efa00 allocated to accel structure 0x55efb55c5c10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6715efa00 to 0xcf5d6000
RTV: Building BLAS into 0x55efb55c5c10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c6440
Compressed Node: i	exp: (0, 1, -1)	origin: (-9.605950, 2.347748, 10.494856)
Children:
	0x55efb55c64a8: (128, 120, 78), (195, 224, 134)
	0x55efb55d1788: (93, 0, 49), (152, 67, 138)
	0x55efb55d30e0: (0, 85, 0), (100, 159, 153)
	0x55efb55d4528: (89, 95, 26), (204, 105, 179)
	0x55efb55d5258: (90, 66, 41), (142, 172, 144)
	0x55efb55d5b40: (96, 99, 52), (138, 229, 135)
EMBREE: Set dst_map 0x14f6715efa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x47dfa00 for accel 0x55efb55c5c10
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6715efa00
EMBREE: Pack root 0x55efb55c6440 to root_map 0x14f6715efa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 130...
RTV: Creating acceleration struction of size 0x153100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x153100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x47eed00 = 0x14f6715fed00 allocated to accel structure 0x55efb55c5cb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6715fed00 to 0xcf5e5300
RTV: Building BLAS into 0x55efb55c5cb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10848 triangles added; total: 10848
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (5, 4, 2)	origin: (-9.050831, 1.514136, 6.564975)
Children:
	0x55efb55cfbe8: (0, 6, 0), (29, 38, 95)
	0x55efb560f5b8: (119, 18, 73), (152, 40, 197)
	0x55efb56231e8: (75, 1, 14), (120, 38, 83)
	0x55efb5633bf0: (79, 132, 123), (116, 154, 145)
	0x55efb56437b8: (35, 0, 1), (76, 20, 17)
	0x55efb5653220: (27, 5, 7), (36, 21, 166)
EMBREE: Set dst_map 0x14f6715fed00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x47eed00 for accel 0x55efb55c5cb0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6715fed00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f6715fed40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 131...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x4941e00 = 0x14f671751e00 allocated to accel structure 0x55efb55c5d50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671751e00 to 0xcf738400
RTV: Building BLAS into 0x55efb55c5d50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (-1, 1, 0)	origin: (-3.023636, 6.550070, 6.757456)
Children:
	0x55efb55cfbe8: (0, 30, 0), (246, 69, 129)
	0x55efb55d6608: (0, 64, 1), (237, 104, 126)
	0x55efb55decc0: (7, 0, 3), (222, 33, 125)
	0x55efb55e26d8: (17, 102, 13), (213, 130, 116)
	0x55efb55e2fa8: (35, 82, 23), (186, 192, 102)
	0x55efb55e35e0: (35, 128, 23), (186, 134, 76)
EMBREE: Set dst_map 0x14f671751e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x4941e00 for accel 0x55efb55c5d50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671751e00
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f671751e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 132...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x4969d00 = 0x14f671779d00 allocated to accel structure 0x55efb55c5df0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f671779d00 to 0xcf760300
RTV: Building BLAS into 0x55efb55c5df0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55c6480
Compressed Node: i	exp: (2, 1, -1)	origin: (-2.700863, 4.334765, 7.578253)
Children:
	0x55efb55c64e8: (0, 141, 0), (139, 177, 143)
	0x55efb55d0080: (1, 8, 0), (49, 177, 65)
	0x55efb55d0698: (101, 0, 84), (151, 158, 139)
	0x55efb55d0dc0: (76, 33, 80), (80, 125, 90)
	0x55efb55d1040: (11, 33, 5), (151, 125, 139)
	0x55efb55d1358: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x14f671779d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x4969d00 for accel 0x55efb55c5df0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f671779d00
EMBREE: Pack root 0x55efb55c6480 to root_map 0x14f671779d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 133...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x496d600 = 0x14f67177d600 allocated to accel structure 0x55efb55c5e90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67177d600 to 0xcf763c00
RTV: Building BLAS into 0x55efb55c5e90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (2, -2, -1)	origin: (5.497696, 15.344007, -12.966626)
Children:
	0x55efb55cfbe8: (0, 1, 125), (131, 163, 189)
	0x55efb55d8558: (0, 24, 0), (132, 174, 17)
	0x55efb55e1f88: (0, 0, 16), (51, 198, 133)
	0x55efb55e3a40: (83, 0, 16), (131, 198, 133)
	0x55efb55e5520: (36, 0, 52), (97, 198, 189)
	0x55efb55e6c18: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x14f67177d600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x496d600 for accel 0x55efb55c5e90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67177d600
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f67177d640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 134...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x499f700 = 0x14f6717af700 allocated to accel structure 0x55efb55c5f30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6717af700 to 0xcf795d00
RTV: Building BLAS into 0x55efb55c5f30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (-1, 1, 0)	origin: (8.412616, 5.488227, 13.064262)
Children:
	0x55efb55cfbe8: (0, 29, 0), (246, 69, 129)
	0x55efb55d76d8: (0, 64, 1), (239, 103, 126)
	0x55efb55df790: (13, 0, 12), (209, 31, 115)
	0x55efb55e22d8: (30, 102, 13), (225, 129, 117)
	0x55efb55e2b98: (48, 82, 24), (200, 192, 103)
	0x55efb55e3080: (48, 128, 24), (200, 134, 77)
EMBREE: Set dst_map 0x14f6717af700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x499f700 for accel 0x55efb55c5f30
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6717af700
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f6717af740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 135...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x49c7600 = 0x14f6717d7600 allocated to accel structure 0x55efb55c6930
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6717d7600 to 0xcf7bdc00
RTV: Building BLAS into 0x55efb55c6930
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55cfb80
Compressed Node: i	exp: (1, -2, 0)	origin: (-5.383837, 19.168715, -17.276011)
Children:
	0x55efb55cfbe8: (12, 0, 165), (144, 179, 253)
	0x55efb55d6798: (0, 0, 0), (71, 179, 166)
	0x55efb55ddaf0: (69, 14, 123), (91, 165, 170)
	0x55efb55ded38: (0, 0, 0), (144, 17, 251)
	0x55efb55deee8: (0, 162, 0), (144, 179, 251)
	0x55efb55df218: (0, 13, 0), (144, 166, 249)
EMBREE: Set dst_map 0x14f6717d7600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x49c7600 for accel 0x55efb55c6930
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6717d7600
EMBREE: Pack root 0x55efb55cfb80 to root_map 0x14f6717d7640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 136...
RTV: Creating acceleration struction of size 0x17e8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17e8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x49e5300 = 0x14f6717f5300 allocated to accel structure 0x55efb55c69d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6717f5300 to 0xcf7db900
RTV: Building BLAS into 0x55efb55c69d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 195840 triangles added; total: 195840
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (5, 4, 3)	origin: (-9.594675, 0.917178, 7.437652)
Children:
	0x55efb55dbbe8: (92, 10, 172), (135, 29, 217)
	0x55efb58997d0: (0, 15, 0), (18, 29, 137)
	0x55efb5adf7f8: (54, 0, 158), (91, 14, 186)
	0x55efb5cdf290: (51, 139, 121), (82, 151, 145)
	0x55efb5e0df78: (28, 6, 132), (51, 18, 166)
	0x55efb5f2ea60: (76, 65, 155), (85, 71, 169)
EMBREE: Set dst_map 0x14f6717f5300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x49e5300 for accel 0x55efb55c69d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6717f5300
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f6717f5340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 137...
RTV: Creating acceleration struction of size 0xb4100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb4100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x61cd400 = 0x14f672fdd400 allocated to accel structure 0x55efb55c6a70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f672fdd400 to 0xd0fc3a00
RTV: Building BLAS into 0x55efb55c6a70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5760 triangles added; total: 5760
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d01c0
Compressed Node: i	exp: (3, 2, 1)	origin: (-0.816571, 9.498903, 9.960917)
Children:
	0x55efb55d0228: (110, 141, 166), (166, 191, 218)
	0x55efb55e57b8: (164, 0, 183), (177, 159, 221)
	0x55efb55f1a58: (61, 151, 145), (112, 196, 201)
	0x55efb55fe300: (28, 151, 105), (63, 199, 180)
	0x55efb56098f0: (0, 204, 0), (14, 223, 121)
	0x55efb5612c40: (12, 191, 86), (38, 223, 143)
EMBREE: Set dst_map 0x14f672fdd400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x61cd400 for accel 0x55efb55c6a70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f672fdd400
EMBREE: Pack root 0x55efb55d01c0 to root_map 0x14f672fdd440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 138...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6281500 = 0x14f673091500 allocated to accel structure 0x55efb55da160
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f673091500 to 0xd1077b00
RTV: Building BLAS into 0x55efb55da160
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d01c0
Compressed Node: i	exp: (4, 1, -2)	origin: (-1.272687, 17.325241, -18.597860)
Children:
	0x55efb55d0228: (54, 0, 0), (104, 157, 177)
	0x55efb55eaca8: (151, 0, 0), (195, 157, 177)
	0x55efb5601660: (0, 0, 0), (31, 157, 177)
	0x55efb5610800: (30, 0, 0), (55, 157, 177)
	0x55efb561f990: (132, 0, 0), (152, 157, 177)
	0x55efb562c8b8: (103, 0, 0), (133, 157, 177)
EMBREE: Set dst_map 0x14f673091500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6281500 for accel 0x55efb55da160
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f673091500
EMBREE: Pack root 0x55efb55d01c0 to root_map 0x14f673091540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 139...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6379600 = 0x14f673189600 allocated to accel structure 0x55efb55c6b10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f673189600 to 0xd116fc00
RTV: Building BLAS into 0x55efb55c6b10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d01c0
Compressed Node: i	exp: (1, 0, -1)	origin: (7.680769, 6.855777, 13.044589)
Children:
	0x55efb55d0228: (62, 0, 9), (179, 105, 136)
	0x55efb55d1a80: (176, 58, 63), (250, 103, 155)
	0x55efb55d3068: (0, 106, 0), (38, 176, 57)
	0x55efb55d4230: (100, 96, 21), (149, 158, 142)
	0x55efb55d5280: (0, 77, 0), (142, 169, 102)
	0x55efb55d5fb0: (62, 75, 16), (210, 121, 134)
EMBREE: Set dst_map 0x14f673189600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6379600 for accel 0x55efb55c6b10
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f673189600
EMBREE: Pack root 0x55efb55d01c0 to root_map 0x14f673189640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 140...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6388900 = 0x14f673198900 allocated to accel structure 0x55efb55c6bb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f673198900 to 0xd117ef00
RTV: Building BLAS into 0x55efb55c6bb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d01c0
Compressed Node: i	exp: (1, -1, 0)	origin: (-5.820128, 11.619901, 10.244545)
Children:
	0x55efb55d0228: (163, 0, 34), (230, 214, 242)
	0x55efb55e8658: (0, 64, 168), (140, 167, 219)
	0x55efb55f0e60: (81, 36, 185), (208, 193, 238)
	0x55efb55f6390: (12, 65, 5), (147, 167, 52)
	0x55efb55fa4d0: (3, 74, 0), (55, 142, 181)
	0x55efb55fe160: (91, 35, 22), (219, 179, 193)
EMBREE: Set dst_map 0x14f673198900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6388900 for accel 0x55efb55c6bb0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f673198900
EMBREE: Pack root 0x55efb55d01c0 to root_map 0x14f673198940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 141...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x63fbc00 = 0x14f67320bc00 allocated to accel structure 0x55efb55c62b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67320bc00 to 0xd11f2200
RTV: Building BLAS into 0x55efb55c62b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f67320bc00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x63fbc00 for accel 0x55efb55c62b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67320bc00
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f67320bc40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 142...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x63fbe00 = 0x14f67320be00 allocated to accel structure 0x55efb55c6350
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67320be00 to 0xd11f2400
RTV: Building BLAS into 0x55efb55c6350
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0680
Compressed Node: i	exp: (2, 1, -1)	origin: (-3.381325, 9.132265, 7.753721)
Children:
	0x55efb55d06e8: (0, 141, 0), (139, 177, 143)
	0x55efb55d1000: (1, 8, 0), (49, 177, 65)
	0x55efb55d1660: (101, 0, 84), (151, 158, 139)
	0x55efb55d1d40: (76, 33, 80), (80, 125, 90)
	0x55efb55d1fc0: (11, 33, 5), (151, 125, 139)
	0x55efb55d22d8: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x14f67320be00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x63fbe00 for accel 0x55efb55c6350
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67320be00
EMBREE: Pack root 0x55efb55d0680 to root_map 0x14f67320be40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 143...
RTV: Creating acceleration struction of size 0x751700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x751700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x63ff700 = 0x14f67320f700 allocated to accel structure 0x55efb55c6430
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67320f700 to 0xd11f5d00
RTV: Building BLAS into 0x55efb55c6430
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 59947 triangles added; total: 59947
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 2, 1)	origin: (-37.682285, 1.790902, 30.317593)
Children:
	0x55efb55dbbe8: (107, 95, 33), (195, 172, 153)
	0x55efb56b2b60: (21, 68, 11), (211, 98, 149)
	0x55efb57503e8: (0, 94, 25), (113, 132, 160)
	0x55efb57d4248: (15, 129, 27), (116, 180, 154)
	0x55efb5846b58: (41, 0, 68), (145, 72, 133)
	0x55efb5888bb0: (41, 0, 0), (99, 72, 74)
EMBREE: Set dst_map 0x14f67320f700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x63ff700 for accel 0x55efb55c6430
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67320f700
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f67320f740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 144...
RTV: Creating acceleration struction of size 0x34300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x34300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6b50e00 = 0x14f673960e00 allocated to accel structure 0x55efb55c57b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f673960e00 to 0xd1947400
RTV: Building BLAS into 0x55efb55c57b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1668 triangles added; total: 1668
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0680
Compressed Node: i	exp: (3, 2, 3)	origin: (0.397539, 0.607900, 7.545499)
Children:
	0x55efb55d06e8: (104, 31, 15), (194, 220, 79)
	0x55efb55d59f8: (103, 35, 78), (188, 220, 141)
	0x55efb55dc8a0: (0, 0, 66), (24, 220, 125)
	0x55efb55df598: (6, 1, 0), (24, 220, 64)
	0x55efb55e1f58: (23, 0, 115), (105, 220, 132)
	0x55efb55e4538: (23, 0, 4), (106, 220, 23)
EMBREE: Set dst_map 0x14f673960e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6b50e00 for accel 0x55efb55c57b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f673960e00
EMBREE: Pack root 0x55efb55d0680 to root_map 0x14f673960e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 145...
RTV: Creating acceleration struction of size 0x34000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x34000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6b85100 = 0x14f673995100 allocated to accel structure 0x55efb55c6540
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f673995100 to 0xd197b700
RTV: Building BLAS into 0x55efb55c6540
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1662 triangles added; total: 1662
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0680
Compressed Node: i	exp: (0, 1, -1)	origin: (25.886511, 18.166216, -19.839668)
Children:
	0x55efb55d06e8: (33, 93, 119), (116, 140, 184)
	0x55efb55d8fa0: (3, 42, 6), (141, 95, 142)
	0x55efb55de600: (37, 0, 31), (67, 46, 87)
	0x55efb55e2120: (3, 93, 14), (140, 118, 133)
	0x55efb55e4f60: (0, 153, 0), (144, 157, 115)
	0x55efb55e69f0: (3, 94, 6), (141, 154, 133)
EMBREE: Set dst_map 0x14f673995100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6b85100 for accel 0x55efb55c6540
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f673995100
EMBREE: Pack root 0x55efb55d0680 to root_map 0x14f673995140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 146...
RTV: Creating acceleration struction of size 0x756300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x756300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x6bb9100 = 0x14f6739c9100 allocated to accel structure 0x55efb55c65e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6739c9100 to 0xd19af700
RTV: Building BLAS into 0x55efb55c65e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 60100 triangles added; total: 60100
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 2, 0)	origin: (-9.069944, 2.357372, 10.744848)
Children:
	0x55efb55dbbe8: (0, 107, 1), (88, 136, 137)
	0x55efb5677860: (125, 71, 21), (191, 108, 154)
	0x55efb5710d68: (120, 38, 23), (220, 75, 145)
	0x55efb57853b8: (85, 105, 0), (155, 134, 173)
	0x55efb57f8778: (34, 76, 22), (131, 108, 181)
	0x55efb586a138: (131, 0, 27), (248, 41, 142)
EMBREE: Set dst_map 0x14f6739c9100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x6bb9100 for accel 0x55efb55c65e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6739c9100
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f6739c9140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 147...
RTV: Creating acceleration struction of size 0x678000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x678000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x730f400 = 0x14f67411f400 allocated to accel structure 0x55efb55c6680
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67411f400 to 0xd2105a00
RTV: Building BLAS into 0x55efb55c6680
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 52989 triangles added; total: 52989
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 2, 0)	origin: (-3.086168, 4.461805, 9.877907)
Children:
	0x55efb55dbbe8: (16, 112, 7), (101, 156, 198)
	0x55efb56a3428: (73, 46, 0), (139, 90, 203)
	0x55efb5742fc0: (67, 87, 0), (130, 115, 199)
	0x55efb57c93b0: (0, 91, 45), (71, 115, 199)
	0x55efb58003d0: (106, 0, 118), (168, 48, 176)
	0x55efb58378a8: (57, 0, 36), (113, 48, 89)
EMBREE: Set dst_map 0x14f67411f400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x730f400 for accel 0x55efb55c6680
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67411f400
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f67411f440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 148...
RTV: Creating acceleration struction of size 0x83500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x83500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7987400 = 0x14f674797400 allocated to accel structure 0x55efb55c6720
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674797400 to 0xd277da00
RTV: Building BLAS into 0x55efb55c6720
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4200 triangles added; total: 4200
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0680
Compressed Node: i	exp: (3, 3, 1)	origin: (-3.140154, 4.427189, 11.265611)
Children:
	0x55efb55d06e8: (101, 5, 142), (130, 34, 180)
	0x55efb55dd518: (0, 157, 0), (35, 193, 52)
	0x55efb55e7b98: (138, 0, 150), (175, 36, 203)
	0x55efb55f1898: (91, 157, 19), (121, 194, 96)
	0x55efb55f8ff0: (70, 161, 12), (95, 190, 64)
	0x55efb55ffe08: (55, 162, 1), (73, 190, 34)
EMBREE: Set dst_map 0x14f674797400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7987400 for accel 0x55efb55c6720
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674797400
EMBREE: Pack root 0x55efb55d0680 to root_map 0x14f674797440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 149...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7a0a900 = 0x14f67481a900 allocated to accel structure 0x55efb55c67c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67481a900 to 0xd2800f00
RTV: Building BLAS into 0x55efb55c67c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d06c0
Compressed Node: i	exp: (0, 2, -1)	origin: (5.397581, 4.307834, 12.845096)
Children:
	0x55efb55d0728: (18, 4, 43), (75, 109, 92)
	0x55efb55d2480: (33, 163, 36), (94, 231, 116)
	0x55efb55d3eb8: (0, 125, 0), (185, 146, 162)
	0x55efb55d4ed0: (101, 71, 24), (188, 146, 162)
	0x55efb55d5ee0: (56, 57, 32), (111, 164, 125)
	0x55efb55d68f0: (47, 0, 42), (114, 130, 116)
EMBREE: Set dst_map 0x14f67481a900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7a0a900 for accel 0x55efb55c67c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67481a900
EMBREE: Pack root 0x55efb55d06c0 to root_map 0x14f67481a940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 150...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7a19c00 = 0x14f674829c00 allocated to accel structure 0x55efb55c6860
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674829c00 to 0xd2810200
RTV: Building BLAS into 0x55efb55c6860
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0b80
Compressed Node: i	exp: (3, -1, 0)	origin: (-1.170100, 7.350015, 12.461865)
Children:
	0x55efb55d0be8: (0, 0, 0), (83, 190, 77)
	0x55efb55d3150: (114, 14, 95), (217, 155, 189)
	0x55efb55d5ac0: (74, 37, 62), (135, 87, 121)
	0x55efb55d7528: (56, 78, 47), (186, 97, 164)
	0x55efb55d7680: (28, 86, 24), (186, 184, 164)
	0x55efb55d7728: (55, 80, 46), (186, 155, 164)
EMBREE: Set dst_map 0x14f674829c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7a19c00 for accel 0x55efb55c6860
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674829c00
EMBREE: Pack root 0x55efb55d0b80 to root_map 0x14f674829c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 151...
RTV: Creating acceleration struction of size 0x48d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x48d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7a28700 = 0x14f674838700 allocated to accel structure 0x55efb55d0150
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674838700 to 0xd281ed00
RTV: Building BLAS into 0x55efb55d0150
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2328 triangles added; total: 2328
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0b80
Compressed Node: i	exp: (3, 0, -2)	origin: (3.603456, 11.352874, -37.240856)
Children:
	0x55efb55d0be8: (52, 0, 0), (91, 138, 157)
	0x55efb55dee38: (93, 1, 0), (134, 136, 157)
	0x55efb55e4b70: (142, 1, 0), (154, 136, 157)
	0x55efb55ea228: (154, 1, 0), (186, 137, 157)
	0x55efb55efd20: (27, 1, 0), (44, 136, 157)
	0x55efb55f0bc8: (0, 1, 0), (28, 136, 157)
EMBREE: Set dst_map 0x14f674838700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7a28700 for accel 0x55efb55d0150
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674838700
EMBREE: Pack root 0x55efb55d0b80 to root_map 0x14f674838740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 152...
RTV: Creating acceleration struction of size 0x8a300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x8a300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7a71400 = 0x14f674881400 allocated to accel structure 0x55efb55bd280
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674881400 to 0xd2867a00
RTV: Building BLAS into 0x55efb55bd280
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4420 triangles added; total: 4420
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0b80
Compressed Node: i	exp: (3, 1, 2)	origin: (-11.532341, 0.086767, -8.058805)
Children:
	0x55efb55d0be8: (126, 0, 21), (163, 179, 163)
	0x55efb55e19d0: (0, 8, 7), (30, 180, 79)
	0x55efb55ef640: (74, 105, 0), (134, 199, 143)
	0x55efb55fbc10: (13, 0, 0), (76, 173, 132)
	0x55efb56022b8: (63, 12, 96), (145, 121, 163)
	0x55efb5606780: (66, 0, 9), (151, 123, 132)
EMBREE: Set dst_map 0x14f674881400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7a71400 for accel 0x55efb55bd280
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674881400
EMBREE: Pack root 0x55efb55d0b80 to root_map 0x14f674881440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 153...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7afb700 = 0x14f67490b700 allocated to accel structure 0x55efb55d0260
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67490b700 to 0xd28f1d00
RTV: Building BLAS into 0x55efb55d0260
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f67490b700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7afb700 for accel 0x55efb55d0260
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67490b700
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f67490b740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 154...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7afb900 = 0x14f67490b900 allocated to accel structure 0x55efb55d0300
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67490b900 to 0xd28f1f00
RTV: Building BLAS into 0x55efb55d0300
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0b80
Compressed Node: i	exp: (1, -1, -1)	origin: (-2.103683, 6.913056, -11.368189)
Children:
	0x55efb55d0be8: (0, 0, 166), (251, 118, 252)
	0x55efb55d9298: (0, 19, 0), (253, 128, 24)
	0x55efb55e2608: (0, 0, 21), (97, 146, 177)
	0x55efb55e4380: (159, 0, 21), (251, 146, 177)
	0x55efb55e61f0: (71, 0, 69), (186, 144, 252)
	0x55efb55e7d40: (1, 0, 106), (249, 119, 177)
EMBREE: Set dst_map 0x14f67490b900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7afb900 for accel 0x55efb55d0300
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67490b900
EMBREE: Pack root 0x55efb55d0b80 to root_map 0x14f67490b940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 155...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7b2da00 = 0x14f67493da00 allocated to accel structure 0x55efb55d03a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67493da00 to 0xd2924000
RTV: Building BLAS into 0x55efb55d03a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0b80
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.259277, 9.186163, -36.680801)
Children:
	0x55efb55d0be8: (0, 153, 0), (122, 230, 230)
	0x55efb55d0d80: (108, 153, 0), (230, 229, 236)
	0x55efb55d0f18: (15, 0, 92), (122, 154, 217)
	0x55efb55d1048: (108, 0, 11), (216, 154, 137)
	0x55efb55d10f0: (110, 0, 30), (216, 154, 217)
	0x55efb55d1188: (15, 0, 12), (121, 154, 199)
EMBREE: Set dst_map 0x14f67493da00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7b2da00 for accel 0x55efb55d03a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67493da00
EMBREE: Pack root 0x55efb55d0b80 to root_map 0x14f67493da40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 156...
RTV: Creating acceleration struction of size 0x6600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7b2ec00 = 0x14f67493ec00 allocated to accel structure 0x55efb55d0440
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67493ec00 to 0xd2925200
RTV: Building BLAS into 0x55efb55d0440
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 202 triangles added; total: 202
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0b80
Compressed Node: i	exp: (1, 1, 0)	origin: (-0.670915, 10.066412, 10.462246)
Children:
	0x55efb55d0be8: (91, 0, 40), (174, 109, 115)
	0x55efb55d1940: (0, 7, 0), (44, 114, 83)
	0x55efb55d2240: (39, 4, 25), (96, 112, 93)
	0x55efb55d2b80: (95, 105, 66), (175, 197, 170)
	0x55efb55d2f18: (4, 111, 43), (46, 202, 137)
	0x55efb55d3298: (44, 108, 51), (98, 200, 148)
EMBREE: Set dst_map 0x14f67493ec00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7b2ec00 for accel 0x55efb55d0440
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67493ec00
EMBREE: Pack root 0x55efb55d0b80 to root_map 0x14f67493ec40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 157...
RTV: Creating acceleration struction of size 0x29b500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x29b500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7b35200 = 0x14f674945200 allocated to accel structure 0x55efb55d04e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674945200 to 0xd292b800
RTV: Building BLAS into 0x55efb55d04e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 21352 triangles added; total: 21352
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d0bc0
Compressed Node: i	exp: (5, 4, 2)	origin: (-2.196763, 6.851079, -13.386913)
Children:
	0x55efb55d0c28: (0, 118, 0), (164, 147, 109)
	0x55efb561f718: (0, 0, 12), (31, 139, 156)
	0x55efb56541c0: (0, 103, 32), (164, 114, 79)
	0x55efb5686a50: (145, 1, 12), (165, 139, 183)
	0x55efb56a9600: (0, 68, 62), (147, 93, 99)
	0x55efb56bb1f8: (66, 68, 33), (129, 114, 83)
EMBREE: Set dst_map 0x14f674945200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7b35200 for accel 0x55efb55d04e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674945200
EMBREE: Pack root 0x55efb55d0bc0 to root_map 0x14f674945240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 158...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7dd0700 = 0x14f674be0700 allocated to accel structure 0x55efb55d0580
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674be0700 to 0xd2bc6d00
RTV: Building BLAS into 0x55efb55d0580
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1080
Compressed Node: i	exp: (-1, 1, 0)	origin: (8.641598, 5.787920, 7.975622)
Children:
	0x55efb55d10e8: (0, 30, 0), (246, 69, 129)
	0x55efb55d7b08: (0, 64, 1), (237, 104, 126)
	0x55efb55e0640: (7, 0, 3), (222, 33, 125)
	0x55efb55e4098: (17, 102, 13), (213, 130, 116)
	0x55efb55e4928: (35, 82, 23), (186, 192, 102)
	0x55efb55e4fa0: (35, 128, 23), (186, 134, 76)
EMBREE: Set dst_map 0x14f674be0700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7dd0700 for accel 0x55efb55d0580
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674be0700
EMBREE: Pack root 0x55efb55d1080 to root_map 0x14f674be0740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 159...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7df8600 = 0x14f674c08600 allocated to accel structure 0x55efb55bd370
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674c08600 to 0xd2beec00
RTV: Building BLAS into 0x55efb55bd370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1080
Compressed Node: i	exp: (0, 2, -1)	origin: (21.349056, 15.365964, 5.132863)
Children:
	0x55efb55d10e8: (0, 0, 24), (50, 180, 149)
	0x55efb55d9418: (122, 0, 42), (138, 181, 137)
	0x55efb55e27d8: (94, 4, 18), (130, 176, 174)
	0x55efb55e49b0: (0, 0, 0), (119, 70, 161)
	0x55efb55e6490: (0, 114, 0), (119, 180, 158)
	0x55efb55e8060: (36, 1, 24), (84, 178, 161)
EMBREE: Set dst_map 0x14f674c08600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7df8600 for accel 0x55efb55bd370
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674c08600
EMBREE: Pack root 0x55efb55d1080 to root_map 0x14f674c08640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 160...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7e2a700 = 0x14f674c3a700 allocated to accel structure 0x55efb55d06c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674c3a700 to 0xd2c20d00
RTV: Building BLAS into 0x55efb55d06c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1080
Compressed Node: i	exp: (-1, -1, -1)	origin: (5.948792, 9.235549, -36.778606)
Children:
	0x55efb55d10e8: (0, 38, 23), (67, 124, 113)
	0x55efb55d1218: (66, 40, 31), (147, 109, 143)
	0x55efb55d1340: (64, 0, 35), (147, 88, 143)
	0x55efb55d13f0: (28, 5, 35), (117, 106, 143)
	0x55efb55d1528: (53, 38, 0), (103, 99, 42)
	0x55efb55d15c0: (57, 105, 31), (94, 138, 113)
EMBREE: Set dst_map 0x14f674c3a700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7e2a700 for accel 0x55efb55d06c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674c3a700
EMBREE: Pack root 0x55efb55d1080 to root_map 0x14f674c3a740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 161...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7e2b900 = 0x14f674c3b900 allocated to accel structure 0x55efb55d0760
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674c3b900 to 0xd2c21f00
RTV: Building BLAS into 0x55efb55d0760
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f674c3b900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7e2b900 for accel 0x55efb55d0760
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674c3b900
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f674c3b940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 162...
RTV: Creating acceleration struction of size 0xa9c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xa9c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7e2bb00 = 0x14f674c3bb00 allocated to accel structure 0x55efb55d0800
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674c3bb00 to 0xd2c22100
RTV: Building BLAS into 0x55efb55d0800
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5430 triangles added; total: 5430
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1080
Compressed Node: i	exp: (7, 6, 7)	origin: (-32.516800, -9.981682, -65.075577)
Children:
	0x55efb55d10e8: (34, 77, 48), (88, 143, 107)
	0x55efb55edb10: (68, 8, 0), (113, 111, 116)
	0x55efb5601660: (0, 8, 48), (113, 95, 116)
	0x55efb560d480: (105, 8, 0), (122, 111, 199)
	0x55efb5615468: (109, 26, 57), (153, 134, 199)
	0x55efb56174a8: (172, 0, 63), (175, 72, 141)
EMBREE: Set dst_map 0x14f674c3bb00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7e2bb00 for accel 0x55efb55d0800
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674c3bb00
EMBREE: Pack root 0x55efb55d1080 to root_map 0x14f674c3bb40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 163...
RTV: Creating acceleration struction of size 0x19fb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x7ed5700 = 0x14f674ce5700 allocated to accel structure 0x55efb55d08a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674ce5700 to 0xd2ccbd00
RTV: Building BLAS into 0x55efb55d08a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13299 triangles added; total: 13299
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1080
Compressed Node: i	exp: (3, 2, 2)	origin: (-36.325069, -0.621233, 28.271132)
Children:
	0x55efb55d10e8: (0, 138, 0), (135, 179, 61)
	0x55efb5608190: (119, 30, 32), (135, 147, 160)
	0x55efb562c648: (54, 138, 144), (157, 179, 182)
	0x55efb5647e30: (54, 0, 30), (62, 151, 165)
	0x55efb565f1d8: (49, 135, 36), (134, 160, 160)
	0x55efb5674030: (55, 106, 32), (102, 147, 163)
EMBREE: Set dst_map 0x14f674ce5700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x7ed5700 for accel 0x55efb55d08a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674ce5700
EMBREE: Pack root 0x55efb55d1080 to root_map 0x14f674ce5740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 164...
RTV: Creating acceleration struction of size 0x2c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8075200 = 0x14f674e85200 allocated to accel structure 0x55efb55d0940
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674e85200 to 0xd2e6b800
RTV: Building BLAS into 0x55efb55d0940
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1412 triangles added; total: 1412
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1080
Compressed Node: i	exp: (1, 0, 1)	origin: (2.076681, 8.226901, 11.937919)
Children:
	0x55efb55d10e8: (76, 0, 6), (166, 125, 135)
	0x55efb55d5bd8: (0, 0, 54), (82, 250, 130)
	0x55efb55dc260: (4, 0, 0), (82, 245, 63)
	0x55efb55df168: (77, 114, 6), (166, 141, 30)
	0x55efb55e19e8: (76, 109, 12), (166, 246, 137)
	0x55efb55e34f8: (76, 210, 55), (161, 250, 86)
EMBREE: Set dst_map 0x14f674e85200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8075200 for accel 0x55efb55d0940
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674e85200
EMBREE: Pack root 0x55efb55d1080 to root_map 0x14f674e85240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 165...
RTV: Creating acceleration struction of size 0xeef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x80a1500 = 0x14f674eb1500 allocated to accel structure 0x55efb55d09e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674eb1500 to 0xd2e97b00
RTV: Building BLAS into 0x55efb55d09e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7644 triangles added; total: 7644
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d10c0
Compressed Node: i	exp: (1, 2, 0)	origin: (-4.158373, 11.370051, -17.481403)
Children:
	0x55efb55d1128: (0, 80, 40), (158, 122, 189)
	0x55efb55f1200: (0, 110, 50), (158, 201, 121)
	0x55efb560c5b0: (5, 112, 115), (155, 188, 205)
	0x55efb5626060: (57, 142, 0), (111, 177, 59)
	0x55efb562e430: (1, 65, 56), (155, 98, 187)
	0x55efb5633538: (0, 0, 67), (157, 88, 187)
EMBREE: Set dst_map 0x14f674eb1500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x80a1500 for accel 0x55efb55d09e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674eb1500
EMBREE: Pack root 0x55efb55d10c0 to root_map 0x14f674eb1540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 166...
RTV: Creating acceleration struction of size 0xcb400
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xcb400) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8190400 = 0x14f674fa0400 allocated to accel structure 0x55efb55d0a80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f674fa0400 to 0xd2f86a00
RTV: Building BLAS into 0x55efb55d0a80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 6501 triangles added; total: 6501
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1580
Compressed Node: i	exp: (3, 2, 3)	origin: (-4.412127, 8.879470, 7.436929)
Children:
	0x55efb55d15e8: (0, 98, 0), (44, 246, 123)
	0x55efb55efac8: (14, 96, 63), (187, 245, 133)
	0x55efb5600360: (27, 0, 11), (61, 101, 116)
	0x55efb560dfc0: (27, 95, 0), (182, 245, 77)
	0x55efb561b1d0: (170, 2, 27), (228, 99, 132)
	0x55efb5621a48: (42, 0, 11), (223, 100, 132)
EMBREE: Set dst_map 0x14f674fa0400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8190400 for accel 0x55efb55d0a80
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f674fa0400
EMBREE: Pack root 0x55efb55d1580 to root_map 0x14f674fa0440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 167...
RTV: Creating acceleration struction of size 0xb4100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb4100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x825b800 = 0x14f67506b800 allocated to accel structure 0x55efb55d0b50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67506b800 to 0xd3051e00
RTV: Building BLAS into 0x55efb55d0b50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5760 triangles added; total: 5760
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1580
Compressed Node: i	exp: (2, 3, 1)	origin: (5.685976, 2.594982, 11.887847)
Children:
	0x55efb55d15e8: (65, 121, 129), (152, 156, 190)
	0x55efb55eae70: (1, 121, 64), (70, 145, 181)
	0x55efb55fa5f8: (22, 39, 2), (61, 63, 59)
	0x55efb5604720: (0, 0, 0), (28, 52, 53)
	0x55efb560e0b0: (1, 61, 8), (61, 76, 115)
	0x55efb5616978: (1, 75, 63), (27, 124, 115)
EMBREE: Set dst_map 0x14f67506b800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x825b800 for accel 0x55efb55d0b50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67506b800
EMBREE: Pack root 0x55efb55d1580 to root_map 0x14f67506b840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 168...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x830f900 = 0x14f67511f900 allocated to accel structure 0x55efb55d0bf0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67511f900 to 0xd3105f00
RTV: Building BLAS into 0x55efb55d0bf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1580
Compressed Node: i	exp: (-1, 2, -2)	origin: (-1.785295, 12.415592, 10.119463)
Children:
	0x55efb55d15e8: (133, 2, 28), (214, 56, 188)
	0x55efb55d3f48: (93, 0, 42), (149, 69, 159)
	0x55efb55d5a00: (0, 29, 0), (95, 61, 160)
	0x55efb55d6c40: (97, 68, 54), (141, 96, 140)
	0x55efb55d8060: (83, 187, 59), (127, 214, 140)
	0x55efb55d88b0: (101, 95, 87), (122, 188, 110)
EMBREE: Set dst_map 0x14f67511f900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x830f900 for accel 0x55efb55d0bf0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67511f900
EMBREE: Pack root 0x55efb55d1580 to root_map 0x14f67511f940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 169...
RTV: Creating acceleration struction of size 0x310d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x310d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x831fc00 = 0x14f67512fc00 allocated to accel structure 0x55efb55bd700
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67512fc00 to 0xd3116200
RTV: Building BLAS into 0x55efb55bd700
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 25112 triangles added; total: 25112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 1, 0)	origin: (-1.970806, 17.213131, -18.970644)
Children:
	0x55efb55dbbe8: (8, 183, 17), (102, 242, 162)
	0x55efb56dbaa8: (2, 0, 0), (189, 39, 195)
	0x55efb56f3038: (2, 113, 0), (201, 185, 48)
	0x55efb5704028: (0, 112, 33), (218, 184, 212)
	0x55efb5710a58: (72, 15, 36), (208, 131, 217)
	0x55efb571b6a8: (2, 15, 16), (75, 148, 189)
EMBREE: Set dst_map 0x14f67512fc00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x831fc00 for accel 0x55efb55bd700
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67512fc00
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f67512fc40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 170...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8630900 = 0x14f675440900 allocated to accel structure 0x55efb55d0d00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675440900 to 0xd3426f00
RTV: Building BLAS into 0x55efb55d0d00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1580
Compressed Node: i	exp: (2, -2, -1)	origin: (1.035907, 15.344007, -12.966626)
Children:
	0x55efb55d15e8: (0, 1, 125), (131, 163, 189)
	0x55efb55dbc18: (0, 24, 0), (132, 174, 17)
	0x55efb55e3488: (0, 0, 16), (51, 198, 133)
	0x55efb55e4f80: (83, 0, 16), (131, 198, 133)
	0x55efb55e6a20: (36, 0, 52), (97, 198, 189)
	0x55efb55e8158: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x14f675440900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8630900 for accel 0x55efb55d0d00
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675440900
EMBREE: Pack root 0x55efb55d1580 to root_map 0x14f675440940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 171...
RTV: Creating acceleration struction of size 0x135100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x135100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8662a00 = 0x14f675472a00 allocated to accel structure 0x55efb55bd610
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675472a00 to 0xd3459000
RTV: Building BLAS into 0x55efb55bd610
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 9888 triangles added; total: 9888
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1580
Compressed Node: i	exp: (5, 4, 2)	origin: (-10.539998, 1.884147, 6.808161)
Children:
	0x55efb55d15e8: (0, 39, 0), (19, 88, 18)
	0x55efb56068c8: (129, 56, 57), (153, 145, 197)
	0x55efb561e780: (35, 116, 31), (76, 161, 72)
	0x55efb5634f40: (75, 144, 70), (154, 166, 215)
	0x55efb564a8a0: (13, 80, 12), (59, 119, 167)
	0x55efb5650e88: (13, 0, 0), (80, 101, 18)
EMBREE: Set dst_map 0x14f675472a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8662a00 for accel 0x55efb55bd610
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675472a00
EMBREE: Pack root 0x55efb55d1580 to root_map 0x14f675472a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 172...
RTV: Creating acceleration struction of size 0x52100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x52100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8797b00 = 0x14f6755a7b00 allocated to accel structure 0x55efb55d0e40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6755a7b00 to 0xd358e100
RTV: Building BLAS into 0x55efb55d0e40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2624 triangles added; total: 2624
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1580
Compressed Node: i	exp: (3, 2, 3)	origin: (-0.023113, 1.430584, 6.620296)
Children:
	0x55efb55d15e8: (0, 171, 132), (187, 229, 223)
	0x55efb55ddbb8: (7, 175, 48), (195, 230, 152)
	0x55efb55e7500: (15, 171, 2), (200, 206, 68)
	0x55efb55ec120: (19, 0, 0), (200, 174, 32)
	0x55efb55ef718: (103, 45, 207), (179, 173, 242)
	0x55efb55f2cc8: (0, 0, 192), (108, 173, 241)
EMBREE: Set dst_map 0x14f6755a7b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8797b00 for accel 0x55efb55d0e40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6755a7b00
EMBREE: Pack root 0x55efb55d1580 to root_map 0x14f6755a7b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 173...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x87e9c00 = 0x14f6755f9c00 allocated to accel structure 0x55efb55d0ee0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6755f9c00 to 0xd35e0200
RTV: Building BLAS into 0x55efb55d0ee0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d15c0
Compressed Node: i	exp: (-2, 1, 4)	origin: (22.340450, 16.814526, -18.057705)
Children:
	0x55efb55d1628: (0, 0, 91), (177, 157, 140)
	0x55efb55edc68: (0, 0, 0), (177, 157, 44)
	0x55efb5604310: (0, 0, 163), (177, 157, 195)
	0x55efb5613338: (0, 0, 139), (177, 157, 164)
	0x55efb5622440: (0, 0, 43), (177, 157, 62)
	0x55efb562f258: (0, 0, 61), (177, 157, 92)
EMBREE: Set dst_map 0x14f6755f9c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x87e9c00 for accel 0x55efb55d0ee0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6755f9c00
EMBREE: Pack root 0x55efb55d15c0 to root_map 0x14f6755f9c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 174...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x88e1d00 = 0x14f6756f1d00 allocated to accel structure 0x55efb55d0f80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6756f1d00 to 0xd36d8300
RTV: Building BLAS into 0x55efb55d0f80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f6756f1d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x88e1d00 for accel 0x55efb55d0f80
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6756f1d00
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f6756f1d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 175...
RTV: Creating acceleration struction of size 0x4900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x88e1f00 = 0x14f6756f1f00 allocated to accel structure 0x55efb55d1050
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6756f1f00 to 0xd36d8500
RTV: Building BLAS into 0x55efb55d1050
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 144 triangles added; total: 144
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1a80
Compressed Node: i	exp: (1, 2, 0)	origin: (14.859822, 5.603785, -23.893583)
Children:
	0x55efb55d1ae8: (0, 0, 0), (111, 26, 150)
	0x55efb55d2418: (108, 0, 66), (132, 141, 150)
	0x55efb55d2fa0: (0, 24, 0), (134, 144, 38)
	0x55efb55d33c0: (0, 24, 3), (133, 144, 41)
	0x55efb55d3608: (1, 24, 0), (135, 144, 38)
	0x55efb55d38a0: (1, 24, 2), (135, 144, 41)
EMBREE: Set dst_map 0x14f6756f1f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x88e1f00 for accel 0x55efb55d1050
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6756f1f00
EMBREE: Pack root 0x55efb55d1a80 to root_map 0x14f6756f1f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 176...
RTV: Creating acceleration struction of size 0x600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x88e6800 = 0x14f6756f6800 allocated to accel structure 0x55efb55d10f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6756f6800 to 0xd36dce00
RTV: Building BLAS into 0x55efb55d10f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10 triangles added; total: 10
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1a80
Compressed Node: i	exp: (0, -1, 0)	origin: (16.490942, 6.457016, -23.218424)
Children:
	0x55efb55d1ae8: (1, 0, 2), (138, 219, 4)
	0x55efb55d1b68: (0, 2, 209), (138, 223, 211)
	0x55efb55d1be8: (0, 0, 2), (2, 219, 211)
	0x55efb55d1c68: (137, 1, 2), (139, 221, 211)
	0x55efb55d1ce8: (17, 199, 0), (129, 203, 213)
	0x55efb55d1cf4: (18, 201, 0), (129, 205, 213)
EMBREE: Set dst_map 0x14f6756f6800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x88e6800 for accel 0x55efb55d10f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6756f6800
EMBREE: Pack root 0x55efb55d1a80 to root_map 0x14f6756f6840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 177...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x88e6e00 = 0x14f6756f6e00 allocated to accel structure 0x55efb55d1190
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6756f6e00 to 0xd36dd400
RTV: Building BLAS into 0x55efb55d1190
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1a80
Compressed Node: i	exp: (0, 2, 1)	origin: (14.926736, 11.642426, -12.324431)
Children:
	0x55efb55d1ae8: (7, 29, 62), (200, 122, 131)
	0x55efb55e6f20: (0, 0, 0), (207, 42, 67)
	0x55efb55ebf78: (7, 109, 0), (200, 145, 69)
	0x55efb55effe0: (59, 0, 8), (148, 145, 53)
	0x55efb55f0700: (7, 40, 53), (20, 120, 69)
	0x55efb55f0d10: (187, 40, 53), (200, 120, 69)
EMBREE: Set dst_map 0x14f6756f6e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x88e6e00 for accel 0x55efb55d1190
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6756f6e00
EMBREE: Pack root 0x55efb55d1a80 to root_map 0x14f6756f6e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 178...
RTV: Creating acceleration struction of size 0x32f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x892e700 = 0x14f67573e700 allocated to accel structure 0x55efb55d1230
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67573e700 to 0xd3724d00
RTV: Building BLAS into 0x55efb55d1230
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1628 triangles added; total: 1628
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1a80
Compressed Node: i	exp: (3, 3, 3)	origin: (-0.967658, 4.291109, 6.680929)
Children:
	0x55efb55d1ae8: (131, 23, 57), (198, 109, 184)
	0x55efb55d7760: (0, 0, 96), (32, 111, 176)
	0x55efb55dc7d8: (30, 0, 164), (134, 111, 185)
	0x55efb55df930: (11, 1, 3), (40, 112, 92)
	0x55efb55e2600: (37, 0, 11), (132, 111, 31)
	0x55efb55e50a8: (131, 20, 0), (200, 243, 61)
EMBREE: Set dst_map 0x14f67573e700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x892e700 for accel 0x55efb55d1230
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67573e700
EMBREE: Pack root 0x55efb55d1a80 to root_map 0x14f67573e740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 179...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8961600 = 0x14f675771600 allocated to accel structure 0x55efb55d12d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675771600 to 0xd3757c00
RTV: Building BLAS into 0x55efb55d12d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1a80
Compressed Node: i	exp: (0, 2, 1)	origin: (6.198376, 11.642426, -12.324431)
Children:
	0x55efb55d1ae8: (7, 29, 62), (200, 122, 131)
	0x55efb55e6f20: (0, 0, 0), (207, 42, 67)
	0x55efb55ebf78: (7, 109, 0), (200, 145, 69)
	0x55efb55effe0: (59, 0, 8), (148, 145, 53)
	0x55efb55f0700: (7, 40, 53), (20, 120, 69)
	0x55efb55f0d10: (187, 40, 53), (200, 120, 69)
EMBREE: Set dst_map 0x14f675771600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8961600 for accel 0x55efb55d12d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675771600
EMBREE: Pack root 0x55efb55d1a80 to root_map 0x14f675771640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 180...
RTV: Creating acceleration struction of size 0x6900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x89a8f00 = 0x14f6757b8f00 allocated to accel structure 0x55efb55d1370
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6757b8f00 to 0xd379f500
RTV: Building BLAS into 0x55efb55d1370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 208 triangles added; total: 208
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1a80
Compressed Node: i	exp: (2, 1, 1)	origin: (22.757118, 6.483803, -28.712318)
Children:
	0x55efb55d1ae8: (49, 87, 42), (156, 173, 146)
	0x55efb55d2840: (146, 0, 0), (196, 37, 124)
	0x55efb55d3008: (62, 29, 9), (149, 99, 63)
	0x55efb55d3780: (0, 23, 61), (67, 99, 157)
	0x55efb55d3de8: (0, 0, 0), (195, 31, 157)
	0x55efb55d4278: (4, 27, 42), (153, 137, 157)
EMBREE: Set dst_map 0x14f6757b8f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x89a8f00 for accel 0x55efb55d1370
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6757b8f00
EMBREE: Pack root 0x55efb55d1a80 to root_map 0x14f6757b8f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 181...
RTV: Creating acceleration struction of size 0x5ea00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5ea00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x89af800 = 0x14f6757bf800 allocated to accel structure 0x55efb55d1410
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6757bf800 to 0xd37a5e00
RTV: Building BLAS into 0x55efb55d1410
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3026 triangles added; total: 3026
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1ac0
Compressed Node: i	exp: (0, 2, 0)	origin: (0.966728, 12.519979, 9.978691)
Children:
	0x55efb55d1b28: (0, 41, 50), (193, 60, 189)
	0x55efb55e73f0: (30, 105, 48), (172, 137, 191)
	0x55efb55f1cc0: (5, 0, 0), (156, 43, 105)
	0x55efb55f5400: (29, 59, 45), (176, 108, 192)
	0x55efb55f8198: (29, 5, 70), (167, 43, 175)
	0x55efb55fa950: (25, 59, 41), (180, 73, 196)
EMBREE: Set dst_map 0x14f6757bf800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x89af800 for accel 0x55efb55d1410
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6757bf800
EMBREE: Pack root 0x55efb55d1ac0 to root_map 0x14f6757bf840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 182...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8a0e200 = 0x14f67581e200 allocated to accel structure 0x55efb55d14b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67581e200 to 0xd3804800
RTV: Building BLAS into 0x55efb55d14b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1f80
Compressed Node: i	exp: (2, 2, 3)	origin: (-2.758100, 1.003291, 6.734889)
Children:
	0x55efb55d1fe8: (130, 181, 0), (187, 234, 157)
	0x55efb55fea08: (0, 178, 57), (50, 234, 177)
	0x55efb5622100: (17, 40, 134), (141, 193, 158)
	0x55efb5645c68: (31, 0, 57), (161, 197, 72)
	0x55efb565db68: (18, 181, 52), (155, 210, 158)
	0x55efb5673760: (22, 139, 65), (158, 193, 120)
EMBREE: Set dst_map 0x14f67581e200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8a0e200 for accel 0x55efb55d14b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67581e200
EMBREE: Pack root 0x55efb55d1f80 to root_map 0x14f67581e240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 183...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8bae000 = 0x14f6759be000 allocated to accel structure 0x55efb55d1550
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6759be000 to 0xd39a4600
RTV: Building BLAS into 0x55efb55d1550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1f80
Compressed Node: i	exp: (-1, 2, 0)	origin: (-3.394199, 8.804159, -12.773970)
Children:
	0x55efb55d1fe8: (11, 0, 70), (149, 131, 224)
	0x55efb55df560: (2, 88, 0), (95, 131, 119)
	0x55efb55e3170: (0, 32, 9), (116, 130, 157)
	0x55efb55e5c60: (2, 1, 11), (84, 127, 182)
	0x55efb55e6a88: (45, 1, 57), (140, 85, 155)
	0x55efb55e7590: (68, 1, 9), (149, 127, 180)
EMBREE: Set dst_map 0x14f6759be000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8bae000 for accel 0x55efb55d1550
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6759be000
EMBREE: Pack root 0x55efb55d1f80 to root_map 0x14f6759be040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 184...
RTV: Creating acceleration struction of size 0x32000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8be0100 = 0x14f6759f0100 allocated to accel structure 0x55efb55d15f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6759f0100 to 0xd39d6700
RTV: Building BLAS into 0x55efb55d15f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1598 triangles added; total: 1598
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1f80
Compressed Node: i	exp: (-1, 2, 0)	origin: (16.337204, 11.166733, -12.634105)
Children:
	0x55efb55d1fe8: (17, 0, 72), (149, 132, 202)
	0x55efb55de430: (2, 94, 0), (95, 132, 108)
	0x55efb55e1e20: (0, 38, 9), (116, 131, 144)
	0x55efb55e4778: (20, 1, 50), (140, 86, 140)
	0x55efb55e6540: (2, 1, 11), (107, 128, 160)
	0x55efb55e7758: (68, 1, 9), (149, 129, 158)
EMBREE: Set dst_map 0x14f6759f0100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8be0100 for accel 0x55efb55d15f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6759f0100
EMBREE: Pack root 0x55efb55d1f80 to root_map 0x14f6759f0140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 185...
RTV: Creating acceleration struction of size 0x3800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c12100 = 0x14f675a22100 allocated to accel structure 0x55efb55d1690
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675a22100 to 0xd3a08700
RTV: Building BLAS into 0x55efb55d1690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 110 triangles added; total: 110
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1f80
Compressed Node: i	exp: (7, 7, 7)	origin: (-75.062286, -12.349403, -65.584579)
Children:
	0x55efb55d1fe8: (86, 55, 91), (100, 86, 172)
	0x55efb55d2e58: (86, 52, 79), (100, 86, 92)
	0x55efb55d3488: (0, 95, 40), (186, 108, 57)
	0x55efb55d38c0: (41, 0, 113), (75, 144, 147)
	0x55efb55d3cc0: (21, 72, 0), (35, 78, 168)
	0x55efb55d4018: (0, 0, 146), (35, 144, 168)
EMBREE: Set dst_map 0x14f675a22100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c12100 for accel 0x55efb55d1690
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675a22100
EMBREE: Pack root 0x55efb55d1f80 to root_map 0x14f675a22140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 186...
RTV: Creating acceleration struction of size 0x16600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x16600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c15900 = 0x14f675a25900 allocated to accel structure 0x55efb55d1730
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675a25900 to 0xd3a0bf00
RTV: Building BLAS into 0x55efb55d1730
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 714 triangles added; total: 714
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1f80
Compressed Node: i	exp: (2, 0, 1)	origin: (7.881705, 13.553783, -13.811920)
Children:
	0x55efb55d1fe8: (0, 7, 0), (27, 108, 121)
	0x55efb55d4f70: (0, 24, 119), (42, 110, 180)
	0x55efb55d7b00: (40, 0, 137), (50, 135, 210)
	0x55efb55d9b78: (101, 16, 142), (135, 119, 202)
	0x55efb55dd058: (97, 0, 147), (107, 135, 220)
	0x55efb55ddac8: (44, 0, 139), (107, 135, 220)
EMBREE: Set dst_map 0x14f675a25900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c15900 for accel 0x55efb55d1730
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675a25900
EMBREE: Pack root 0x55efb55d1f80 to root_map 0x14f675a25940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 187...
RTV: Creating acceleration struction of size 0x600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c2bf00 = 0x14f675a3bf00 allocated to accel structure 0x55efb55d17d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675a3bf00 to 0xd3a22500
RTV: Building BLAS into 0x55efb55d17d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10 triangles added; total: 10
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1f80
Compressed Node: i	exp: (1, 0, 0)	origin: (14.672216, 5.226297, -23.901310)
Children:
	0x55efb55d1fe8: (0, 69, 0), (21, 212, 179)
	0x55efb55d2068: (123, 0, 10), (145, 141, 186)
	0x55efb55d20e8: (0, 11, 170), (143, 212, 189)
	0x55efb55d2168: (1, 0, 0), (145, 200, 19)
	0x55efb55d21e8: (0, 9, 17), (129, 92, 156)
	0x55efb55d21f4: (0, 9, 28), (129, 92, 166)
EMBREE: Set dst_map 0x14f675a3bf00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c2bf00 for accel 0x55efb55d17d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675a3bf00
EMBREE: Pack root 0x55efb55d1f80 to root_map 0x14f675a3bf40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 188...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c2c500 = 0x14f675a3c500 allocated to accel structure 0x55efb55d1870
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675a3c500 to 0xd3a22b00
RTV: Building BLAS into 0x55efb55d1870
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1f80
Compressed Node: i	exp: (2, -1, 0)	origin: (-3.088338, 8.719844, 7.258079)
Children:
	0x55efb55d1fe8: (0, 31, 69), (50, 110, 126)
	0x55efb55d4130: (88, 45, 144), (167, 95, 210)
	0x55efb55d5780: (64, 0, 0), (120, 141, 92)
	0x55efb55d6a70: (49, 20, 75), (129, 120, 144)
	0x55efb55d7ca8: (70, 0, 114), (120, 141, 191)
	0x55efb55d8d00: (74, 32, 91), (172, 109, 156)
EMBREE: Set dst_map 0x14f675a3c500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c2c500 for accel 0x55efb55d1870
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675a3c500
EMBREE: Pack root 0x55efb55d1f80 to root_map 0x14f675a3c540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 189...
RTV: Creating acceleration struction of size 0x6600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c3c800 = 0x14f675a4c800 allocated to accel structure 0x55efb55d1910
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675a4c800 to 0xd3a32e00
RTV: Building BLAS into 0x55efb55d1910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 202 triangles added; total: 202
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d1fc0
Compressed Node: i	exp: (1, 2, 0)	origin: (-2.106196, 9.615215, 10.534891)
Children:
	0x55efb55d2028: (91, 0, 38), (175, 71, 105)
	0x55efb55d2d80: (0, 4, 0), (45, 75, 72)
	0x55efb55d3698: (39, 2, 22), (97, 73, 82)
	0x55efb55d3fd8: (96, 68, 54), (177, 128, 149)
	0x55efb55d4540: (5, 72, 30), (48, 131, 116)
	0x55efb55d48c0: (45, 70, 38), (100, 130, 127)
EMBREE: Set dst_map 0x14f675a4c800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c3c800 for accel 0x55efb55d1910
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675a4c800
EMBREE: Pack root 0x55efb55d1fc0 to root_map 0x14f675a4c840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 190...
RTV: Creating acceleration struction of size 0x12900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c42e00 = 0x14f675a52e00 allocated to accel structure 0x55efb55d19b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675a52e00 to 0xd3a39400
RTV: Building BLAS into 0x55efb55d19b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 592 triangles added; total: 592
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2480
Compressed Node: i	exp: (6, 2, 1)	origin: (-66.080322, -1.858969, 29.155613)
Children:
	0x55efb55d24e8: (127, 0, 0), (134, 242, 185)
	0x55efb55d84c0: (0, 191, 42), (131, 208, 142)
	0x55efb55dc108: (0, 33, 42), (33, 208, 142)
	0x55efb55dc640: (65, 27, 42), (98, 198, 142)
	0x55efb55dca40: (32, 33, 42), (66, 198, 142)
	0x55efb55dce40: (97, 27, 42), (131, 198, 142)
EMBREE: Set dst_map 0x14f675a52e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c42e00 for accel 0x55efb55d19b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675a52e00
EMBREE: Pack root 0x55efb55d2480 to root_map 0x14f675a52e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 191...
RTV: Creating acceleration struction of size 0x46600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x46600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c55700 = 0x14f675a65700 allocated to accel structure 0x55efb55d1a50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675a65700 to 0xd3a4bd00
RTV: Building BLAS into 0x55efb55d1a50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2250 triangles added; total: 2250
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2480
Compressed Node: i	exp: (2, 2, 1)	origin: (-2.354312, 12.702306, -12.187840)
Children:
	0x55efb55d24e8: (0, 7, 6), (51, 147, 128)
	0x55efb55e5998: (115, 7, 0), (171, 147, 122)
	0x55efb55eb5c0: (20, 0, 0), (145, 40, 122)
	0x55efb55ee0a8: (35, 105, 0), (145, 147, 123)
	0x55efb55f0700: (45, 37, 120), (128, 115, 123)
	0x55efb55f0f18: (20, 7, 25), (124, 147, 81)
EMBREE: Set dst_map 0x14f675a65700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c55700 for accel 0x55efb55d1a50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675a65700
EMBREE: Pack root 0x55efb55d2480 to root_map 0x14f675a65740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 192...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8c9bd00 = 0x14f675aabd00 allocated to accel structure 0x55efb55bd5b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675aabd00 to 0xd3a92300
RTV: Building BLAS into 0x55efb55bd5b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2480
Compressed Node: i	exp: (-1, 1, 0)	origin: (4.331082, 10.505860, 12.711842)
Children:
	0x55efb55d24e8: (0, 29, 0), (246, 69, 129)
	0x55efb55dbf18: (0, 64, 1), (239, 103, 126)
	0x55efb55e2250: (13, 0, 12), (209, 31, 115)
	0x55efb55e4dd8: (30, 102, 13), (225, 129, 117)
	0x55efb55e5658: (48, 82, 24), (200, 192, 103)
	0x55efb55e5b40: (48, 128, 24), (200, 134, 77)
EMBREE: Set dst_map 0x14f675aabd00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8c9bd00 for accel 0x55efb55bd5b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675aabd00
EMBREE: Pack root 0x55efb55d2480 to root_map 0x14f675aabd40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 193...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8cc3c00 = 0x14f675ad3c00 allocated to accel structure 0x55efb55d1b60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675ad3c00 to 0xd3aba200
RTV: Building BLAS into 0x55efb55d1b60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2480
Compressed Node: i	exp: (-1, -2, -2)	origin: (-21.800064, 1.884045, 30.662657)
Children:
	0x55efb55d24e8: (116, 0, 0), (181, 94, 156)
	0x55efb55d4b38: (53, 0, 0), (117, 45, 156)
	0x55efb55d65c0: (129, 93, 36), (234, 165, 119)
	0x55efb55d7d08: (57, 93, 36), (134, 154, 119)
	0x55efb55d9680: (66, 42, 42), (117, 94, 113)
	0x55efb55dbf00: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x14f675ad3c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8cc3c00 for accel 0x55efb55d1b60
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675ad3c00
EMBREE: Pack root 0x55efb55d2480 to root_map 0x14f675ad3c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 194...
RTV: Creating acceleration struction of size 0x10f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8cd5d00 = 0x14f675ae5d00 allocated to accel structure 0x55efb55d1c00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675ae5d00 to 0xd3acc300
RTV: Building BLAS into 0x55efb55d1c00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 540 triangles added; total: 540
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2480
Compressed Node: i	exp: (-1, -1, 0)	origin: (15.360582, 13.309366, -12.876720)
Children:
	0x55efb55d24e8: (0, 23, 67), (199, 210, 127)
	0x55efb55d42b0: (0, 73, 113), (199, 191, 158)
	0x55efb55d5c80: (20, 166, 0), (179, 227, 79)
	0x55efb55d70e0: (20, 0, 19), (179, 61, 80)
	0x55efb55d7d60: (0, 22, 5), (177, 203, 88)
	0x55efb55d8ad8: (164, 57, 55), (199, 192, 84)
EMBREE: Set dst_map 0x14f675ae5d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8cd5d00 for accel 0x55efb55d1c00
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675ae5d00
EMBREE: Pack root 0x55efb55d2480 to root_map 0x14f675ae5d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 195...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8ce6c00 = 0x14f675af6c00 allocated to accel structure 0x55efb55d1ca0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675af6c00 to 0xd3add200
RTV: Building BLAS into 0x55efb55d1ca0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2480
Compressed Node: i	exp: (-2, -2, -1)	origin: (-22.491514, 1.604704, 33.421196)
Children:
	0x55efb55d24e8: (39, 42, 66), (117, 94, 168)
	0x55efb55d4930: (37, 93, 0), (123, 165, 118)
	0x55efb55d6558: (0, 0, 52), (156, 45, 119)
	0x55efb55d7fc0: (0, 0, 114), (156, 45, 181)
	0x55efb55d9980: (33, 93, 104), (119, 154, 177)
	0x55efb55dcbe0: (33, 115, 170), (112, 165, 234)
EMBREE: Set dst_map 0x14f675af6c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8ce6c00 for accel 0x55efb55d1ca0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675af6c00
EMBREE: Pack root 0x55efb55d2480 to root_map 0x14f675af6c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 196...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8cf8d00 = 0x14f675b08d00 allocated to accel structure 0x55efb55d1d40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675b08d00 to 0xd3aef300
RTV: Building BLAS into 0x55efb55d1d40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2480
Compressed Node: i	exp: (2, 3, 2)	origin: (-2.899752, 10.265494, -15.166895)
Children:
	0x55efb55d24e8: (0, 0, 166), (76, 171, 221)
	0x55efb5601980: (40, 150, 39), (202, 171, 186)
	0x55efb5626188: (182, 69, 175), (230, 199, 226)
	0x55efb5641720: (16, 69, 0), (208, 77, 190)
	0x55efb5658a00: (46, 62, 172), (203, 170, 203)
	0x55efb566df20: (0, 70, 134), (206, 147, 193)
EMBREE: Set dst_map 0x14f675b08d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8cf8d00 for accel 0x55efb55d1d40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675b08d00
EMBREE: Pack root 0x55efb55d2480 to root_map 0x14f675b08d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 197...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8e98b00 = 0x14f675ca8b00 allocated to accel structure 0x55efb55d1de0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675ca8b00 to 0xd3c8f100
RTV: Building BLAS into 0x55efb55d1de0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d24c0
Compressed Node: i	exp: (0, 1, 3)	origin: (1.826628, 7.570610, 7.567293)
Children:
	0x55efb55d2528: (0, 0, 136), (84, 139, 159)
	0x55efb55d3b80: (105, 0, 0), (195, 138, 24)
	0x55efb55d5078: (46, 0, 79), (133, 182, 111)
	0x55efb55d5c30: (70, 0, 50), (152, 182, 81)
	0x55efb55d6810: (87, 0, 22), (171, 164, 54)
	0x55efb55d7150: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x14f675ca8b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8e98b00 for accel 0x55efb55d1de0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675ca8b00
EMBREE: Pack root 0x55efb55d24c0 to root_map 0x14f675ca8b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 198...
RTV: Creating acceleration struction of size 0x66d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x66d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8ea4000 = 0x14f675cb4000 allocated to accel structure 0x55efb55d1e80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675cb4000 to 0xd3c9a600
RTV: Building BLAS into 0x55efb55d1e80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3288 triangles added; total: 3288
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2980
Compressed Node: i	exp: (1, 2, 1)	origin: (-2.232414, 13.358172, 9.420550)
Children:
	0x55efb55d29e8: (71, 13, 2), (110, 52, 135)
	0x55efb55e3ad8: (83, 30, 43), (112, 79, 102)
	0x55efb55f1820: (90, 40, 40), (101, 163, 46)
	0x55efb55f8d88: (0, 0, 0), (80, 16, 137)
	0x55efb55fb120: (138, 0, 13), (174, 16, 120)
	0x55efb55fc6e8: (77, 0, 0), (143, 16, 137)
EMBREE: Set dst_map 0x14f675cb4000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8ea4000 for accel 0x55efb55d1e80
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675cb4000
EMBREE: Pack root 0x55efb55d2980 to root_map 0x14f675cb4040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 199...
RTV: Creating acceleration struction of size 0xdd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xdd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8f0ad00 = 0x14f675d1ad00 allocated to accel structure 0x55efb55d1f50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675d1ad00 to 0xd3d01300
RTV: Building BLAS into 0x55efb55d1f50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 440 triangles added; total: 440
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2980
Compressed Node: i	exp: (-1, 0, -1)	origin: (15.951700, 9.290928, -11.916551)
Children:
	0x55efb55d29e8: (0, 0, 43), (218, 26, 128)
	0x55efb55d4f98: (0, 153, 0), (218, 175, 80)
	0x55efb55d6e00: (73, 18, 23), (218, 89, 136)
	0x55efb55d85a0: (0, 18, 23), (82, 89, 128)
	0x55efb55d8ef0: (73, 82, 0), (218, 161, 102)
	0x55efb55d9480: (0, 82, 0), (74, 161, 102)
EMBREE: Set dst_map 0x14f675d1ad00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8f0ad00 for accel 0x55efb55d1f50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675d1ad00
EMBREE: Pack root 0x55efb55d2980 to root_map 0x14f675d1ad40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 200...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8f18a00 = 0x14f675d28a00 allocated to accel structure 0x55efb55d1ff0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675d28a00 to 0xd3d0f000
RTV: Building BLAS into 0x55efb55d1ff0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2980
Compressed Node: i	exp: (0, 1, 2)	origin: (-2.865270, 4.386269, 7.498233)
Children:
	0x55efb55d29e8: (0, 133, 0), (66, 171, 118)
	0x55efb55d3300: (32, 7, 0), (139, 171, 44)
	0x55efb55d3960: (16, 0, 86), (115, 152, 130)
	0x55efb55d4040: (63, 31, 11), (130, 62, 130)
	0x55efb55d41f0: (45, 31, 65), (101, 119, 70)
	0x55efb55d44f0: (32, 93, 5), (98, 117, 123)
EMBREE: Set dst_map 0x14f675d28a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8f18a00 for accel 0x55efb55d1ff0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675d28a00
EMBREE: Pack root 0x55efb55d2980 to root_map 0x14f675d28a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 201...
RTV: Creating acceleration struction of size 0x5300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8f1c300 = 0x14f675d2c300 allocated to accel structure 0x55efb55d2090
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675d2c300 to 0xd3d12900
RTV: Building BLAS into 0x55efb55d2090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 164 triangles added; total: 164
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2980
Compressed Node: i	exp: (2, 2, 2)	origin: (5.700936, 4.909880, 7.697218)
Children:
	0x55efb55d29e8: (184, 137, 19), (229, 188, 130)
	0x55efb55d39a0: (0, 144, 0), (23, 209, 110)
	0x55efb55d4540: (6, 161, 56), (224, 199, 130)
	0x55efb55d4ac8: (0, 0, 12), (25, 193, 107)
	0x55efb55d50b0: (18, 175, 28), (211, 209, 56)
	0x55efb55d52c8: (12, 164, 0), (229, 205, 79)
EMBREE: Set dst_map 0x14f675d2c300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8f1c300 for accel 0x55efb55d2090
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675d2c300
EMBREE: Pack root 0x55efb55d2980 to root_map 0x14f675d2c340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 202...
RTV: Creating acceleration struction of size 0x117900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x117900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x8f21600 = 0x14f675d31600 allocated to accel structure 0x55efb55d2130
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675d31600 to 0xd3d17c00
RTV: Building BLAS into 0x55efb55d2130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8944 triangles added; total: 8944
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2980
Compressed Node: i	exp: (5, 4, 3)	origin: (-9.561315, 1.874641, 6.150032)
Children:
	0x55efb55d29e8: (39, 124, 27), (109, 181, 203)
	0x55efb55fbfe0: (87, 76, 21), (145, 126, 244)
	0x55efb5614340: (0, 0, 0), (54, 63, 190)
	0x55efb56282c8: (47, 77, 11), (93, 129, 222)
	0x55efb5638280: (66, 33, 11), (125, 79, 238)
	0x55efb563e5f0: (117, 6, 205), (143, 15, 243)
EMBREE: Set dst_map 0x14f675d31600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x8f21600 for accel 0x55efb55d2130
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675d31600
EMBREE: Pack root 0x55efb55d2980 to root_map 0x14f675d31640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 203...
RTV: Creating acceleration struction of size 0x7e100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9038f00 = 0x14f675e48f00 allocated to accel structure 0x55efb55d21d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675e48f00 to 0xd3e2f500
RTV: Building BLAS into 0x55efb55d21d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4032 triangles added; total: 4032
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2980
Compressed Node: i	exp: (0, -1, -1)	origin: (-23.236256, 1.289402, 33.545475)
Children:
	0x55efb55d29e8: (179, 186, 0), (237, 237, 120)
	0x55efb55eaab8: (132, 159, 39), (186, 219, 139)
	0x55efb55f9158: (0, 0, 207), (69, 72, 251)
	0x55efb55ff480: (113, 112, 55), (139, 185, 153)
	0x55efb56038c8: (32, 23, 158), (103, 143, 218)
	0x55efb56080e0: (93, 78, 40), (121, 166, 181)
EMBREE: Set dst_map 0x14f675e48f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9038f00 for accel 0x55efb55d21d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675e48f00
EMBREE: Pack root 0x55efb55d2980 to root_map 0x14f675e48f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 204...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x90b7000 = 0x14f675ec7000 allocated to accel structure 0x55efb55d2270
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675ec7000 to 0xd3ead600
RTV: Building BLAS into 0x55efb55d2270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2980
Compressed Node: i	exp: (-1, -2, -1)	origin: (5.483811, 9.170691, -36.772522)
Children:
	0x55efb55d29e8: (0, 26, 0), (63, 201, 110)
	0x55efb55d2bf8: (38, 2, 33), (124, 154, 132)
	0x55efb55d2e00: (67, 0, 33), (147, 140, 132)
	0x55efb55d2eb0: (51, 101, 33), (147, 154, 131)
	0x55efb55d2f58: (6, 0, 25), (68, 34, 110)
	0x55efb55d2ff0: (49, 19, 13), (81, 168, 109)
EMBREE: Set dst_map 0x14f675ec7000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x90b7000 for accel 0x55efb55d2270
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675ec7000
EMBREE: Pack root 0x55efb55d2980 to root_map 0x14f675ec7040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 205...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x90b8200 = 0x14f675ec8200 allocated to accel structure 0x55efb55bd460
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675ec8200 to 0xd3eae800
RTV: Building BLAS into 0x55efb55bd460
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d29c0
Compressed Node: i	exp: (2, 1, -1)	origin: (5.710342, 4.136377, 12.246711)
Children:
	0x55efb55d2a28: (0, 0, 0), (87, 165, 77)
	0x55efb55d3470: (83, 8, 52), (175, 177, 163)
	0x55efb55d3dc8: (7, 97, 7), (169, 125, 161)
	0x55efb55d4118: (81, 33, 59), (87, 125, 71)
	0x55efb55d4398: (0, 36, 0), (161, 63, 154)
	0x55efb55d45b0: (83, 141, 52), (87, 165, 77)
EMBREE: Set dst_map 0x14f675ec8200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x90b8200 for accel 0x55efb55bd460
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675ec8200
EMBREE: Pack root 0x55efb55d29c0 to root_map 0x14f675ec8240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 206...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x90bbb00 = 0x14f675ecbb00 allocated to accel structure 0x55efb55d2380
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675ecbb00 to 0xd3eb2100
RTV: Building BLAS into 0x55efb55d2380
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2e80
Compressed Node: i	exp: (1, -2, 1)	origin: (-2.862139, 14.335108, -17.811722)
Children:
	0x55efb55d2ee8: (0, 0, 114), (183, 199, 177)
	0x55efb55d9a30: (0, 15, 68), (124, 183, 116)
	0x55efb55df000: (10, 0, 0), (103, 199, 82)
	0x55efb55e2170: (22, 0, 0), (183, 18, 141)
	0x55efb55e2320: (22, 180, 0), (183, 199, 141)
	0x55efb55e2558: (24, 14, 0), (183, 184, 139)
EMBREE: Set dst_map 0x14f675ecbb00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x90bbb00 for accel 0x55efb55d2380
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675ecbb00
EMBREE: Pack root 0x55efb55d2e80 to root_map 0x14f675ecbb40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 207...
RTV: Creating acceleration struction of size 0x28a00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x28a00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x90d9800 = 0x14f675ee9800 allocated to accel structure 0x55efb55d2450
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675ee9800 to 0xd3ecfe00
RTV: Building BLAS into 0x55efb55d2450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1298 triangles added; total: 1298
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2e80
Compressed Node: i	exp: (1, 1, 0)	origin: (-1.474149, 12.293422, 9.688374)
Children:
	0x55efb55d2ee8: (111, 70, 24), (210, 133, 207)
	0x55efb55d8808: (16, 70, 15), (157, 128, 185)
	0x55efb55dedb8: (0, 0, 73), (115, 86, 197)
	0x55efb55e17d8: (0, 18, 0), (168, 95, 102)
	0x55efb55e3bb8: (108, 63, 26), (208, 87, 204)
	0x55efb55e4f30: (112, 18, 24), (210, 104, 207)
EMBREE: Set dst_map 0x14f675ee9800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x90d9800 for accel 0x55efb55d2450
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675ee9800
EMBREE: Pack root 0x55efb55d2e80 to root_map 0x14f675ee9840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 208...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9102200 = 0x14f675f12200 allocated to accel structure 0x55efb55d24f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675f12200 to 0xd3ef8800
RTV: Building BLAS into 0x55efb55d24f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2e80
Compressed Node: i	exp: (-2, -2, -1)	origin: (-36.088058, 1.849942, 35.964832)
Children:
	0x55efb55d2ee8: (0, 0, 116), (156, 78, 181)
	0x55efb55d55e8: (0, 0, 53), (156, 37, 117)
	0x55efb55d71a8: (36, 77, 129), (119, 137, 234)
	0x55efb55d89c0: (36, 77, 57), (119, 128, 134)
	0x55efb55dbd18: (42, 35, 66), (113, 78, 117)
	0x55efb55dca78: (38, 95, 0), (117, 137, 63)
EMBREE: Set dst_map 0x14f675f12200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9102200 for accel 0x55efb55d24f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675f12200
EMBREE: Pack root 0x55efb55d2e80 to root_map 0x14f675f12240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 209...
RTV: Creating acceleration struction of size 0xe2f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xe2f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9114300 = 0x14f675f24300 allocated to accel structure 0x55efb55d2590
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f675f24300 to 0xd3f0a900
RTV: Building BLAS into 0x55efb55d2590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7260 triangles added; total: 7260
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2e80
Compressed Node: i	exp: (1, -1, -4)	origin: (8.498722, 7.708747, -36.005699)
Children:
	0x55efb55d2ee8: (96, 0, 0), (159, 109, 189)
	0x55efb55eb8a0: (0, 143, 0), (86, 226, 189)
	0x55efb55ffb68: (143, 143, 0), (181, 199, 189)
	0x55efb5611ef0: (95, 143, 0), (145, 227, 189)
	0x55efb5621848: (0, 26, 0), (46, 108, 189)
	0x55efb562ad30: (41, 26, 0), (96, 82, 189)
EMBREE: Set dst_map 0x14f675f24300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9114300 for accel 0x55efb55d2590
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f675f24300
EMBREE: Pack root 0x55efb55d2e80 to root_map 0x14f675f24340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 210...
RTV: Creating acceleration struction of size 0xf5d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x91f7200 = 0x14f676007200 allocated to accel structure 0x55efb55bd670
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676007200 to 0xd3fed800
RTV: Building BLAS into 0x55efb55bd670
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7864 triangles added; total: 7864
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2e80
Compressed Node: i	exp: (3, 4, 2)	origin: (22.316761, 18.422203, -31.914839)
Children:
	0x55efb55d2ee8: (0, 123, 77), (110, 153, 103)
	0x55efb55f0520: (141, 119, 42), (202, 153, 138)
	0x55efb5609998: (80, 0, 0), (155, 30, 181)
	0x55efb5618ff8: (107, 22, 66), (152, 126, 115)
	0x55efb5625ae8: (101, 111, 65), (145, 155, 116)
	0x55efb56310b8: (47, 0, 0), (88, 23, 181)
EMBREE: Set dst_map 0x14f676007200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x91f7200 for accel 0x55efb55bd670
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676007200
EMBREE: Pack root 0x55efb55d2e80 to root_map 0x14f676007240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 211...
RTV: Creating acceleration struction of size 0x2ef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2ef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x92ecf00 = 0x14f6760fcf00 allocated to accel structure 0x55efb55d26a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6760fcf00 to 0xd40e3500
RTV: Building BLAS into 0x55efb55d26a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1500 triangles added; total: 1500
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2e80
Compressed Node: i	exp: (-2, 2, -1)	origin: (17.490768, 6.974405, -28.485332)
Children:
	0x55efb55d2ee8: (0, 179, 0), (165, 203, 181)
	0x55efb55e0960: (0, 138, 74), (119, 184, 206)
	0x55efb55e6588: (35, 0, 60), (165, 9, 111)
	0x55efb55e7fd8: (82, 73, 109), (99, 97, 143)
	0x55efb55e8b10: (73, 80, 74), (108, 157, 174)
	0x55efb55e9518: (73, 4, 81), (108, 188, 167)
EMBREE: Set dst_map 0x14f6760fcf00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x92ecf00 for accel 0x55efb55d26a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6760fcf00
EMBREE: Pack root 0x55efb55d2e80 to root_map 0x14f6760fcf40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 212...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x931be00 = 0x14f67612be00 allocated to accel structure 0x55efb55d2740
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67612be00 to 0xd4112400
RTV: Building BLAS into 0x55efb55d2740
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2e80
Compressed Node: i	exp: (0, 2, -2)	origin: (7.926847, 7.198858, 13.478070)
Children:
	0x55efb55d2ee8: (9, 29, 0), (208, 58, 222)
	0x55efb55e5040: (148, 52, 8), (253, 96, 202)
	0x55efb55ef7f8: (9, 87, 7), (203, 115, 200)
	0x55efb55f94d0: (25, 111, 10), (188, 133, 134)
	0x55efb5601690: (0, 52, 55), (164, 89, 200)
	0x55efb5607748: (36, 0, 131), (201, 38, 248)
EMBREE: Set dst_map 0x14f67612be00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x931be00 for accel 0x55efb55d2740
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67612be00
EMBREE: Pack root 0x55efb55d2e80 to root_map 0x14f67612be40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 213...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x93a2f00 = 0x14f6761b2f00 allocated to accel structure 0x55efb55d27e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6761b2f00 to 0xd4199500
RTV: Building BLAS into 0x55efb55d27e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d2ec0
Compressed Node: i	exp: (4, 2, 2)	origin: (26.464798, 0.213536, -7.565168)
Children:
	0x55efb55d2f28: (44, 0, 206), (157, 186, 254)
	0x55efb55ea298: (0, 18, 205), (81, 182, 254)
	0x55efb55f9140: (66, 0, 2), (157, 41, 235)
	0x55efb55ff3b0: (0, 13, 20), (81, 58, 223)
	0x55efb5602a98: (80, 21, 21), (155, 184, 214)
	0x55efb56052e8: (0, 152, 0), (52, 182, 239)
EMBREE: Set dst_map 0x14f6761b2f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x93a2f00 for accel 0x55efb55d27e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6761b2f00
EMBREE: Pack root 0x55efb55d2ec0 to root_map 0x14f6761b2f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 214...
RTV: Creating acceleration struction of size 0x93300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x93300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9421500 = 0x14f676231500 allocated to accel structure 0x55efb55d2880
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676231500 to 0xd4217b00
RTV: Building BLAS into 0x55efb55d2880
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4708 triangles added; total: 4708
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3380
Compressed Node: i	exp: (2, 1, 3)	origin: (-25.760456, 0.048927, 30.983614)
Children:
	0x55efb55d33e8: (0, 0, 119), (152, 173, 160)
	0x55efb55e7458: (106, 34, 0), (188, 208, 30)
	0x55efb55f6cb8: (41, 16, 9), (188, 188, 85)
	0x55efb5603f10: (121, 14, 77), (180, 166, 130)
	0x55efb560c0d0: (26, 0, 54), (150, 147, 143)
	0x55efb560e408: (0, 29, 67), (68, 165, 135)
EMBREE: Set dst_map 0x14f676231500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9421500 for accel 0x55efb55d2880
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676231500
EMBREE: Pack root 0x55efb55d3380 to root_map 0x14f676231540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 215...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x94b4800 = 0x14f6762c4800 allocated to accel structure 0x55efb55d2950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6762c4800 to 0xd42aae00
RTV: Building BLAS into 0x55efb55d2950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3380
Compressed Node: i	exp: (-2, 1, 4)	origin: (22.340450, 16.814526, 5.970603)
Children:
	0x55efb55d33e8: (0, 0, 91), (177, 157, 140)
	0x55efb55edc68: (0, 0, 0), (177, 157, 44)
	0x55efb5604410: (0, 0, 163), (177, 157, 195)
	0x55efb5613438: (0, 0, 139), (177, 157, 164)
	0x55efb56225c0: (0, 0, 43), (177, 157, 62)
	0x55efb562f3c0: (0, 0, 61), (177, 157, 92)
EMBREE: Set dst_map 0x14f6762c4800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x94b4800 for accel 0x55efb55d2950
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6762c4800
EMBREE: Pack root 0x55efb55d3380 to root_map 0x14f6762c4840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 216...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x95ac900 = 0x14f6763bc900 allocated to accel structure 0x55efb55d29f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6763bc900 to 0xd43a2f00
RTV: Building BLAS into 0x55efb55d29f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3380
Compressed Node: i	exp: (1, -2, 1)	origin: (-5.207281, 13.367034, -17.811722)
Children:
	0x55efb55d33e8: (0, 0, 114), (183, 199, 177)
	0x55efb55dbe30: (0, 15, 68), (124, 183, 116)
	0x55efb55df6c0: (10, 0, 0), (103, 199, 82)
	0x55efb55e27f0: (22, 0, 0), (183, 18, 141)
	0x55efb55e29a0: (22, 180, 0), (183, 199, 141)
	0x55efb55e2c18: (24, 14, 0), (183, 184, 139)
EMBREE: Set dst_map 0x14f6763bc900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x95ac900 for accel 0x55efb55d29f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6763bc900
EMBREE: Pack root 0x55efb55d3380 to root_map 0x14f6763bc940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 217...
RTV: Creating acceleration struction of size 0xc6d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xc6d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x95ca600 = 0x14f6763da600 allocated to accel structure 0x55efb55d2a90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6763da600 to 0xd43c0c00
RTV: Building BLAS into 0x55efb55d2a90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 6360 triangles added; total: 6360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3380
Compressed Node: i	exp: (3, 3, 3)	origin: (16.276091, 4.565444, -35.748840)
Children:
	0x55efb55d33e8: (0, 0, 0), (33, 86, 48)
	0x55efb55f6180: (204, 96, 197), (254, 157, 245)
	0x55efb560da30: (0, 61, 210), (35, 86, 238)
	0x55efb5616d20: (173, 63, 227), (227, 100, 245)
	0x55efb561fc58: (0, 62, 44), (11, 86, 211)
	0x55efb5628118: (33, 61, 227), (175, 86, 238)
EMBREE: Set dst_map 0x14f6763da600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x95ca600 for accel 0x55efb55d2a90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6763da600
EMBREE: Pack root 0x55efb55d3380 to root_map 0x14f6763da640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 218...
RTV: Creating acceleration struction of size 0x19ca00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19ca00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9691300 = 0x14f6764a1300 allocated to accel structure 0x55efb55d2b30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6764a1300 to 0xd4487900
RTV: Building BLAS into 0x55efb55d2b30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13202 triangles added; total: 13202
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3380
Compressed Node: i	exp: (0, 1, 1)	origin: (-0.346594, 8.193298, 11.544205)
Children:
	0x55efb55d33e8: (19, 94, 11), (206, 193, 70)
	0x55efb5604f80: (15, 95, 62), (195, 174, 137)
	0x55efb56325c0: (29, 0, 61), (208, 66, 115)
	0x55efb5646c00: (0, 60, 60), (201, 102, 129)
	0x55efb5659630: (148, 13, 2), (209, 101, 67)
	0x55efb5669490: (12, 6, 0), (163, 102, 68)
EMBREE: Set dst_map 0x14f6764a1300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9691300 for accel 0x55efb55d2b30
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6764a1300
EMBREE: Pack root 0x55efb55d3380 to root_map 0x14f6764a1340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 219...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x982dd00 = 0x14f67663dd00 allocated to accel structure 0x55efb55d2bd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67663dd00 to 0xd4624300
RTV: Building BLAS into 0x55efb55d2bd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3380
Compressed Node: i	exp: (0, 2, -2)	origin: (-3.867062, 9.658595, 7.764648)
Children:
	0x55efb55d33e8: (5, 32, 0), (127, 63, 135)
	0x55efb55e4ef0: (90, 57, 6), (155, 105, 124)
	0x55efb55ef640: (6, 96, 5), (124, 126, 123)
	0x55efb55f9838: (15, 122, 7), (115, 146, 83)
	0x55efb5601718: (0, 57, 34), (100, 97, 123)
	0x55efb5607788: (21, 0, 80), (123, 41, 151)
EMBREE: Set dst_map 0x14f67663dd00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x982dd00 for accel 0x55efb55d2bd0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67663dd00
EMBREE: Pack root 0x55efb55d3380 to root_map 0x14f67663dd40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 220...
RTV: Creating acceleration struction of size 0x2e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x98b4e00 = 0x14f6766c4e00 allocated to accel structure 0x55efb55d2c70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6766c4e00 to 0xd46ab400
RTV: Building BLAS into 0x55efb55d2c70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1482 triangles added; total: 1482
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3380
Compressed Node: i	exp: (1, 1, -1)	origin: (-0.279341, 12.254339, -12.400287)
Children:
	0x55efb55d33e8: (0, 65, 4), (62, 179, 134)
	0x55efb55df018: (61, 65, 0), (210, 91, 185)
	0x55efb55e2b20: (65, 0, 0), (210, 75, 175)
	0x55efb55e4dc0: (60, 149, 0), (210, 184, 175)
	0x55efb55e6e60: (69, 90, 0), (210, 151, 174)
	0x55efb55e7930: (61, 65, 0), (70, 151, 174)
EMBREE: Set dst_map 0x14f6766c4e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x98b4e00 for accel 0x55efb55d2c70
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6766c4e00
EMBREE: Pack root 0x55efb55d3380 to root_map 0x14f6766c4e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 221...
RTV: Creating acceleration struction of size 0x6d100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6d100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x98e3400 = 0x14f6766f3400 allocated to accel structure 0x55efb55d2d10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6766f3400 to 0xd46d9a00
RTV: Building BLAS into 0x55efb55d2d10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3488 triangles added; total: 3488
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d33c0
Compressed Node: i	exp: (1, -2, -4)	origin: (8.489514, 8.748555, -36.005699)
Children:
	0x55efb55d3428: (143, 52, 0), (169, 215, 189)
	0x55efb55e3560: (59, 52, 0), (75, 205, 189)
	0x55efb55ecda8: (33, 52, 0), (49, 205, 189)
	0x55efb55f6568: (85, 0, 0), (120, 163, 189)
	0x55efb55fc3c8: (129, 54, 0), (142, 215, 189)
	0x55efb5600370: (0, 54, 0), (31, 215, 189)
EMBREE: Set dst_map 0x14f6766f3400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x98e3400 for accel 0x55efb55d2d10
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6766f3400
EMBREE: Pack root 0x55efb55d33c0 to root_map 0x14f6766f3440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 222...
RTV: Creating acceleration struction of size 0x9c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9950500 = 0x14f676760500 allocated to accel structure 0x55efb55d2db0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676760500 to 0xd4746b00
RTV: Building BLAS into 0x55efb55d2db0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5008 triangles added; total: 5008
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3880
Compressed Node: i	exp: (2, 3, 0)	origin: (-2.326804, 9.831835, -14.277299)
Children:
	0x55efb55d38e8: (11, 73, 44), (169, 88, 233)
	0x55efb55e6f70: (0, 110, 2), (132, 138, 242)
	0x55efb55f5e10: (21, 75, 40), (157, 117, 176)
	0x55efb56014a8: (0, 137, 166), (132, 166, 242)
	0x55efb560c7b8: (25, 0, 77), (99, 80, 139)
	0x55efb5612968: (9, 137, 0), (121, 166, 183)
EMBREE: Set dst_map 0x14f676760500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9950500 for accel 0x55efb55d2db0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676760500
EMBREE: Pack root 0x55efb55d3880 to root_map 0x14f676760540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 223...
RTV: Creating acceleration struction of size 0x4c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x99ece00 = 0x14f6767fce00 allocated to accel structure 0x55efb55d2e50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6767fce00 to 0xd47e3400
RTV: Building BLAS into 0x55efb55d2e50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 150 triangles added; total: 150
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3880
Compressed Node: i	exp: (0, 0, 3)	origin: (-1.819691, 12.444323, 7.474490)
Children:
	0x55efb55d38e8: (0, 0, 118), (75, 80, 138)
	0x55efb55d4180: (90, 3, 0), (167, 83, 21)
	0x55efb55d4930: (41, 62, 69), (116, 177, 96)
	0x55efb55d4fc0: (62, 63, 44), (141, 177, 70)
	0x55efb55d5440: (23, 0, 93), (97, 138, 120)
	0x55efb55d56f8: (75, 3, 19), (148, 139, 47)
EMBREE: Set dst_map 0x14f6767fce00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x99ece00 for accel 0x55efb55d2e50
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6767fce00
EMBREE: Pack root 0x55efb55d3880 to root_map 0x14f6767fce40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 224...
RTV: Creating acceleration struction of size 0x6900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x99f1a00 = 0x14f676801a00 allocated to accel structure 0x55efb55d2ef0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676801a00 to 0xd47e8000
RTV: Building BLAS into 0x55efb55d2ef0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 208 triangles added; total: 208
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3880
Compressed Node: i	exp: (1, 2, 3)	origin: (15.328965, 2.184776, -23.724066)
Children:
	0x55efb55d38e8: (0, 0, 0), (174, 31, 159)
	0x55efb55d4640: (3, 108, 33), (124, 143, 119)
	0x55efb55d5198: (116, 24, 35), (171, 81, 107)
	0x55efb55d5920: (0, 19, 103), (118, 113, 159)
	0x55efb55d5fe0: (10, 25, 35), (124, 110, 38)
	0x55efb55d62a8: (0, 19, 35), (126, 113, 157)
EMBREE: Set dst_map 0x14f676801a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x99f1a00 for accel 0x55efb55d2ef0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676801a00
EMBREE: Pack root 0x55efb55d3880 to root_map 0x14f676801a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 225...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x99f8300 = 0x14f676808300 allocated to accel structure 0x55efb55d2f90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676808300 to 0xd47ee900
RTV: Building BLAS into 0x55efb55d2f90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3880
Compressed Node: i	exp: (4, 1, -2)	origin: (11.972989, 17.325241, -18.597860)
Children:
	0x55efb55d38e8: (43, 0, 0), (92, 157, 177)
	0x55efb55edde8: (0, 0, 0), (44, 157, 177)
	0x55efb56045f8: (163, 0, 0), (195, 157, 177)
	0x55efb5613720: (139, 0, 0), (164, 157, 177)
	0x55efb56228a8: (91, 0, 0), (110, 157, 177)
	0x55efb562f928: (109, 0, 0), (140, 157, 177)
EMBREE: Set dst_map 0x14f676808300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x99f8300 for accel 0x55efb55d2f90
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676808300
EMBREE: Pack root 0x55efb55d3880 to root_map 0x14f676808340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 226...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9af0400 = 0x14f676900400 allocated to accel structure 0x55efb55d3030
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676900400 to 0xd48e6a00
RTV: Building BLAS into 0x55efb55d3030
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3880
Compressed Node: i	exp: (3, 2, 2)	origin: (-14.601471, 0.081569, -11.330329)
Children:
	0x55efb55d38e8: (72, 0, 165), (252, 149, 204)
	0x55efb55ea510: (0, 14, 165), (130, 146, 204)
	0x55efb55f9550: (106, 0, 1), (252, 33, 189)
	0x55efb55ff810: (0, 10, 16), (131, 46, 179)
	0x55efb5602f78: (129, 17, 17), (248, 148, 172)
	0x55efb5605710: (0, 122, 0), (83, 146, 192)
EMBREE: Set dst_map 0x14f676900400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9af0400 for accel 0x55efb55d3030
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676900400
EMBREE: Pack root 0x55efb55d3880 to root_map 0x14f676900440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 227...
RTV: Creating acceleration struction of size 0x500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9b6ea00 = 0x14f67697ea00 allocated to accel structure 0x55efb55d30d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67697ea00 to 0xd4965000
RTV: Building BLAS into 0x55efb55d30d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8 triangles added; total: 8
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3880
Compressed Node: i	exp: (0, 1, 2)	origin: (-3.987334, 10.643942, 8.020087)
Children:
	0x55efb55d38e8: (0, 94, 93), (33, 146, 170)
	0x55efb55d3968: (54, 95, 0), (135, 97, 74)
	0x55efb55d39e8: (54, 1, 0), (135, 96, 78)
	0x55efb55d39f4: (32, 0, 93), (93, 95, 170)
	0x55efb55d3a00: (112, 1, 0), (193, 96, 78)
	0x55efb55d3a0c: (32, 0, 93), (93, 95, 170)
EMBREE: Set dst_map 0x14f67697ea00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9b6ea00 for accel 0x55efb55d30d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67697ea00
EMBREE: Pack root 0x55efb55d3880 to root_map 0x14f67697ea40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 228...
RTV: Creating acceleration struction of size 0x71800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x71800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9b6ef00 = 0x14f67697ef00 allocated to accel structure 0x55efb55d3170
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67697ef00 to 0xd4965500
RTV: Building BLAS into 0x55efb55d3170
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3630 triangles added; total: 3630
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3880
Compressed Node: i	exp: (0, 1, 2)	origin: (-1.122880, 6.635889, 8.146039)
Children:
	0x55efb55d38e8: (1, 2, 67), (70, 91, 195)
	0x55efb55e46a0: (49, 0, 3), (106, 92, 75)
	0x55efb55ef198: (41, 73, 0), (147, 184, 97)
	0x55efb55f7668: (1, 73, 75), (74, 173, 189)
	0x55efb55fbe60: (0, 139, 160), (75, 182, 198)
	0x55efb55fe9e8: (0, 135, 4), (116, 184, 198)
EMBREE: Set dst_map 0x14f67697ef00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9b6ef00 for accel 0x55efb55d3170
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67697ef00
EMBREE: Pack root 0x55efb55d3880 to root_map 0x14f67697ef40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 229...
RTV: Creating acceleration struction of size 0x179500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x179500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9be0700 = 0x14f6769f0700 allocated to accel structure 0x55efb55d3210
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6769f0700 to 0xd49d6d00
RTV: Building BLAS into 0x55efb55d3210
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 12071 triangles added; total: 12071
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3900
Compressed Node: i	exp: (0, 1, -1)	origin: (26.585169, 18.396545, -19.784279)
Children:
	0x55efb55d3968: (17, 45, 87), (116, 106, 182)
	0x55efb5664fd8: (0, 59, 82), (142, 130, 108)
	0x55efb5670ec0: (0, 49, 0), (143, 62, 109)
	0x55efb5673b28: (1, 0, 0), (142, 55, 97)
	0x55efb5674780: (0, 59, 0), (73, 130, 107)
	0x55efb56750c8: (66, 59, 5), (144, 129, 110)
EMBREE: Set dst_map 0x14f6769f0700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9be0700 for accel 0x55efb55d3210
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6769f0700
EMBREE: Pack root 0x55efb55d3900 to root_map 0x14f6769f0740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 230...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9d59c00 = 0x14f676b69c00 allocated to accel structure 0x55efb55d32b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676b69c00 to 0xd4b50200
RTV: Building BLAS into 0x55efb55d32b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f676b69c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9d59c00 for accel 0x55efb55d32b0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676b69c00
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f676b69c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 231...
RTV: Creating acceleration struction of size 0x9c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9d59e00 = 0x14f676b69e00 allocated to accel structure 0x55efb55bd980
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676b69e00 to 0xd4b50400
RTV: Building BLAS into 0x55efb55bd980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5008 triangles added; total: 5008
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3e00
Compressed Node: i	exp: (3, 1, 0)	origin: (5.604448, 12.334397, -12.544121)
Children:
	0x55efb55d3e68: (58, 13, 24), (85, 199, 137)
	0x55efb55e7878: (87, 0, 1), (101, 156, 143)
	0x55efb55f5d28: (118, 0, 0), (131, 156, 143)
	0x55efb5601548: (0, 29, 45), (64, 120, 82)
	0x55efb5609e80: (78, 31, 24), (93, 185, 104)
	0x55efb5612178: (100, 0, 1), (128, 154, 126)
EMBREE: Set dst_map 0x14f676b69e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9d59e00 for accel 0x55efb55bd980
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676b69e00
EMBREE: Pack root 0x55efb55d3e00 to root_map 0x14f676b69e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 232...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9df6700 = 0x14f676c06700 allocated to accel structure 0x55efb55c6f10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676c06700 to 0xd4becd00
RTV: Building BLAS into 0x55efb55c6f10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2 triangles added; total: 2
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3e00
Compressed Node: i	exp: (2, 1, -1)	origin: (4.299718, 4.936269, 12.262161)
Children:
	0x55efb55d3e68: (0, 0, 0), (236, 209, 195)
	0x55efb55d3e74: (0, 11, 0), (236, 220, 195)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
EMBREE: Set dst_map 0x14f676c06700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9df6700 for accel 0x55efb55c6f10
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676c06700
EMBREE: Pack root 0x55efb55d3e00 to root_map 0x14f676c06740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 233...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9df6900 = 0x14f676c06900 allocated to accel structure 0x55efb55c6fb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676c06900 to 0xd4becf00
RTV: Building BLAS into 0x55efb55c6fb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f676c06900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9df6900 for accel 0x55efb55c6fb0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676c06900
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f676c06940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 234...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9df6b00 = 0x14f676c06b00 allocated to accel structure 0x55efb55c7050
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676c06b00 to 0xd4bed100
RTV: Building BLAS into 0x55efb55c7050
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3e00
Compressed Node: i	exp: (3, 1, -1)	origin: (-1.708755, 9.124278, 11.177106)
Children:
	0x55efb55d3e68: (66, 0, 123), (132, 165, 233)
	0x55efb55d4908: (0, 8, 0), (69, 177, 148)
	0x55efb55d5208: (66, 33, 128), (71, 125, 140)
	0x55efb55d5558: (4, 97, 2), (126, 125, 224)
	0x55efb55d57d8: (10, 36, 12), (132, 63, 233)
	0x55efb55d5a30: (66, 141, 123), (69, 165, 148)
EMBREE: Set dst_map 0x14f676c06b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9df6b00 for accel 0x55efb55c7050
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676c06b00
EMBREE: Pack root 0x55efb55d3e00 to root_map 0x14f676c06b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 235...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9dfa400 = 0x14f676c0a400 allocated to accel structure 0x55efb55c70f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676c0a400 to 0xd4bf0a00
RTV: Building BLAS into 0x55efb55c70f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f676c0a400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9dfa400 for accel 0x55efb55c70f0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676c0a400
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f676c0a440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 236...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9dfa600 = 0x14f676c0a600 allocated to accel structure 0x55efb55c7190
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676c0a600 to 0xd4bf0c00
RTV: Building BLAS into 0x55efb55c7190
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3e00
Compressed Node: i	exp: (-1, 1, 1)	origin: (-4.127613, 10.587974, 9.321798)
Children:
	0x55efb55d3e68: (0, 55, 137), (208, 160, 186)
	0x55efb55e52e0: (0, 57, 1), (208, 160, 42)
	0x55efb55f2e90: (91, 0, 157), (246, 96, 184)
	0x55efb55fb050: (92, 1, 0), (246, 97, 27)
	0x55efb5602580: (41, 94, 13), (112, 140, 166)
	0x55efb5603188: (101, 2, 12), (221, 97, 167)
EMBREE: Set dst_map 0x14f676c0a600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9dfa600 for accel 0x55efb55c7190
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676c0a600
EMBREE: Pack root 0x55efb55d3e00 to root_map 0x14f676c0a640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 237...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9e6d900 = 0x14f676c7d900 allocated to accel structure 0x55efb55c7230
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676c7d900 to 0xd4c63f00
RTV: Building BLAS into 0x55efb55c7230
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3e00
Compressed Node: i	exp: (0, 1, 2)	origin: (5.418979, 11.811528, 8.409794)
Children:
	0x55efb55d3e68: (0, 0, 213), (80, 140, 249)
	0x55efb55d54d8: (81, 3, 0), (166, 141, 38)
	0x55efb55d69c8: (37, 1, 125), (119, 183, 173)
	0x55efb55d7588: (56, 2, 79), (133, 183, 127)
	0x55efb55d8170: (68, 2, 35), (146, 167, 84)
	0x55efb55d88f8: (21, 0, 168), (108, 166, 217)
EMBREE: Set dst_map 0x14f676c7d900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9e6d900 for accel 0x55efb55c7230
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676c7d900
EMBREE: Pack root 0x55efb55d3e00 to root_map 0x14f676c7d940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 238...
RTV: Creating acceleration struction of size 0x25700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x25700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9e78e00 = 0x14f676c88e00 allocated to accel structure 0x55efb55c72d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676c88e00 to 0xd4c6f400
RTV: Building BLAS into 0x55efb55c72d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1196 triangles added; total: 1196
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d3e40
Compressed Node: i	exp: (4, 2, 3)	origin: (-8.309184, 1.005681, 7.100734)
Children:
	0x55efb55d3ea8: (84, 73, 133), (96, 99, 161)
	0x55efb55d8208: (84, 0, 132), (97, 75, 162)
	0x55efb55dccf0: (0, 87, 0), (5, 113, 12)
	0x55efb55dff30: (110, 215, 123), (116, 241, 136)
	0x55efb55e3118: (130, 3, 115), (140, 47, 136)
	0x55efb55e6270: (108, 23, 74), (119, 75, 100)
EMBREE: Set dst_map 0x14f676c88e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9e78e00 for accel 0x55efb55c72d0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676c88e00
EMBREE: Pack root 0x55efb55d3e40 to root_map 0x14f676c88e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 239...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9e9e500 = 0x14f676cae500 allocated to accel structure 0x55efb55c7370
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676cae500 to 0xd4c94b00
RTV: Building BLAS into 0x55efb55c7370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4300
Compressed Node: i	exp: (2, 0, -1)	origin: (-3.913178, 12.207678, 10.197012)
Children:
	0x55efb55d4368: (121, 88, 89), (172, 143, 204)
	0x55efb55d6330: (3, 149, 4), (81, 175, 111)
	0x55efb55d7858: (53, 0, 22), (109, 90, 173)
	0x55efb55d8cb0: (68, 117, 35), (100, 189, 179)
	0x55efb55d9c28: (42, 82, 24), (123, 131, 165)
	0x55efb55dc7b8: (0, 86, 0), (97, 154, 132)
EMBREE: Set dst_map 0x14f676cae500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9e9e500 for accel 0x55efb55c7370
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676cae500
EMBREE: Pack root 0x55efb55d4300 to root_map 0x14f676cae540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 240...
RTV: Creating acceleration struction of size 0x11200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9eae800 = 0x14f676cbe800 allocated to accel structure 0x55efb55d38e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676cbe800 to 0xd4ca4e00
RTV: Building BLAS into 0x55efb55d38e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 546 triangles added; total: 546
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4300
Compressed Node: i	exp: (2, 2, 2)	origin: (6.303524, 2.725335, 9.622405)
Children:
	0x55efb55d4368: (78, 2, 6), (128, 164, 90)
	0x55efb55d70c0: (66, 47, 52), (123, 163, 170)
	0x55efb55d9100: (0, 105, 0), (88, 164, 168)
	0x55efb55dc720: (67, 0, 117), (117, 114, 172)
	0x55efb55ddcb0: (70, 0, 39), (127, 114, 153)
	0x55efb55de9d8: (1, 1, 0), (22, 115, 163)
EMBREE: Set dst_map 0x14f676cbe800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9eae800 for accel 0x55efb55d38e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676cbe800
EMBREE: Pack root 0x55efb55d4300 to root_map 0x14f676cbe840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 241...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9ebfa00 = 0x14f676ccfa00 allocated to accel structure 0x55efb55d3980
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676ccfa00 to 0xd4cb6000
RTV: Building BLAS into 0x55efb55d3980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4300
Compressed Node: i	exp: (1, 2, -1)	origin: (-2.260903, 10.620396, -12.138606)
Children:
	0x55efb55d4368: (5, 94, 39), (55, 176, 148)
	0x55efb55e3de0: (9, 0, 6), (128, 51, 105)
	0x55efb55eeaf0: (68, 47, 8), (132, 102, 106)
	0x55efb55f8608: (0, 47, 6), (73, 96, 139)
	0x55efb5601830: (63, 91, 0), (132, 133, 92)
	0x55efb5609410: (46, 126, 31), (128, 176, 87)
EMBREE: Set dst_map 0x14f676ccfa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9ebfa00 for accel 0x55efb55d3980
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676ccfa00
EMBREE: Pack root 0x55efb55d4300 to root_map 0x14f676ccfa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 242...
RTV: Creating acceleration struction of size 0x1f300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1f300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9f46b00 = 0x14f676d56b00 allocated to accel structure 0x55efb55d3a20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676d56b00 to 0xd4d3d100
RTV: Building BLAS into 0x55efb55d3a20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 996 triangles added; total: 996
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4300
Compressed Node: i	exp: (5, 1, 3)	origin: (-17.941387, 2.315001, -14.300489)
Children:
	0x55efb55d4368: (69, 153, 138), (76, 206, 167)
	0x55efb55d8608: (0, 182, 0), (3, 233, 13)
	0x55efb55dd5c0: (82, 0, 119), (88, 90, 142)
	0x55efb55e0858: (69, 0, 137), (76, 23, 168)
	0x55efb55e22f8: (69, 22, 137), (76, 155, 168)
	0x55efb55e36d8: (127, 10, 190), (131, 68, 205)
EMBREE: Set dst_map 0x14f676d56b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9f46b00 for accel 0x55efb55d3a20
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676d56b00
EMBREE: Pack root 0x55efb55d4300 to root_map 0x14f676d56b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 243...
RTV: Creating acceleration struction of size 0x2ef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2ef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9f65e00 = 0x14f676d75e00 allocated to accel structure 0x55efb55d3ac0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676d75e00 to 0xd4d5c400
RTV: Building BLAS into 0x55efb55d3ac0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1500 triangles added; total: 1500
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4300
Compressed Node: i	exp: (-2, 2, -1)	origin: (19.544535, 6.974405, -28.485332)
Children:
	0x55efb55d4368: (0, 179, 0), (165, 203, 181)
	0x55efb55e1da0: (0, 138, 74), (119, 184, 206)
	0x55efb55e79c8: (35, 0, 60), (165, 9, 111)
	0x55efb55e9418: (82, 73, 109), (99, 97, 143)
	0x55efb55e9f50: (73, 80, 74), (108, 157, 174)
	0x55efb55ea918: (73, 4, 81), (108, 188, 167)
EMBREE: Set dst_map 0x14f676d75e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9f65e00 for accel 0x55efb55d3ac0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676d75e00
EMBREE: Pack root 0x55efb55d4300 to root_map 0x14f676d75e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 244...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9f94d00 = 0x14f676da4d00 allocated to accel structure 0x55efb55d3b60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676da4d00 to 0xd4d8b300
RTV: Building BLAS into 0x55efb55d3b60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4300
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.273173, 9.260780, -36.705456)
Children:
	0x55efb55d4368: (4, 149, 0), (230, 237, 141)
	0x55efb55d4500: (0, 159, 102), (232, 253, 233)
	0x55efb55d4698: (12, 0, 60), (123, 177, 227)
	0x55efb55d4840: (95, 0, 20), (214, 160, 160)
	0x55efb55d48e8: (95, 0, 60), (214, 177, 227)
	0x55efb55d4980: (12, 0, 21), (103, 167, 128)
EMBREE: Set dst_map 0x14f676da4d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9f94d00 for accel 0x55efb55d3b60
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676da4d00
EMBREE: Pack root 0x55efb55d4300 to root_map 0x14f676da4d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 245...
RTV: Creating acceleration struction of size 0x10ce00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10ce00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0x9f95f00 = 0x14f676da5f00 allocated to accel structure 0x55efb55d3c00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676da5f00 to 0xd4d8c500
RTV: Building BLAS into 0x55efb55d3c00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8601 triangles added; total: 8601
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4300
Compressed Node: i	exp: (1, 2, -1)	origin: (9.841119, 11.013651, -12.352594)
Children:
	0x55efb55d4368: (41, 0, 0), (182, 80, 91)
	0x55efb55f5048: (0, 97, 0), (41, 233, 127)
	0x55efb560fb60: (23, 74, 6), (106, 102, 83)
	0x55efb5627000: (35, 94, 0), (118, 125, 168)
	0x55efb5636fb0: (34, 201, 0), (97, 241, 175)
	0x55efb5641890: (34, 109, 0), (119, 205, 175)
EMBREE: Set dst_map 0x14f676da5f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0x9f95f00 for accel 0x55efb55d3c00
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676da5f00
EMBREE: Pack root 0x55efb55d4300 to root_map 0x14f676da5f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 246...
RTV: Creating acceleration struction of size 0x2c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa0a2d00 = 0x14f676eb2d00 allocated to accel structure 0x55efb55d3ca0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676eb2d00 to 0xd4e99300
RTV: Building BLAS into 0x55efb55d3ca0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1412 triangles added; total: 1412
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4340
Compressed Node: i	exp: (1, -1, 0)	origin: (-3.541925, 12.793354, 9.697191)
Children:
	0x55efb55d43a8: (0, 0, 0), (27, 234, 164)
	0x55efb55dc540: (189, 0, 37), (230, 234, 204)
	0x55efb55e1fa0: (94, 0, 17), (120, 234, 185)
	0x55efb55e5498: (111, 0, 21), (136, 234, 186)
	0x55efb55e7db0: (18, 0, 2), (103, 234, 179)
	0x55efb55e8bb0: (127, 0, 24), (199, 234, 199)
EMBREE: Set dst_map 0x14f676eb2d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa0a2d00 for accel 0x55efb55d3ca0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676eb2d00
EMBREE: Pack root 0x55efb55d4340 to root_map 0x14f676eb2d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 247...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa0cf000 = 0x14f676edf000 allocated to accel structure 0x55efb55d3d40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676edf000 to 0xd4ec5600
RTV: Building BLAS into 0x55efb55d3d40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4800
Compressed Node: i	exp: (3, 2, 2)	origin: (-22.344193, -0.752789, 30.040060)
Children:
	0x55efb55d4868: (0, 134, 0), (150, 175, 168)
	0x55efb55ed4e0: (102, 135, 17), (210, 172, 165)
	0x55efb55fc3c8: (0, 5, 0), (122, 162, 37)
	0x55efb5601e78: (101, 16, 12), (210, 152, 52)
	0x55efb5605028: (3, 17, 19), (102, 148, 166)
	0x55efb5606c68: (140, 0, 137), (210, 160, 165)
EMBREE: Set dst_map 0x14f676edf000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa0cf000 for accel 0x55efb55d3d40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676edf000
EMBREE: Pack root 0x55efb55d4800 to root_map 0x14f676edf040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 248...
RTV: Creating acceleration struction of size 0x17200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa14d600 = 0x14f676f5d600 allocated to accel structure 0x55efb55d3de0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676f5d600 to 0xd4f43c00
RTV: Building BLAS into 0x55efb55d3de0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 738 triangles added; total: 738
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4800
Compressed Node: i	exp: (1, 2, 0)	origin: (4.644968, 5.080795, 12.467103)
Children:
	0x55efb55d4868: (1, 0, 0), (82, 49, 212)
	0x55efb55d7d28: (81, 117, 40), (198, 157, 219)
	0x55efb55dc6c0: (4, 105, 42), (102, 126, 231)
	0x55efb55de390: (0, 33, 61), (72, 63, 247)
	0x55efb55df8f0: (7, 113, 40), (100, 154, 227)
	0x55efb55e0550: (2, 58, 54), (73, 110, 241)
EMBREE: Set dst_map 0x14f676f5d600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa14d600 for accel 0x55efb55d3de0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676f5d600
EMBREE: Pack root 0x55efb55d4800 to root_map 0x14f676f5d640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 249...
RTV: Creating acceleration struction of size 0x2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa164800 = 0x14f676f74800 allocated to accel structure 0x55efb55d3e80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676f74800 to 0xd4f5ae00
RTV: Building BLAS into 0x55efb55d3e80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 64 triangles added; total: 64
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4800
Compressed Node: i	exp: (1, 1, -2)	origin: (-2.027656, 6.292613, 12.012939)
Children:
	0x55efb55d4868: (0, 180, 0), (50, 212, 93)
	0x55efb55d4e40: (104, 0, 87), (128, 216, 155)
	0x55efb55d54b8: (31, 118, 25), (108, 192, 140)
	0x55efb55d55d8: (48, 154, 40), (107, 192, 140)
	0x55efb55d5658: (48, 118, 40), (108, 192, 140)
	0x55efb55d56d8: (31, 118, 78), (108, 192, 140)
EMBREE: Set dst_map 0x14f676f74800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa164800 for accel 0x55efb55d3e80
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676f74800
EMBREE: Pack root 0x55efb55d4800 to root_map 0x14f676f74840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 250...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa166900 = 0x14f676f76900 allocated to accel structure 0x55efb55d3f20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676f76900 to 0xd4f5cf00
RTV: Building BLAS into 0x55efb55d3f20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4800
Compressed Node: i	exp: (1, -1, 1)	origin: (-5.117647, 11.549422, 7.903739)
Children:
	0x55efb55d4868: (88, 0, 129), (163, 211, 168)
	0x55efb55e53c0: (85, 9, 16), (186, 220, 70)
	0x55efb55f2f28: (0, 14, 114), (122, 158, 161)
	0x55efb55fca10: (28, 23, 0), (124, 141, 38)
	0x55efb5603db0: (100, 117, 37), (167, 180, 153)
	0x55efb5604778: (4, 40, 5), (51, 71, 122)
EMBREE: Set dst_map 0x14f676f76900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa166900 for accel 0x55efb55d3f20
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676f76900
EMBREE: Pack root 0x55efb55d4800 to root_map 0x14f676f76940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 251...
RTV: Creating acceleration struction of size 0x19ca00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19ca00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa1d9c00 = 0x14f676fe9c00 allocated to accel structure 0x55efb55d3fc0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f676fe9c00 to 0xd4fd0200
RTV: Building BLAS into 0x55efb55d3fc0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13202 triangles added; total: 13202
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4800
Compressed Node: i	exp: (1, 1, 1)	origin: (-3.419993, 12.390795, 8.529709)
Children:
	0x55efb55d4868: (0, 32, 75), (110, 141, 157)
	0x55efb5602a38: (6, 12, 0), (112, 135, 83)
	0x55efb562ab90: (102, 0, 3), (177, 138, 84)
	0x55efb5643de8: (155, 25, 79), (241, 136, 166)
	0x55efb5657e80: (100, 32, 78), (164, 144, 160)
	0x55efb566a108: (168, 0, 18), (243, 122, 85)
EMBREE: Set dst_map 0x14f676fe9c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa1d9c00 for accel 0x55efb55d3fc0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f676fe9c00
EMBREE: Pack root 0x55efb55d4800 to root_map 0x14f676fe9c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 252...
RTV: Creating acceleration struction of size 0x3700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa376600 = 0x14f677186600 allocated to accel structure 0x55efb55d4060
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677186600 to 0xd516cc00
RTV: Building BLAS into 0x55efb55d4060
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 108 triangles added; total: 108
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4800
Compressed Node: i	exp: (3, -4, 5)	origin: (23.498951, 11.443055, -36.783321)
Children:
	0x55efb55d4868: (92, 0, 113), (166, 243, 176)
	0x55efb55d4ec8: (0, 0, 113), (73, 243, 176)
	0x55efb55d55c0: (0, 0, 0), (73, 243, 53)
	0x55efb55d58a0: (92, 0, 0), (166, 243, 53)
	0x55efb55d5c08: (92, 0, 61), (166, 243, 114)
	0x55efb55d5dd0: (0, 0, 61), (73, 243, 114)
EMBREE: Set dst_map 0x14f677186600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa376600 for accel 0x55efb55d4060
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677186600
EMBREE: Pack root 0x55efb55d4800 to root_map 0x14f677186640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 253...
RTV: Creating acceleration struction of size 0x1c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa379d00 = 0x14f677189d00 allocated to accel structure 0x55efb55d4100
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677189d00 to 0xd5170300
RTV: Building BLAS into 0x55efb55d4100
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 912 triangles added; total: 912
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4800
Compressed Node: i	exp: (1, 4, 1)	origin: (-5.246115, 10.775280, -17.473186)
Children:
	0x55efb55d4868: (12, 37, 12), (125, 69, 125)
	0x55efb55dbc80: (13, 67, 13), (126, 91, 126)
	0x55efb55ddfb0: (15, 15, 1), (134, 38, 125)
	0x55efb55df908: (0, 110, 0), (150, 138, 141)
	0x55efb55e13c8: (0, 0, 0), (141, 21, 141)
	0x55efb55e2a00: (5, 89, 1), (134, 114, 128)
EMBREE: Set dst_map 0x14f677189d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa379d00 for accel 0x55efb55d4100
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677189d00
EMBREE: Pack root 0x55efb55d4800 to root_map 0x14f677189d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 254...
RTV: Creating acceleration struction of size 0xb300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa396600 = 0x14f6771a6600 allocated to accel structure 0x55efb55d41a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6771a6600 to 0xd518cc00
RTV: Building BLAS into 0x55efb55d41a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 356 triangles added; total: 356
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4840
Compressed Node: i	exp: (1, 1, 2)	origin: (0.156691, 8.216054, 11.857161)
Children:
	0x55efb55d48a8: (96, 0, 70), (135, 189, 87)
	0x55efb55d7058: (0, 192, 19), (106, 203, 81)
	0x55efb55d7bb0: (116, 181, 62), (183, 197, 143)
	0x55efb55d85e0: (42, 161, 81), (141, 196, 133)
	0x55efb55d9140: (74, 194, 0), (160, 207, 66)
	0x55efb55d9a80: (70, 181, 29), (150, 203, 143)
EMBREE: Set dst_map 0x14f6771a6600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa396600 for accel 0x55efb55d41a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6771a6600
EMBREE: Pack root 0x55efb55d4840 to root_map 0x14f6771a6640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 255...
RTV: Creating acceleration struction of size 0x1bb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1bb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa3a1900 = 0x14f6771b1900 allocated to accel structure 0x55efb55d4240
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6771b1900 to 0xd5197f00
RTV: Building BLAS into 0x55efb55d4240
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 884 triangles added; total: 884
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4d00
Compressed Node: i	exp: (0, 1, 0)	origin: (-5.439686, 11.417029, -18.067680)
Children:
	0x55efb55d4d68: (0, 140, 0), (172, 173, 140)
	0x55efb55d9810: (7, 0, 7), (165, 17, 132)
	0x55efb55df8f0: (7, 0, 3), (30, 72, 112)
	0x55efb55e0dd0: (10, 0, 7), (168, 72, 132)
	0x55efb55e1b60: (100, 71, 16), (169, 141, 135)
	0x55efb55e26d8: (3, 71, 4), (129, 141, 132)
EMBREE: Set dst_map 0x14f6771b1900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa3a1900 for accel 0x55efb55d4240
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6771b1900
EMBREE: Pack root 0x55efb55d4d00 to root_map 0x14f6771b1940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 256...
RTV: Creating acceleration struction of size 0xa9b700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xa9b700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xa3bd400 = 0x14f6771cd400 allocated to accel structure 0x55efb55d42e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6771cd400 to 0xd51b3a00
RTV: Building BLAS into 0x55efb55d42e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 86892 triangles added; total: 86892
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (8, 5, 2)	origin: (-45.867931, 4.708693, -36.289917)
Children:
	0x55efb55dbbe8: (0, 157, 0), (153, 168, 220)
	0x55efb598b600: (0, 142, 0), (77, 159, 220)
	0x55efb59bad90: (76, 142, 0), (153, 159, 220)
	0x55efb59e7380: (94, 0, 47), (135, 143, 172)
	0x55efb59ea458: (18, 0, 47), (21, 143, 172)
	0x55efb59ebed0: (56, 0, 47), (59, 143, 172)
EMBREE: Set dst_map 0x14f6771cd400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xa3bd400 for accel 0x55efb55d42e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6771cd400
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f6771cd440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 257...
RTV: Creating acceleration struction of size 0x19fb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xae58b00 = 0x14f677c68b00 allocated to accel structure 0x55efb55d4380
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677c68b00 to 0xd5c4f100
RTV: Building BLAS into 0x55efb55d4380
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13299 triangles added; total: 13299
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4d00
Compressed Node: i	exp: (2, 2, 3)	origin: (4.525590, 9.124219, 7.516879)
Children:
	0x55efb55d4d68: (130, 181, 0), (187, 234, 157)
	0x55efb55fefa0: (17, 40, 134), (141, 193, 158)
	0x55efb56233f0: (0, 178, 57), (42, 234, 177)
	0x55efb5641050: (18, 181, 52), (155, 210, 158)
	0x55efb565d378: (31, 0, 57), (161, 197, 72)
	0x55efb56751c0: (22, 139, 65), (158, 193, 120)
EMBREE: Set dst_map 0x14f677c68b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xae58b00 for accel 0x55efb55d4380
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677c68b00
EMBREE: Pack root 0x55efb55d4d00 to root_map 0x14f677c68b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 258...
RTV: Creating acceleration struction of size 0x14800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x14800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xaff8600 = 0x14f677e08600 allocated to accel structure 0x55efb55d4420
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677e08600 to 0xd5deec00
RTV: Building BLAS into 0x55efb55d4420
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 654 triangles added; total: 654
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4d00
Compressed Node: i	exp: (4, 1, 0)	origin: (-2.270751, 11.420103, 10.938107)
Children:
	0x55efb55d4d68: (0, 0, 49), (47, 57, 102)
	0x55efb55d73e8: (42, 81, 0), (75, 134, 62)
	0x55efb55d9480: (98, 52, 93), (134, 94, 160)
	0x55efb55dd8c0: (68, 76, 44), (102, 95, 106)
	0x55efb55df3a0: (74, 74, 54), (121, 118, 139)
	0x55efb55df688: (90, 73, 80), (98, 87, 100)
EMBREE: Set dst_map 0x14f677e08600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xaff8600 for accel 0x55efb55d4420
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677e08600
EMBREE: Pack root 0x55efb55d4d00 to root_map 0x14f677e08640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 259...
RTV: Creating acceleration struction of size 0x17e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb00ce00 = 0x14f677e1ce00 allocated to accel structure 0x55efb55d44c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677e1ce00 to 0xd5e03400
RTV: Building BLAS into 0x55efb55d44c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 762 triangles added; total: 762
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4d00
Compressed Node: i	exp: (2, 1, 3)	origin: (-3.494741, 7.858299, 6.887116)
Children:
	0x55efb55d4d68: (0, 0, 76), (83, 108, 166)
	0x55efb55d86a8: (16, 1, 0), (82, 105, 80)
	0x55efb55dc3d8: (64, 93, 62), (178, 143, 130)
	0x55efb55ddb48: (63, 35, 3), (126, 123, 66)
	0x55efb55de958: (75, 52, 116), (167, 130, 170)
	0x55efb55df940: (111, 61, 6), (191, 140, 69)
EMBREE: Set dst_map 0x14f677e1ce00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb00ce00 for accel 0x55efb55d44c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677e1ce00
EMBREE: Pack root 0x55efb55d4d00 to root_map 0x14f677e1ce40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 260...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb024c00 = 0x14f677e34c00 allocated to accel structure 0x55efb55d4560
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677e34c00 to 0xd5e1b200
RTV: Building BLAS into 0x55efb55d4560
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4d00
Compressed Node: i	exp: (-1, -1, -1)	origin: (7.464836, 7.833672, -35.554607)
Children:
	0x55efb55d4d68: (7, 86, 0), (138, 158, 72)
	0x55efb55d4f00: (8, 86, 59), (151, 154, 133)
	0x55efb55d5098: (0, 0, 8), (97, 112, 111)
	0x55efb55d51c8: (0, 5, 68), (89, 112, 122)
	0x55efb55d5278: (30, 0, 9), (127, 105, 60)
	0x55efb55d5310: (65, 0, 59), (127, 94, 122)
EMBREE: Set dst_map 0x14f677e34c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb024c00 for accel 0x55efb55d4560
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677e34c00
EMBREE: Pack root 0x55efb55d4d00 to root_map 0x14f677e34c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 261...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb025e00 = 0x14f677e35e00 allocated to accel structure 0x55efb55d4600
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677e35e00 to 0xd5e1c400
RTV: Building BLAS into 0x55efb55d4600
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4d00
Compressed Node: i	exp: (1, -1, 1)	origin: (-5.169504, 11.546965, 9.408619)
Children:
	0x55efb55d4d68: (103, 7, 105), (161, 218, 143)
	0x55efb55e42d0: (102, 0, 0), (161, 211, 128)
	0x55efb55eff48: (0, 20, 116), (125, 173, 142)
	0x55efb55fb5b0: (1, 13, 0), (126, 166, 21)
	0x55efb5604738: (96, 117, 19), (105, 138, 117)
	0x55efb5604df8: (2, 40, 9), (29, 69, 129)
EMBREE: Set dst_map 0x14f677e35e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb025e00 for accel 0x55efb55d4600
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677e35e00
EMBREE: Pack root 0x55efb55d4d00 to root_map 0x14f677e35e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 262...
RTV: Creating acceleration struction of size 0x7e100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb099100 = 0x14f677ea9100 allocated to accel structure 0x55efb55d46a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677ea9100 to 0xd5e8f700
RTV: Building BLAS into 0x55efb55d46a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4032 triangles added; total: 4032
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d4d40
Compressed Node: i	exp: (0, 0, 0)	origin: (-9.339753, 1.534454, -8.534206)
Children:
	0x55efb55d4da8: (0, 196, 0), (74, 226, 78)
	0x55efb55ee870: (0, 136, 50), (107, 202, 104)
	0x55efb55f8378: (123, 0, 159), (219, 36, 202)
	0x55efb55ff280: (15, 31, 81), (54, 150, 141)
	0x55efb5605d90: (49, 49, 98), (166, 150, 145)
	0x55efb5609be8: (91, 29, 134), (200, 79, 167)
EMBREE: Set dst_map 0x14f677ea9100 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb099100 for accel 0x55efb55d46a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677ea9100
EMBREE: Pack root 0x55efb55d4d40 to root_map 0x14f677ea9140
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 263...
RTV: Creating acceleration struction of size 0xfa00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xfa00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb117200 = 0x14f677f27200 allocated to accel structure 0x55efb55d4740
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677f27200 to 0xd5f0d800
RTV: Building BLAS into 0x55efb55d4740
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 498 triangles added; total: 498
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5200
Compressed Node: i	exp: (3, 0, 0)	origin: (-3.619017, 11.300145, 10.630883)
Children:
	0x55efb55d5268: (99, 6, 62), (135, 141, 136)
	0x55efb55d6ea8: (0, 0, 0), (21, 128, 76)
	0x55efb55d84f0: (60, 12, 57), (88, 142, 124)
	0x55efb55d9900: (41, 8, 40), (63, 138, 108)
	0x55efb55dc850: (18, 3, 20), (43, 134, 94)
	0x55efb55dd330: (82, 11, 69), (102, 142, 130)
EMBREE: Set dst_map 0x14f677f27200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb117200 for accel 0x55efb55d4740
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677f27200
EMBREE: Pack root 0x55efb55d5200 to root_map 0x14f677f27240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 264...
RTV: Creating acceleration struction of size 0x33e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x33e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb126c00 = 0x14f677f36c00 allocated to accel structure 0x55efb55d47e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677f36c00 to 0xd5f1d200
RTV: Building BLAS into 0x55efb55d47e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1658 triangles added; total: 1658
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5200
Compressed Node: i	exp: (3, 2, 1)	origin: (1.644779, 11.712138, -12.329121)
Children:
	0x55efb55d5268: (4, 117, 33), (143, 152, 163)
	0x55efb55e3838: (4, 0, 0), (143, 42, 145)
	0x55efb55e7bd0: (0, 23, 0), (24, 152, 148)
	0x55efb55ea050: (115, 23, 0), (143, 137, 148)
	0x55efb55ebe18: (17, 26, 101), (130, 137, 146)
	0x55efb55ec368: (4, 33, 32), (143, 152, 35)
EMBREE: Set dst_map 0x14f677f36c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb126c00 for accel 0x55efb55d47e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677f36c00
EMBREE: Pack root 0x55efb55d5200 to root_map 0x14f677f36c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 265...
RTV: Creating acceleration struction of size 0x12d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb15aa00 = 0x14f677f6aa00 allocated to accel structure 0x55efb55d4880
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677f6aa00 to 0xd5f51000
RTV: Building BLAS into 0x55efb55d4880
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 600 triangles added; total: 600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5200
Compressed Node: i	exp: (1, 2, -1)	origin: (7.048969, 7.432625, 13.076319)
Children:
	0x55efb55d5268: (191, 105, 100), (226, 195, 159)
	0x55efb55d7200: (176, 0, 71), (208, 58, 164)
	0x55efb55d9090: (125, 73, 17), (178, 138, 180)
	0x55efb55dc798: (172, 57, 61), (200, 199, 170)
	0x55efb55dd9a8: (172, 84, 45), (234, 91, 208)
	0x55efb55de7a8: (0, 104, 0), (106, 148, 126)
EMBREE: Set dst_map 0x14f677f6aa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb15aa00 for accel 0x55efb55d4880
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677f6aa00
EMBREE: Pack root 0x55efb55d5200 to root_map 0x14f677f6aa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 266...
RTV: Creating acceleration struction of size 0x2d0b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2d0b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb16d700 = 0x14f677f7d700 allocated to accel structure 0x55efb55d4920
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f677f7d700 to 0xd5f63d00
RTV: Building BLAS into 0x55efb55d4920
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 23059 triangles added; total: 23059
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (5, 4, 3)	origin: (-10.953329, 0.096075, 6.392771)
Children:
	0x55efb55dbbe8: (0, 1, 0), (61, 69, 187)
	0x55efb565b778: (99, 138, 65), (151, 228, 178)
	0x55efb56a1a70: (89, 1, 21), (168, 70, 223)
	0x55efb56c0620: (80, 62, 18), (159, 131, 223)
	0x55efb56d7a90: (56, 0, 6), (113, 68, 214)
	0x55efb56ea280: (60, 63, 17), (91, 130, 196)
EMBREE: Set dst_map 0x14f677f7d700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb16d700 for accel 0x55efb55d4920
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f677f7d700
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f677f7d740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 267...
RTV: Creating acceleration struction of size 0x9b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb43e200 = 0x14f67824e200 allocated to accel structure 0x55efb55d49c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67824e200 to 0xd6234800
RTV: Building BLAS into 0x55efb55d49c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 308 triangles added; total: 308
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5200
Compressed Node: i	exp: (-2, -1, -3)	origin: (-6.568102, 2.372104, -7.927681)
Children:
	0x55efb55d5268: (0, 60, 65), (94, 140, 176)
	0x55efb55d6a50: (20, 41, 0), (155, 59, 228)
	0x55efb55d7ff0: (68, 60, 84), (167, 99, 202)
	0x55efb55d8968: (74, 98, 121), (167, 140, 205)
	0x55efb55d9338: (48, 0, 34), (130, 42, 177)
	0x55efb55d9910: (43, 57, 51), (130, 71, 182)
EMBREE: Set dst_map 0x14f67824e200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb43e200 for accel 0x55efb55d49c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67824e200
EMBREE: Pack root 0x55efb55d5200 to root_map 0x14f67824e240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 268...
RTV: Creating acceleration struction of size 0xea100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xea100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb447d00 = 0x14f678257d00 allocated to accel structure 0x55efb55d4a60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678257d00 to 0xd623e300
RTV: Building BLAS into 0x55efb55d4a60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7488 triangles added; total: 7488
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5200
Compressed Node: i	exp: (1, 2, 1)	origin: (-36.818554, 1.280748, 29.779825)
Children:
	0x55efb55d5268: (77, 64, 124), (98, 132, 193)
	0x55efb5617860: (16, 71, 124), (81, 113, 157)
	0x55efb5621850: (0, 108, 104), (19, 132, 134)
	0x55efb562c3d0: (96, 49, 84), (154, 107, 131)
	0x55efb5632610: (191, 0, 0), (223, 22, 43)
	0x55efb5635c88: (151, 21, 41), (194, 51, 87)
EMBREE: Set dst_map 0x14f678257d00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb447d00 for accel 0x55efb55d4a60
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678257d00
EMBREE: Pack root 0x55efb55d5200 to root_map 0x14f678257d40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 269...
RTV: Creating acceleration struction of size 0x19fd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb531e00 = 0x14f678341e00 allocated to accel structure 0x55efb55d4b00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678341e00 to 0xd6328400
RTV: Building BLAS into 0x55efb55d4b00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13303 triangles added; total: 13303
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (3, 2, 1)	origin: (-10.702374, 2.045481, 9.758567)
Children:
	0x55efb55dbbe8: (0, 0, 120), (109, 41, 212)
	0x55efb56123a8: (96, 28, 44), (111, 133, 184)
	0x55efb5633088: (42, 0, 0), (130, 42, 51)
	0x55efb5652418: (43, 25, 13), (55, 161, 161)
	0x55efb5669de0: (40, 16, 19), (112, 39, 179)
	0x55efb567ab68: (48, 32, 16), (86, 65, 169)
EMBREE: Set dst_map 0x14f678341e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb531e00 for accel 0x55efb55d4b00
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678341e00
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f678341e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 270...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb6d1b00 = 0x14f6784e1b00 allocated to accel structure 0x55efb55d4ba0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6784e1b00 to 0xd64c8100
RTV: Building BLAS into 0x55efb55d4ba0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5240
Compressed Node: i	exp: (-1, -2, -2)	origin: (-9.397340, 2.276504, -8.512968)
Children:
	0x55efb55d52a8: (64, 42, 35), (163, 105, 136)
	0x55efb55d7b58: (51, 0, 0), (124, 45, 169)
	0x55efb55d9500: (104, 0, 10), (177, 45, 172)
	0x55efb55dcc40: (113, 103, 46), (228, 165, 158)
	0x55efb55de1b0: (54, 103, 22), (130, 154, 133)
	0x55efb55df400: (0, 115, 13), (65, 165, 98)
EMBREE: Set dst_map 0x14f6784e1b00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb6d1b00 for accel 0x55efb55d4ba0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6784e1b00
EMBREE: Pack root 0x55efb55d5240 to root_map 0x14f6784e1b40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 271...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb6e3c00 = 0x14f6784f3c00 allocated to accel structure 0x55efb55d4c40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6784f3c00 to 0xd64da200
RTV: Building BLAS into 0x55efb55d4c40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5700
Compressed Node: i	exp: (2, 2, 3)	origin: (-22.674906, -0.613132, 30.307766)
Children:
	0x55efb55d5768: (0, 5, 0), (30, 155, 210)
	0x55efb55f9bd0: (13, 0, 0), (169, 35, 148)
	0x55efb5601130: (9, 11, 124), (170, 153, 210)
	0x55efb5605780: (25, 9, 3), (153, 155, 13)
	0x55efb56075c8: (26, 24, 3), (58, 145, 150)
	0x55efb5608058: (29, 122, 60), (155, 146, 71)
EMBREE: Set dst_map 0x14f6784f3c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb6e3c00 for accel 0x55efb55d4c40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6784f3c00
EMBREE: Pack root 0x55efb55d5700 to root_map 0x14f6784f3c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 272...
RTV: Creating acceleration struction of size 0x4c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb762200 = 0x14f678572200 allocated to accel structure 0x55efb55d4ce0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678572200 to 0xd6558800
RTV: Building BLAS into 0x55efb55d4ce0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 150 triangles added; total: 150
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5700
Compressed Node: i	exp: (0, 0, 3)	origin: (1.979121, 12.444323, 7.871805)
Children:
	0x55efb55d5768: (0, 0, 118), (75, 80, 138)
	0x55efb55d6040: (90, 3, 0), (167, 83, 21)
	0x55efb55d67b0: (41, 62, 69), (116, 177, 96)
	0x55efb55d6e40: (62, 63, 44), (141, 177, 70)
	0x55efb55d7300: (23, 0, 93), (97, 138, 120)
	0x55efb55d75b8: (75, 3, 19), (148, 139, 47)
EMBREE: Set dst_map 0x14f678572200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb762200 for accel 0x55efb55d4ce0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678572200
EMBREE: Pack root 0x55efb55d5700 to root_map 0x14f678572240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 273...
RTV: Creating acceleration struction of size 0x18500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x18500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb766e00 = 0x14f678576e00 allocated to accel structure 0x55efb55d4d80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678576e00 to 0xd655d400
RTV: Building BLAS into 0x55efb55d4d80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 776 triangles added; total: 776
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5700
Compressed Node: i	exp: (2, 1, 0)	origin: (-2.591937, 10.415362, 8.203151)
Children:
	0x55efb55d5768: (98, 163, 67), (191, 201, 242)
	0x55efb55dc4e0: (0, 160, 0), (122, 207, 196)
	0x55efb55df398: (92, 51, 46), (170, 166, 193)
	0x55efb55dff88: (0, 0, 7), (78, 53, 173)
	0x55efb55e0828: (60, 0, 35), (192, 52, 238)
	0x55efb55e1398: (34, 51, 13), (121, 168, 165)
EMBREE: Set dst_map 0x14f678576e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb766e00 for accel 0x55efb55d4d80
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678576e00
EMBREE: Pack root 0x55efb55d5700 to root_map 0x14f678576e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 274...
RTV: Creating acceleration struction of size 0x740200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x740200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xb77f300 = 0x14f67858f300 allocated to accel structure 0x55efb55d4e20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67858f300 to 0xd6575900
RTV: Building BLAS into 0x55efb55d4e20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 59394 triangles added; total: 59394
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (0, 2, 1)	origin: (7.247412, 4.344875, 11.008569)
Children:
	0x55efb55dbbe8: (44, 25, 81), (213, 73, 148)
	0x55efb56798a8: (44, 71, 90), (213, 106, 167)
	0x55efb5705750: (0, 80, 163), (240, 107, 204)
	0x55efb5787f98: (75, 0, 0), (220, 44, 86)
	0x55efb57fdff8: (15, 103, 128), (230, 138, 196)
	0x55efb586aa40: (83, 105, 191), (208, 143, 239)
EMBREE: Set dst_map 0x14f67858f300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xb77f300 for accel 0x55efb55d4e20
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67858f300
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f67858f340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 275...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xbebf500 = 0x14f678ccf500 allocated to accel structure 0x55efb55d4ec0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678ccf500 to 0xd6cb5b00
RTV: Building BLAS into 0x55efb55d4ec0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5700
Compressed Node: i	exp: (0, 1, 3)	origin: (0.197880, 7.570610, 7.396943)
Children:
	0x55efb55d5768: (0, 0, 136), (84, 139, 159)
	0x55efb55d6dc0: (105, 0, 0), (195, 138, 24)
	0x55efb55d82b8: (46, 0, 79), (133, 182, 111)
	0x55efb55d8e70: (70, 0, 50), (152, 182, 81)
	0x55efb55d9a90: (87, 0, 22), (171, 164, 54)
	0x55efb55dbf10: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x14f678ccf500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xbebf500 for accel 0x55efb55d4ec0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678ccf500
EMBREE: Pack root 0x55efb55d5700 to root_map 0x14f678ccf540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 276...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xbecaa00 = 0x14f678cdaa00 allocated to accel structure 0x55efb55d4f60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678cdaa00 to 0xd6cc1000
RTV: Building BLAS into 0x55efb55d4f60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5700
Compressed Node: i	exp: (2, 1, 0)	origin: (4.009951, 9.049192, 11.244306)
Children:
	0x55efb55d5768: (95, 0, 34), (143, 138, 182)
	0x55efb55e4c88: (0, 0, 0), (26, 139, 143)
	0x55efb55ee930: (81, 61, 34), (115, 139, 180)
	0x55efb55f0218: (21, 63, 0), (111, 139, 143)
	0x55efb55f0f78: (19, 0, 60), (127, 75, 182)
	0x55efb55f1580: (21, 0, 0), (127, 109, 105)
EMBREE: Set dst_map 0x14f678cdaa00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xbecaa00 for accel 0x55efb55d4f60
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678cdaa00
EMBREE: Pack root 0x55efb55d5700 to root_map 0x14f678cdaa40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 277...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xbf0c200 = 0x14f678d1c200 allocated to accel structure 0x55efb55bd2e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678d1c200 to 0xd6d02800
RTV: Building BLAS into 0x55efb55bd2e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5700
Compressed Node: i	exp: (1, -2, 1)	origin: (-5.149152, 15.654038, -17.938791)
Children:
	0x55efb55d5768: (0, 0, 116), (190, 199, 185)
	0x55efb55ddff0: (0, 15, 68), (129, 183, 123)
	0x55efb55e1980: (12, 0, 0), (109, 199, 88)
	0x55efb55e4c30: (29, 0, 0), (190, 18, 141)
	0x55efb55e4de0: (29, 180, 0), (190, 199, 141)
	0x55efb55e4f90: (31, 14, 0), (190, 184, 139)
EMBREE: Set dst_map 0x14f678d1c200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xbf0c200 for accel 0x55efb55bd2e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678d1c200
EMBREE: Pack root 0x55efb55d5700 to root_map 0x14f678d1c240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 278...
RTV: Creating acceleration struction of size 0xcf00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xcf00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xbf29f00 = 0x14f678d39f00 allocated to accel structure 0x55efb55d50a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678d39f00 to 0xd6d20500
RTV: Building BLAS into 0x55efb55d50a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 412 triangles added; total: 412
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5740
Compressed Node: i	exp: (2, 2, -3)	origin: (17.717075, 7.375426, -28.588303)
Children:
	0x55efb55d57a8: (12, 61, 213), (46, 147, 219)
	0x55efb55d7bc0: (171, 53, 6), (244, 79, 13)
	0x55efb55d95a8: (146, 28, 0), (216, 53, 9)
	0x55efb55dbd90: (84, 20, 0), (123, 50, 7)
	0x55efb55dc5f0: (200, 100, 6), (231, 125, 7)
	0x55efb55dcb50: (0, 0, 6), (15, 21, 7)
EMBREE: Set dst_map 0x14f678d39f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xbf29f00 for accel 0x55efb55d50a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678d39f00
EMBREE: Pack root 0x55efb55d5740 to root_map 0x14f678d39f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 279...
RTV: Creating acceleration struction of size 0x35500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x35500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xbf36e00 = 0x14f678d46e00 allocated to accel structure 0x55efb55d5140
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678d46e00 to 0xd6d2d400
RTV: Building BLAS into 0x55efb55d5140
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1703 triangles added; total: 1703
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5c00
Compressed Node: i	exp: (3, 2, 1)	origin: (9.987664, 11.653848, -12.186610)
Children:
	0x55efb55d5c68: (0, 114, 0), (148, 157, 184)
	0x55efb55e6b48: (4, 0, 0), (148, 45, 155)
	0x55efb55e9e68: (0, 30, 0), (30, 157, 156)
	0x55efb55eba00: (113, 30, 0), (148, 141, 156)
	0x55efb55ed118: (18, 35, 104), (134, 141, 184)
	0x55efb55ed760: (4, 34, 33), (148, 157, 36)
EMBREE: Set dst_map 0x14f678d46e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xbf36e00 for accel 0x55efb55d5140
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678d46e00
EMBREE: Pack root 0x55efb55d5c00 to root_map 0x14f678d46e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 280...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xbf6c300 = 0x14f678d7c300 allocated to accel structure 0x55efb55d51e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678d7c300 to 0xd6d62900
RTV: Building BLAS into 0x55efb55d51e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5c00
Compressed Node: i	exp: (0, 2, 0)	origin: (-0.191739, 11.520787, -12.485670)
Children:
	0x55efb55d5c68: (4, 104, 17), (133, 195, 118)
	0x55efb55e6cb0: (108, 104, 77), (239, 195, 223)
	0x55efb55f1778: (110, 52, 120), (223, 113, 224)
	0x55efb55fbc98: (0, 46, 0), (100, 106, 67)
	0x55efb5604338: (110, 0, 73), (208, 55, 218)
	0x55efb5609b60: (37, 0, 44), (123, 80, 137)
EMBREE: Set dst_map 0x14f678d7c300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xbf6c300 for accel 0x55efb55d51e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678d7c300
EMBREE: Pack root 0x55efb55d5c00 to root_map 0x14f678d7c340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 281...
RTV: Creating acceleration struction of size 0x678000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x678000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xbff3400 = 0x14f678e03400 allocated to accel structure 0x55efb55d5280
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f678e03400 to 0xd6de9a00
RTV: Building BLAS into 0x55efb55d5280
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 52989 triangles added; total: 52989
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 2, 0)	origin: (15.791794, 6.397914, -24.225891)
Children:
	0x55efb55dbbe8: (56, 104, 3), (111, 145, 198)
	0x55efb566cb80: (66, 37, 24), (147, 77, 169)
	0x55efb56e56b0: (0, 74, 122), (134, 107, 203)
	0x55efb57575d8: (68, 74, 0), (152, 107, 132)
	0x55efb57c84f0: (35, 0, 39), (167, 39, 176)
	0x55efb581f070: (16, 113, 50), (60, 150, 154)
EMBREE: Set dst_map 0x14f678e03400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xbff3400 for accel 0x55efb55d5280
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f678e03400
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f678e03440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 282...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc66b400 = 0x14f67947b400 allocated to accel structure 0x55efb55d5320
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67947b400 to 0xd7461a00
RTV: Building BLAS into 0x55efb55d5320
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Set dst_map 0x14f67947b400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc66b400 for accel 0x55efb55d5320
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67947b400
EMBREE: Pack root 0x7ffce1581ae0 to root_map 0x14f67947b440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 283...
RTV: Creating acceleration struction of size 0xdd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xdd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc66b600 = 0x14f67947b600 allocated to accel structure 0x55efb55d53c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67947b600 to 0xd7461c00
RTV: Building BLAS into 0x55efb55d53c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 440 triangles added; total: 440
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5c00
Compressed Node: i	exp: (-1, 0, -1)	origin: (-0.645671, 9.290928, -11.916551)
Children:
	0x55efb55d5c68: (0, 0, 43), (218, 26, 128)
	0x55efb55d8218: (0, 153, 0), (218, 175, 80)
	0x55efb55dbb80: (73, 18, 23), (218, 89, 136)
	0x55efb55dd360: (0, 18, 23), (82, 89, 128)
	0x55efb55ddcb0: (73, 82, 0), (218, 161, 102)
	0x55efb55de200: (0, 82, 0), (74, 161, 102)
EMBREE: Set dst_map 0x14f67947b600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc66b600 for accel 0x55efb55d53c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67947b600
EMBREE: Pack root 0x55efb55d5c00 to root_map 0x14f67947b640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 284...
RTV: Creating acceleration struction of size 0x9c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc679300 = 0x14f679489300 allocated to accel structure 0x55efb55d5460
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679489300 to 0xd746f900
RTV: Building BLAS into 0x55efb55d5460
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5008 triangles added; total: 5008
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5c00
Compressed Node: i	exp: (0, 1, 3)	origin: (21.290339, 15.475586, 4.789949)
Children:
	0x55efb55d5c68: (6, 15, 67), (135, 226, 96)
	0x55efb55e9900: (0, 0, 99), (161, 177, 115)
	0x55efb55f76c8: (69, 34, 0), (111, 136, 72)
	0x55efb5600028: (0, 0, 139), (43, 177, 149)
	0x55efb5608628: (44, 35, 89), (135, 211, 106)
	0x55efb56109b8: (37, 0, 114), (163, 177, 149)
EMBREE: Set dst_map 0x14f679489300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc679300 for accel 0x55efb55d5460
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679489300
EMBREE: Pack root 0x55efb55d5c00 to root_map 0x14f679489340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 285...
RTV: Creating acceleration struction of size 0x1b0900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1b0900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc715c00 = 0x14f679525c00 allocated to accel structure 0x55efb55d5500
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679525c00 to 0xd750c200
RTV: Building BLAS into 0x55efb55d5500
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13840 triangles added; total: 13840
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (5, 2, 3)	origin: (-9.587969, 0.476419, 7.620272)
Children:
	0x55efb55dbbe8: (113, 55, 166), (141, 145, 189)
	0x55efb5600e10: (25, 15, 126), (62, 96, 164)
	0x55efb5621960: (91, 0, 171), (115, 157, 212)
	0x55efb563e5e8: (0, 69, 94), (18, 135, 131)
	0x55efb5659818: (69, 1, 160), (93, 92, 180)
	0x55efb5673820: (5, 61, 0), (20, 142, 16)
EMBREE: Set dst_map 0x14f679525c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc715c00 for accel 0x55efb55d5500
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679525c00
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f679525c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 286...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc8c6500 = 0x14f6796d6500 allocated to accel structure 0x55efb55d55a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6796d6500 to 0xd76bcb00
RTV: Building BLAS into 0x55efb55d55a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d5c40
Compressed Node: i	exp: (2, -2, -1)	origin: (13.673057, 15.344007, -12.966626)
Children:
	0x55efb55d5ca8: (0, 1, 125), (131, 163, 189)
	0x55efb55e0618: (0, 24, 0), (132, 174, 17)
	0x55efb55e7e88: (0, 0, 16), (51, 198, 133)
	0x55efb55e9980: (83, 0, 16), (131, 198, 133)
	0x55efb55eb420: (36, 0, 52), (97, 198, 189)
	0x55efb55ecb58: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x14f6796d6500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc8c6500 for accel 0x55efb55d55a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6796d6500
EMBREE: Pack root 0x55efb55d5c40 to root_map 0x14f6796d6540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 287...
RTV: Creating acceleration struction of size 0x2e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc8f8600 = 0x14f679708600 allocated to accel structure 0x55efb55d5640
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679708600 to 0xd76eec00
RTV: Building BLAS into 0x55efb55d5640
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 89 triangles added; total: 89
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6100
Compressed Node: i	exp: (-2, 2, 1)	origin: (-1.081052, 4.311310, 10.744438)
Children:
	0x55efb55d6168: (150, 0, 0), (251, 231, 61)
	0x55efb55d6c08: (0, 0, 173), (105, 231, 183)
	0x55efb55d7508: (104, 0, 59), (201, 32, 176)
	0x55efb55d75a0: (102, 197, 56), (204, 231, 178)
	0x55efb55d7638: (102, 31, 56), (204, 198, 178)
	0x55efb55d7644: (104, 30, 56), (204, 198, 176)
EMBREE: Set dst_map 0x14f679708600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc8f8600 for accel 0x55efb55d5640
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679708600
EMBREE: Pack root 0x55efb55d6100 to root_map 0x14f679708640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 288...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc8fb400 = 0x14f67970b400 allocated to accel structure 0x55efb55d56e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f67970b400 to 0xd76f1a00
RTV: Building BLAS into 0x55efb55d56e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6100
Compressed Node: i	exp: (-2, 1, 4)	origin: (22.340450, 16.814526, -6.085238)
Children:
	0x55efb55d6168: (0, 0, 43), (177, 157, 92)
	0x55efb55f0ee8: (0, 0, 0), (177, 157, 44)
	0x55efb56075d0: (0, 0, 163), (177, 157, 195)
	0x55efb5616638: (0, 0, 139), (177, 157, 164)
	0x55efb5625740: (0, 0, 91), (177, 157, 110)
	0x55efb56325c0: (0, 0, 109), (177, 157, 140)
EMBREE: Set dst_map 0x14f67970b400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc8fb400 for accel 0x55efb55d56e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f67970b400
EMBREE: Pack root 0x55efb55d6100 to root_map 0x14f67970b440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 289...
RTV: Creating acceleration struction of size 0x70b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x70b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xc9f3500 = 0x14f679803500 allocated to accel structure 0x55efb55d5780
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679803500 to 0xd77e9b00
RTV: Building BLAS into 0x55efb55d5780
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3604 triangles added; total: 3604
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6100
Compressed Node: i	exp: (2, 0, 1)	origin: (-4.515021, 10.961652, 11.372982)
Children:
	0x55efb55d6168: (60, 7, 107), (172, 116, 205)
	0x55efb55e6ce8: (3, 0, 107), (68, 111, 207)
	0x55efb55f1818: (0, 151, 0), (174, 210, 62)
	0x55efb55f9180: (2, 65, 83), (167, 116, 122)
	0x55efb55ff560: (0, 65, 25), (162, 196, 123)
	0x55efb5601d70: (85, 65, 10), (167, 196, 122)
EMBREE: Set dst_map 0x14f679803500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xc9f3500 for accel 0x55efb55d5780
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679803500
EMBREE: Pack root 0x55efb55d6100 to root_map 0x14f679803540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 290...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xca64000 = 0x14f679874000 allocated to accel structure 0x55efb55d5820
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679874000 to 0xd785a600
RTV: Building BLAS into 0x55efb55d5820
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6100
Compressed Node: i	exp: (0, 2, 0)	origin: (6.956445, 11.629395, -12.367093)
Children:
	0x55efb55d6168: (0, 93, 0), (173, 139, 85)
	0x55efb55ddcd8: (46, 0, 52), (125, 86, 101)
	0x55efb55e3450: (57, 0, 0), (112, 139, 85)
	0x55efb55e7640: (0, 65, 46), (173, 112, 164)
	0x55efb55e9880: (59, 0, 43), (105, 110, 85)
	0x55efb55ea3a0: (5, 0, 35), (168, 132, 85)
EMBREE: Set dst_map 0x14f679874000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xca64000 for accel 0x55efb55d5820
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679874000
EMBREE: Pack root 0x55efb55d6100 to root_map 0x14f679874040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 291...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xca90700 = 0x14f6798a0700 allocated to accel structure 0x55efb55d58c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6798a0700 to 0xd7886d00
RTV: Building BLAS into 0x55efb55d58c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6100
Compressed Node: i	exp: (1, -2, 0)	origin: (-3.038695, 20.136789, -17.276011)
Children:
	0x55efb55d6168: (12, 0, 165), (144, 179, 253)
	0x55efb55dec98: (0, 0, 0), (71, 179, 166)
	0x55efb55e43f0: (69, 14, 123), (91, 165, 170)
	0x55efb55e5638: (0, 0, 0), (144, 17, 251)
	0x55efb55e57e8: (0, 162, 0), (144, 179, 251)
	0x55efb55e5b18: (0, 13, 0), (144, 166, 249)
EMBREE: Set dst_map 0x14f6798a0700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xca90700 for accel 0x55efb55d58c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6798a0700
EMBREE: Pack root 0x55efb55d6100 to root_map 0x14f6798a0740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 292...
RTV: Creating acceleration struction of size 0xf5f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcaae400 = 0x14f6798be400 allocated to accel structure 0x55efb55d5960
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6798be400 to 0xd78a4a00
RTV: Building BLAS into 0x55efb55d5960
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7868 triangles added; total: 7868
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6100
Compressed Node: i	exp: (3, 3, 2)	origin: (-48.644955, 1.799493, 35.795444)
Children:
	0x55efb55d6168: (83, 207, 55), (155, 249, 76)
	0x55efb55f2958: (0, 193, 28), (47, 249, 101)
	0x55efb560c400: (36, 0, 0), (94, 49, 137)
	0x55efb561ac98: (42, 180, 44), (88, 253, 86)
	0x55efb5627290: (37, 36, 44), (74, 204, 87)
	0x55efb5633a98: (88, 0, 0), (118, 37, 137)
EMBREE: Set dst_map 0x14f6798be400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcaae400 for accel 0x55efb55d5960
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6798be400
EMBREE: Pack root 0x55efb55d6100 to root_map 0x14f6798be440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 293...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcba4300 = 0x14f6799b4300 allocated to accel structure 0x55efb55d5a00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6799b4300 to 0xd799a900
RTV: Building BLAS into 0x55efb55d5a00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6100
Compressed Node: i	exp: (2, 0, -1)	origin: (-2.852748, 3.701350, 11.244201)
Children:
	0x55efb55d6168: (49, 59, 32), (142, 141, 169)
	0x55efb55d8130: (141, 55, 109), (200, 98, 212)
	0x55efb55d9c40: (61, 0, 39), (126, 68, 167)
	0x55efb55dca68: (0, 90, 0), (28, 153, 60)
	0x55efb55ddcd0: (18, 118, 21), (95, 147, 112)
	0x55efb55de580: (0, 69, 0), (113, 111, 133)
EMBREE: Set dst_map 0x14f6799b4300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcba4300 for accel 0x55efb55d5a00
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6799b4300
EMBREE: Pack root 0x55efb55d6100 to root_map 0x14f6799b4340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 294...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcbb3600 = 0x14f6799c3600 allocated to accel structure 0x55efb55d5aa0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6799c3600 to 0xd79a9c00
RTV: Building BLAS into 0x55efb55d5aa0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6140
Compressed Node: i	exp: (-1, 3, -2)	origin: (-8.932772, 2.407359, 6.941681)
Children:
	0x55efb55d61a8: (0, 106, 0), (68, 143, 135)
	0x55efb55d8af0: (54, 97, 24), (102, 145, 123)
	0x55efb55dc608: (99, 103, 23), (181, 124, 159)
	0x55efb55dd818: (69, 79, 52), (94, 98, 101)
	0x55efb55de740: (80, 0, 39), (119, 18, 108)
	0x55efb55def88: (80, 17, 64), (102, 80, 85)
EMBREE: Set dst_map 0x14f6799c3600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcbb3600 for accel 0x55efb55d5aa0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6799c3600
EMBREE: Pack root 0x55efb55d6140 to root_map 0x14f6799c3640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 295...
RTV: Creating acceleration struction of size 0x1cad00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1cad00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcbc3900 = 0x14f6799d3900 allocated to accel structure 0x55efb55d5b40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f6799d3900 to 0xd79b9f00
RTV: Building BLAS into 0x55efb55d5b40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 14679 triangles added; total: 14679
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (1, 1, 0)	origin: (3.300101, 7.723739, 11.729010)
Children:
	0x55efb55dbbe8: (0, 115, 11), (126, 224, 202)
	0x55efb560bad0: (117, 110, 16), (242, 227, 206)
	0x55efb5632478: (1, 47, 14), (125, 123, 202)
	0x55efb56556f0: (115, 44, 12), (240, 118, 205)
	0x55efb5671898: (117, 0, 6), (240, 51, 148)
	0x55efb5683290: (40, 0, 0), (126, 52, 128)
EMBREE: Set dst_map 0x14f6799d3900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcbc3900 for accel 0x55efb55d5b40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f6799d3900
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f6799d3940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 296...
RTV: Creating acceleration struction of size 0xf5c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcd8e600 = 0x14f679b9e600 allocated to accel structure 0x55efb55d5be0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679b9e600 to 0xd7b84c00
RTV: Building BLAS into 0x55efb55d5be0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7862 triangles added; total: 7862
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6600
Compressed Node: i	exp: (4, 4, 2)	origin: (20.988741, 10.159668, -37.957588)
Children:
	0x55efb55d6668: (0, 163, 102), (73, 201, 135)
	0x55efb55f3720: (93, 157, 55), (134, 201, 182)
	0x55efb560cb98: (52, 0, 0), (103, 40, 239)
	0x55efb561c1f8: (70, 30, 88), (100, 166, 151)
	0x55efb5628ce8: (66, 146, 86), (96, 204, 153)
	0x55efb56342b8: (31, 0, 0), (58, 30, 239)
EMBREE: Set dst_map 0x14f679b9e600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcd8e600 for accel 0x55efb55d5be0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679b9e600
EMBREE: Pack root 0x55efb55d6600 to root_map 0x14f679b9e640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 297...
RTV: Creating acceleration struction of size 0x5300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xce84200 = 0x14f679c94200 allocated to accel structure 0x55efb55d5c80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679c94200 to 0xd7c7a800
RTV: Building BLAS into 0x55efb55d5c80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 164 triangles added; total: 164
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6600
Compressed Node: i	exp: (2, 2, 2)	origin: (5.357996, 9.414164, 9.335013)
Children:
	0x55efb55d6668: (184, 137, 21), (226, 188, 130)
	0x55efb55d7620: (0, 144, 0), (22, 209, 110)
	0x55efb55d8180: (9, 161, 0), (226, 199, 75)
	0x55efb55d87c8: (2, 0, 2), (18, 193, 97)
	0x55efb55d8db0: (3, 164, 52), (221, 205, 130)
	0x55efb55d8f70: (10, 175, 74), (203, 209, 102)
EMBREE: Set dst_map 0x14f679c94200 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xce84200 for accel 0x55efb55d5c80
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679c94200
EMBREE: Pack root 0x55efb55d6600 to root_map 0x14f679c94240
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 298...
RTV: Creating acceleration struction of size 0x2b100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2b100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xce89500 = 0x14f679c99500 allocated to accel structure 0x55efb55d5d20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679c99500 to 0xd7c7fb00
RTV: Building BLAS into 0x55efb55d5d20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1376 triangles added; total: 1376
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6600
Compressed Node: i	exp: (1, 1, 0)	origin: (6.599520, 7.407006, 12.691500)
Children:
	0x55efb55d6668: (0, 155, 0), (219, 186, 247)
	0x55efb55df760: (8, 0, 0), (219, 45, 247)
	0x55efb55e30a0: (0, 0, 0), (57, 45, 221)
	0x55efb55e64b8: (5, 44, 8), (60, 157, 218)
	0x55efb55e8598: (162, 44, 32), (213, 157, 239)
	0x55efb55e8978: (45, 44, 8), (174, 157, 239)
EMBREE: Set dst_map 0x14f679c99500 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xce89500 for accel 0x55efb55d5d20
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679c99500
EMBREE: Pack root 0x55efb55d6600 to root_map 0x14f679c99540
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 299...
RTV: Creating acceleration struction of size 0x23200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x23200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xceb4600 = 0x14f679cc4600 allocated to accel structure 0x55efb55d5dc0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679cc4600 to 0xd7caac00
RTV: Building BLAS into 0x55efb55d5dc0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1122 triangles added; total: 1122
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6600
Compressed Node: i	exp: (1, 1, -1)	origin: (6.584379, 12.482409, -12.832388)
Children:
	0x55efb55d6668: (0, 0, 0), (25, 163, 144)
	0x55efb55e1588: (158, 0, 0), (163, 149, 144)
	0x55efb55e5318: (96, 0, 103), (160, 139, 140)
	0x55efb55e6760: (23, 0, 103), (97, 139, 131)
	0x55efb55e6d00: (22, 0, 0), (161, 148, 96)
	0x55efb55e6eb0: (22, 141, 0), (161, 149, 144)
EMBREE: Set dst_map 0x14f679cc4600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xceb4600 for accel 0x55efb55d5dc0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679cc4600
EMBREE: Pack root 0x55efb55d6600 to root_map 0x14f679cc4640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 300...
RTV: Creating acceleration struction of size 0x9b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xced7800 = 0x14f679ce7800 allocated to accel structure 0x55efb55d5e60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679ce7800 to 0xd7ccde00
RTV: Building BLAS into 0x55efb55d5e60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 308 triangles added; total: 308
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6600
Compressed Node: i	exp: (-2, -1, -3)	origin: (-8.695513, 2.184258, -8.676951)
Children:
	0x55efb55d6668: (0, 61, 70), (167, 101, 209)
	0x55efb55d7d70: (17, 40, 0), (152, 60, 229)
	0x55efb55d93c0: (0, 100, 74), (88, 140, 187)
	0x55efb55d9d68: (76, 97, 132), (167, 140, 214)
	0x55efb55dc178: (45, 0, 29), (125, 43, 176)
	0x55efb55dc750: (41, 58, 53), (128, 72, 184)
EMBREE: Set dst_map 0x14f679ce7800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xced7800 for accel 0x55efb55d5e60
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679ce7800
EMBREE: Pack root 0x55efb55d6600 to root_map 0x14f679ce7840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 301...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcee1300 = 0x14f679cf1300 allocated to accel structure 0x55efb55d5f00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679cf1300 to 0xd7cd7900
RTV: Building BLAS into 0x55efb55d5f00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6600
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.158100, 11.431160, -12.269962)
Children:
	0x55efb55d6668: (0, 21, 154), (158, 131, 242)
	0x55efb55e09d8: (0, 32, 0), (159, 115, 28)
	0x55efb55e81a8: (3, 0, 13), (155, 136, 75)
	0x55efb55ea428: (100, 13, 34), (158, 152, 242)
	0x55efb55ebfa0: (0, 11, 34), (61, 152, 242)
	0x55efb55edb30: (0, 11, 95), (157, 131, 177)
EMBREE: Set dst_map 0x14f679cf1300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcee1300 for accel 0x55efb55d5f00
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679cf1300
EMBREE: Pack root 0x55efb55d6600 to root_map 0x14f679cf1340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 302...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf13400 = 0x14f679d23400 allocated to accel structure 0x55efb55d5fa0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d23400 to 0xd7d09a00
RTV: Building BLAS into 0x55efb55d5fa0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6640
Compressed Node: i	exp: (0, 2, -1)	origin: (7.406953, 5.801770, 13.042561)
Children:
	0x55efb55d66a8: (16, 3, 48), (84, 94, 107)
	0x55efb55d8708: (52, 140, 43), (115, 199, 136)
	0x55efb55dc0d0: (121, 61, 28), (217, 125, 190)
	0x55efb55dd370: (0, 108, 0), (122, 115, 162)
	0x55efb55de080: (67, 49, 37), (122, 141, 146)
	0x55efb55dea58: (74, 0, 47), (118, 112, 135)
EMBREE: Set dst_map 0x14f679d23400 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf13400 for accel 0x55efb55d5fa0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d23400
EMBREE: Pack root 0x55efb55d6640 to root_map 0x14f679d23440
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 303...
RTV: Creating acceleration struction of size 0x700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf23700 = 0x14f679d33700 allocated to accel structure 0x55efb55d6040
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d33700 to 0xd7d19d00
RTV: Building BLAS into 0x55efb55d6040
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 12 triangles added; total: 12
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b00
Compressed Node: i	exp: (2, 2, 2)	origin: (8.580025, 16.407619, -40.954586)
Children:
	0x55efb55d6b68: (0, 0, 0), (0, 128, 128)
	0x55efb55d6be8: (0, 0, 0), (128, 0, 128)
	0x55efb55d6c68: (128, 0, 0), (128, 128, 128)
	0x55efb55d6ce8: (0, 0, 0), (128, 128, 0)
	0x55efb55d6d68: (0, 128, 0), (128, 128, 128)
	0x55efb55d6de8: (0, 0, 128), (128, 128, 128)
EMBREE: Set dst_map 0x14f679d33700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf23700 for accel 0x55efb55d6040
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d33700
EMBREE: Pack root 0x55efb55d6b00 to root_map 0x14f679d33740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 304...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf23e00 = 0x14f679d33e00 allocated to accel structure 0x55efb55d60e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d33e00 to 0xd7d1a400
RTV: Building BLAS into 0x55efb55d60e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b00
Compressed Node: i	exp: (2, 1, -1)	origin: (-3.717296, 9.124278, 10.965999)
Children:
	0x55efb55d6b68: (0, 141, 0), (139, 177, 143)
	0x55efb55d74c0: (1, 8, 0), (49, 177, 65)
	0x55efb55d7ae0: (101, 0, 84), (151, 158, 139)
	0x55efb55d81c0: (76, 33, 80), (80, 125, 90)
	0x55efb55d8440: (11, 33, 5), (151, 125, 139)
	0x55efb55d8798: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x14f679d33e00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf23e00 for accel 0x55efb55d60e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d33e00
EMBREE: Pack root 0x55efb55d6b00 to root_map 0x14f679d33e40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 305...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf27700 = 0x14f679d37700 allocated to accel structure 0x55efb55d6180
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d37700 to 0xd7d1dd00
RTV: Building BLAS into 0x55efb55d6180
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b00
Compressed Node: i	exp: (0, 1, 3)	origin: (5.016853, 7.570610, 7.900957)
Children:
	0x55efb55d6b68: (0, 0, 136), (84, 139, 159)
	0x55efb55d81c0: (105, 0, 0), (195, 138, 24)
	0x55efb55d96b8: (46, 0, 79), (133, 182, 111)
	0x55efb55dbc30: (70, 0, 50), (152, 182, 81)
	0x55efb55dc850: (87, 0, 22), (171, 164, 54)
	0x55efb55dd150: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x14f679d37700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf27700 for accel 0x55efb55d6180
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d37700
EMBREE: Pack root 0x55efb55d6b00 to root_map 0x14f679d37740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 306...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf32c00 = 0x14f679d42c00 allocated to accel structure 0x55efb55d6220
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d42c00 to 0xd7d29200
RTV: Building BLAS into 0x55efb55d6220
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b00
Compressed Node: i	exp: (2, 0, -1)	origin: (5.517954, 7.154109, 12.522789)
Children:
	0x55efb55d6b68: (49, 59, 32), (142, 141, 169)
	0x55efb55d8b30: (141, 55, 109), (200, 98, 212)
	0x55efb55dc040: (61, 0, 39), (126, 68, 167)
	0x55efb55dd3a8: (0, 90, 0), (28, 153, 60)
	0x55efb55de610: (18, 118, 21), (95, 147, 112)
	0x55efb55dee80: (0, 69, 0), (113, 111, 133)
EMBREE: Set dst_map 0x14f679d42c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf32c00 for accel 0x55efb55d6220
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d42c00
EMBREE: Pack root 0x55efb55d6b00 to root_map 0x14f679d42c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 307...
RTV: Creating acceleration struction of size 0x9800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf41f00 = 0x14f679d51f00 allocated to accel structure 0x55efb55d62c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d51f00 to 0xd7d38500
RTV: Building BLAS into 0x55efb55d62c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 301 triangles added; total: 301
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b00
Compressed Node: i	exp: (3, 2, 0)	origin: (0.227102, 1.191952, 11.359343)
Children:
	0x55efb55d6b68: (0, 0, 0), (43, 183, 90)
	0x55efb55d8730: (179, 17, 120), (210, 194, 195)
	0x55efb55dbc30: (29, 93, 29), (182, 176, 147)
	0x55efb55dc810: (31, 158, 30), (182, 194, 164)
	0x55efb55dcb78: (31, 76, 29), (182, 104, 163)
	0x55efb55dced8: (31, 0, 57), (183, 78, 178)
EMBREE: Set dst_map 0x14f679d51f00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf41f00 for accel 0x55efb55d62c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d51f00
EMBREE: Pack root 0x55efb55d6b00 to root_map 0x14f679d51f40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 308...
RTV: Creating acceleration struction of size 0x2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf4b700 = 0x14f679d5b700 allocated to accel structure 0x55efb55d6360
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d5b700 to 0xd7d41d00
RTV: Building BLAS into 0x55efb55d6360
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 64 triangles added; total: 64
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b00
Compressed Node: i	exp: (1, 1, -2)	origin: (-1.515202, 6.304796, 7.113275)
Children:
	0x55efb55d6b68: (0, 180, 0), (50, 212, 93)
	0x55efb55d7140: (104, 0, 87), (128, 216, 155)
	0x55efb55d77b8: (31, 118, 25), (108, 192, 140)
	0x55efb55d78d8: (48, 154, 40), (107, 192, 140)
	0x55efb55d7958: (48, 118, 40), (108, 192, 140)
	0x55efb55d79d8: (31, 118, 78), (108, 192, 140)
EMBREE: Set dst_map 0x14f679d5b700 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf4b700 for accel 0x55efb55d6360
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d5b700
EMBREE: Pack root 0x55efb55d6b00 to root_map 0x14f679d5b740
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 309...
RTV: Creating acceleration struction of size 0x5be00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5be00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcf4d800 = 0x14f679d5d800 allocated to accel structure 0x55efb55d6400
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679d5d800 to 0xd7d43e00
RTV: Building BLAS into 0x55efb55d6400
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2938 triangles added; total: 2938
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b00
Compressed Node: i	exp: (1, 2, 1)	origin: (3.346312, 6.631266, -37.091202)
Children:
	0x55efb55d6b68: (118, 76, 6), (173, 164, 144)
	0x55efb55e74a8: (115, 0, 0), (173, 77, 150)
	0x55efb55f1b78: (0, 0, 88), (119, 77, 150)
	0x55efb55f6668: (0, 119, 6), (119, 164, 141)
	0x55efb55fa230: (0, 76, 6), (119, 120, 141)
	0x55efb55fd818: (0, 0, 6), (119, 77, 89)
EMBREE: Set dst_map 0x14f679d5d800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcf4d800 for accel 0x55efb55d6400
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679d5d800
EMBREE: Pack root 0x55efb55d6b00 to root_map 0x14f679d5d840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 310...
RTV: Creating acceleration struction of size 0x5ea00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5ea00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xcfa9600 = 0x14f679db9600 allocated to accel structure 0x55efb55d64a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679db9600 to 0xd7d9fc00
RTV: Building BLAS into 0x55efb55d64a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3026 triangles added; total: 3026
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d6b40
Compressed Node: i	exp: (0, 2, 0)	origin: (7.118742, 8.095128, 11.887055)
Children:
	0x55efb55d6ba8: (8, 42, 0), (156, 60, 180)
	0x55efb55ec718: (9, 105, 16), (152, 138, 158)
	0x55efb55f7428: (0, 0, 23), (129, 44, 191)
	0x55efb55fc918: (1, 72, 8), (156, 73, 163)
	0x55efb55fe120: (6, 95, 13), (152, 97, 159)
	0x55efb55ff7d0: (8, 59, 15), (150, 108, 157)
EMBREE: Set dst_map 0x14f679db9600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xcfa9600 for accel 0x55efb55d64a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679db9600
EMBREE: Pack root 0x55efb55d6b40 to root_map 0x14f679db9640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 311...
RTV: Creating acceleration struction of size 0x5f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd008000 = 0x14f679e18000 allocated to accel structure 0x55efb55d6540
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679e18000 to 0xd7dfe600
RTV: Building BLAS into 0x55efb55d6540
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 188 triangles added; total: 188
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7000
Compressed Node: i	exp: (0, 3, 1)	origin: (-7.855429, 0.969378, 5.660808)
Children:
	0x55efb55d7068: (0, 75, 0), (108, 136, 81)
	0x55efb55d8cd8: (212, 0, 167), (225, 1, 174)
	0x55efb55d8ef8: (93, 0, 74), (218, 76, 172)
	0x55efb55d90c0: (103, 0, 74), (225, 76, 171)
	0x55efb55d9170: (93, 0, 78), (220, 76, 174)
	0x55efb55d9220: (101, 0, 78), (225, 76, 174)
EMBREE: Set dst_map 0x14f679e18000 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd008000 for accel 0x55efb55d6540
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679e18000
EMBREE: Pack root 0x55efb55d7000 to root_map 0x14f679e18040
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 312...
RTV: Creating acceleration struction of size 0x79d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x79d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd00df00 = 0x14f679e1df00 allocated to accel structure 0x55efb55d65e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679e1df00 to 0xd7e04500
RTV: Building BLAS into 0x55efb55d65e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3896 triangles added; total: 3896
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7000
Compressed Node: i	exp: (2, -1, -3)	origin: (7.411160, 9.603903, -37.199673)
Children:
	0x55efb55d7068: (31, 39, 0), (68, 140, 145)
	0x55efb55e6d78: (75, 39, 0), (102, 125, 145)
	0x55efb55f1470: (0, 39, 0), (31, 165, 145)
	0x55efb55f96d0: (103, 39, 0), (121, 140, 145)
	0x55efb5601718: (126, 0, 0), (149, 125, 145)
	0x55efb5606c10: (150, 39, 0), (165, 123, 145)
EMBREE: Set dst_map 0x14f679e1df00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd00df00 for accel 0x55efb55d65e0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679e1df00
EMBREE: Pack root 0x55efb55d7000 to root_map 0x14f679e1df40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 313...
RTV: Creating acceleration struction of size 0x1700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd087c00 = 0x14f679e97c00 allocated to accel structure 0x55efb55d6680
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679e97c00 to 0xd7e7e200
RTV: Building BLAS into 0x55efb55d6680
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 44 triangles added; total: 44
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7000
Compressed Node: i	exp: (0, 0, -1)	origin: (-0.751274, 13.675462, -12.756758)
Children:
	0x55efb55d7068: (0, 0, 52), (152, 15, 205)
	0x55efb55d7318: (0, 166, 0), (152, 182, 153)
	0x55efb55d7648: (0, 2, 0), (12, 179, 205)
	0x55efb55d76f8: (139, 2, 0), (152, 179, 205)
	0x55efb55d77a8: (11, 2, 0), (140, 167, 53)
	0x55efb55d7940: (11, 14, 152), (140, 179, 205)
EMBREE: Set dst_map 0x14f679e97c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd087c00 for accel 0x55efb55d6680
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679e97c00
EMBREE: Pack root 0x55efb55d7000 to root_map 0x14f679e97c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 314...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd089300 = 0x14f679e99300 allocated to accel structure 0x55efb55d6720
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679e99300 to 0xd7e7f900
RTV: Building BLAS into 0x55efb55d6720
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7000
Compressed Node: i	exp: (1, 0, -1)	origin: (6.792478, 11.625627, 9.421421)
Children:
	0x55efb55d7068: (62, 0, 9), (179, 105, 136)
	0x55efb55d88c0: (176, 58, 63), (250, 103, 155)
	0x55efb55dbca8: (0, 106, 0), (38, 176, 57)
	0x55efb55dcf20: (100, 96, 21), (149, 158, 142)
	0x55efb55de000: (0, 77, 0), (142, 169, 102)
	0x55efb55dec80: (62, 75, 16), (210, 121, 134)
EMBREE: Set dst_map 0x14f679e99300 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd089300 for accel 0x55efb55d6720
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679e99300
EMBREE: Pack root 0x55efb55d7000 to root_map 0x14f679e99340
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 315...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd098600 = 0x14f679ea8600 allocated to accel structure 0x55efb55d67c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679ea8600 to 0xd7e8ec00
RTV: Building BLAS into 0x55efb55d67c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7000
Compressed Node: i	exp: (1, -1, 0)	origin: (-5.528903, 11.626824, 7.460082)
Children:
	0x55efb55d7068: (163, 0, 34), (230, 214, 242)
	0x55efb55ee480: (0, 64, 168), (140, 167, 219)
	0x55efb55f6ad0: (81, 36, 185), (208, 193, 238)
	0x55efb55fc300: (12, 65, 5), (147, 167, 52)
	0x55efb56003d8: (3, 74, 0), (55, 142, 181)
	0x55efb5604008: (91, 35, 22), (219, 179, 193)
EMBREE: Set dst_map 0x14f679ea8600 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd098600 for accel 0x55efb55d67c0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679ea8600
EMBREE: Pack root 0x55efb55d7000 to root_map 0x14f679ea8640
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 316...
RTV: Creating acceleration struction of size 0x4f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd10b900 = 0x14f679f1b900 allocated to accel structure 0x55efb55d6860
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679f1b900 to 0xd7f01f00
RTV: Building BLAS into 0x55efb55d6860
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 156 triangles added; total: 156
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7000
Compressed Node: i	exp: (3, 2, 1)	origin: (1.188941, 2.600072, 10.307370)
Children:
	0x55efb55d7068: (72, 0, 39), (98, 142, 149)
	0x55efb55d7b70: (6, 22, 103), (55, 101, 128)
	0x55efb55d86c0: (109, 14, 88), (131, 74, 120)
	0x55efb55d8e00: (0, 14, 0), (97, 24, 149)
	0x55efb55d9498: (10, 23, 50), (64, 55, 93)
	0x55efb55d9998: (10, 48, 16), (91, 142, 93)
EMBREE: Set dst_map 0x14f679f1b900 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd10b900 for accel 0x55efb55d6860
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679f1b900
EMBREE: Pack root 0x55efb55d7000 to root_map 0x14f679f1b940
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 317...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd110800 = 0x14f679f20800 allocated to accel structure 0x55efb55d6900
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679f20800 to 0xd7f06e00
RTV: Building BLAS into 0x55efb55d6900
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7000
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.053797, 9.179939, -36.681007)
Children:
	0x55efb55d7068: (0, 153, 0), (122, 230, 230)
	0x55efb55d7200: (108, 153, 0), (230, 229, 236)
	0x55efb55d7398: (15, 0, 92), (122, 154, 217)
	0x55efb55d74c8: (108, 0, 11), (216, 154, 137)
	0x55efb55d7570: (110, 0, 30), (216, 154, 217)
	0x55efb55d7608: (15, 0, 12), (121, 154, 199)
EMBREE: Set dst_map 0x14f679f20800 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd110800 for accel 0x55efb55d6900
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679f20800
EMBREE: Pack root 0x55efb55d7000 to root_map 0x14f679f20840
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 318...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd111a00 = 0x14f679f21a00 allocated to accel structure 0x55efb55d69a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679f21a00 to 0xd7f08000
RTV: Building BLAS into 0x55efb55d69a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2 triangles added; total: 2
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55d7040
Compressed Node: i	exp: (8, 0, 7)	origin: (-60.642002, 0.510824, -51.992500)
Children:
	0x55efb55d70a8: (0, 0, 0), (129, 0, 201)
	0x55efb55d70b4: (0, 0, 0), (129, 0, 201)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
EMBREE: Set dst_map 0x14f679f21a00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd111a00 for accel 0x55efb55d69a0
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679f21a00
EMBREE: Pack root 0x55efb55d7040 to root_map 0x14f679f21a40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Creating bottom level acceleration structure 319...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x14f66ce10000 + 0xd111c00 = 0x14f679f21c00 allocated to accel structure 0x55efb55d6a40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x14f679f21c00 to 0xd7f08200
RTV: Building BLAS into 0x55efb55d6a40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb55dbb80
Compressed Node: i	exp: (2, 2, 3)	origin: (-2.760483, 10.268956, 6.757678)
Children:
	0x55efb55dbbe8: (130, 181, 0), (187, 234, 157)
	0x55efb5603eb0: (0, 178, 57), (50, 234, 177)
	0x55efb5627ac8: (17, 40, 134), (141, 193, 158)
	0x55efb564b6c0: (31, 0, 57), (161, 197, 72)
	0x55efb56630a8: (18, 181, 52), (155, 210, 158)
	0x55efb5678ad8: (22, 139, 65), (158, 193, 120)
EMBREE: Set dst_map 0x14f679f21c00 = accel->address.bo 0x14f66ce10000 + accel->address.offset 0xd111c00 for accel 0x55efb55d6a40
EMBREE: Pack bvh 0x7ffce1581a40 to dst_map 0x14f679f21c00
EMBREE: Pack root 0x55efb55dbb80 to root_map 0x14f679f21c40
EMBREE: Release rtcBVH structure created at 0x55efb55be470
RTV: Adding 320 BLAS instances
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55ef33e6dec0 address 0x14f66ce10000
RTV: Getting address of BLAS 0x55ef33e6dec0 -> 0x14f66ce10000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55ef33e6dd70 address 0x14f66ce13900
RTV: Getting address of BLAS 0x55ef33e6dd70 -> 0x14f66ce13900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55ef315725a0 address 0x14f66ce14b00
RTV: Getting address of BLAS 0x55ef315725a0 -> 0x14f66ce14b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55ef31572600 address 0x14f66ce14d00
RTV: Getting address of BLAS 0x55ef31572600 -> 0x14f66ce14d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55ef33f1c090 address 0x14f66ce56500
RTV: Getting address of BLAS 0x55ef33f1c090 -> 0x14f66ce56500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55be950 address 0x14f66ce68600
RTV: Getting address of BLAS 0x55efb55be950 -> 0x14f66ce68600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55be9b0 address 0x14f66ceaff00
RTV: Getting address of BLAS 0x55efb55be9b0 -> 0x14f66ceaff00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bea50 address 0x14f66ceb5e00
RTV: Getting address of BLAS 0x55efb55bea50 -> 0x14f66ceb5e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55beaf0 address 0x14f66cf34400
RTV: Getting address of BLAS 0x55efb55beaf0 -> 0x14f66cf34400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bed20 address 0x14f66cf3d500
RTV: Getting address of BLAS 0x55efb55bed20 -> 0x14f66cf3d500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bda90 address 0x14f66d05ea00
RTV: Getting address of BLAS 0x55efb55bda90 -> 0x14f66d05ea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bdaf0 address 0x14f66d097700
RTV: Getting address of BLAS 0x55efb55bdaf0 -> 0x14f66d097700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7830 address 0x14f66d0c6600
RTV: Getting address of BLAS 0x55efb55c7830 -> 0x14f66d0c6600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c78d0 address 0x14f66d0f2900
RTV: Getting address of BLAS 0x55efb55c78d0 -> 0x14f66d0f2900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7970 address 0x14f66d110600
RTV: Getting address of BLAS 0x55efb55c7970 -> 0x14f66d110600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bdbd0 address 0x14f66d13aa00
RTV: Getting address of BLAS 0x55efb55bdbd0 -> 0x14f66d13aa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bdc70 address 0x14f66d14cb00
RTV: Getting address of BLAS 0x55efb55bdc70 -> 0x14f66d14cb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bdd40 address 0x14f66d17ec00
RTV: Getting address of BLAS 0x55efb55bdd40 -> 0x14f66d17ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bdde0 address 0x14f66d185500
RTV: Getting address of BLAS 0x55efb55bdde0 -> 0x14f66d185500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bde80 address 0x14f66d403000
RTV: Getting address of BLAS 0x55efb55bde80 -> 0x14f66d403000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bdf20 address 0x14f66d413300
RTV: Getting address of BLAS 0x55efb55bdf20 -> 0x14f66d413300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c2600 address 0x14f66d4b1400
RTV: Getting address of BLAS 0x55efb55c2600 -> 0x14f66d4b1400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c2660 address 0x14f66d4c1700
RTV: Getting address of BLAS 0x55efb55c2660 -> 0x14f66d4c1700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c26c0 address 0x14f66d4ede00
RTV: Getting address of BLAS 0x55efb55c26c0 -> 0x14f66d4ede00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c27a0 address 0x14f66d4fd100
RTV: Getting address of BLAS 0x55efb55c27a0 -> 0x14f66d4fd100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c2840 address 0x14f66d502400
RTV: Getting address of BLAS 0x55efb55c2840 -> 0x14f66d502400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c28e0 address 0x14f66d580a00
RTV: Getting address of BLAS 0x55efb55c28e0 -> 0x14f66d580a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c2980 address 0x14f66d5b2b00
RTV: Getting address of BLAS 0x55efb55c2980 -> 0x14f66d5b2b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c2a20 address 0x14f66d5ca800
RTV: Getting address of BLAS 0x55efb55c2a20 -> 0x14f66d5ca800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c2ac0 address 0x14f66d6ba900
RTV: Getting address of BLAS 0x55efb55c2ac0 -> 0x14f66d6ba900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6de0 address 0x14f66d6bbb00
RTV: Getting address of BLAS 0x55efb55c6de0 -> 0x14f66d6bbb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6e40 address 0x14f66d6efa00
RTV: Getting address of BLAS 0x55efb55c6e40 -> 0x14f66d6efa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7470 address 0x14f66d701b00
RTV: Getting address of BLAS 0x55efb55c7470 -> 0x14f66d701b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7510 address 0x14f66d702100
RTV: Getting address of BLAS 0x55efb55c7510 -> 0x14f66d702100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c75b0 address 0x14f66d7f2200
RTV: Getting address of BLAS 0x55efb55c75b0 -> 0x14f66d7f2200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7650 address 0x14f66d865500
RTV: Getting address of BLAS 0x55efb55c7650 -> 0x14f66d865500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c76f0 address 0x14f66d875800
RTV: Getting address of BLAS 0x55efb55c76f0 -> 0x14f66d875800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7790 address 0x14f66d884300
RTV: Getting address of BLAS 0x55efb55c7790 -> 0x14f66d884300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3410 address 0x14f66d887100
RTV: Getting address of BLAS 0x55efb55c3410 -> 0x14f66d887100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c34b0 address 0x14f66da26f00
RTV: Getting address of BLAS 0x55efb55c34b0 -> 0x14f66da26f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3550 address 0x14f66da8da00
RTV: Getting address of BLAS 0x55efb55c3550 -> 0x14f66da8da00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c35f0 address 0x14f66db83600
RTV: Getting address of BLAS 0x55efb55c35f0 -> 0x14f66db83600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3690 address 0x14f66dd21300
RTV: Getting address of BLAS 0x55efb55c3690 -> 0x14f66dd21300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3910 address 0x14f66dda8400
RTV: Getting address of BLAS 0x55efb55c3910 -> 0x14f66dda8400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c39b0 address 0x14f66ddda500
RTV: Getting address of BLAS 0x55efb55c39b0 -> 0x14f66ddda500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3a50 address 0x14f66ddda700
RTV: Getting address of BLAS 0x55efb55c3a50 -> 0x14f66ddda700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3af0 address 0x14f66de0c600
RTV: Getting address of BLAS 0x55efb55c3af0 -> 0x14f66de0c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3b90 address 0x14f66e54c800
RTV: Getting address of BLAS 0x55efb55c3b90 -> 0x14f66e54c800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3c30 address 0x14f66e57e900
RTV: Getting address of BLAS 0x55efb55c3c30 -> 0x14f66e57e900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3cd0 address 0x14f66e59c600
RTV: Getting address of BLAS 0x55efb55c3cd0 -> 0x14f66e59c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c3d70 address 0x14f66e61ac00
RTV: Getting address of BLAS 0x55efb55c3d70 -> 0x14f66e61ac00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da550 address 0x14f66e65c400
RTV: Getting address of BLAS 0x55efb55da550 -> 0x14f66e65c400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da5f0 address 0x14f66e66af00
RTV: Getting address of BLAS 0x55efb55da5f0 -> 0x14f66e66af00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da690 address 0x14f66e66ce00
RTV: Getting address of BLAS 0x55efb55da690 -> 0x14f66e66ce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da730 address 0x14f66e67d500
RTV: Getting address of BLAS 0x55efb55da730 -> 0x14f66e67d500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da7d0 address 0x14f66e680e00
RTV: Getting address of BLAS 0x55efb55da7d0 -> 0x14f66e680e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da870 address 0x14f66e87d100
RTV: Getting address of BLAS 0x55efb55da870 -> 0x14f66e87d100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da910 address 0x14f66e975200
RTV: Getting address of BLAS 0x55efb55da910 -> 0x14f66e975200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da9b0 address 0x14f66e985500
RTV: Getting address of BLAS 0x55efb55da9b0 -> 0x14f66e985500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55daa50 address 0x14f66ea46800
RTV: Getting address of BLAS 0x55efb55daa50 -> 0x14f66ea46800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55daaf0 address 0x14f66eb53600
RTV: Getting address of BLAS 0x55efb55daaf0 -> 0x14f66eb53600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55dab90 address 0x14f66eb5eb00
RTV: Getting address of BLAS 0x55efb55dab90 -> 0x14f66eb5eb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55dac30 address 0x14f66eb70c00
RTV: Getting address of BLAS 0x55efb55dac30 -> 0x14f66eb70c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55dacd0 address 0x14f66ebbaa00
RTV: Getting address of BLAS 0x55efb55dacd0 -> 0x14f66ebbaa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55dad70 address 0x14f66ebbf600
RTV: Getting address of BLAS 0x55efb55dad70 -> 0x14f66ebbf600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55dae10 address 0x14f66ebcf900
RTV: Getting address of BLAS 0x55efb55dae10 -> 0x14f66ebcf900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55daeb0 address 0x14f66ec11100
RTV: Getting address of BLAS 0x55efb55daeb0 -> 0x14f66ec11100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55daf50 address 0x14f66ec23200
RTV: Getting address of BLAS 0x55efb55daf50 -> 0x14f66ec23200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db950 address 0x14f66ec7f000
RTV: Getting address of BLAS 0x55efb55db950 -> 0x14f66ec7f000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db9f0 address 0x14f66ed69100
RTV: Getting address of BLAS 0x55efb55db9f0 -> 0x14f66ed69100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55dba90 address 0x14f66edc4f00
RTV: Getting address of BLAS 0x55efb55dba90 -> 0x14f66edc4f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55daff0 address 0x14f66ef64c00
RTV: Getting address of BLAS 0x55efb55daff0 -> 0x14f66ef64c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db090 address 0x14f66ef96d00
RTV: Getting address of BLAS 0x55efb55db090 -> 0x14f66ef96d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db130 address 0x14f66ef9e000
RTV: Getting address of BLAS 0x55efb55db130 -> 0x14f66ef9e000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db1d0 address 0x14f66efda300
RTV: Getting address of BLAS 0x55efb55db1d0 -> 0x14f66efda300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db270 address 0x14f66efdb200
RTV: Getting address of BLAS 0x55efb55db270 -> 0x14f66efdb200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db310 address 0x14f66f04e500
RTV: Getting address of BLAS 0x55efb55db310 -> 0x14f66f04e500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db3b0 address 0x14f66f0bfc00
RTV: Getting address of BLAS 0x55efb55db3b0 -> 0x14f66f0bfc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db450 address 0x14f66f0f1d00
RTV: Getting address of BLAS 0x55efb55db450 -> 0x14f66f0f1d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db4f0 address 0x14f66f1e7a00
RTV: Getting address of BLAS 0x55efb55db4f0 -> 0x14f66f1e7a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db590 address 0x14f66f3a9b00
RTV: Getting address of BLAS 0x55efb55db590 -> 0x14f66f3a9b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db630 address 0x14f66f3ad400
RTV: Getting address of BLAS 0x55efb55db630 -> 0x14f66f3ad400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db6d0 address 0x14f66f3b0d00
RTV: Getting address of BLAS 0x55efb55db6d0 -> 0x14f66f3b0d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db770 address 0x14f66f3dd400
RTV: Getting address of BLAS 0x55efb55db770 -> 0x14f66f3dd400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db810 address 0x14f66f4d5500
RTV: Getting address of BLAS 0x55efb55db810 -> 0x14f66f4d5500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55db8b0 address 0x14f66f50a000
RTV: Getting address of BLAS 0x55efb55db8b0 -> 0x14f66f50a000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4130 address 0x14f66f588600
RTV: Getting address of BLAS 0x55efb55c4130 -> 0x14f66f588600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c41d0 address 0x14f66f59af00
RTV: Getting address of BLAS 0x55efb55c41d0 -> 0x14f66f59af00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4270 address 0x14f66f5a9a00
RTV: Getting address of BLAS 0x55efb55c4270 -> 0x14f66f5a9a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4310 address 0x14f66f5bcd00
RTV: Getting address of BLAS 0x55efb55c4310 -> 0x14f66f5bcd00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c43b0 address 0x14f66f759700
RTV: Getting address of BLAS 0x55efb55c43b0 -> 0x14f66f759700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4450 address 0x14f66f78b800
RTV: Getting address of BLAS 0x55efb55c4450 -> 0x14f66f78b800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c44f0 address 0x14f66fee1b00
RTV: Getting address of BLAS 0x55efb55c44f0 -> 0x14f66fee1b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4590 address 0x14f670016c00
RTV: Getting address of BLAS 0x55efb55c4590 -> 0x14f670016c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4630 address 0x14f670028700
RTV: Getting address of BLAS 0x55efb55c4630 -> 0x14f670028700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c46d0 address 0x14f67003a200
RTV: Getting address of BLAS 0x55efb55c46d0 -> 0x14f67003a200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4770 address 0x14f67004a500
RTV: Getting address of BLAS 0x55efb55c4770 -> 0x14f67004a500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4810 address 0x14f67007c600
RTV: Getting address of BLAS 0x55efb55c4810 -> 0x14f67007c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c48b0 address 0x14f67009b100
RTV: Getting address of BLAS 0x55efb55c48b0 -> 0x14f67009b100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4950 address 0x14f6700ab800
RTV: Getting address of BLAS 0x55efb55c4950 -> 0x14f6700ab800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c49f0 address 0x14f6700c8100
RTV: Getting address of BLAS 0x55efb55c49f0 -> 0x14f6700c8100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4a90 address 0x14f6700ca200
RTV: Getting address of BLAS 0x55efb55c4a90 -> 0x14f6700ca200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4b30 address 0x14f6700ca400
RTV: Getting address of BLAS 0x55efb55c4b30 -> 0x14f6700ca400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4bd0 address 0x14f6700d8f00
RTV: Getting address of BLAS 0x55efb55c4bd0 -> 0x14f6700d8f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4c70 address 0x14f6700eaa00
RTV: Getting address of BLAS 0x55efb55c4c70 -> 0x14f6700eaa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4d10 address 0x14f670118700
RTV: Getting address of BLAS 0x55efb55c4d10 -> 0x14f670118700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4db0 address 0x14f670636700
RTV: Getting address of BLAS 0x55efb55c4db0 -> 0x14f670636700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4e50 address 0x14f67064e400
RTV: Getting address of BLAS 0x55efb55c4e50 -> 0x14f67064e400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4ef0 address 0x14f670660500
RTV: Getting address of BLAS 0x55efb55c4ef0 -> 0x14f670660500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c4f90 address 0x14f670875e00
RTV: Getting address of BLAS 0x55efb55c4f90 -> 0x14f670875e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5030 address 0x14f670d93700
RTV: Getting address of BLAS 0x55efb55c5030 -> 0x14f670d93700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c50d0 address 0x14f670dc5800
RTV: Getting address of BLAS 0x55efb55c50d0 -> 0x14f670dc5800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5170 address 0x14f670dc6a00
RTV: Getting address of BLAS 0x55efb55c5170 -> 0x14f670dc6a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5210 address 0x14f670ed3800
RTV: Getting address of BLAS 0x55efb55c5210 -> 0x14f670ed3800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c52b0 address 0x14f670fcb900
RTV: Getting address of BLAS 0x55efb55c52b0 -> 0x14f670fcb900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5350 address 0x14f67103ec00
RTV: Getting address of BLAS 0x55efb55c5350 -> 0x14f67103ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c53f0 address 0x14f67106b300
RTV: Getting address of BLAS 0x55efb55c53f0 -> 0x14f67106b300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5490 address 0x14f67107d400
RTV: Getting address of BLAS 0x55efb55c5490 -> 0x14f67107d400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5530 address 0x14f671104500
RTV: Getting address of BLAS 0x55efb55c5530 -> 0x14f671104500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c55d0 address 0x14f67110fa00
RTV: Getting address of BLAS 0x55efb55c55d0 -> 0x14f67110fa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5670 address 0x14f6712af800
RTV: Getting address of BLAS 0x55efb55c5670 -> 0x14f6712af800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5710 address 0x14f6712bc700
RTV: Getting address of BLAS 0x55efb55c5710 -> 0x14f6712bc700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd8b0 address 0x14f671304000
RTV: Getting address of BLAS 0x55efb55bd8b0 -> 0x14f671304000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd7c0 address 0x14f671307900
RTV: Getting address of BLAS 0x55efb55bd7c0 -> 0x14f671307900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c58f0 address 0x14f671312e00
RTV: Getting address of BLAS 0x55efb55c58f0 -> 0x14f671312e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5990 address 0x14f671324700
RTV: Getting address of BLAS 0x55efb55c5990 -> 0x14f671324700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5a30 address 0x14f671414600
RTV: Getting address of BLAS 0x55efb55c5a30 -> 0x14f671414600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5ad0 address 0x14f67149b700
RTV: Getting address of BLAS 0x55efb55c5ad0 -> 0x14f67149b700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5b70 address 0x14f67149c900
RTV: Getting address of BLAS 0x55efb55c5b70 -> 0x14f67149c900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5c10 address 0x14f6715efa00
RTV: Getting address of BLAS 0x55efb55c5c10 -> 0x14f6715efa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5cb0 address 0x14f6715fed00
RTV: Getting address of BLAS 0x55efb55c5cb0 -> 0x14f6715fed00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5d50 address 0x14f671751e00
RTV: Getting address of BLAS 0x55efb55c5d50 -> 0x14f671751e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5df0 address 0x14f671779d00
RTV: Getting address of BLAS 0x55efb55c5df0 -> 0x14f671779d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5e90 address 0x14f67177d600
RTV: Getting address of BLAS 0x55efb55c5e90 -> 0x14f67177d600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c5f30 address 0x14f6717af700
RTV: Getting address of BLAS 0x55efb55c5f30 -> 0x14f6717af700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6930 address 0x14f6717d7600
RTV: Getting address of BLAS 0x55efb55c6930 -> 0x14f6717d7600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c69d0 address 0x14f6717f5300
RTV: Getting address of BLAS 0x55efb55c69d0 -> 0x14f6717f5300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6a70 address 0x14f672fdd400
RTV: Getting address of BLAS 0x55efb55c6a70 -> 0x14f672fdd400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55da160 address 0x14f673091500
RTV: Getting address of BLAS 0x55efb55da160 -> 0x14f673091500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6b10 address 0x14f673189600
RTV: Getting address of BLAS 0x55efb55c6b10 -> 0x14f673189600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6bb0 address 0x14f673198900
RTV: Getting address of BLAS 0x55efb55c6bb0 -> 0x14f673198900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c62b0 address 0x14f67320bc00
RTV: Getting address of BLAS 0x55efb55c62b0 -> 0x14f67320bc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6350 address 0x14f67320be00
RTV: Getting address of BLAS 0x55efb55c6350 -> 0x14f67320be00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6430 address 0x14f67320f700
RTV: Getting address of BLAS 0x55efb55c6430 -> 0x14f67320f700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c57b0 address 0x14f673960e00
RTV: Getting address of BLAS 0x55efb55c57b0 -> 0x14f673960e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6540 address 0x14f673995100
RTV: Getting address of BLAS 0x55efb55c6540 -> 0x14f673995100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c65e0 address 0x14f6739c9100
RTV: Getting address of BLAS 0x55efb55c65e0 -> 0x14f6739c9100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6680 address 0x14f67411f400
RTV: Getting address of BLAS 0x55efb55c6680 -> 0x14f67411f400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6720 address 0x14f674797400
RTV: Getting address of BLAS 0x55efb55c6720 -> 0x14f674797400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c67c0 address 0x14f67481a900
RTV: Getting address of BLAS 0x55efb55c67c0 -> 0x14f67481a900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6860 address 0x14f674829c00
RTV: Getting address of BLAS 0x55efb55c6860 -> 0x14f674829c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0150 address 0x14f674838700
RTV: Getting address of BLAS 0x55efb55d0150 -> 0x14f674838700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd280 address 0x14f674881400
RTV: Getting address of BLAS 0x55efb55bd280 -> 0x14f674881400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0260 address 0x14f67490b700
RTV: Getting address of BLAS 0x55efb55d0260 -> 0x14f67490b700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0300 address 0x14f67490b900
RTV: Getting address of BLAS 0x55efb55d0300 -> 0x14f67490b900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d03a0 address 0x14f67493da00
RTV: Getting address of BLAS 0x55efb55d03a0 -> 0x14f67493da00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0440 address 0x14f67493ec00
RTV: Getting address of BLAS 0x55efb55d0440 -> 0x14f67493ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d04e0 address 0x14f674945200
RTV: Getting address of BLAS 0x55efb55d04e0 -> 0x14f674945200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0580 address 0x14f674be0700
RTV: Getting address of BLAS 0x55efb55d0580 -> 0x14f674be0700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd370 address 0x14f674c08600
RTV: Getting address of BLAS 0x55efb55bd370 -> 0x14f674c08600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d06c0 address 0x14f674c3a700
RTV: Getting address of BLAS 0x55efb55d06c0 -> 0x14f674c3a700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0760 address 0x14f674c3b900
RTV: Getting address of BLAS 0x55efb55d0760 -> 0x14f674c3b900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0800 address 0x14f674c3bb00
RTV: Getting address of BLAS 0x55efb55d0800 -> 0x14f674c3bb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d08a0 address 0x14f674ce5700
RTV: Getting address of BLAS 0x55efb55d08a0 -> 0x14f674ce5700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0940 address 0x14f674e85200
RTV: Getting address of BLAS 0x55efb55d0940 -> 0x14f674e85200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d09e0 address 0x14f674eb1500
RTV: Getting address of BLAS 0x55efb55d09e0 -> 0x14f674eb1500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0a80 address 0x14f674fa0400
RTV: Getting address of BLAS 0x55efb55d0a80 -> 0x14f674fa0400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0b50 address 0x14f67506b800
RTV: Getting address of BLAS 0x55efb55d0b50 -> 0x14f67506b800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0bf0 address 0x14f67511f900
RTV: Getting address of BLAS 0x55efb55d0bf0 -> 0x14f67511f900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd700 address 0x14f67512fc00
RTV: Getting address of BLAS 0x55efb55bd700 -> 0x14f67512fc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0d00 address 0x14f675440900
RTV: Getting address of BLAS 0x55efb55d0d00 -> 0x14f675440900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd610 address 0x14f675472a00
RTV: Getting address of BLAS 0x55efb55bd610 -> 0x14f675472a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0e40 address 0x14f6755a7b00
RTV: Getting address of BLAS 0x55efb55d0e40 -> 0x14f6755a7b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0ee0 address 0x14f6755f9c00
RTV: Getting address of BLAS 0x55efb55d0ee0 -> 0x14f6755f9c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d0f80 address 0x14f6756f1d00
RTV: Getting address of BLAS 0x55efb55d0f80 -> 0x14f6756f1d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1050 address 0x14f6756f1f00
RTV: Getting address of BLAS 0x55efb55d1050 -> 0x14f6756f1f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d10f0 address 0x14f6756f6800
RTV: Getting address of BLAS 0x55efb55d10f0 -> 0x14f6756f6800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1190 address 0x14f6756f6e00
RTV: Getting address of BLAS 0x55efb55d1190 -> 0x14f6756f6e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1230 address 0x14f67573e700
RTV: Getting address of BLAS 0x55efb55d1230 -> 0x14f67573e700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d12d0 address 0x14f675771600
RTV: Getting address of BLAS 0x55efb55d12d0 -> 0x14f675771600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1370 address 0x14f6757b8f00
RTV: Getting address of BLAS 0x55efb55d1370 -> 0x14f6757b8f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1410 address 0x14f6757bf800
RTV: Getting address of BLAS 0x55efb55d1410 -> 0x14f6757bf800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d14b0 address 0x14f67581e200
RTV: Getting address of BLAS 0x55efb55d14b0 -> 0x14f67581e200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1550 address 0x14f6759be000
RTV: Getting address of BLAS 0x55efb55d1550 -> 0x14f6759be000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d15f0 address 0x14f6759f0100
RTV: Getting address of BLAS 0x55efb55d15f0 -> 0x14f6759f0100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1690 address 0x14f675a22100
RTV: Getting address of BLAS 0x55efb55d1690 -> 0x14f675a22100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1730 address 0x14f675a25900
RTV: Getting address of BLAS 0x55efb55d1730 -> 0x14f675a25900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d17d0 address 0x14f675a3bf00
RTV: Getting address of BLAS 0x55efb55d17d0 -> 0x14f675a3bf00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1870 address 0x14f675a3c500
RTV: Getting address of BLAS 0x55efb55d1870 -> 0x14f675a3c500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1910 address 0x14f675a4c800
RTV: Getting address of BLAS 0x55efb55d1910 -> 0x14f675a4c800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d19b0 address 0x14f675a52e00
RTV: Getting address of BLAS 0x55efb55d19b0 -> 0x14f675a52e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1a50 address 0x14f675a65700
RTV: Getting address of BLAS 0x55efb55d1a50 -> 0x14f675a65700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd5b0 address 0x14f675aabd00
RTV: Getting address of BLAS 0x55efb55bd5b0 -> 0x14f675aabd00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1b60 address 0x14f675ad3c00
RTV: Getting address of BLAS 0x55efb55d1b60 -> 0x14f675ad3c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1c00 address 0x14f675ae5d00
RTV: Getting address of BLAS 0x55efb55d1c00 -> 0x14f675ae5d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1ca0 address 0x14f675af6c00
RTV: Getting address of BLAS 0x55efb55d1ca0 -> 0x14f675af6c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1d40 address 0x14f675b08d00
RTV: Getting address of BLAS 0x55efb55d1d40 -> 0x14f675b08d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1de0 address 0x14f675ca8b00
RTV: Getting address of BLAS 0x55efb55d1de0 -> 0x14f675ca8b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1e80 address 0x14f675cb4000
RTV: Getting address of BLAS 0x55efb55d1e80 -> 0x14f675cb4000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1f50 address 0x14f675d1ad00
RTV: Getting address of BLAS 0x55efb55d1f50 -> 0x14f675d1ad00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d1ff0 address 0x14f675d28a00
RTV: Getting address of BLAS 0x55efb55d1ff0 -> 0x14f675d28a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2090 address 0x14f675d2c300
RTV: Getting address of BLAS 0x55efb55d2090 -> 0x14f675d2c300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2130 address 0x14f675d31600
RTV: Getting address of BLAS 0x55efb55d2130 -> 0x14f675d31600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d21d0 address 0x14f675e48f00
RTV: Getting address of BLAS 0x55efb55d21d0 -> 0x14f675e48f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2270 address 0x14f675ec7000
RTV: Getting address of BLAS 0x55efb55d2270 -> 0x14f675ec7000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd460 address 0x14f675ec8200
RTV: Getting address of BLAS 0x55efb55bd460 -> 0x14f675ec8200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2380 address 0x14f675ecbb00
RTV: Getting address of BLAS 0x55efb55d2380 -> 0x14f675ecbb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2450 address 0x14f675ee9800
RTV: Getting address of BLAS 0x55efb55d2450 -> 0x14f675ee9800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d24f0 address 0x14f675f12200
RTV: Getting address of BLAS 0x55efb55d24f0 -> 0x14f675f12200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2590 address 0x14f675f24300
RTV: Getting address of BLAS 0x55efb55d2590 -> 0x14f675f24300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd670 address 0x14f676007200
RTV: Getting address of BLAS 0x55efb55bd670 -> 0x14f676007200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d26a0 address 0x14f6760fcf00
RTV: Getting address of BLAS 0x55efb55d26a0 -> 0x14f6760fcf00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2740 address 0x14f67612be00
RTV: Getting address of BLAS 0x55efb55d2740 -> 0x14f67612be00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d27e0 address 0x14f6761b2f00
RTV: Getting address of BLAS 0x55efb55d27e0 -> 0x14f6761b2f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2880 address 0x14f676231500
RTV: Getting address of BLAS 0x55efb55d2880 -> 0x14f676231500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2950 address 0x14f6762c4800
RTV: Getting address of BLAS 0x55efb55d2950 -> 0x14f6762c4800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d29f0 address 0x14f6763bc900
RTV: Getting address of BLAS 0x55efb55d29f0 -> 0x14f6763bc900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2a90 address 0x14f6763da600
RTV: Getting address of BLAS 0x55efb55d2a90 -> 0x14f6763da600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2b30 address 0x14f6764a1300
RTV: Getting address of BLAS 0x55efb55d2b30 -> 0x14f6764a1300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2bd0 address 0x14f67663dd00
RTV: Getting address of BLAS 0x55efb55d2bd0 -> 0x14f67663dd00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2c70 address 0x14f6766c4e00
RTV: Getting address of BLAS 0x55efb55d2c70 -> 0x14f6766c4e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2d10 address 0x14f6766f3400
RTV: Getting address of BLAS 0x55efb55d2d10 -> 0x14f6766f3400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2db0 address 0x14f676760500
RTV: Getting address of BLAS 0x55efb55d2db0 -> 0x14f676760500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2e50 address 0x14f6767fce00
RTV: Getting address of BLAS 0x55efb55d2e50 -> 0x14f6767fce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2ef0 address 0x14f676801a00
RTV: Getting address of BLAS 0x55efb55d2ef0 -> 0x14f676801a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d2f90 address 0x14f676808300
RTV: Getting address of BLAS 0x55efb55d2f90 -> 0x14f676808300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3030 address 0x14f676900400
RTV: Getting address of BLAS 0x55efb55d3030 -> 0x14f676900400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d30d0 address 0x14f67697ea00
RTV: Getting address of BLAS 0x55efb55d30d0 -> 0x14f67697ea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3170 address 0x14f67697ef00
RTV: Getting address of BLAS 0x55efb55d3170 -> 0x14f67697ef00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3210 address 0x14f6769f0700
RTV: Getting address of BLAS 0x55efb55d3210 -> 0x14f6769f0700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d32b0 address 0x14f676b69c00
RTV: Getting address of BLAS 0x55efb55d32b0 -> 0x14f676b69c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd980 address 0x14f676b69e00
RTV: Getting address of BLAS 0x55efb55bd980 -> 0x14f676b69e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6f10 address 0x14f676c06700
RTV: Getting address of BLAS 0x55efb55c6f10 -> 0x14f676c06700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c6fb0 address 0x14f676c06900
RTV: Getting address of BLAS 0x55efb55c6fb0 -> 0x14f676c06900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7050 address 0x14f676c06b00
RTV: Getting address of BLAS 0x55efb55c7050 -> 0x14f676c06b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c70f0 address 0x14f676c0a400
RTV: Getting address of BLAS 0x55efb55c70f0 -> 0x14f676c0a400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7190 address 0x14f676c0a600
RTV: Getting address of BLAS 0x55efb55c7190 -> 0x14f676c0a600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7230 address 0x14f676c7d900
RTV: Getting address of BLAS 0x55efb55c7230 -> 0x14f676c7d900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c72d0 address 0x14f676c88e00
RTV: Getting address of BLAS 0x55efb55c72d0 -> 0x14f676c88e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55c7370 address 0x14f676cae500
RTV: Getting address of BLAS 0x55efb55c7370 -> 0x14f676cae500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d38e0 address 0x14f676cbe800
RTV: Getting address of BLAS 0x55efb55d38e0 -> 0x14f676cbe800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3980 address 0x14f676ccfa00
RTV: Getting address of BLAS 0x55efb55d3980 -> 0x14f676ccfa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3a20 address 0x14f676d56b00
RTV: Getting address of BLAS 0x55efb55d3a20 -> 0x14f676d56b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3ac0 address 0x14f676d75e00
RTV: Getting address of BLAS 0x55efb55d3ac0 -> 0x14f676d75e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3b60 address 0x14f676da4d00
RTV: Getting address of BLAS 0x55efb55d3b60 -> 0x14f676da4d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3c00 address 0x14f676da5f00
RTV: Getting address of BLAS 0x55efb55d3c00 -> 0x14f676da5f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3ca0 address 0x14f676eb2d00
RTV: Getting address of BLAS 0x55efb55d3ca0 -> 0x14f676eb2d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3d40 address 0x14f676edf000
RTV: Getting address of BLAS 0x55efb55d3d40 -> 0x14f676edf000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3de0 address 0x14f676f5d600
RTV: Getting address of BLAS 0x55efb55d3de0 -> 0x14f676f5d600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3e80 address 0x14f676f74800
RTV: Getting address of BLAS 0x55efb55d3e80 -> 0x14f676f74800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3f20 address 0x14f676f76900
RTV: Getting address of BLAS 0x55efb55d3f20 -> 0x14f676f76900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d3fc0 address 0x14f676fe9c00
RTV: Getting address of BLAS 0x55efb55d3fc0 -> 0x14f676fe9c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4060 address 0x14f677186600
RTV: Getting address of BLAS 0x55efb55d4060 -> 0x14f677186600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4100 address 0x14f677189d00
RTV: Getting address of BLAS 0x55efb55d4100 -> 0x14f677189d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d41a0 address 0x14f6771a6600
RTV: Getting address of BLAS 0x55efb55d41a0 -> 0x14f6771a6600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4240 address 0x14f6771b1900
RTV: Getting address of BLAS 0x55efb55d4240 -> 0x14f6771b1900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d42e0 address 0x14f6771cd400
RTV: Getting address of BLAS 0x55efb55d42e0 -> 0x14f6771cd400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4380 address 0x14f677c68b00
RTV: Getting address of BLAS 0x55efb55d4380 -> 0x14f677c68b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4420 address 0x14f677e08600
RTV: Getting address of BLAS 0x55efb55d4420 -> 0x14f677e08600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d44c0 address 0x14f677e1ce00
RTV: Getting address of BLAS 0x55efb55d44c0 -> 0x14f677e1ce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4560 address 0x14f677e34c00
RTV: Getting address of BLAS 0x55efb55d4560 -> 0x14f677e34c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4600 address 0x14f677e35e00
RTV: Getting address of BLAS 0x55efb55d4600 -> 0x14f677e35e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d46a0 address 0x14f677ea9100
RTV: Getting address of BLAS 0x55efb55d46a0 -> 0x14f677ea9100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4740 address 0x14f677f27200
RTV: Getting address of BLAS 0x55efb55d4740 -> 0x14f677f27200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d47e0 address 0x14f677f36c00
RTV: Getting address of BLAS 0x55efb55d47e0 -> 0x14f677f36c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4880 address 0x14f677f6aa00
RTV: Getting address of BLAS 0x55efb55d4880 -> 0x14f677f6aa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4920 address 0x14f677f7d700
RTV: Getting address of BLAS 0x55efb55d4920 -> 0x14f677f7d700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d49c0 address 0x14f67824e200
RTV: Getting address of BLAS 0x55efb55d49c0 -> 0x14f67824e200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4a60 address 0x14f678257d00
RTV: Getting address of BLAS 0x55efb55d4a60 -> 0x14f678257d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4b00 address 0x14f678341e00
RTV: Getting address of BLAS 0x55efb55d4b00 -> 0x14f678341e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4ba0 address 0x14f6784e1b00
RTV: Getting address of BLAS 0x55efb55d4ba0 -> 0x14f6784e1b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4c40 address 0x14f6784f3c00
RTV: Getting address of BLAS 0x55efb55d4c40 -> 0x14f6784f3c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4ce0 address 0x14f678572200
RTV: Getting address of BLAS 0x55efb55d4ce0 -> 0x14f678572200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4d80 address 0x14f678576e00
RTV: Getting address of BLAS 0x55efb55d4d80 -> 0x14f678576e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4e20 address 0x14f67858f300
RTV: Getting address of BLAS 0x55efb55d4e20 -> 0x14f67858f300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4ec0 address 0x14f678ccf500
RTV: Getting address of BLAS 0x55efb55d4ec0 -> 0x14f678ccf500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d4f60 address 0x14f678cdaa00
RTV: Getting address of BLAS 0x55efb55d4f60 -> 0x14f678cdaa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55bd2e0 address 0x14f678d1c200
RTV: Getting address of BLAS 0x55efb55bd2e0 -> 0x14f678d1c200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d50a0 address 0x14f678d39f00
RTV: Getting address of BLAS 0x55efb55d50a0 -> 0x14f678d39f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5140 address 0x14f678d46e00
RTV: Getting address of BLAS 0x55efb55d5140 -> 0x14f678d46e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d51e0 address 0x14f678d7c300
RTV: Getting address of BLAS 0x55efb55d51e0 -> 0x14f678d7c300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5280 address 0x14f678e03400
RTV: Getting address of BLAS 0x55efb55d5280 -> 0x14f678e03400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5320 address 0x14f67947b400
RTV: Getting address of BLAS 0x55efb55d5320 -> 0x14f67947b400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d53c0 address 0x14f67947b600
RTV: Getting address of BLAS 0x55efb55d53c0 -> 0x14f67947b600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5460 address 0x14f679489300
RTV: Getting address of BLAS 0x55efb55d5460 -> 0x14f679489300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5500 address 0x14f679525c00
RTV: Getting address of BLAS 0x55efb55d5500 -> 0x14f679525c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d55a0 address 0x14f6796d6500
RTV: Getting address of BLAS 0x55efb55d55a0 -> 0x14f6796d6500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5640 address 0x14f679708600
RTV: Getting address of BLAS 0x55efb55d5640 -> 0x14f679708600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d56e0 address 0x14f67970b400
RTV: Getting address of BLAS 0x55efb55d56e0 -> 0x14f67970b400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5780 address 0x14f679803500
RTV: Getting address of BLAS 0x55efb55d5780 -> 0x14f679803500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5820 address 0x14f679874000
RTV: Getting address of BLAS 0x55efb55d5820 -> 0x14f679874000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d58c0 address 0x14f6798a0700
RTV: Getting address of BLAS 0x55efb55d58c0 -> 0x14f6798a0700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5960 address 0x14f6798be400
RTV: Getting address of BLAS 0x55efb55d5960 -> 0x14f6798be400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5a00 address 0x14f6799b4300
RTV: Getting address of BLAS 0x55efb55d5a00 -> 0x14f6799b4300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5aa0 address 0x14f6799c3600
RTV: Getting address of BLAS 0x55efb55d5aa0 -> 0x14f6799c3600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5b40 address 0x14f6799d3900
RTV: Getting address of BLAS 0x55efb55d5b40 -> 0x14f6799d3900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5be0 address 0x14f679b9e600
RTV: Getting address of BLAS 0x55efb55d5be0 -> 0x14f679b9e600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5c80 address 0x14f679c94200
RTV: Getting address of BLAS 0x55efb55d5c80 -> 0x14f679c94200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5d20 address 0x14f679c99500
RTV: Getting address of BLAS 0x55efb55d5d20 -> 0x14f679c99500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5dc0 address 0x14f679cc4600
RTV: Getting address of BLAS 0x55efb55d5dc0 -> 0x14f679cc4600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5e60 address 0x14f679ce7800
RTV: Getting address of BLAS 0x55efb55d5e60 -> 0x14f679ce7800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5f00 address 0x14f679cf1300
RTV: Getting address of BLAS 0x55efb55d5f00 -> 0x14f679cf1300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d5fa0 address 0x14f679d23400
RTV: Getting address of BLAS 0x55efb55d5fa0 -> 0x14f679d23400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6040 address 0x14f679d33700
RTV: Getting address of BLAS 0x55efb55d6040 -> 0x14f679d33700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d60e0 address 0x14f679d33e00
RTV: Getting address of BLAS 0x55efb55d60e0 -> 0x14f679d33e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6180 address 0x14f679d37700
RTV: Getting address of BLAS 0x55efb55d6180 -> 0x14f679d37700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6220 address 0x14f679d42c00
RTV: Getting address of BLAS 0x55efb55d6220 -> 0x14f679d42c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d62c0 address 0x14f679d51f00
RTV: Getting address of BLAS 0x55efb55d62c0 -> 0x14f679d51f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6360 address 0x14f679d5b700
RTV: Getting address of BLAS 0x55efb55d6360 -> 0x14f679d5b700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6400 address 0x14f679d5d800
RTV: Getting address of BLAS 0x55efb55d6400 -> 0x14f679d5d800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d64a0 address 0x14f679db9600
RTV: Getting address of BLAS 0x55efb55d64a0 -> 0x14f679db9600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6540 address 0x14f679e18000
RTV: Getting address of BLAS 0x55efb55d6540 -> 0x14f679e18000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d65e0 address 0x14f679e1df00
RTV: Getting address of BLAS 0x55efb55d65e0 -> 0x14f679e1df00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6680 address 0x14f679e97c00
RTV: Getting address of BLAS 0x55efb55d6680 -> 0x14f679e97c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6720 address 0x14f679e99300
RTV: Getting address of BLAS 0x55efb55d6720 -> 0x14f679e99300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d67c0 address 0x14f679ea8600
RTV: Getting address of BLAS 0x55efb55d67c0 -> 0x14f679ea8600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6860 address 0x14f679f1b900
RTV: Getting address of BLAS 0x55efb55d6860 -> 0x14f679f1b900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6900 address 0x14f679f20800
RTV: Getting address of BLAS 0x55efb55d6900 -> 0x14f679f20800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d69a0 address 0x14f679f21a00
RTV: Getting address of BLAS 0x55efb55d69a0 -> 0x14f679f21a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x55efb55d6a40 address 0x14f679f21c00
RTV: Getting address of BLAS 0x55efb55d6a40 -> 0x14f679f21c00
RTV: Creating device buffer TLAS Instances of size 20480
LVP: vkBuffer size 20480 created at 0x55efb55bd268
RTV: New vkBuffer created at 0x55efb55bd268
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb55d6c90; llvmpipe_resource 0x55efb55d6c90; pipe_memory_allocation 0x55efb55ea000;
LVP: Binding lvp_buffer 0x55efb55bd3d0: buffer->bo: 0x55efb55d6c90; buffer->pmem: 0x55efb55ea000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf092300 (size 20480) to vulkan buffer 0x55efb55ea000
LVP: gpgpusim buffer size 20480 allocated at 0xdf092300
RTV: Bind buffer memory for vkBuffer 0x55efb55bd268
LVP: vkBuffer size 20480 created at 0x55efb55be938
RTV: New vkBuffer created at 0x55efb55be938
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb55f9250; llvmpipe_resource 0x55efb55f9250; pipe_memory_allocation 0x55efb55fa000;
LVP: Binding lvp_buffer 0x55efb55f91d0: buffer->bo: 0x55efb55f9250; buffer->pmem: 0x55efb55fa000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf097300 (size 20480) to vulkan buffer 0x55efb55fa000
LVP: gpgpusim buffer size 20480 allocated at 0xdf097300
RTV: Bind buffer memory for vkBuffer 0x55efb55be938
LVP: Finding mapped memory for mem 0x55efb55f9460: mem->pmem 0x55efb55fa000 
LVP: Identified at 0x55efb55fa000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf0c0
RTV: Rounding size of BVH structure up to 0xf100
RTV: Total accel structure size = 0xf100 + ... = 0xf100
LVP: vkBuffer size 61696 created at 0x55efb55e9fe8
RTV: New vkBuffer created at 0x55efb55e9fe8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb55f9250; llvmpipe_resource 0x55efb55f9250; pipe_memory_allocation 0x55efb5614000;
LVP: Binding lvp_buffer 0x55efb55f9460: buffer->bo: 0x55efb55f9250; buffer->pmem: 0x55efb5614000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf09c300 (size 61696) to vulkan buffer 0x55efb5614000
LVP: gpgpusim buffer size 61696 allocated at 0xdf09c300
RTV: Bind buffer memory for vkBuffer 0x55efb55e9fe8
LVP: vkBuffer size 21888 created at 0x55efb55d0de8
RTV: New vkBuffer created at 0x55efb55d0de8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb565a590; llvmpipe_resource 0x55efb565a590; pipe_memory_allocation 0x55efb565b000;
LVP: Binding lvp_buffer 0x55efb565a510: buffer->bo: 0x55efb565a590; buffer->pmem: 0x55efb565b000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf0ab400 (size 21888) to vulkan buffer 0x55efb565b000
LVP: gpgpusim buffer size 21888 allocated at 0xdf0ab400
RTV: Bind buffer memory for vkBuffer 0x55efb55d0de8
RTV: Creating top level acceleration structure...
RTV: Creating acceleration struction of size 0xf100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf100) created from lvp_buffer (size 0xf100). 
LVP: Buffer 0x55efb5614000 + 0x0 = 0x55efb5614000 allocated to accel structure 0x55efb55d6ae0
gpgpusim: set TLAS address 0x55efb5614000 to 0xdf09c300
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.011, 4.235, 10.612), (8.565, 5.579, 12.643)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 1, box (5.055, 9.206, -36.707), (5.282, 9.454, -36.479)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 2, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 3, box (-0.243, 11.503, 8.721), (0.643, 11.950, 9.084)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 4, box (-36.088, 1.850, 33.998), (-35.936, 1.984, 34.455)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 5, box (-0.850, 9.674, -12.342), (-0.041, 11.955, -11.171)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 6, box (-8.964, 0.430, 10.910), (-7.659, 4.586, 12.199)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 7, box (-7.380, -0.110, -9.382), (-0.818, 2.546, -7.445)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 8, box (-4.791, 12.467, -16.530), (-4.678, 13.330, -16.497)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 9, box (3.590, 10.925, -37.200), (9.559, 11.251, -37.129)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 10, box (-5.181, 11.394, 7.662), (-3.626, 11.855, 10.927)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 11, box (54.097, 8.850, -12.354), (54.499, 12.022, -12.193)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 12, box (-9.723, 0.739, -7.941), (-8.402, 1.551, -6.886)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 13, box (-5.219, 9.667, -17.834), (-3.750, 9.865, -16.420)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 14, box (-1.108, 4.464, 6.675), (5.892, 7.886, 12.738)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 15, box (-3.173, 2.408, -8.045), (-2.716, 2.570, -7.893)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 16, box (1.451, 11.781, -12.389), (1.736, 13.757, -11.897)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 17, box (16.024, 6.280, -18.017), (17.579, 8.514, -13.017)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 18, box (-37.069, 1.846, 32.290), (-36.174, 3.049, 33.336)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 19, box (-0.828, 7.815, 12.430), (2.297, 8.675, 12.893)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 20, box (7.399, 10.398, -37.200), (10.399, 10.724, -37.129)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 21, box (2.440, 7.815, 12.772), (5.565, 8.675, 13.235)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 22, box (-0.959, 12.346, -12.459), (-0.485, 13.846, -11.908)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 23, box (0.347, 3.566, 11.974), (4.409, 4.289, 12.513)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 24, box (5.409, 4.902, 10.969), (8.941, 8.168, 13.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 25, box (-43.629, -0.817, 30.012), (-37.067, 1.948, 32.059)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 26, box (-8.518, 8.804, -12.774), (-8.227, 10.851, -11.899)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 27, box (-3.343, 0.998, 7.694), (0.751, 4.263, 9.756)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 28, box (12.738, 11.250, -12.384), (24.488, 15.313, -12.079)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 29, box (5.273, 9.280, -36.719), (5.499, 9.527, -36.492)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 30, box (0.260, 8.825, 8.485), (6.135, 12.982, 11.626)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 31, box (-39.127, 1.854, 30.364), (-38.670, 2.015, 30.517)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 32, box (16.400, 6.446, -22.558), (17.068, 7.278, -21.941)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 33, box (-12.116, 8.885, -12.485), (-0.366, 12.948, -12.171)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 34, box (-4.804, 10.204, 9.444), (-3.554, 10.620, 10.561)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 35, box (-3.476, 8.710, 11.037), (-0.788, 8.986, 11.799)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 36, box (2.536, 7.337, 12.786), (5.301, 7.546, 13.090)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 37, box (-0.596, 4.244, 7.097), (-0.427, 7.854, 8.542)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 38, box (7.596, 11.063, -14.798), (13.815, 14.767, -11.267)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 39, box (-8.840, 5.702, 10.486), (-7.676, 6.944, 11.416)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 40, box (22.317, 17.342, -21.699), (28.629, 27.030, -18.870)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 41, box (-13.083, -0.527, -37.033), (21.417, 11.348, -12.158)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 42, box (-2.631, 5.037, -11.585), (-1.908, 7.725, -10.975)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 43, box (-2.158, 10.110, -12.113), (0.326, 10.407, -11.640)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 44, box (7.916, 1.700, 11.928), (11.463, 3.239, 12.303)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 45, box (21.461, 11.167, -12.634), (21.752, 13.229, -11.845)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 46, box (-3.119, 4.340, 8.924), (-1.432, 6.840, 9.862)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 47, box (-2.495, 12.783, -12.575), (-2.236, 14.783, -11.813)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 48, box (-2.804, 16.622, -17.939), (-1.320, 16.816, -16.493)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 49, box (35.448, -0.025, -5.142), (43.636, 3.272, -2.735)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 50, box (6.576, 7.094, 12.645), (8.490, 9.532, 13.707)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 51, box (-2.865, 4.124, 11.271), (0.651, 4.390, 11.653)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 52, box (8.353, 8.353, -36.038), (9.162, 8.627, -35.927)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 53, box (0.851, 14.398, -13.165), (7.695, 15.538, -11.071)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 54, box (-3.087, 4.385, 9.481), (-2.489, 5.713, 11.442)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 55, box (-2.883, 1.947, 6.899), (6.992, 13.010, 13.524)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 56, box (-14.648, 11.267, -13.570), (-2.460, 12.493, -13.397)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 57, box (0.265, 11.384, 10.980), (0.630, 14.306, 11.141)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 58, box (13.253, 10.962, -44.661), (14.190, 11.907, -12.661)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 59, box (1.421, 10.136, -12.351), (2.804, 14.292, -12.017)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 60, box (3.447, 7.571, 7.737), (4.209, 8.992, 12.706)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 61, box (-7.220, 2.408, -8.045), (-6.763, 2.570, -7.893)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 62, box (19.478, 6.358, -21.625), (20.486, 9.811, -20.539)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 63, box (3.784, 12.444, 8.061), (4.437, 13.136, 12.373)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 64, box (5.046, 7.966, 11.716), (5.769, 10.607, 12.033)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 65, box (-1.112, 11.539, 8.637), (-0.225, 11.986, 9.001)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 66, box (-19.423, 1.852, 31.848), (-18.966, 2.014, 32.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 67, box (4.909, 6.631, -37.091), (6.261, 9.194, -35.919)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 68, box (-9.264, 3.989, 9.826), (-8.814, 6.052, 11.638)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 69, box (1.706, 6.631, -37.091), (3.058, 9.194, -35.919)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 70, box (-2.374, 10.398, -16.131), (7.939, 15.273, -11.224)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 71, box (-5.868, 8.804, -12.774), (-5.577, 10.851, -11.899)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 72, box (1.840, 12.004, -12.053), (2.023, 13.597, -11.150)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 73, box (-2.707, 7.464, -11.480), (0.777, 9.316, -10.531)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 74, box (-39.225, -12.349, 24.364), (32.775, 43.151, 40.989)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 75, box (-4.136, 10.595, 7.950), (-3.327, 11.869, 9.434)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 76, box (2.150, 2.670, 11.644), (5.821, 4.084, 12.343)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 77, box (21.349, 15.366, 8.574), (21.888, 18.194, 8.914)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 78, box (22.490, 17.035, 2.840), (28.803, 26.723, 5.668)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 79, box (-12.116, 8.797, -12.485), (12.884, 13.453, -11.868)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 80, box (8.179, 4.237, 8.696), (8.788, 5.588, 10.657)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 81, box (-3.086, 4.326, 11.264), (-0.727, 5.708, 11.544)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 82, box (14.390, 11.837, -12.367), (15.066, 14.009, -11.726)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 83, box (-59.264, 1.850, 39.631), (-47.077, 3.077, 39.804)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 84, box (-9.673, 1.807, 9.921), (-6.048, 5.964, 11.789)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 85, box (-37.716, -0.699, 30.470), (-35.779, 1.957, 37.033)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 86, box (-32.833, -0.817, -9.927), (0.667, 2.964, -8.482)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 87, box (-2.487, 4.133, 7.654), (1.029, 4.399, 8.037)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 88, box (-1.483, 5.879, 11.624), (-0.596, 7.895, 12.009)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 89, box (4.224, 9.111, 11.144), (5.466, 10.994, 12.277)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 90, box (9.319, 15.344, -12.967), (11.381, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 91, box (-8.227, 2.309, 5.877), (-7.419, 4.653, 7.252)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 92, box (-10.922, 1.872, 9.483), (8.703, 12.247, 13.452)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 93, box (15.673, 6.165, -34.007), (25.423, 11.165, -28.225)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 94, box (-0.437, 6.434, -38.177), (7.095, 10.293, -33.708)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 95, box (-9.313, 2.398, 10.581), (-8.960, 6.930, 10.736)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 96, box (18.987, 11.167, -12.634), (19.278, 13.229, -11.845)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 97, box (-2.781, 12.823, -12.525), (0.406, 15.416, -11.478)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 98, box (9.135, 14.398, -13.165), (15.979, 15.538, -11.071)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 99, box (-2.934, 11.743, -17.588), (-1.801, 20.368, -16.377)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 100, box (-1.189, 6.401, 11.226), (-1.046, 7.948, 12.144)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 101, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 102, box (-0.990, 7.342, 12.417), (2.651, 7.541, 12.816)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 103, box (54.248, 8.041, -14.172), (60.029, 13.041, -4.422)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 104, box (-3.532, 7.311, 11.716), (-3.145, 8.038, 12.091)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 105, box (7.207, 6.590, -36.234), (8.324, 9.543, -35.343)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 106, box (-3.375, 0.993, 9.606), (0.500, 4.258, 11.716)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 107, box (-19.313, 1.869, 30.663), (-18.856, 2.031, 30.815)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 108, box (0.883, 8.461, 11.600), (2.758, 10.438, 12.733)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 109, box (20.821, 6.449, -26.455), (21.782, 9.089, -25.596)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 110, box (9.612, 11.781, -12.389), (9.897, 13.757, -11.897)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 111, box (5.792, 9.204, -36.732), (6.020, 9.470, -36.491)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 112, box (-2.881, 6.236, -11.539), (-1.803, 9.455, -11.280)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 113, box (-37.520, 1.324, 41.952), (-25.332, 2.550, 42.125)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 114, box (-4.753, 10.207, 7.939), (-3.308, 10.623, 9.259)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 115, box (21.396, 15.975, 4.290), (21.986, 16.745, 6.759)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 116, box (-41.131, 1.854, 30.364), (-40.674, 2.015, 30.517)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 117, box (4.246, 9.935, 12.673), (4.852, 12.216, 12.821)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 118, box (0.303, 11.812, 7.875), (0.952, 13.241, 11.765)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 119, box (-3.078, 0.421, -10.811), (1.828, 3.218, -7.968)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 120, box (54.495, 9.251, -12.128), (54.602, 11.548, -8.316)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 121, box (20.963, 14.933, 5.869), (22.127, 17.511, 6.791)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 122, box (6.096, 4.146, 8.561), (8.830, 5.528, 8.879)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 123, box (-1.055, 7.571, 7.266), (-0.293, 8.992, 12.235)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 124, box (-0.440, 8.442, 8.482), (5.498, 10.356, 11.248)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 125, box (20.502, 9.075, -30.894), (23.924, 11.293, -29.511)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 126, box (1.430, 10.237, -12.290), (2.328, 13.643, -12.061)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 127, box (5.057, 9.261, -36.701), (5.286, 9.526, -36.460)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 128, box (-9.423, 1.499, 9.339), (9.577, 11.124, 13.214)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 129, box (-9.606, 2.348, 10.495), (-8.809, 4.137, 10.844)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 130, box (-9.051, 1.514, 6.565), (9.949, 11.139, 9.643)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 131, box (-3.024, 6.550, 6.757), (-2.543, 8.050, 7.261)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 132, box (-2.701, 4.335, 7.578), (-0.341, 5.718, 7.858)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 133, box (5.498, 15.344, -12.967), (7.560, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 134, box (8.413, 5.488, 13.064), (8.893, 6.988, 13.568)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 135, box (-5.384, 19.169, -17.276), (-4.259, 19.344, -16.288)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 136, box (-9.595, 0.917, 7.438), (7.280, 10.355, 14.219)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 137, box (-0.817, 9.499, 9.961), (4.715, 12.983, 11.687)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 138, box (-1.273, 17.325, -18.598), (10.915, 18.552, -18.425)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 139, box (7.681, 6.856, 13.045), (9.634, 7.543, 13.347)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 140, box (-5.820, 11.620, 10.245), (-4.023, 12.038, 11.190)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 141, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 142, box (-3.381, 9.132, 7.754), (-1.022, 10.515, 8.033)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 143, box (-37.682, 1.791, 30.318), (-36.034, 4.603, 31.568)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 144, box (0.398, 0.608, 7.545), (6.460, 4.045, 11.952)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 145, box (25.887, 18.166, -19.840), (26.449, 19.393, -19.480)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 146, box (-9.070, 2.357, 10.745), (-7.132, 4.482, 11.452)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 147, box (-3.086, 4.462, 9.878), (-1.774, 6.899, 10.671)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 148, box (-3.140, 4.427, 11.266), (2.329, 10.490, 12.852)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 149, box (5.398, 4.308, 12.845), (6.132, 7.917, 13.162)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 150, box (-1.170, 7.350, 12.462), (5.611, 7.721, 13.200)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 151, box (3.603, 11.353, -37.241), (9.416, 11.892, -37.088)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 152, box (-11.532, 0.087, -8.059), (-6.439, 1.641, -5.512)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 153, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 154, box (-2.104, 6.913, -11.368), (-0.127, 7.198, -10.876)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 155, box (5.259, 9.186, -36.681), (5.484, 9.411, -36.450)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 156, box (-0.671, 10.066, 10.462), (0.696, 11.645, 11.126)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 157, box (-2.197, 6.851, -13.387), (18.428, 16.039, -10.528)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 158, box (8.642, 5.788, 7.976), (9.122, 7.288, 8.480)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 159, box (21.349, 15.366, 5.133), (21.888, 18.194, 5.473)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 160, box (5.949, 9.236, -36.779), (6.236, 9.505, -36.499)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 161, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 162, box (-32.517, -9.982, -65.076), (54.983, 25.768, 34.424)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 163, box (-36.325, -0.621, 28.271), (-31.419, 2.176, 31.115)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 164, box (2.077, 8.227, 11.938), (3.374, 9.203, 13.008)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 165, box (-4.158, 11.370, -17.481), (-2.924, 14.511, -16.681)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 166, box (-4.412, 8.879, 7.437), (2.713, 12.723, 11.593)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 167, box (5.686, 2.595, 11.888), (8.061, 7.470, 13.372)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 168, box (-1.785, 12.416, 10.119), (-1.367, 15.759, 10.303)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 169, box (-1.971, 17.213, -18.971), (-0.268, 19.104, -18.123)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 170, box (1.036, 15.344, -12.967), (3.098, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 171, box (-10.540, 1.884, 6.808), (8.710, 12.259, 10.168)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 172, box (-0.023, 1.431, 6.620), (6.227, 5.024, 14.183)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 173, box (22.340, 16.815, -18.058), (22.513, 18.041, -5.870)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 174, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 175, box (14.860, 5.604, -23.894), (15.915, 7.854, -23.308)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 176, box (16.491, 6.457, -23.218), (17.034, 6.893, -22.386)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 177, box (14.927, 11.642, -12.324), (15.735, 13.908, -11.301)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 178, box (-0.968, 4.291, 6.681), (5.282, 11.885, 12.462)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 179, box (6.198, 11.642, -12.324), (7.007, 13.908, -11.301)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 180, box (22.757, 6.484, -28.712), (25.820, 7.835, -27.486)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 181, box (0.967, 12.520, 9.979), (1.721, 14.661, 10.744)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 182, box (-2.758, 1.003, 6.735), (0.164, 4.660, 12.266)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 183, box (-3.394, 8.804, -12.774), (-3.103, 10.851, -11.899)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 184, box (16.337, 11.167, -12.634), (16.628, 13.229, -11.845)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 185, box (-75.062, -12.349, -65.585), (17.938, 59.651, 20.415)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 186, box (7.882, 13.554, -13.812), (9.991, 14.081, -12.093)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 187, box (14.672, 5.226, -23.901), (15.805, 6.054, -23.163)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 188, box (-3.088, 8.720, 7.258), (-0.401, 8.995, 8.078)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 189, box (-2.106, 9.615, 10.535), (-0.723, 11.662, 11.117)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 190, box (-66.080, -1.859, 29.156), (-32.580, 1.922, 30.601)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 191, box (-2.354, 12.702, -12.188), (0.318, 14.999, -11.188)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 192, box (4.331, 10.506, 12.712), (4.812, 12.006, 13.216)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 193, box (-21.800, 1.884, 30.663), (-21.343, 2.045, 30.815)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 194, box (15.361, 13.309, -12.877), (15.749, 13.753, -12.260)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 195, box (-22.492, 1.605, 33.421), (-22.339, 1.766, 33.878)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 196, box (-2.900, 10.265, -15.167), (0.694, 16.484, -11.636)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 197, box (1.827, 7.571, 7.567), (2.588, 8.992, 12.536)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 198, box (-2.232, 13.358, 9.421), (-0.873, 15.905, 10.491)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 199, box (15.952, 9.291, -11.917), (16.377, 9.975, -11.651)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 200, box (-2.865, 4.386, 7.498), (-2.322, 5.722, 9.529)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 201, box (5.701, 4.910, 7.697), (9.279, 8.176, 9.728)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 202, box (-9.561, 1.875, 6.150), (8.564, 13.187, 13.775)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 203, box (-23.236, 1.289, 33.545), (-22.310, 1.752, 34.036)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 204, box (5.484, 9.171, -36.773), (5.771, 9.367, -36.515)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 205, box (5.710, 4.136, 12.247), (8.445, 5.519, 12.565)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 206, box (-2.862, 14.335, -17.812), (-1.432, 14.529, -16.429)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 207, box (-1.474, 12.293, 9.688), (0.166, 13.332, 10.497)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 208, box (-36.088, 1.850, 35.965), (-35.936, 1.984, 36.422)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 209, box (8.499, 7.709, -36.006), (9.913, 8.152, -35.960)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 210, box (22.317, 18.422, -31.915), (28.629, 28.110, -29.087)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 211, box (17.491, 6.974, -28.485), (17.652, 10.146, -28.083)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 212, box (7.927, 7.199, 13.478), (8.915, 9.277, 13.720)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 213, box (26.465, 0.214, -7.565), (36.277, 3.120, -3.596)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 214, box (-25.760, 0.049, 30.984), (-22.823, 1.674, 35.984)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 215, box (22.340, 16.815, 5.971), (22.513, 18.041, 18.158)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 216, box (-5.207, 13.367, -17.812), (-3.778, 13.561, -16.429)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 217, box (16.276, 4.565, -35.749), (24.214, 9.472, -28.093)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 218, box (-0.347, 8.193, 11.544), (0.470, 9.701, 12.615)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 219, box (-3.867, 9.659, 7.765), (-3.262, 11.940, 7.912)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 220, box (-0.279, 12.254, -12.400), (1.361, 13.692, -12.039)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 221, box (8.490, 8.749, -36.006), (9.810, 8.959, -35.960)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 222, box (-2.327, 9.832, -14.277), (0.314, 15.019, -13.332)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 223, box (-1.820, 12.444, 7.474), (-1.167, 13.136, 11.787)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 224, box (15.329, 2.185, -23.724), (16.688, 4.419, -18.755)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 225, box (11.973, 17.325, -18.598), (24.160, 18.552, -18.425)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 226, box (-14.601, 0.082, -11.330), (-6.726, 2.410, -8.143)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 227, box (-3.987, 10.644, 8.020), (-3.233, 11.785, 10.676)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 228, box (-1.123, 6.636, 8.146), (-0.549, 8.073, 11.240)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 229, box (26.585, 18.397, -19.784), (27.148, 19.412, -19.429)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 230, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 231, box (5.604, 12.334, -12.544), (9.698, 13.889, -11.986)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 232, box (4.300, 4.936, 12.262), (7.987, 6.655, 12.643)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 233, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 234, box (-1.709, 9.124, 11.177), (2.416, 10.507, 11.632)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 235, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 236, box (-4.128, 10.588, 9.322), (-3.647, 11.838, 10.775)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 237, box (5.419, 11.812, 8.410), (6.067, 13.241, 12.300)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 238, box (-8.309, 1.006, 7.101), (0.441, 4.771, 12.163)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 239, box (-3.913, 12.208, 10.197), (-1.226, 12.946, 10.595)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 240, box (6.304, 2.725, 9.622), (8.304, 5.288, 12.310)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 241, box (-2.261, 10.620, -12.139), (-1.230, 13.370, -11.850)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 242, box (-17.941, 2.315, -14.300), (-1.566, 4.135, -7.894)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 243, box (19.545, 6.974, -28.485), (19.706, 10.146, -28.083)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 244, box (5.273, 9.261, -36.705), (5.500, 9.508, -36.478)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 245, box (9.841, 11.014, -12.353), (11.263, 14.779, -12.011)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 246, box (-3.542, 12.793, 9.697), (-1.745, 13.250, 10.494)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 247, box (-22.344, -0.753, 30.040), (-15.782, 1.982, 32.665)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 248, box (4.645, 5.081, 12.467), (6.192, 7.534, 13.432)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 249, box (-2.028, 6.293, 12.013), (-1.028, 7.980, 12.164)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 250, box (-5.118, 11.549, 7.904), (-3.665, 11.979, 9.216)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 251, box (-3.420, 12.391, 8.530), (-1.522, 13.516, 9.827)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 252, box (23.499, 11.443, -36.783), (28.686, 11.502, -14.783)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 253, box (-5.246, 10.775, -17.473), (-4.074, 19.400, -16.372)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 254, box (0.157, 8.216, 11.857), (1.586, 9.833, 14.092)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 255, box (-5.440, 11.417, -18.068), (-4.768, 12.769, -17.521)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 256, box (-45.868, 4.709, -36.290), (107.132, 25.709, -32.852)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 257, box (4.526, 9.124, 7.517), (7.447, 12.780, 13.048)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 258, box (-2.271, 11.420, 10.938), (6.104, 12.467, 11.563)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 259, box (-3.495, 7.858, 6.887), (-0.510, 8.975, 12.200)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 260, box (7.465, 7.834, -35.555), (7.760, 8.142, -35.295)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 261, box (-5.170, 11.547, 9.409), (-3.912, 11.973, 10.526)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 262, box (-9.340, 1.534, -8.534), (-8.484, 2.417, -7.745)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 263, box (-3.619, 11.300, 10.631), (0.600, 11.855, 11.162)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 264, box (1.645, 11.712, -12.329), (6.114, 14.087, -11.056)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 265, box (7.049, 7.433, 13.076), (8.877, 10.542, 13.483)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 266, box (-10.953, 0.096, 6.393), (10.047, 14.346, 13.362)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 267, box (-6.568, 2.372, -7.928), (-6.405, 2.646, -7.816)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 268, box (-36.819, 1.281, 29.780), (-35.076, 3.343, 31.288)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 269, box (-10.702, 2.045, 9.759), (-6.640, 4.561, 11.415)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 270, box (-9.397, 2.277, -8.513), (-8.952, 2.438, -8.345)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 271, box (-22.675, -0.613, 30.308), (-20.019, 1.809, 36.870)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 272, box (1.979, 12.444, 7.872), (2.631, 13.136, 12.184)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 273, box (-2.592, 10.415, 8.203), (0.408, 12.033, 9.148)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 274, box (7.247, 4.345, 11.009), (8.185, 6.579, 12.876)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 275, box (0.198, 7.571, 7.397), (0.960, 8.992, 12.366)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 276, box (4.010, 9.049, 11.244), (6.244, 10.135, 11.955)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 277, box (-5.149, 15.654, -17.939), (-3.665, 15.848, -16.493)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 278, box (17.717, 7.375, -28.588), (21.530, 9.672, -28.481)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 279, box (9.988, 11.654, -12.187), (14.613, 14.107, -10.749)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 280, box (-0.192, 11.521, -12.486), (0.742, 14.568, -11.611)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 281, box (15.792, 6.398, -24.226), (17.096, 8.742, -23.433)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 282, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 283, box (-0.646, 9.291, -11.917), (-0.220, 9.975, -11.651)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 284, box (21.290, 15.476, 4.790), (21.927, 17.241, 9.446)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 285, box (-9.588, 0.476, 7.620), (8.037, 2.930, 14.245)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 286, box (13.673, 15.344, -12.967), (15.736, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 287, box (-1.081, 4.311, 10.744), (-0.836, 7.921, 12.174)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 288, box (22.340, 16.815, -6.085), (22.513, 18.041, 6.102)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 289, box (-4.515, 10.962, 11.373), (-1.796, 11.782, 12.990)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 290, box (6.956, 11.629, -12.367), (7.632, 13.801, -11.726)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 291, box (-3.039, 20.137, -17.276), (-1.914, 20.312, -16.288)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 292, box (-48.645, 1.799, 35.795), (-43.801, 9.706, 37.936)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 293, box (-2.853, 3.701, 11.244), (0.272, 4.299, 11.658)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 294, box (-8.933, 2.407, 6.942), (-8.579, 6.939, 7.097)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 295, box (3.300, 7.724, 11.729), (5.191, 9.497, 12.534)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 296, box (20.989, 10.160, -37.958), (29.364, 22.910, -34.223)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 297, box (5.358, 9.414, 9.335), (8.889, 12.680, 11.366)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 298, box (6.600, 7.407, 12.691), (8.310, 8.860, 13.656)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 299, box (6.584, 12.482, -12.832), (7.858, 13.756, -12.551)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 300, box (-8.696, 2.184, -8.677), (-8.532, 2.458, -8.565)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 301, box (-2.158, 11.431, -12.270), (0.326, 11.728, -11.797)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 302, box (7.407, 5.802, 13.043), (8.255, 8.911, 13.414)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 303, box (8.580, 16.408, -40.955), (10.580, 18.408, -38.955)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 304, box (-3.717, 9.124, 10.966), (-1.358, 10.507, 11.245)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 305, box (5.017, 7.571, 7.901), (5.779, 8.992, 12.870)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 306, box (5.518, 7.154, 12.523), (8.643, 7.752, 12.937)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 307, box (0.227, 1.192, 11.359), (6.790, 4.223, 12.121)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 308, box (-1.515, 6.305, 7.113), (-0.515, 7.992, 7.265)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 309, box (3.346, 6.631, -37.091), (4.698, 9.194, -35.919)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 310, box (7.119, 8.095, 11.887), (7.728, 10.251, 12.633)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 311, box (-7.855, 0.969, 5.661), (-6.977, 5.219, 7.020)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 312, box (7.411, 9.604, -37.200), (9.989, 9.926, -37.129)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 313, box (-0.751, 13.675, -12.757), (-0.158, 14.386, -12.356)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 314, box (6.792, 11.626, 9.421), (8.746, 12.313, 9.724)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 315, box (-5.529, 11.627, 7.460), (-3.732, 12.045, 8.405)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 316, box (1.189, 2.600, 10.307), (5.283, 4.819, 11.471)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 317, box (5.054, 9.180, -36.681), (5.278, 9.405, -36.451)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 318, box (-60.642, 0.511, -51.993), (68.358, 0.511, 48.507)
EMBREE: Get accel instance -> device 0x7ffce15816d0
EMBREE: Add AABB geometry: geomID: 0, primID 319, box (-2.760, 10.269, 6.758), (0.161, 13.925, 12.289)
EMBREE: New rtcBVH structure created at 0x55efb55be470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x55efb5676240
Compressed Node: i	exp: (8, 7, 7)	origin: (-75.062286, -12.349403, -65.584579)
Children:
	0x55efb56762a8: (8, 0, 136), (108, 111, 216)
	0x55efb5678b38: (60, 38, 41), (136, 64, 123)
	0x55efb5679b20: (42, 23, 56), (79, 44, 132)
	0x55efb567a180: (14, 4, 1), (144, 77, 229)
	0x55efb567a738: (29, 34, 49), (183, 81, 144)
	0x55efb567acc0: (0, 0, 0), (93, 144, 172)
EMBREE: Set dst_map 0x55efb5614000 = accel->address.bo 0x55efb5614000 + accel->address.offset 0x0 for accel 0x55efb55d6ae0
EMBREE: Pack bvh 0x7ffce1581a10 to dst_map 0x55efb5614000
EMBREE: Get accel instance -> device 0x7ffce157c000
EMBREE: Get accel instance -> device 0x7ffce157c000
EMBREE: Get accel instance -> device 0x7ffce157c000
EMBREE: Get accel instance -> device 0x7ffce157c000
EMBREE: Get accel instance -> device 0x7ffce157c000
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157c000
EMBREE: Get accel instance -> device 0x7ffce157c000
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157cb80
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157d700
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157e280
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157ee00
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce157f980
EMBREE: Get accel instance -> device 0x7ffce1580500
EMBREE: Pack root 0x55efb5676240 to root_map 0x55efb5614040
gpgpusim: set AS
EMBREE: Release rtcBVH structure created at 0x55efb55be470
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
- built acceleration structures in 22.9508s
LVP: Image created at 0x7ffce1581be8
RTV: Creating image at 0x55ef2fedb970
LVP: Creating image_view for image 0x55ef2fedb970
RTV: Creating image view at 0x55efb55c12d0
LVP: Image created at 0x55efb5675748
RTV: Creating image at 0x55ef2fedb970
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb5675790; llvmpipe_resource 0x55efb5675790; pipe_memory_allocation 0x55efb5680000;
gpgpusim: binding gpgpusim buffer 0xdf0b0a00 (size 65536) to vulkan buffer 0x55efb5680000
LVP: Image 0x55ef2fedb970 bound to pmem 0x55efb5680000 using pointer 0xdf0b0a00
LVP: Creating image_view for image 0x55ef2fedb970
RTV: Creating image view at 0x55efb56b9130
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
LVP: vkBuffer size 320 created at 0x55efb55c7418
RTV: New vkBuffer created at 0x55efb55c7418
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb56b9550; llvmpipe_resource 0x55efb56b9550; pipe_memory_allocation 0x55efb56ba000;
LVP: Binding lvp_buffer 0x55ef5fc45a70: buffer->bo: 0x55efb56b9550; buffer->pmem: 0x55efb56ba000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf0c0a00 (size 320) to vulkan buffer 0x55efb56ba000
LVP: gpgpusim buffer size 320 allocated at 0xdf0c0a00
RTV: Bind buffer memory for vkBuffer 0x55efb55c7418
RTV: Create descriptor pool...
LVP: Create descriptor pool...
RTV: Create descriptor set layout...
LVP: Create descriptor set layout...
LVP: Set Layout with 3 bindings...
DESCRIPTOR TYPE SET: 6
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER; stage flag 0x  1
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x 11
DESCRIPTOR TYPE SET: 1
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER; stage flag 0x 10
RTV: Allocate descriptor sets...
LVP: Allocate descriptor sets...
LVP: Creating descriptor sets with 3 bindings at 0x55ef30f56a30...
RTV: Update descriptor sets...
LVP: Update descriptor sets...
DESC AT: 0x55ef30f56a88 with type 6
LVP: Setting lvp_buffer 0x55ef5fc45a70 for descriptor 0 (0). info.ubo: buffer 0x55efb56b9550 + offset 0 = 0x55efb56b9550; stored at 0x55efb56ba000 using pointer 0xdf0c0a00 with 320 bytes. 
LVP: gpgpusim buffer at 0xdf0c0a00
DESC AT: 0x55ef30f56ab8 with type 7
LVP: Setting lvp_buffer 0x55ef5fbc2cc0 for descriptor 1 (0). info.ssbo: buffer 0x55ef5fbc3000 + offset 0 = 0x55ef5fbc3000; stored at 0x55ef5fbc4000 using pointer 0xcadd9400 with 18432 bytes. 
LVP: gpgpusim buffer at 0xcadd9400
DESC AT: 0x55ef30f56ae8 with type 1
LVP: Setting descriptor 2 VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
LVP: Create pipeline layout...
LVP: Image created at 0x55efb5693858
RTV: Creating image at 0x55efb588a480
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb56bb260; llvmpipe_resource 0x55efb56bb260; pipe_memory_allocation 0x55efb58ae000;
gpgpusim: binding gpgpusim buffer 0xdf0c0c00 (size 262144) to vulkan buffer 0x55efb58ae000
LVP: Image 0x55efb588a480 bound to pmem 0x55efb58ae000 using pointer 0xdf0c0c00
LVP: Creating image_view for image 0x55efb588a480
RTV: Creating image view at 0x55efb56c5260
LVP: Image created at 0x55efb55bd598
RTV: Creating image at 0x55efb588a960
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb59ebd10; llvmpipe_resource 0x55efb59ebd10; pipe_memory_allocation 0x55efb59ec000;
gpgpusim: binding gpgpusim buffer 0xdf100c00 (size 262144) to vulkan buffer 0x55efb59ec000
LVP: Image 0x55efb588a960 bound to pmem 0x55efb59ec000 using pointer 0xdf100c00
LVP: Creating image_view for image 0x55efb588a960
RTV: Creating image view at 0x55efb56c3c20
RTV: Create descriptor pool...
LVP: Create descriptor pool...
RTV: Create descriptor set layout...
LVP: Create descriptor set layout...
LVP: Set Layout with 12 bindings...
DESCRIPTOR TYPE SET: 1000150000
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR; stage flag 0x100
DESCRIPTOR TYPE SET: 3
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE; stage flag 0x100
DESCRIPTOR TYPE SET: 3
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE; stage flag 0x100
DESCRIPTOR TYPE SET: 6
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER; stage flag 0x900
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 1
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
RTV: Allocate descriptor sets...
LVP: Allocate descriptor sets...
LVP: Creating descriptor sets with 12 bindings at 0x55efb56e37a0...
RTV: Update descriptor sets...
LVP: Update descriptor sets...
DESC AT: 0x55efb56e37f8 with type 1000150000
LVP: Setting lvp_acceleration_structure 0x55efb55d6ae0 for descriptor 0 (0). info.ubo: address 0x55efb5614000 + offset 0 = 0x55efb5614000 
DESC AT: 0x55efb56e3828 with type 3
LVP: Setting lvp_image_view 0x55efb56c5260 for descriptor 1 (0). Type: VK_FORMAT_R32G32B32A32_SFLOAT; Tiling: VK_IMAGE_TILING_OPTIMAL
LVP: Image 0x55efb588a480 stored at 0x55efb58ae000 using pointer 0xdf0c0c00
DESC AT: 0x55efb56e3858 with type 3
LVP: Setting lvp_image_view 0x55efb56c3c20 for descriptor 2 (0). Type: VK_FORMAT_R32G32B32A32_SFLOAT; Tiling: VK_IMAGE_TILING_OPTIMAL
LVP: Image 0x55efb588a960 stored at 0x55efb59ec000 using pointer 0xdf100c00
DESC AT: 0x55efb56e3888 with type 6
LVP: Setting lvp_buffer 0x55ef5fc45a70 for descriptor 3 (0). info.ubo: buffer 0x55efb56b9550 + offset 0 = 0x55efb56b9550; stored at 0x55efb56ba000 using pointer 0xdf0c0a00 with 320 bytes. 
LVP: gpgpusim buffer at 0xdf0c0a00
DESC AT: 0x55efb56e38b8 with type 7
LVP: Setting lvp_buffer 0x55ef2ff4ee40 for descriptor 4 (0). info.ssbo: buffer 0x55ef343f7a90 + offset 0 = 0x55ef343f7a90; stored at 0x14f67a0c3000 using pointer 0xc0000000 with 70442964 bytes. 
LVP: gpgpusim buffer at 0xc0000000
DESC AT: 0x55efb56e38e8 with type 7
LVP: Setting lvp_buffer 0x55ef48c4fd50 for descriptor 5 (0). info.ssbo: buffer 0x55ef59909760 + offset 0 = 0x55ef59909760; stored at 0x55ef5990a000 using pointer 0xc865c000 with 20703720 bytes. 
LVP: gpgpusim buffer at 0xc865c000
DESC AT: 0x55efb56e3918 with type 7
LVP: Setting lvp_buffer 0x55ef5fbc2cc0 for descriptor 6 (0). info.ssbo: buffer 0x55ef5fbc3000 + offset 0 = 0x55ef5fbc3000; stored at 0x55ef5fbc4000 using pointer 0xcadd9400 with 18432 bytes. 
LVP: gpgpusim buffer at 0xcadd9400
DESC AT: 0x55efb56e3948 with type 7
LVP: Setting lvp_buffer 0x55ef5fbd9e20 for descriptor 7 (0). info.ssbo: buffer 0x55ef5fbda000 + offset 0 = 0x55ef5fbda000; stored at 0x55ef5fbdb000 using pointer 0xcade2400 with 2560 bytes. 
LVP: gpgpusim buffer at 0xcade2400
DESC AT: 0x55efb56e3978 with type 1
LVP: Setting descriptor 8 VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
DESC AT: 0x55efb56e39a8 with type 7
LVP: Setting lvp_buffer 0x55ef5fbfbfa0 for descriptor 9 (0). info.ssbo: buffer 0x55ef5fbfd000 + offset 0 = 0x55ef5fbfd000; stored at 0x55ef5fc06000 using pointer 0xcade7400 with 5120 bytes. 
LVP: gpgpusim buffer at 0xcade7400
DESC AT: 0x55efb56e39d8 with type 7
LVP: Setting lvp_buffer 0x55ef5fc195a0 for descriptor 10 (0). info.ssbo: buffer 0x55ef5fc1a000 + offset 0 = 0x55ef5fc1a000; stored at 0x55ef5fc23000 using pointer 0xcaded800 with 5120 bytes. 
LVP: gpgpusim buffer at 0xcaded800
DESC AT: 0x55efb56e3a08 with type 7
LVP: Setting lvp_buffer 0x55ef5fc363a0 for descriptor 11 (0). info.ssbo: buffer 0x55ef5fc36190 + offset 0 = 0x55ef5fc36190; stored at 0x55ef5fc40000 using pointer 0xcadf3c00 with 5120 bytes. 
LVP: gpgpusim buffer at 0xcadf3c00
LVP: Create pipeline layout...
RTV: Using anyhit shader.
RTV: Anyhit shader: 10
RTV: Creating ray tracing pipeliTranslating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx
Combined intersection and anyhit shader currently unimplemented! Results may be incorrect!
NIR-PTX Translator: Anyhit shader identified!
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx
ne...
LVP: Creating ray tracing pipeline...
LVP: Compiling ray tracing pipeline...
LVP: Compiling shader stage 0
LVP: Translating shader 0 (type 8)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_RAYGEN to PTX
LVP: Compiling shader stage 1
LVP: Translating shader 1 (type 11)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_MISS to PTX
LVP: Compiling shader stage 2
LVP: Translating shader 2 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 3
LVP: Translating shader 3 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 4
LVP: Translating shader 4 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 5
LVP: Translating shader 5 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 6
LVP: Translating shader 6 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 7
LVP: Translating shader 7 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 8
LVP: Translating shader 8 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 9
LVP: Translating shader 9 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 10
LVP: Translating shader 10 (type 9)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_ANY_HIT to PTX
LVP: run_rt_translation_passes
LVP: Registering shader stage 0 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_RAYGEN_func0_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_RAYGEN_func0_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_RAYGEN_func0_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 12 registers, 320 bytes cmem[0], 12 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_RAYGEN_func0_main' : regs=12, lmem=0, smem=0, cmem=332
LVP: Registering shader stage 1 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_MISS_func1_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_MISS_func1_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_MISS_func1_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 8 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_MISS_func1_main' : regs=8, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 2 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func2_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func2_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func2_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 33 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func2_main' : regs=33, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 3 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func3_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func3_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func3_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 27 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func3_main' : regs=27, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 4 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func4_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func4_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func4_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 28 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func4_main' : regs=28, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 5 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func5_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func5_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func5_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 28 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func5_main' : regs=28, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 6 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func6_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func6_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func6_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 14 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func6_main' : regs=14, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 7 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func7_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func7_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func7_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 2 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func7_main' : regs=2, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 8 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func8_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func8_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func8_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 16 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func8_main' : regs=16, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 9 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func9_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func9_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func9_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 14 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func9_main' : regs=14, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 10 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_ANY_HIT_func10_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_ANY_HIT_func10_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_ANY_HIT_func10_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 2 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_ANY_HIT_func10_main' : regs=2, lmem=0, smem=0, cmem=320
LVP: Adding group handle for general group: 
	general_index 0
LVP: Adding group handle for general group: 
	general_index 1
LVP: Adding group handle for triangle hit group: 
	closest_hit_index 2
	any_hit_index 10
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 3
	intersection_index 6
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 4
	intersection_index 7
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 5
	intersection_index 8
gpgpusim: set pipeline
LVP: vkBuffer size 192 created at 0x55efb72a2d98
RTV: New vkBuffer created at 0x55efb72a2d98
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x55ef2fc6e3c0; pipe_resource 0x55efb730f420; llvmpipe_resource 0x55efb730f420; pipe_memory_allocation 0x55efb7310000;
LVP: Binding lvp_buffer 0x55efb630b680: buffer->bo: 0x55efb730f420; buffer->pmem: 0x55efb7310000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf140c00 (size 192) to vulkan buffer 0x55efb7310000
LVP: gpgpusim buffer size 192 allocated at 0xdf140c00
RTV: Bind buffer memory for vkBuffer 0x55efb72a2d98
RTV: Get ray tracing shader group handles... group count: 6; handle size: 32
LVP: Get ray tracing shader group handles...
LVP: Copying handle 0 to 0x55efb56c1c80
LVP: Copying handle 1 to 0x55efb56c1ca0
LVP: Copying handle 2 to 0x55efb56c1cc0
LVP: Copying handle 3 to 0x55efb56c1ce0
LVP: Copying handle 4 to 0x55efb56c1d00
LVP: Copying handle 5 to 0x55efb56c1d20
LVP: Finding mapped memory for mem 0x55efb730f630: mem->pmem 0x55efb7310000 
LVP: Identified at 0x55efb7310000
RTV: CopyShaderData (size 32) from 0x55efb56c1c80 to 0x55efb7310000 for raygen shader
RTV: CopyShaderData (size 32) from 0x55efb56c1c80 to 0x55efb7310020 for miss shader
RTV: CopyShaderData (size 32) from 0x55efb56c1c80 to 0x55efb7310040 for hit shader

Swap Chain: 
- image count: 1
- present mode: 3

RTV: Bind ray tracing pipeline...
RTV: Bind descriptor sets...
RTV: Trace ray...
RTV: (128 x 128 x 1) SBT raygen 0x7ffce1581b90, miss 0x7ffce1581bb0, hit 0x7ffce1581bd0, callable 0x7ffce1581bf0
RTV: Copy image...
LVP: Finding mapped memory for mem 0x55efb565a7a0: mem->pmem 0x55efb56ba000 
LVP: Identified at 0x55efb56ba000
RTV: Setting uniform buffer value at 0x55efb56ba000 using memcpy
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_BIND_PIPELINE
	VK_CMD_BIND_DESCRIPTOR_SETS
	VK_CMD_TRACE_RAYS_KHR
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_COPY_IMAGE2
	VK_CMD_PIPELINE_BARRIER2
LVP: Bind pipeline...
LVP: Bind ray tracing pipeline...
LVP: Bind descriptor sets...
LVP: Bind ray tracing descriptor sets...
LVP: Binding... 
Bind raygen... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind any hit... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind closest hit... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind miss... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind intersection... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...

LVP: Setting descriptor set pointer 0xb56e37a0...
gpgpusim: set descriptor set 0xb56e37a0
LVP: Handling trace ray...
LVP: SBT: raygen 0x55efb7310000, miss 0x55efb7310020, hit 0x55efb7310040, callable (nil) 
LVP: Launching vkCmdTraceRaysKHR on Vulkan-Sim; Mesa last updated August 29, 2023
gpgpusim: invoking gpgpusim
gpgpusim: launching cmd trace ray
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_RAYGEN_func0_main'...
Printing basic blocks for function 'MESA_SHADER_RAYGEN_func0_main':
bb_00	:  PC=0x000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:15) load_ray_launch_id %launch_ID_0, %launch_ID_1, %launch_ID_2;
bb_00	:  PC=0x008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:20) load_ray_launch_size %launch_Size_0, %launch_Size_1, %launch_Size_2;
bb_00	:  PC=0x010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:24) setp.ge.u32 %bigger_0, %launch_ID_0, %launch_Size_0;
bb_00	:  PC=0x018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:27) setp.ge.u32 %bigger_1, %launch_ID_1, %launch_Size_1;
bb_00	:  PC=0x020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:30) setp.ge.u32 %bigger_2, %launch_ID_2, %launch_Size_2;
bb_00	:  PC=0x028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:32) @%bigger_0 bra shader_exit;

bb_01	:  PC=0x030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:33) @%bigger_1 bra shader_exit;

bb_02	:  PC=0x038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:34) @%bigger_2 bra shader_exit;

bb_03	:  PC=0x040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:87) load_vulkan_descriptor %AccumulationImage, 0, 1; // decl_var image INTERP_MODE_NONE restrict r32g32b32a32_float image2D AccumulationImage
bb_03	:  PC=0x048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:89) load_vulkan_descriptor %OutputImage, 0, 2; // decl_var image INTERP_MODE_NONE restrict r8g8b8a8_unorm image2D OutputImage
bb_03	:  PC=0x050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:91) rt_alloc_mem %Ray, 48, 8192; // decl_var function_temp INTERP_MODE_NONE RayPayload Ray
bb_03	:  PC=0x058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:99) mov.f32 %const1_f32, 0F3f800000;
bb_03	:  PC=0x060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:102) mov.f32 %const0_f32, 0F00000000;
bb_03	:  PC=0x068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:105) mov.u32 %const0_u32, 0;
bb_03	:  PC=0x070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:108) mov.u16 %const1_u16, 1;
bb_03	:  PC=0x078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:113) mov.f32 %ssa_0, 0F000000ff; // vec1 32 ssa_0 = undefined
bb_03	:  PC=0x080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:115) mov.b32 %ssa_0_bits, 0F000000ff;
bb_03	:  PC=0x088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:118) mov.f32 %ssa_1, 0F000000ff; // vec1 32 ssa_1 = undefined
bb_03	:  PC=0x090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:120) mov.b32 %ssa_1_bits, 0F000000ff;
bb_03	:  PC=0x098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:123) mov.f32 %ssa_2, 0F00000000; // vec1 32 ssa_2 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x0a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:125) mov.b32 %ssa_2_bits, 0F00000000;
bb_03	:  PC=0x0a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:128) mov.f32 %ssa_3, 0F000000ff; // vec1 32 ssa_3 = undefined
bb_03	:  PC=0x0b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:130) mov.b32 %ssa_3_bits, 0F000000ff;
bb_03	:  PC=0x0b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:133) mov.f32 %ssa_4, 0F000000ff; // vec1 32 ssa_4 = undefined
bb_03	:  PC=0x0c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:135) mov.b32 %ssa_4_bits, 0F000000ff;
bb_03	:  PC=0x0c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:141) mov.f32 %ssa_5_0, 0F00000000;
bb_03	:  PC=0x0d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:142) mov.f32 %ssa_5_1, 0F00000000;
bb_03	:  PC=0x0d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:143) mov.f32 %ssa_5_2, 0F00000000;
bb_03	:  PC=0x0e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:144) mov.f32 %ssa_5_3, 0F00000000;
bb_03	:  PC=0x0e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:148) mov.f32 %ssa_6, 0F000000ff; // vec1 32 ssa_6 = undefined
bb_03	:  PC=0x0f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:150) mov.b32 %ssa_6_bits, 0F000000ff;
bb_03	:  PC=0x0f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:153) mov.f32 %ssa_7, 0F000000ff; // vec1 32 ssa_7 = undefined
bb_03	:  PC=0x100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:155) mov.b32 %ssa_7_bits, 0F000000ff;
bb_03	:  PC=0x108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:158) mov.f32 %ssa_8, 0F00000001; // vec1 32 ssa_8 = load_const (0x00000001 /* 0.000000 */)
bb_03	:  PC=0x110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:160) mov.b32 %ssa_8_bits, 0F00000001;
bb_03	:  PC=0x118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:163) mov.f32 %ssa_9, 0F461c4000; // vec1 32 ssa_9 = load_const (0x461c4000 /* 10000.000000 */)
bb_03	:  PC=0x120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:165) mov.b32 %ssa_9_bits, 0F461c4000;
bb_03	:  PC=0x128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:168) mov.f32 %ssa_10, 0F3a83126f; // vec1 32 ssa_10 = load_const (0x3a83126f /* 0.001000 */)
bb_03	:  PC=0x130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:170) mov.b32 %ssa_10_bits, 0F3a83126f;
bb_03	:  PC=0x138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:173) mov.f32 %ssa_11, 0F000000ff; // vec1 32 ssa_11 = load_const (0x000000ff /* 0.000000 */)
bb_03	:  PC=0x140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:175) mov.b32 %ssa_11_bits, 0F000000ff;
bb_03	:  PC=0x148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:181) mov.f32 %ssa_12_0, 0F00000000;
bb_03	:  PC=0x150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:182) mov.f32 %ssa_12_1, 0F00000000;
bb_03	:  PC=0x158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:183) mov.f32 %ssa_12_2, 0F00000000;
bb_03	:  PC=0x160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:184) mov.f32 %ssa_12_3, 0F00000000;
bb_03	:  PC=0x168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:191) mov.f32 %ssa_13_0, 0F3f800000;
bb_03	:  PC=0x170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:192) mov.f32 %ssa_13_1, 0F3f800000;
bb_03	:  PC=0x178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:193) mov.f32 %ssa_13_2, 0F3f800000;
bb_03	:  PC=0x180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:194) mov.f32 %ssa_13_3, 0F00000000;
bb_03	:  PC=0x188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:198) mov.f32 %ssa_14, 0F40000000; // vec1 32 ssa_14 = load_const (0x40000000 /* 2.000000 */)
bb_03	:  PC=0x190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:200) mov.b32 %ssa_14_bits, 0F40000000;
bb_03	:  PC=0x198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:203) load_vulkan_descriptor %ssa_15, 0, 3, 6; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_2) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
bb_03	:  PC=0x1a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:206) mov.b64 %ssa_16, %ssa_15; // vec2 32 ssa_16 = intrinsic load_vulkan_descriptor (%ssa_15) (6) /* desc_type=UBO */
bb_03	:  PC=0x1a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:209) mov.b64 %ssa_17, %ssa_16; // vec2 32 ssa_17 = deref_cast (UniformBufferObjectStruct *)ssa_16 (ubo UniformBufferObjectStruct)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_03	:  PC=0x1b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:212) add.u64 %ssa_18, %ssa_17, 0; // vec2 32 ssa_18 = deref_struct &ssa_17->Camera (ubo UniformBufferObject) /* &((UniformBufferObjectStruct *)ssa_16)->Camera */
bb_03	:  PC=0x1b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:215) add.u64 %ssa_19, %ssa_18, 300; // vec2 32 ssa_19 = deref_struct &ssa_18->RandomSeed (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.RandomSeed */
bb_03	:  PC=0x1c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:218) ld.global.u32 %ssa_20, [%ssa_19]; // vec1 32 ssa_20 = intrinsic load_deref (%ssa_19) (16) /* access=16 */
bb_03	:  PC=0x1c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:224) load_ray_launch_id %ssa_21_0, %ssa_21_1, %ssa_21_2; // vec3 32 ssa_21 = intrinsic load_ray_launch_id () ()
bb_03	:  PC=0x1d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:227) mov.f32 %ssa_22, 0F7e95761e; // vec1 32 ssa_22 = load_const (0x7e95761e /* 99334135436773842136473284483078946816.000000 */)
bb_03	:  PC=0x1d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:229) mov.b32 %ssa_22_bits, 0F7e95761e;
bb_03	:  PC=0x1e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:232) mov.f32 %ssa_23, 0F00000005; // vec1 32 ssa_23 = load_const (0x00000005 /* 0.000000 */)
bb_03	:  PC=0x1e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:234) mov.b32 %ssa_23_bits, 0F00000005;
bb_03	:  PC=0x1f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:237) mov.f32 %ssa_24, 0Fad90777d; // vec1 32 ssa_24 = load_const (0xad90777d /* -0.000000 */)
bb_03	:  PC=0x1f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:239) mov.b32 %ssa_24_bits, 0Fad90777d;
bb_03	:  PC=0x200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:242) mov.f32 %ssa_25, 0F00000004; // vec1 32 ssa_25 = load_const (0x00000004 /* 0.000000 */)
bb_03	:  PC=0x208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:244) mov.b32 %ssa_25_bits, 0F00000004;
bb_03	:  PC=0x210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:247) mov.f32 %ssa_26, 0Fc8013ea4; // vec1 32 ssa_26 = load_const (0xc8013ea4 /* -132346.562500 */)
bb_03	:  PC=0x218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:249) mov.b32 %ssa_26_bits, 0Fc8013ea4;
bb_03	:  PC=0x220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:252) mov.f32 %ssa_27, 0Fa341316c; // vec1 32 ssa_27 = load_const (0xa341316c /* -0.000000 */)
bb_03	:  PC=0x228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:254) mov.b32 %ssa_27_bits, 0Fa341316c;
bb_03	:  PC=0x230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:257) mov.f32 %ssa_28, 0F9e3779b9; // vec1 32 ssa_28 = load_const (0x9e3779b9 /* -0.000000 */)
bb_03	:  PC=0x238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:259) mov.b32 %ssa_28_bits, 0F9e3779b9;
bb_03	:  PC=0x240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:262) shl.b32 %ssa_29, %ssa_21_1, %ssa_25_bits; // vec1 32 ssa_29 = ishl ssa_21.y, ssa_25
bb_03	:  PC=0x248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:265) add.s32 %ssa_30, %ssa_29, %ssa_27_bits; // vec1 32 ssa_30 = iadd ssa_29, ssa_27
bb_03	:  PC=0x250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:268) add.s32 %ssa_31, %ssa_21_1, %ssa_28_bits; // vec1 32 ssa_31 = iadd ssa_21.y, ssa_28
bb_03	:  PC=0x258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:271) xor.b32 %ssa_32, %ssa_30, %ssa_31;// vec1 32 ssa_32 = ixor ssa_30, ssa_31
bb_03	:  PC=0x260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:274) shr.u32 %ssa_33, %ssa_21_1, %ssa_23_bits; // vec1 32 ssa_33 = ushr ssa_21.y, ssa_23
bb_03	:  PC=0x268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:277) add.s32 %ssa_34, %ssa_33, %ssa_26_bits; // vec1 32 ssa_34 = iadd ssa_33, ssa_26
bb_03	:  PC=0x270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:280) xor.b32 %ssa_35, %ssa_32, %ssa_34;// vec1 32 ssa_35 = ixor ssa_32, ssa_34
bb_03	:  PC=0x278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:283) add.s32 %ssa_36, %ssa_21_0, %ssa_35; // vec1 32 ssa_36 = iadd ssa_21.x, ssa_35
bb_03	:  PC=0x280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:286) shl.b32 %ssa_37, %ssa_36, %ssa_25_bits; // vec1 32 ssa_37 = ishl ssa_36, ssa_25
bb_03	:  PC=0x288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:289) add.s32 %ssa_38, %ssa_37, %ssa_24_bits; // vec1 32 ssa_38 = iadd ssa_37, ssa_24
bb_03	:  PC=0x290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:292) add.s32 %ssa_39, %ssa_36, %ssa_28_bits; // vec1 32 ssa_39 = iadd ssa_36, ssa_28
bb_03	:  PC=0x298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:295) xor.b32 %ssa_40, %ssa_38, %ssa_39;// vec1 32 ssa_40 = ixor ssa_38, ssa_39
bb_03	:  PC=0x2a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:298) shr.u32 %ssa_41, %ssa_36, %ssa_23_bits; // vec1 32 ssa_41 = ushr ssa_36, ssa_23
bb_03	:  PC=0x2a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:301) add.s32 %ssa_42, %ssa_41, %ssa_22_bits; // vec1 32 ssa_42 = iadd ssa_41, ssa_22
bb_03	:  PC=0x2b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:304) xor.b32 %ssa_43, %ssa_40, %ssa_42;// vec1 32 ssa_43 = ixor ssa_40, ssa_42
bb_03	:  PC=0x2b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:307) add.s32 %ssa_44, %ssa_21_1, %ssa_43; // vec1 32 ssa_44 = iadd ssa_21.y, ssa_43
bb_03	:  PC=0x2c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:310) mov.f32 %ssa_45, 0F3c6ef372; // vec1 32 ssa_45 = load_const (0x3c6ef372 /* 0.014584 */)
bb_03	:  PC=0x2c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:312) mov.b32 %ssa_45_bits, 0F3c6ef372;
bb_03	:  PC=0x2d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:315) shl.b32 %ssa_46, %ssa_44, %ssa_25_bits; // vec1 32 ssa_46 = ishl ssa_44, ssa_25
bb_03	:  PC=0x2d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:318) add.s32 %ssa_47, %ssa_46, %ssa_27_bits; // vec1 32 ssa_47 = iadd ssa_46, ssa_27
bb_03	:  PC=0x2e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:321) add.s32 %ssa_48, %ssa_44, %ssa_45_bits; // vec1 32 ssa_48 = iadd ssa_44, ssa_45
bb_03	:  PC=0x2e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:324) xor.b32 %ssa_49, %ssa_47, %ssa_48;// vec1 32 ssa_49 = ixor ssa_47, ssa_48
bb_03	:  PC=0x2f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:327) shr.u32 %ssa_50, %ssa_44, %ssa_23_bits; // vec1 32 ssa_50 = ushr ssa_44, ssa_23
bb_03	:  PC=0x2f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:330) add.s32 %ssa_51, %ssa_50, %ssa_26_bits; // vec1 32 ssa_51 = iadd ssa_50, ssa_26
bb_03	:  PC=0x300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:333) xor.b32 %ssa_52, %ssa_49, %ssa_51;// vec1 32 ssa_52 = ixor ssa_49, ssa_51
bb_03	:  PC=0x308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:336) add.s32 %ssa_53, %ssa_36, %ssa_52;// vec1 32 ssa_53 = iadd ssa_36, ssa_52
bb_03	:  PC=0x310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:339) shl.b32 %ssa_54, %ssa_53, %ssa_25_bits; // vec1 32 ssa_54 = ishl ssa_53, ssa_25
bb_03	:  PC=0x318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:342) add.s32 %ssa_55, %ssa_54, %ssa_24_bits; // vec1 32 ssa_55 = iadd ssa_54, ssa_24
bb_03	:  PC=0x320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:345) add.s32 %ssa_56, %ssa_53, %ssa_45_bits; // vec1 32 ssa_56 = iadd ssa_53, ssa_45
bb_03	:  PC=0x328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:348) xor.b32 %ssa_57, %ssa_55, %ssa_56;// vec1 32 ssa_57 = ixor ssa_55, ssa_56
bb_03	:  PC=0x330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:351) shr.u32 %ssa_58, %ssa_53, %ssa_23_bits; // vec1 32 ssa_58 = ushr ssa_53, ssa_23
bb_03	:  PC=0x338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:354) add.s32 %ssa_59, %ssa_58, %ssa_22_bits; // vec1 32 ssa_59 = iadd ssa_58, ssa_22
bb_03	:  PC=0x340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:357) xor.b32 %ssa_60, %ssa_57, %ssa_59;// vec1 32 ssa_60 = ixor ssa_57, ssa_59
bb_03	:  PC=0x348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:360) add.s32 %ssa_61, %ssa_44, %ssa_60;// vec1 32 ssa_61 = iadd ssa_44, ssa_60
bb_03	:  PC=0x350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:363) mov.f32 %ssa_62, 0Fdaa66d2b; // vec1 32 ssa_62 = load_const (0xdaa66d2b /* -23422438792495104.000000 */)
bb_03	:  PC=0x358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:365) mov.b32 %ssa_62_bits, 0Fdaa66d2b;
bb_03	:  PC=0x360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:368) shl.b32 %ssa_63, %ssa_61, %ssa_25_bits; // vec1 32 ssa_63 = ishl ssa_61, ssa_25
bb_03	:  PC=0x368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:371) add.s32 %ssa_64, %ssa_63, %ssa_27_bits; // vec1 32 ssa_64 = iadd ssa_63, ssa_27
bb_03	:  PC=0x370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:374) add.s32 %ssa_65, %ssa_61, %ssa_62_bits; // vec1 32 ssa_65 = iadd ssa_61, ssa_62
bb_03	:  PC=0x378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:377) xor.b32 %ssa_66, %ssa_64, %ssa_65;// vec1 32 ssa_66 = ixor ssa_64, ssa_65
bb_03	:  PC=0x380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:380) shr.u32 %ssa_67, %ssa_61, %ssa_23_bits; // vec1 32 ssa_67 = ushr ssa_61, ssa_23
bb_03	:  PC=0x388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:383) add.s32 %ssa_68, %ssa_67, %ssa_26_bits; // vec1 32 ssa_68 = iadd ssa_67, ssa_26
bb_03	:  PC=0x390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:386) xor.b32 %ssa_69, %ssa_66, %ssa_68;// vec1 32 ssa_69 = ixor ssa_66, ssa_68
bb_03	:  PC=0x398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:389) add.s32 %ssa_70, %ssa_53, %ssa_69;// vec1 32 ssa_70 = iadd ssa_53, ssa_69
bb_03	:  PC=0x3a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:392) shl.b32 %ssa_71, %ssa_70, %ssa_25_bits; // vec1 32 ssa_71 = ishl ssa_70, ssa_25
bb_03	:  PC=0x3a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:395) add.s32 %ssa_72, %ssa_71, %ssa_24_bits; // vec1 32 ssa_72 = iadd ssa_71, ssa_24
bb_03	:  PC=0x3b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:398) add.s32 %ssa_73, %ssa_70, %ssa_62_bits; // vec1 32 ssa_73 = iadd ssa_70, ssa_62
bb_03	:  PC=0x3b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:401) xor.b32 %ssa_74, %ssa_72, %ssa_73;// vec1 32 ssa_74 = ixor ssa_72, ssa_73
bb_03	:  PC=0x3c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:404) shr.u32 %ssa_75, %ssa_70, %ssa_23_bits; // vec1 32 ssa_75 = ushr ssa_70, ssa_23
bb_03	:  PC=0x3c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:407) add.s32 %ssa_76, %ssa_75, %ssa_22_bits; // vec1 32 ssa_76 = iadd ssa_75, ssa_22
bb_03	:  PC=0x3d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:410) xor.b32 %ssa_77, %ssa_74, %ssa_76;// vec1 32 ssa_77 = ixor ssa_74, ssa_76
bb_03	:  PC=0x3d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:413) add.s32 %ssa_78, %ssa_61, %ssa_77;// vec1 32 ssa_78 = iadd ssa_61, ssa_77
bb_03	:  PC=0x3e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:416) mov.f32 %ssa_79, 0F78dde6e4; // vec1 32 ssa_79 = load_const (0x78dde6e4 /* 36005644498940313824116215142940672.000000 */)
bb_03	:  PC=0x3e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:418) mov.b32 %ssa_79_bits, 0F78dde6e4;
bb_03	:  PC=0x3f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:421) shl.b32 %ssa_80, %ssa_78, %ssa_25_bits; // vec1 32 ssa_80 = ishl ssa_78, ssa_25
bb_03	:  PC=0x3f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:424) add.s32 %ssa_81, %ssa_80, %ssa_27_bits; // vec1 32 ssa_81 = iadd ssa_80, ssa_27
bb_03	:  PC=0x400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:427) add.s32 %ssa_82, %ssa_78, %ssa_79_bits; // vec1 32 ssa_82 = iadd ssa_78, ssa_79
bb_03	:  PC=0x408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:430) xor.b32 %ssa_83, %ssa_81, %ssa_82;// vec1 32 ssa_83 = ixor ssa_81, ssa_82
bb_03	:  PC=0x410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:433) shr.u32 %ssa_84, %ssa_78, %ssa_23_bits; // vec1 32 ssa_84 = ushr ssa_78, ssa_23
bb_03	:  PC=0x418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:436) add.s32 %ssa_85, %ssa_84, %ssa_26_bits; // vec1 32 ssa_85 = iadd ssa_84, ssa_26
bb_03	:  PC=0x420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:439) xor.b32 %ssa_86, %ssa_83, %ssa_85;// vec1 32 ssa_86 = ixor ssa_83, ssa_85
bb_03	:  PC=0x428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:442) add.s32 %ssa_87, %ssa_70, %ssa_86;// vec1 32 ssa_87 = iadd ssa_70, ssa_86
bb_03	:  PC=0x430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:445) shl.b32 %ssa_88, %ssa_87, %ssa_25_bits; // vec1 32 ssa_88 = ishl ssa_87, ssa_25
bb_03	:  PC=0x438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:448) add.s32 %ssa_89, %ssa_88, %ssa_24_bits; // vec1 32 ssa_89 = iadd ssa_88, ssa_24
bb_03	:  PC=0x440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:451) add.s32 %ssa_90, %ssa_87, %ssa_79_bits; // vec1 32 ssa_90 = iadd ssa_87, ssa_79
bb_03	:  PC=0x448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:454) xor.b32 %ssa_91, %ssa_89, %ssa_90;// vec1 32 ssa_91 = ixor ssa_89, ssa_90
bb_03	:  PC=0x450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:457) shr.u32 %ssa_92, %ssa_87, %ssa_23_bits; // vec1 32 ssa_92 = ushr ssa_87, ssa_23
bb_03	:  PC=0x458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:460) add.s32 %ssa_93, %ssa_92, %ssa_22_bits; // vec1 32 ssa_93 = iadd ssa_92, ssa_22
bb_03	:  PC=0x460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:463) xor.b32 %ssa_94, %ssa_91, %ssa_93;// vec1 32 ssa_94 = ixor ssa_91, ssa_93
bb_03	:  PC=0x468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:466) add.s32 %ssa_95, %ssa_78, %ssa_94;// vec1 32 ssa_95 = iadd ssa_78, ssa_94
bb_03	:  PC=0x470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:469) mov.f32 %ssa_96, 0F1715609d; // vec1 32 ssa_96 = load_const (0x1715609d /* 0.000000 */)
bb_03	:  PC=0x478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:471) mov.b32 %ssa_96_bits, 0F1715609d;
bb_03	:  PC=0x480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:474) shl.b32 %ssa_97, %ssa_95, %ssa_25_bits; // vec1 32 ssa_97 = ishl ssa_95, ssa_25
bb_03	:  PC=0x488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:477) add.s32 %ssa_98, %ssa_97, %ssa_27_bits; // vec1 32 ssa_98 = iadd ssa_97, ssa_27
bb_03	:  PC=0x490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:480) add.s32 %ssa_99, %ssa_95, %ssa_96_bits; // vec1 32 ssa_99 = iadd ssa_95, ssa_96
bb_03	:  PC=0x498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:483) xor.b32 %ssa_100, %ssa_98, %ssa_99;// vec1 32 ssa_100 = ixor ssa_98, ssa_99
bb_03	:  PC=0x4a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:486) shr.u32 %ssa_101, %ssa_95, %ssa_23_bits; // vec1 32 ssa_101 = ushr ssa_95, ssa_23
bb_03	:  PC=0x4a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:489) add.s32 %ssa_102, %ssa_101, %ssa_26_bits; // vec1 32 ssa_102 = iadd ssa_101, ssa_26
bb_03	:  PC=0x4b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:492) xor.b32 %ssa_103, %ssa_100, %ssa_102;// vec1 32 ssa_103 = ixor ssa_100, ssa_102
bb_03	:  PC=0x4b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:495) add.s32 %ssa_104, %ssa_87, %ssa_103;// vec1 32 ssa_104 = iadd ssa_87, ssa_103
bb_03	:  PC=0x4c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:498) shl.b32 %ssa_105, %ssa_104, %ssa_25_bits; // vec1 32 ssa_105 = ishl ssa_104, ssa_25
bb_03	:  PC=0x4c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:501) add.s32 %ssa_106, %ssa_105, %ssa_24_bits; // vec1 32 ssa_106 = iadd ssa_105, ssa_24
bb_03	:  PC=0x4d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:504) add.s32 %ssa_107, %ssa_104, %ssa_96_bits; // vec1 32 ssa_107 = iadd ssa_104, ssa_96
bb_03	:  PC=0x4d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:507) xor.b32 %ssa_108, %ssa_106, %ssa_107;// vec1 32 ssa_108 = ixor ssa_106, ssa_107
bb_03	:  PC=0x4e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:510) shr.u32 %ssa_109, %ssa_104, %ssa_23_bits; // vec1 32 ssa_109 = ushr ssa_104, ssa_23
bb_03	:  PC=0x4e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:513) add.s32 %ssa_110, %ssa_109, %ssa_22_bits; // vec1 32 ssa_110 = iadd ssa_109, ssa_22
bb_03	:  PC=0x4f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:516) xor.b32 %ssa_111, %ssa_108, %ssa_110;// vec1 32 ssa_111 = ixor ssa_108, ssa_110
bb_03	:  PC=0x4f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:519) add.s32 %ssa_112, %ssa_95, %ssa_111;// vec1 32 ssa_112 = iadd ssa_95, ssa_111
bb_03	:  PC=0x500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:522) mov.f32 %ssa_113, 0Fb54cda56; // vec1 32 ssa_113 = load_const (0xb54cda56 /* -0.000001 */)
bb_03	:  PC=0x508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:524) mov.b32 %ssa_113_bits, 0Fb54cda56;
bb_03	:  PC=0x510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:527) shl.b32 %ssa_114, %ssa_112, %ssa_25_bits; // vec1 32 ssa_114 = ishl ssa_112, ssa_25
bb_03	:  PC=0x518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:530) add.s32 %ssa_115, %ssa_114, %ssa_27_bits; // vec1 32 ssa_115 = iadd ssa_114, ssa_27
bb_03	:  PC=0x520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:533) add.s32 %ssa_116, %ssa_112, %ssa_113_bits; // vec1 32 ssa_116 = iadd ssa_112, ssa_113
bb_03	:  PC=0x528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:536) xor.b32 %ssa_117, %ssa_115, %ssa_116;// vec1 32 ssa_117 = ixor ssa_115, ssa_116
bb_03	:  PC=0x530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:539) shr.u32 %ssa_118, %ssa_112, %ssa_23_bits; // vec1 32 ssa_118 = ushr ssa_112, ssa_23
bb_03	:  PC=0x538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:542) add.s32 %ssa_119, %ssa_118, %ssa_26_bits; // vec1 32 ssa_119 = iadd ssa_118, ssa_26
bb_03	:  PC=0x540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:545) xor.b32 %ssa_120, %ssa_117, %ssa_119;// vec1 32 ssa_120 = ixor ssa_117, ssa_119
bb_03	:  PC=0x548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:548) add.s32 %ssa_121, %ssa_104, %ssa_120;// vec1 32 ssa_121 = iadd ssa_104, ssa_120
bb_03	:  PC=0x550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:551) shl.b32 %ssa_122, %ssa_121, %ssa_25_bits; // vec1 32 ssa_122 = ishl ssa_121, ssa_25
bb_03	:  PC=0x558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:554) add.s32 %ssa_123, %ssa_122, %ssa_24_bits; // vec1 32 ssa_123 = iadd ssa_122, ssa_24
bb_03	:  PC=0x560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:557) add.s32 %ssa_124, %ssa_121, %ssa_113_bits; // vec1 32 ssa_124 = iadd ssa_121, ssa_113
bb_03	:  PC=0x568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:560) xor.b32 %ssa_125, %ssa_123, %ssa_124;// vec1 32 ssa_125 = ixor ssa_123, ssa_124
bb_03	:  PC=0x570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:563) shr.u32 %ssa_126, %ssa_121, %ssa_23_bits; // vec1 32 ssa_126 = ushr ssa_121, ssa_23
bb_03	:  PC=0x578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:566) add.s32 %ssa_127, %ssa_126, %ssa_22_bits; // vec1 32 ssa_127 = iadd ssa_126, ssa_22
bb_03	:  PC=0x580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:569) xor.b32 %ssa_128, %ssa_125, %ssa_127;// vec1 32 ssa_128 = ixor ssa_125, ssa_127
bb_03	:  PC=0x588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:572) add.s32 %ssa_129, %ssa_112, %ssa_128;// vec1 32 ssa_129 = iadd ssa_112, ssa_128
bb_03	:  PC=0x590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:575) mov.f32 %ssa_130, 0F5384540f; // vec1 32 ssa_130 = load_const (0x5384540f /* 1136691904512.000000 */)
bb_03	:  PC=0x598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:577) mov.b32 %ssa_130_bits, 0F5384540f;
bb_03	:  PC=0x5a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:580) shl.b32 %ssa_131, %ssa_129, %ssa_25_bits; // vec1 32 ssa_131 = ishl ssa_129, ssa_25
bb_03	:  PC=0x5a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:583) add.s32 %ssa_132, %ssa_131, %ssa_27_bits; // vec1 32 ssa_132 = iadd ssa_131, ssa_27
bb_03	:  PC=0x5b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:586) add.s32 %ssa_133, %ssa_129, %ssa_130_bits; // vec1 32 ssa_133 = iadd ssa_129, ssa_130
bb_03	:  PC=0x5b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:589) xor.b32 %ssa_134, %ssa_132, %ssa_133;// vec1 32 ssa_134 = ixor ssa_132, ssa_133
bb_03	:  PC=0x5c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:592) shr.u32 %ssa_135, %ssa_129, %ssa_23_bits; // vec1 32 ssa_135 = ushr ssa_129, ssa_23
bb_03	:  PC=0x5c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:595) add.s32 %ssa_136, %ssa_135, %ssa_26_bits; // vec1 32 ssa_136 = iadd ssa_135, ssa_26
bb_03	:  PC=0x5d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:598) xor.b32 %ssa_137, %ssa_134, %ssa_136;// vec1 32 ssa_137 = ixor ssa_134, ssa_136
bb_03	:  PC=0x5d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:601) add.s32 %ssa_138, %ssa_121, %ssa_137;// vec1 32 ssa_138 = iadd ssa_121, ssa_137
bb_03	:  PC=0x5e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:604) shl.b32 %ssa_139, %ssa_138, %ssa_25_bits; // vec1 32 ssa_139 = ishl ssa_138, ssa_25
bb_03	:  PC=0x5e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:607) add.s32 %ssa_140, %ssa_139, %ssa_24_bits; // vec1 32 ssa_140 = iadd ssa_139, ssa_24
bb_03	:  PC=0x5f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:610) add.s32 %ssa_141, %ssa_138, %ssa_130_bits; // vec1 32 ssa_141 = iadd ssa_138, ssa_130
bb_03	:  PC=0x5f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:613) xor.b32 %ssa_142, %ssa_140, %ssa_141;// vec1 32 ssa_142 = ixor ssa_140, ssa_141
bb_03	:  PC=0x600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:616) shr.u32 %ssa_143, %ssa_138, %ssa_23_bits; // vec1 32 ssa_143 = ushr ssa_138, ssa_23
bb_03	:  PC=0x608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:619) add.s32 %ssa_144, %ssa_143, %ssa_22_bits; // vec1 32 ssa_144 = iadd ssa_143, ssa_22
bb_03	:  PC=0x610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:622) xor.b32 %ssa_145, %ssa_142, %ssa_144;// vec1 32 ssa_145 = ixor ssa_142, ssa_144
bb_03	:  PC=0x618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:625) add.s32 %ssa_146, %ssa_129, %ssa_145;// vec1 32 ssa_146 = iadd ssa_129, ssa_145
bb_03	:  PC=0x620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:628) mov.f32 %ssa_147, 0Ff1bbcdc8; // vec1 32 ssa_147 = load_const (0xf1bbcdc8 /* -1859919075293091224364530008064.000000 */)
bb_03	:  PC=0x628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:630) mov.b32 %ssa_147_bits, 0Ff1bbcdc8;
bb_03	:  PC=0x630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:633) shl.b32 %ssa_148, %ssa_146, %ssa_25_bits; // vec1 32 ssa_148 = ishl ssa_146, ssa_25
bb_03	:  PC=0x638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:636) add.s32 %ssa_149, %ssa_148, %ssa_27_bits; // vec1 32 ssa_149 = iadd ssa_148, ssa_27
bb_03	:  PC=0x640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:639) add.s32 %ssa_150, %ssa_146, %ssa_147_bits; // vec1 32 ssa_150 = iadd ssa_146, ssa_147
bb_03	:  PC=0x648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:642) xor.b32 %ssa_151, %ssa_149, %ssa_150;// vec1 32 ssa_151 = ixor ssa_149, ssa_150
bb_03	:  PC=0x650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:645) shr.u32 %ssa_152, %ssa_146, %ssa_23_bits; // vec1 32 ssa_152 = ushr ssa_146, ssa_23
bb_03	:  PC=0x658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:648) add.s32 %ssa_153, %ssa_152, %ssa_26_bits; // vec1 32 ssa_153 = iadd ssa_152, ssa_26
bb_03	:  PC=0x660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:651) xor.b32 %ssa_154, %ssa_151, %ssa_153;// vec1 32 ssa_154 = ixor ssa_151, ssa_153
bb_03	:  PC=0x668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:654) add.s32 %ssa_155, %ssa_138, %ssa_154;// vec1 32 ssa_155 = iadd ssa_138, ssa_154
bb_03	:  PC=0x670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:657) shl.b32 %ssa_156, %ssa_155, %ssa_25_bits; // vec1 32 ssa_156 = ishl ssa_155, ssa_25
bb_03	:  PC=0x678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:660) add.s32 %ssa_157, %ssa_156, %ssa_24_bits; // vec1 32 ssa_157 = iadd ssa_156, ssa_24
bb_03	:  PC=0x680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:663) add.s32 %ssa_158, %ssa_155, %ssa_147_bits; // vec1 32 ssa_158 = iadd ssa_155, ssa_147
bb_03	:  PC=0x688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:666) xor.b32 %ssa_159, %ssa_157, %ssa_158;// vec1 32 ssa_159 = ixor ssa_157, ssa_158
bb_03	:  PC=0x690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:669) shr.u32 %ssa_160, %ssa_155, %ssa_23_bits; // vec1 32 ssa_160 = ushr ssa_155, ssa_23
bb_03	:  PC=0x698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:672) add.s32 %ssa_161, %ssa_160, %ssa_22_bits; // vec1 32 ssa_161 = iadd ssa_160, ssa_22
bb_03	:  PC=0x6a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:675) xor.b32 %ssa_162, %ssa_159, %ssa_161;// vec1 32 ssa_162 = ixor ssa_159, ssa_161
bb_03	:  PC=0x6a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:678) add.s32 %ssa_163, %ssa_146, %ssa_162;// vec1 32 ssa_163 = iadd ssa_146, ssa_162
bb_03	:  PC=0x6b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:681) mov.f32 %ssa_164, 0F8ff34781; // vec1 32 ssa_164 = load_const (0x8ff34781 /* -0.000000 */)
bb_03	:  PC=0x6b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:683) mov.b32 %ssa_164_bits, 0F8ff34781;
bb_03	:  PC=0x6c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:686) shl.b32 %ssa_165, %ssa_163, %ssa_25_bits; // vec1 32 ssa_165 = ishl ssa_163, ssa_25
bb_03	:  PC=0x6c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:689) add.s32 %ssa_166, %ssa_165, %ssa_27_bits; // vec1 32 ssa_166 = iadd ssa_165, ssa_27
bb_03	:  PC=0x6d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:692) add.s32 %ssa_167, %ssa_163, %ssa_164_bits; // vec1 32 ssa_167 = iadd ssa_163, ssa_164
bb_03	:  PC=0x6d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:695) xor.b32 %ssa_168, %ssa_166, %ssa_167;// vec1 32 ssa_168 = ixor ssa_166, ssa_167
bb_03	:  PC=0x6e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:698) shr.u32 %ssa_169, %ssa_163, %ssa_23_bits; // vec1 32 ssa_169 = ushr ssa_163, ssa_23
bb_03	:  PC=0x6e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:701) add.s32 %ssa_170, %ssa_169, %ssa_26_bits; // vec1 32 ssa_170 = iadd ssa_169, ssa_26
bb_03	:  PC=0x6f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:704) xor.b32 %ssa_171, %ssa_168, %ssa_170;// vec1 32 ssa_171 = ixor ssa_168, ssa_170
bb_03	:  PC=0x6f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:707) add.s32 %ssa_172, %ssa_155, %ssa_171;// vec1 32 ssa_172 = iadd ssa_155, ssa_171
bb_03	:  PC=0x700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:710) shl.b32 %ssa_173, %ssa_172, %ssa_25_bits; // vec1 32 ssa_173 = ishl ssa_172, ssa_25
bb_03	:  PC=0x708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:713) add.s32 %ssa_174, %ssa_173, %ssa_24_bits; // vec1 32 ssa_174 = iadd ssa_173, ssa_24
bb_03	:  PC=0x710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:716) add.s32 %ssa_175, %ssa_172, %ssa_164_bits; // vec1 32 ssa_175 = iadd ssa_172, ssa_164
bb_03	:  PC=0x718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:719) xor.b32 %ssa_176, %ssa_174, %ssa_175;// vec1 32 ssa_176 = ixor ssa_174, ssa_175
bb_03	:  PC=0x720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:722) shr.u32 %ssa_177, %ssa_172, %ssa_23_bits; // vec1 32 ssa_177 = ushr ssa_172, ssa_23
bb_03	:  PC=0x728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:725) add.s32 %ssa_178, %ssa_177, %ssa_22_bits; // vec1 32 ssa_178 = iadd ssa_177, ssa_22
bb_03	:  PC=0x730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:728) xor.b32 %ssa_179, %ssa_176, %ssa_178;// vec1 32 ssa_179 = ixor ssa_176, ssa_178
bb_03	:  PC=0x738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:731) add.s32 %ssa_180, %ssa_163, %ssa_179;// vec1 32 ssa_180 = iadd ssa_163, ssa_179
bb_03	:  PC=0x740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:734) mov.f32 %ssa_181, 0F2e2ac13a; // vec1 32 ssa_181 = load_const (0x2e2ac13a /* 0.000000 */)
bb_03	:  PC=0x748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:736) mov.b32 %ssa_181_bits, 0F2e2ac13a;
bb_03	:  PC=0x750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:739) shl.b32 %ssa_182, %ssa_180, %ssa_25_bits; // vec1 32 ssa_182 = ishl ssa_180, ssa_25
bb_03	:  PC=0x758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:742) add.s32 %ssa_183, %ssa_182, %ssa_27_bits; // vec1 32 ssa_183 = iadd ssa_182, ssa_27
bb_03	:  PC=0x760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:745) add.s32 %ssa_184, %ssa_180, %ssa_181_bits; // vec1 32 ssa_184 = iadd ssa_180, ssa_181
bb_03	:  PC=0x768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:748) xor.b32 %ssa_185, %ssa_183, %ssa_184;// vec1 32 ssa_185 = ixor ssa_183, ssa_184
bb_03	:  PC=0x770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:751) shr.u32 %ssa_186, %ssa_180, %ssa_23_bits; // vec1 32 ssa_186 = ushr ssa_180, ssa_23
bb_03	:  PC=0x778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:754) add.s32 %ssa_187, %ssa_186, %ssa_26_bits; // vec1 32 ssa_187 = iadd ssa_186, ssa_26
bb_03	:  PC=0x780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:757) xor.b32 %ssa_188, %ssa_185, %ssa_187;// vec1 32 ssa_188 = ixor ssa_185, ssa_187
bb_03	:  PC=0x788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:760) add.s32 %ssa_189, %ssa_172, %ssa_188;// vec1 32 ssa_189 = iadd ssa_172, ssa_188
bb_03	:  PC=0x790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:763) shl.b32 %ssa_190, %ssa_189, %ssa_25_bits; // vec1 32 ssa_190 = ishl ssa_189, ssa_25
bb_03	:  PC=0x798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:766) add.s32 %ssa_191, %ssa_190, %ssa_24_bits; // vec1 32 ssa_191 = iadd ssa_190, ssa_24
bb_03	:  PC=0x7a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:769) add.s32 %ssa_192, %ssa_189, %ssa_181_bits; // vec1 32 ssa_192 = iadd ssa_189, ssa_181
bb_03	:  PC=0x7a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:772) xor.b32 %ssa_193, %ssa_191, %ssa_192;// vec1 32 ssa_193 = ixor ssa_191, ssa_192
bb_03	:  PC=0x7b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:775) shr.u32 %ssa_194, %ssa_189, %ssa_23_bits; // vec1 32 ssa_194 = ushr ssa_189, ssa_23
bb_03	:  PC=0x7b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:778) add.s32 %ssa_195, %ssa_194, %ssa_22_bits; // vec1 32 ssa_195 = iadd ssa_194, ssa_22
bb_03	:  PC=0x7c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:781) xor.b32 %ssa_196, %ssa_193, %ssa_195;// vec1 32 ssa_196 = ixor ssa_193, ssa_195
bb_03	:  PC=0x7c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:784) add.s32 %ssa_197, %ssa_180, %ssa_196;// vec1 32 ssa_197 = iadd ssa_180, ssa_196
bb_03	:  PC=0x7d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:787) mov.f32 %ssa_198, 0Fcc623af3; // vec1 32 ssa_198 = load_const (0xcc623af3 /* -59304908.000000 */)
bb_03	:  PC=0x7d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:789) mov.b32 %ssa_198_bits, 0Fcc623af3;
bb_03	:  PC=0x7e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:792) shl.b32 %ssa_199, %ssa_197, %ssa_25_bits; // vec1 32 ssa_199 = ishl ssa_197, ssa_25
bb_03	:  PC=0x7e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:795) add.s32 %ssa_200, %ssa_199, %ssa_27_bits; // vec1 32 ssa_200 = iadd ssa_199, ssa_27
bb_03	:  PC=0x7f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:798) add.s32 %ssa_201, %ssa_197, %ssa_198_bits; // vec1 32 ssa_201 = iadd ssa_197, ssa_198
bb_03	:  PC=0x7f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:801) xor.b32 %ssa_202, %ssa_200, %ssa_201;// vec1 32 ssa_202 = ixor ssa_200, ssa_201
bb_03	:  PC=0x800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:804) shr.u32 %ssa_203, %ssa_197, %ssa_23_bits; // vec1 32 ssa_203 = ushr ssa_197, ssa_23
bb_03	:  PC=0x808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:807) add.s32 %ssa_204, %ssa_203, %ssa_26_bits; // vec1 32 ssa_204 = iadd ssa_203, ssa_26
bb_03	:  PC=0x810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:810) xor.b32 %ssa_205, %ssa_202, %ssa_204;// vec1 32 ssa_205 = ixor ssa_202, ssa_204
bb_03	:  PC=0x818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:813) add.s32 %ssa_206, %ssa_189, %ssa_205;// vec1 32 ssa_206 = iadd ssa_189, ssa_205
bb_03	:  PC=0x820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:816) shl.b32 %ssa_207, %ssa_206, %ssa_25_bits; // vec1 32 ssa_207 = ishl ssa_206, ssa_25
bb_03	:  PC=0x828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:819) add.s32 %ssa_208, %ssa_207, %ssa_24_bits; // vec1 32 ssa_208 = iadd ssa_207, ssa_24
bb_03	:  PC=0x830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:822) add.s32 %ssa_209, %ssa_206, %ssa_198_bits; // vec1 32 ssa_209 = iadd ssa_206, ssa_198
bb_03	:  PC=0x838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:825) xor.b32 %ssa_210, %ssa_208, %ssa_209;// vec1 32 ssa_210 = ixor ssa_208, ssa_209
bb_03	:  PC=0x840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:828) shr.u32 %ssa_211, %ssa_206, %ssa_23_bits; // vec1 32 ssa_211 = ushr ssa_206, ssa_23
bb_03	:  PC=0x848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:831) add.s32 %ssa_212, %ssa_211, %ssa_22_bits; // vec1 32 ssa_212 = iadd ssa_211, ssa_22
bb_03	:  PC=0x850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:834) xor.b32 %ssa_213, %ssa_210, %ssa_212;// vec1 32 ssa_213 = ixor ssa_210, ssa_212
bb_03	:  PC=0x858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:837) add.s32 %ssa_214, %ssa_197, %ssa_213;// vec1 32 ssa_214 = iadd ssa_197, ssa_213
bb_03	:  PC=0x860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:840) mov.f32 %ssa_215, 0F6a99b4ac; // vec1 32 ssa_215 = load_const (0x6a99b4ac /* 92909424603967738955694080.000000 */)
bb_03	:  PC=0x868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:842) mov.b32 %ssa_215_bits, 0F6a99b4ac;
bb_03	:  PC=0x870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:845) shl.b32 %ssa_216, %ssa_214, %ssa_25_bits; // vec1 32 ssa_216 = ishl ssa_214, ssa_25
bb_03	:  PC=0x878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:848) add.s32 %ssa_217, %ssa_216, %ssa_27_bits; // vec1 32 ssa_217 = iadd ssa_216, ssa_27
bb_03	:  PC=0x880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:851) add.s32 %ssa_218, %ssa_214, %ssa_215_bits; // vec1 32 ssa_218 = iadd ssa_214, ssa_215
bb_03	:  PC=0x888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:854) xor.b32 %ssa_219, %ssa_217, %ssa_218;// vec1 32 ssa_219 = ixor ssa_217, ssa_218
bb_03	:  PC=0x890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:857) shr.u32 %ssa_220, %ssa_214, %ssa_23_bits; // vec1 32 ssa_220 = ushr ssa_214, ssa_23
bb_03	:  PC=0x898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:860) add.s32 %ssa_221, %ssa_220, %ssa_26_bits; // vec1 32 ssa_221 = iadd ssa_220, ssa_26
bb_03	:  PC=0x8a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:863) xor.b32 %ssa_222, %ssa_219, %ssa_221;// vec1 32 ssa_222 = ixor ssa_219, ssa_221
bb_03	:  PC=0x8a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:866) add.s32 %ssa_223, %ssa_206, %ssa_222;// vec1 32 ssa_223 = iadd ssa_206, ssa_222
bb_03	:  PC=0x8b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:869) shl.b32 %ssa_224, %ssa_223, %ssa_25_bits; // vec1 32 ssa_224 = ishl ssa_223, ssa_25
bb_03	:  PC=0x8b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:872) add.s32 %ssa_225, %ssa_224, %ssa_24_bits; // vec1 32 ssa_225 = iadd ssa_224, ssa_24
bb_03	:  PC=0x8c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:875) add.s32 %ssa_226, %ssa_223, %ssa_215_bits; // vec1 32 ssa_226 = iadd ssa_223, ssa_215
bb_03	:  PC=0x8c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:878) xor.b32 %ssa_227, %ssa_225, %ssa_226;// vec1 32 ssa_227 = ixor ssa_225, ssa_226
bb_03	:  PC=0x8d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:881) shr.u32 %ssa_228, %ssa_223, %ssa_23_bits; // vec1 32 ssa_228 = ushr ssa_223, ssa_23
bb_03	:  PC=0x8d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:884) add.s32 %ssa_229, %ssa_228, %ssa_22_bits; // vec1 32 ssa_229 = iadd ssa_228, ssa_22
bb_03	:  PC=0x8e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:887) xor.b32 %ssa_230, %ssa_227, %ssa_229;// vec1 32 ssa_230 = ixor ssa_227, ssa_229
bb_03	:  PC=0x8e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:890) add.s32 %ssa_231, %ssa_214, %ssa_230;// vec1 32 ssa_231 = iadd ssa_214, ssa_230
bb_03	:  PC=0x8f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:893) mov.f32 %ssa_232, 0F08d12e65; // vec1 32 ssa_232 = load_const (0x08d12e65 /* 0.000000 */)
bb_03	:  PC=0x8f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:895) mov.b32 %ssa_232_bits, 0F08d12e65;
bb_03	:  PC=0x900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:898) shl.b32 %ssa_233, %ssa_231, %ssa_25_bits; // vec1 32 ssa_233 = ishl ssa_231, ssa_25
bb_03	:  PC=0x908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:901) add.s32 %ssa_234, %ssa_233, %ssa_27_bits; // vec1 32 ssa_234 = iadd ssa_233, ssa_27
bb_03	:  PC=0x910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:904) add.s32 %ssa_235, %ssa_231, %ssa_232_bits; // vec1 32 ssa_235 = iadd ssa_231, ssa_232
bb_03	:  PC=0x918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:907) xor.b32 %ssa_236, %ssa_234, %ssa_235;// vec1 32 ssa_236 = ixor ssa_234, ssa_235
bb_03	:  PC=0x920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:910) shr.u32 %ssa_237, %ssa_231, %ssa_23_bits; // vec1 32 ssa_237 = ushr ssa_231, ssa_23
bb_03	:  PC=0x928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:913) add.s32 %ssa_238, %ssa_237, %ssa_26_bits; // vec1 32 ssa_238 = iadd ssa_237, ssa_26
bb_03	:  PC=0x930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:916) xor.b32 %ssa_239, %ssa_236, %ssa_238;// vec1 32 ssa_239 = ixor ssa_236, ssa_238
bb_03	:  PC=0x938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:919) add.s32 %ssa_240, %ssa_223, %ssa_239;// vec1 32 ssa_240 = iadd ssa_223, ssa_239
bb_03	:  PC=0x940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:922) shl.b32 %ssa_241, %ssa_240, %ssa_25_bits; // vec1 32 ssa_241 = ishl ssa_240, ssa_25
bb_03	:  PC=0x948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:925) add.s32 %ssa_242, %ssa_241, %ssa_24_bits; // vec1 32 ssa_242 = iadd ssa_241, ssa_24
bb_03	:  PC=0x950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:928) add.s32 %ssa_243, %ssa_240, %ssa_232_bits; // vec1 32 ssa_243 = iadd ssa_240, ssa_232
bb_03	:  PC=0x958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:931) xor.b32 %ssa_244, %ssa_242, %ssa_243;// vec1 32 ssa_244 = ixor ssa_242, ssa_243
bb_03	:  PC=0x960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:934) shr.u32 %ssa_245, %ssa_240, %ssa_23_bits; // vec1 32 ssa_245 = ushr ssa_240, ssa_23
bb_03	:  PC=0x968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:937) add.s32 %ssa_246, %ssa_245, %ssa_22_bits; // vec1 32 ssa_246 = iadd ssa_245, ssa_22
bb_03	:  PC=0x970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:940) xor.b32 %ssa_247, %ssa_244, %ssa_246;// vec1 32 ssa_247 = ixor ssa_244, ssa_246
bb_03	:  PC=0x978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:943) add.s32 %ssa_248, %ssa_231, %ssa_247;// vec1 32 ssa_248 = iadd ssa_231, ssa_247
bb_03	:  PC=0x980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:946) mov.f32 %ssa_249, 0Fa708a81e; // vec1 32 ssa_249 = load_const (0xa708a81e /* -0.000000 */)
bb_03	:  PC=0x988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:948) mov.b32 %ssa_249_bits, 0Fa708a81e;
bb_03	:  PC=0x990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:951) shl.b32 %ssa_250, %ssa_248, %ssa_25_bits; // vec1 32 ssa_250 = ishl ssa_248, ssa_25
bb_03	:  PC=0x998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:954) add.s32 %ssa_251, %ssa_250, %ssa_27_bits; // vec1 32 ssa_251 = iadd ssa_250, ssa_27
bb_03	:  PC=0x9a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:957) add.s32 %ssa_252, %ssa_248, %ssa_249_bits; // vec1 32 ssa_252 = iadd ssa_248, ssa_249
bb_03	:  PC=0x9a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:960) xor.b32 %ssa_253, %ssa_251, %ssa_252;// vec1 32 ssa_253 = ixor ssa_251, ssa_252
bb_03	:  PC=0x9b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:963) shr.u32 %ssa_254, %ssa_248, %ssa_23_bits; // vec1 32 ssa_254 = ushr ssa_248, ssa_23
bb_03	:  PC=0x9b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:966) add.s32 %ssa_255, %ssa_254, %ssa_26_bits; // vec1 32 ssa_255 = iadd ssa_254, ssa_26
bb_03	:  PC=0x9c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:969) xor.b32 %ssa_256, %ssa_253, %ssa_255;// vec1 32 ssa_256 = ixor ssa_253, ssa_255
bb_03	:  PC=0x9c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:972) add.s32 %ssa_257, %ssa_240, %ssa_256;// vec1 32 ssa_257 = iadd ssa_240, ssa_256
bb_03	:  PC=0x9d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:975) shl.b32 %ssa_258, %ssa_257, %ssa_25_bits; // vec1 32 ssa_258 = ishl ssa_257, ssa_25
bb_03	:  PC=0x9d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:978) add.s32 %ssa_259, %ssa_258, %ssa_24_bits; // vec1 32 ssa_259 = iadd ssa_258, ssa_24
bb_03	:  PC=0x9e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:981) add.s32 %ssa_260, %ssa_257, %ssa_249_bits; // vec1 32 ssa_260 = iadd ssa_257, ssa_249
bb_03	:  PC=0x9e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:984) xor.b32 %ssa_261, %ssa_259, %ssa_260;// vec1 32 ssa_261 = ixor ssa_259, ssa_260
bb_03	:  PC=0x9f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:987) shr.u32 %ssa_262, %ssa_257, %ssa_23_bits; // vec1 32 ssa_262 = ushr ssa_257, ssa_23
bb_03	:  PC=0x9f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:990) add.s32 %ssa_263, %ssa_262, %ssa_22_bits; // vec1 32 ssa_263 = iadd ssa_262, ssa_22
bb_03	:  PC=0xa00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:993) xor.b32 %ssa_264, %ssa_261, %ssa_263;// vec1 32 ssa_264 = ixor ssa_261, ssa_263
bb_03	:  PC=0xa08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:996) add.s32 %ssa_265, %ssa_248, %ssa_264;// vec1 32 ssa_265 = iadd ssa_248, ssa_264
bb_03	:  PC=0xa10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:999) mov.f32 %ssa_266, 0F454021d7; // vec1 32 ssa_266 = load_const (0x454021d7 /* 3074.114990 */)
bb_03	:  PC=0xa18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1001) mov.b32 %ssa_266_bits, 0F454021d7;
bb_03	:  PC=0xa20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1004) shl.b32 %ssa_267, %ssa_265, %ssa_25_bits; // vec1 32 ssa_267 = ishl ssa_265, ssa_25
bb_03	:  PC=0xa28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1007) add.s32 %ssa_268, %ssa_267, %ssa_27_bits; // vec1 32 ssa_268 = iadd ssa_267, ssa_27
bb_03	:  PC=0xa30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1010) add.s32 %ssa_269, %ssa_265, %ssa_266_bits; // vec1 32 ssa_269 = iadd ssa_265, ssa_266
bb_03	:  PC=0xa38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1013) xor.b32 %ssa_270, %ssa_268, %ssa_269;// vec1 32 ssa_270 = ixor ssa_268, ssa_269
bb_03	:  PC=0xa40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1016) shr.u32 %ssa_271, %ssa_265, %ssa_23_bits; // vec1 32 ssa_271 = ushr ssa_265, ssa_23
bb_03	:  PC=0xa48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1019) add.s32 %ssa_272, %ssa_271, %ssa_26_bits; // vec1 32 ssa_272 = iadd ssa_271, ssa_26
bb_03	:  PC=0xa50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1022) xor.b32 %ssa_273, %ssa_270, %ssa_272;// vec1 32 ssa_273 = ixor ssa_270, ssa_272
bb_03	:  PC=0xa58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1025) add.s32 %ssa_274, %ssa_257, %ssa_273;// vec1 32 ssa_274 = iadd ssa_257, ssa_273
bb_03	:  PC=0xa60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1028) shl.b32 %ssa_275, %ssa_274, %ssa_25_bits; // vec1 32 ssa_275 = ishl ssa_274, ssa_25
bb_03	:  PC=0xa68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1031) add.s32 %ssa_276, %ssa_275, %ssa_24_bits; // vec1 32 ssa_276 = iadd ssa_275, ssa_24
bb_03	:  PC=0xa70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1034) add.s32 %ssa_277, %ssa_274, %ssa_266_bits; // vec1 32 ssa_277 = iadd ssa_274, ssa_266
bb_03	:  PC=0xa78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1037) xor.b32 %ssa_278, %ssa_276, %ssa_277;// vec1 32 ssa_278 = ixor ssa_276, ssa_277
bb_03	:  PC=0xa80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1040) shr.u32 %ssa_279, %ssa_274, %ssa_23_bits; // vec1 32 ssa_279 = ushr ssa_274, ssa_23
bb_03	:  PC=0xa88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1043) add.s32 %ssa_280, %ssa_279, %ssa_22_bits; // vec1 32 ssa_280 = iadd ssa_279, ssa_22
bb_03	:  PC=0xa90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1046) xor.b32 %ssa_281, %ssa_278, %ssa_280;// vec1 32 ssa_281 = ixor ssa_278, ssa_280
bb_03	:  PC=0xa98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1049) add.s32 %ssa_282, %ssa_265, %ssa_281;// vec1 32 ssa_282 = iadd ssa_265, ssa_281
bb_03	:  PC=0xaa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1052) mov.f32 %ssa_283, 0Fe3779b90; // vec1 32 ssa_283 = load_const (0xe3779b90 /* -4567555245678784413696.000000 */)
bb_03	:  PC=0xaa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1054) mov.b32 %ssa_283_bits, 0Fe3779b90;
bb_03	:  PC=0xab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1057) shl.b32 %ssa_284, %ssa_282, %ssa_25_bits; // vec1 32 ssa_284 = ishl ssa_282, ssa_25
bb_03	:  PC=0xab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1060) add.s32 %ssa_285, %ssa_284, %ssa_27_bits; // vec1 32 ssa_285 = iadd ssa_284, ssa_27
bb_03	:  PC=0xac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1063) add.s32 %ssa_286, %ssa_282, %ssa_283_bits; // vec1 32 ssa_286 = iadd ssa_282, ssa_283
bb_03	:  PC=0xac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1066) xor.b32 %ssa_287, %ssa_285, %ssa_286;// vec1 32 ssa_287 = ixor ssa_285, ssa_286
bb_03	:  PC=0xad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1069) shr.u32 %ssa_288, %ssa_282, %ssa_23_bits; // vec1 32 ssa_288 = ushr ssa_282, ssa_23
bb_03	:  PC=0xad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1072) add.s32 %ssa_289, %ssa_288, %ssa_26_bits; // vec1 32 ssa_289 = iadd ssa_288, ssa_26
bb_03	:  PC=0xae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1075) xor.b32 %ssa_290, %ssa_287, %ssa_289;// vec1 32 ssa_290 = ixor ssa_287, ssa_289
bb_03	:  PC=0xae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1078) add.s32 %ssa_291, %ssa_274, %ssa_290;// vec1 32 ssa_291 = iadd ssa_274, ssa_290
bb_03	:  PC=0xaf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1081) add.u64 %ssa_292, %ssa_18, 284; // vec2 32 ssa_292 = deref_struct &ssa_18->TotalNumberOfSamples (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.TotalNumberOfSamples */
bb_03	:  PC=0xaf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1084) ld.global.u32 %ssa_293, [%ssa_292]; // vec1 32 ssa_293 = intrinsic load_deref (%ssa_292) (16) /* access=16 */
bb_03	:  PC=0xb00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1087) shl.b32 %ssa_294, %ssa_293, %ssa_25_bits; // vec1 32 ssa_294 = ishl ssa_293, ssa_25
bb_03	:  PC=0xb08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1090) add.s32 %ssa_295, %ssa_294, %ssa_27_bits; // vec1 32 ssa_295 = iadd ssa_294, ssa_27
bb_03	:  PC=0xb10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1093) add.s32 %ssa_296, %ssa_293, %ssa_28_bits; // vec1 32 ssa_296 = iadd ssa_293, ssa_28
bb_03	:  PC=0xb18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1096) xor.b32 %ssa_297, %ssa_295, %ssa_296;// vec1 32 ssa_297 = ixor ssa_295, ssa_296
bb_03	:  PC=0xb20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1099) shr.u32 %ssa_298, %ssa_293, %ssa_23_bits; // vec1 32 ssa_298 = ushr ssa_293, ssa_23
bb_03	:  PC=0xb28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1102) add.s32 %ssa_299, %ssa_298, %ssa_26_bits; // vec1 32 ssa_299 = iadd ssa_298, ssa_26
bb_03	:  PC=0xb30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1105) xor.b32 %ssa_300, %ssa_297, %ssa_299;// vec1 32 ssa_300 = ixor ssa_297, ssa_299
bb_03	:  PC=0xb38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1108) add.s32 %ssa_301, %ssa_291, %ssa_300;// vec1 32 ssa_301 = iadd ssa_291, ssa_300
bb_03	:  PC=0xb40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1111) shl.b32 %ssa_302, %ssa_301, %ssa_25_bits; // vec1 32 ssa_302 = ishl ssa_301, ssa_25
bb_03	:  PC=0xb48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1114) add.s32 %ssa_303, %ssa_302, %ssa_24_bits; // vec1 32 ssa_303 = iadd ssa_302, ssa_24
bb_03	:  PC=0xb50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1117) add.s32 %ssa_304, %ssa_301, %ssa_28_bits; // vec1 32 ssa_304 = iadd ssa_301, ssa_28
bb_03	:  PC=0xb58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1120) xor.b32 %ssa_305, %ssa_303, %ssa_304;// vec1 32 ssa_305 = ixor ssa_303, ssa_304
bb_03	:  PC=0xb60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1123) shr.u32 %ssa_306, %ssa_301, %ssa_23_bits; // vec1 32 ssa_306 = ushr ssa_301, ssa_23
bb_03	:  PC=0xb68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1126) add.s32 %ssa_307, %ssa_306, %ssa_22_bits; // vec1 32 ssa_307 = iadd ssa_306, ssa_22
bb_03	:  PC=0xb70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1129) xor.b32 %ssa_308, %ssa_305, %ssa_307;// vec1 32 ssa_308 = ixor ssa_305, ssa_307
bb_03	:  PC=0xb78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1132) add.s32 %ssa_309, %ssa_293, %ssa_308;// vec1 32 ssa_309 = iadd ssa_293, ssa_308
bb_03	:  PC=0xb80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1135) shl.b32 %ssa_310, %ssa_309, %ssa_25_bits; // vec1 32 ssa_310 = ishl ssa_309, ssa_25
bb_03	:  PC=0xb88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1138) add.s32 %ssa_311, %ssa_310, %ssa_27_bits; // vec1 32 ssa_311 = iadd ssa_310, ssa_27
bb_03	:  PC=0xb90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1141) add.s32 %ssa_312, %ssa_309, %ssa_45_bits; // vec1 32 ssa_312 = iadd ssa_309, ssa_45
bb_03	:  PC=0xb98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1144) xor.b32 %ssa_313, %ssa_311, %ssa_312;// vec1 32 ssa_313 = ixor ssa_311, ssa_312
bb_03	:  PC=0xba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1147) shr.u32 %ssa_314, %ssa_309, %ssa_23_bits; // vec1 32 ssa_314 = ushr ssa_309, ssa_23
bb_03	:  PC=0xba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1150) add.s32 %ssa_315, %ssa_314, %ssa_26_bits; // vec1 32 ssa_315 = iadd ssa_314, ssa_26
bb_03	:  PC=0xbb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1153) xor.b32 %ssa_316, %ssa_313, %ssa_315;// vec1 32 ssa_316 = ixor ssa_313, ssa_315
bb_03	:  PC=0xbb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1156) add.s32 %ssa_317, %ssa_301, %ssa_316;// vec1 32 ssa_317 = iadd ssa_301, ssa_316
bb_03	:  PC=0xbc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1159) shl.b32 %ssa_318, %ssa_317, %ssa_25_bits; // vec1 32 ssa_318 = ishl ssa_317, ssa_25
bb_03	:  PC=0xbc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1162) add.s32 %ssa_319, %ssa_318, %ssa_24_bits; // vec1 32 ssa_319 = iadd ssa_318, ssa_24
bb_03	:  PC=0xbd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1165) add.s32 %ssa_320, %ssa_317, %ssa_45_bits; // vec1 32 ssa_320 = iadd ssa_317, ssa_45
bb_03	:  PC=0xbd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1168) xor.b32 %ssa_321, %ssa_319, %ssa_320;// vec1 32 ssa_321 = ixor ssa_319, ssa_320
bb_03	:  PC=0xbe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1171) shr.u32 %ssa_322, %ssa_317, %ssa_23_bits; // vec1 32 ssa_322 = ushr ssa_317, ssa_23
bb_03	:  PC=0xbe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1174) add.s32 %ssa_323, %ssa_322, %ssa_22_bits; // vec1 32 ssa_323 = iadd ssa_322, ssa_22
bb_03	:  PC=0xbf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1177) xor.b32 %ssa_324, %ssa_321, %ssa_323;// vec1 32 ssa_324 = ixor ssa_321, ssa_323
bb_03	:  PC=0xbf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1180) add.s32 %ssa_325, %ssa_309, %ssa_324;// vec1 32 ssa_325 = iadd ssa_309, ssa_324
bb_03	:  PC=0xc00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1183) shl.b32 %ssa_326, %ssa_325, %ssa_25_bits; // vec1 32 ssa_326 = ishl ssa_325, ssa_25
bb_03	:  PC=0xc08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1186) add.s32 %ssa_327, %ssa_326, %ssa_27_bits; // vec1 32 ssa_327 = iadd ssa_326, ssa_27
bb_03	:  PC=0xc10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1189) add.s32 %ssa_328, %ssa_325, %ssa_62_bits; // vec1 32 ssa_328 = iadd ssa_325, ssa_62
bb_03	:  PC=0xc18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1192) xor.b32 %ssa_329, %ssa_327, %ssa_328;// vec1 32 ssa_329 = ixor ssa_327, ssa_328
bb_03	:  PC=0xc20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1195) shr.u32 %ssa_330, %ssa_325, %ssa_23_bits; // vec1 32 ssa_330 = ushr ssa_325, ssa_23
bb_03	:  PC=0xc28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1198) add.s32 %ssa_331, %ssa_330, %ssa_26_bits; // vec1 32 ssa_331 = iadd ssa_330, ssa_26
bb_03	:  PC=0xc30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1201) xor.b32 %ssa_332, %ssa_329, %ssa_331;// vec1 32 ssa_332 = ixor ssa_329, ssa_331
bb_03	:  PC=0xc38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1204) add.s32 %ssa_333, %ssa_317, %ssa_332;// vec1 32 ssa_333 = iadd ssa_317, ssa_332
bb_03	:  PC=0xc40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1207) shl.b32 %ssa_334, %ssa_333, %ssa_25_bits; // vec1 32 ssa_334 = ishl ssa_333, ssa_25
bb_03	:  PC=0xc48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1210) add.s32 %ssa_335, %ssa_334, %ssa_24_bits; // vec1 32 ssa_335 = iadd ssa_334, ssa_24
bb_03	:  PC=0xc50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1213) add.s32 %ssa_336, %ssa_333, %ssa_62_bits; // vec1 32 ssa_336 = iadd ssa_333, ssa_62
bb_03	:  PC=0xc58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1216) xor.b32 %ssa_337, %ssa_335, %ssa_336;// vec1 32 ssa_337 = ixor ssa_335, ssa_336
bb_03	:  PC=0xc60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1219) shr.u32 %ssa_338, %ssa_333, %ssa_23_bits; // vec1 32 ssa_338 = ushr ssa_333, ssa_23
bb_03	:  PC=0xc68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1222) add.s32 %ssa_339, %ssa_338, %ssa_22_bits; // vec1 32 ssa_339 = iadd ssa_338, ssa_22
bb_03	:  PC=0xc70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1225) xor.b32 %ssa_340, %ssa_337, %ssa_339;// vec1 32 ssa_340 = ixor ssa_337, ssa_339
bb_03	:  PC=0xc78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1228) add.s32 %ssa_341, %ssa_325, %ssa_340;// vec1 32 ssa_341 = iadd ssa_325, ssa_340
bb_03	:  PC=0xc80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1231) shl.b32 %ssa_342, %ssa_341, %ssa_25_bits; // vec1 32 ssa_342 = ishl ssa_341, ssa_25
bb_03	:  PC=0xc88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1234) add.s32 %ssa_343, %ssa_342, %ssa_27_bits; // vec1 32 ssa_343 = iadd ssa_342, ssa_27
bb_03	:  PC=0xc90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1237) add.s32 %ssa_344, %ssa_341, %ssa_79_bits; // vec1 32 ssa_344 = iadd ssa_341, ssa_79
bb_03	:  PC=0xc98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1240) xor.b32 %ssa_345, %ssa_343, %ssa_344;// vec1 32 ssa_345 = ixor ssa_343, ssa_344
bb_03	:  PC=0xca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1243) shr.u32 %ssa_346, %ssa_341, %ssa_23_bits; // vec1 32 ssa_346 = ushr ssa_341, ssa_23
bb_03	:  PC=0xca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1246) add.s32 %ssa_347, %ssa_346, %ssa_26_bits; // vec1 32 ssa_347 = iadd ssa_346, ssa_26
bb_03	:  PC=0xcb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1249) xor.b32 %ssa_348, %ssa_345, %ssa_347;// vec1 32 ssa_348 = ixor ssa_345, ssa_347
bb_03	:  PC=0xcb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1252) add.s32 %ssa_349, %ssa_333, %ssa_348;// vec1 32 ssa_349 = iadd ssa_333, ssa_348
bb_03	:  PC=0xcc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1255) shl.b32 %ssa_350, %ssa_349, %ssa_25_bits; // vec1 32 ssa_350 = ishl ssa_349, ssa_25
bb_03	:  PC=0xcc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1258) add.s32 %ssa_351, %ssa_350, %ssa_24_bits; // vec1 32 ssa_351 = iadd ssa_350, ssa_24
bb_03	:  PC=0xcd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1261) add.s32 %ssa_352, %ssa_349, %ssa_79_bits; // vec1 32 ssa_352 = iadd ssa_349, ssa_79
bb_03	:  PC=0xcd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1264) xor.b32 %ssa_353, %ssa_351, %ssa_352;// vec1 32 ssa_353 = ixor ssa_351, ssa_352
bb_03	:  PC=0xce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1267) shr.u32 %ssa_354, %ssa_349, %ssa_23_bits; // vec1 32 ssa_354 = ushr ssa_349, ssa_23
bb_03	:  PC=0xce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1270) add.s32 %ssa_355, %ssa_354, %ssa_22_bits; // vec1 32 ssa_355 = iadd ssa_354, ssa_22
bb_03	:  PC=0xcf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1273) xor.b32 %ssa_356, %ssa_353, %ssa_355;// vec1 32 ssa_356 = ixor ssa_353, ssa_355
bb_03	:  PC=0xcf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1276) add.s32 %ssa_357, %ssa_341, %ssa_356;// vec1 32 ssa_357 = iadd ssa_341, ssa_356
bb_03	:  PC=0xd00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1279) shl.b32 %ssa_358, %ssa_357, %ssa_25_bits; // vec1 32 ssa_358 = ishl ssa_357, ssa_25
bb_03	:  PC=0xd08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1282) add.s32 %ssa_359, %ssa_358, %ssa_27_bits; // vec1 32 ssa_359 = iadd ssa_358, ssa_27
bb_03	:  PC=0xd10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1285) add.s32 %ssa_360, %ssa_357, %ssa_96_bits; // vec1 32 ssa_360 = iadd ssa_357, ssa_96
bb_03	:  PC=0xd18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1288) xor.b32 %ssa_361, %ssa_359, %ssa_360;// vec1 32 ssa_361 = ixor ssa_359, ssa_360
bb_03	:  PC=0xd20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1291) shr.u32 %ssa_362, %ssa_357, %ssa_23_bits; // vec1 32 ssa_362 = ushr ssa_357, ssa_23
bb_03	:  PC=0xd28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1294) add.s32 %ssa_363, %ssa_362, %ssa_26_bits; // vec1 32 ssa_363 = iadd ssa_362, ssa_26
bb_03	:  PC=0xd30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1297) xor.b32 %ssa_364, %ssa_361, %ssa_363;// vec1 32 ssa_364 = ixor ssa_361, ssa_363
bb_03	:  PC=0xd38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1300) add.s32 %ssa_365, %ssa_349, %ssa_364;// vec1 32 ssa_365 = iadd ssa_349, ssa_364
bb_03	:  PC=0xd40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1303) shl.b32 %ssa_366, %ssa_365, %ssa_25_bits; // vec1 32 ssa_366 = ishl ssa_365, ssa_25
bb_03	:  PC=0xd48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1306) add.s32 %ssa_367, %ssa_366, %ssa_24_bits; // vec1 32 ssa_367 = iadd ssa_366, ssa_24
bb_03	:  PC=0xd50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1309) add.s32 %ssa_368, %ssa_365, %ssa_96_bits; // vec1 32 ssa_368 = iadd ssa_365, ssa_96
bb_03	:  PC=0xd58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1312) xor.b32 %ssa_369, %ssa_367, %ssa_368;// vec1 32 ssa_369 = ixor ssa_367, ssa_368
bb_03	:  PC=0xd60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1315) shr.u32 %ssa_370, %ssa_365, %ssa_23_bits; // vec1 32 ssa_370 = ushr ssa_365, ssa_23
bb_03	:  PC=0xd68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1318) add.s32 %ssa_371, %ssa_370, %ssa_22_bits; // vec1 32 ssa_371 = iadd ssa_370, ssa_22
bb_03	:  PC=0xd70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1321) xor.b32 %ssa_372, %ssa_369, %ssa_371;// vec1 32 ssa_372 = ixor ssa_369, ssa_371
bb_03	:  PC=0xd78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1324) add.s32 %ssa_373, %ssa_357, %ssa_372;// vec1 32 ssa_373 = iadd ssa_357, ssa_372
bb_03	:  PC=0xd80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1327) shl.b32 %ssa_374, %ssa_373, %ssa_25_bits; // vec1 32 ssa_374 = ishl ssa_373, ssa_25
bb_03	:  PC=0xd88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1330) add.s32 %ssa_375, %ssa_374, %ssa_27_bits; // vec1 32 ssa_375 = iadd ssa_374, ssa_27
bb_03	:  PC=0xd90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1333) add.s32 %ssa_376, %ssa_373, %ssa_113_bits; // vec1 32 ssa_376 = iadd ssa_373, ssa_113
bb_03	:  PC=0xd98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1336) xor.b32 %ssa_377, %ssa_375, %ssa_376;// vec1 32 ssa_377 = ixor ssa_375, ssa_376
bb_03	:  PC=0xda0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1339) shr.u32 %ssa_378, %ssa_373, %ssa_23_bits; // vec1 32 ssa_378 = ushr ssa_373, ssa_23
bb_03	:  PC=0xda8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1342) add.s32 %ssa_379, %ssa_378, %ssa_26_bits; // vec1 32 ssa_379 = iadd ssa_378, ssa_26
bb_03	:  PC=0xdb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1345) xor.b32 %ssa_380, %ssa_377, %ssa_379;// vec1 32 ssa_380 = ixor ssa_377, ssa_379
bb_03	:  PC=0xdb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1348) add.s32 %ssa_381, %ssa_365, %ssa_380;// vec1 32 ssa_381 = iadd ssa_365, ssa_380
bb_03	:  PC=0xdc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1351) shl.b32 %ssa_382, %ssa_381, %ssa_25_bits; // vec1 32 ssa_382 = ishl ssa_381, ssa_25
bb_03	:  PC=0xdc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1354) add.s32 %ssa_383, %ssa_382, %ssa_24_bits; // vec1 32 ssa_383 = iadd ssa_382, ssa_24
bb_03	:  PC=0xdd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1357) add.s32 %ssa_384, %ssa_381, %ssa_113_bits; // vec1 32 ssa_384 = iadd ssa_381, ssa_113
bb_03	:  PC=0xdd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1360) xor.b32 %ssa_385, %ssa_383, %ssa_384;// vec1 32 ssa_385 = ixor ssa_383, ssa_384
bb_03	:  PC=0xde0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1363) shr.u32 %ssa_386, %ssa_381, %ssa_23_bits; // vec1 32 ssa_386 = ushr ssa_381, ssa_23
bb_03	:  PC=0xde8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1366) add.s32 %ssa_387, %ssa_386, %ssa_22_bits; // vec1 32 ssa_387 = iadd ssa_386, ssa_22
bb_03	:  PC=0xdf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1369) xor.b32 %ssa_388, %ssa_385, %ssa_387;// vec1 32 ssa_388 = ixor ssa_385, ssa_387
bb_03	:  PC=0xdf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1372) add.s32 %ssa_389, %ssa_373, %ssa_388;// vec1 32 ssa_389 = iadd ssa_373, ssa_388
bb_03	:  PC=0xe00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1375) shl.b32 %ssa_390, %ssa_389, %ssa_25_bits; // vec1 32 ssa_390 = ishl ssa_389, ssa_25
bb_03	:  PC=0xe08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1378) add.s32 %ssa_391, %ssa_390, %ssa_27_bits; // vec1 32 ssa_391 = iadd ssa_390, ssa_27
bb_03	:  PC=0xe10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1381) add.s32 %ssa_392, %ssa_389, %ssa_130_bits; // vec1 32 ssa_392 = iadd ssa_389, ssa_130
bb_03	:  PC=0xe18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1384) xor.b32 %ssa_393, %ssa_391, %ssa_392;// vec1 32 ssa_393 = ixor ssa_391, ssa_392
bb_03	:  PC=0xe20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1387) shr.u32 %ssa_394, %ssa_389, %ssa_23_bits; // vec1 32 ssa_394 = ushr ssa_389, ssa_23
bb_03	:  PC=0xe28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1390) add.s32 %ssa_395, %ssa_394, %ssa_26_bits; // vec1 32 ssa_395 = iadd ssa_394, ssa_26
bb_03	:  PC=0xe30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1393) xor.b32 %ssa_396, %ssa_393, %ssa_395;// vec1 32 ssa_396 = ixor ssa_393, ssa_395
bb_03	:  PC=0xe38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1396) add.s32 %ssa_397, %ssa_381, %ssa_396;// vec1 32 ssa_397 = iadd ssa_381, ssa_396
bb_03	:  PC=0xe40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1399) shl.b32 %ssa_398, %ssa_397, %ssa_25_bits; // vec1 32 ssa_398 = ishl ssa_397, ssa_25
bb_03	:  PC=0xe48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1402) add.s32 %ssa_399, %ssa_398, %ssa_24_bits; // vec1 32 ssa_399 = iadd ssa_398, ssa_24
bb_03	:  PC=0xe50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1405) add.s32 %ssa_400, %ssa_397, %ssa_130_bits; // vec1 32 ssa_400 = iadd ssa_397, ssa_130
bb_03	:  PC=0xe58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1408) xor.b32 %ssa_401, %ssa_399, %ssa_400;// vec1 32 ssa_401 = ixor ssa_399, ssa_400
bb_03	:  PC=0xe60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1411) shr.u32 %ssa_402, %ssa_397, %ssa_23_bits; // vec1 32 ssa_402 = ushr ssa_397, ssa_23
bb_03	:  PC=0xe68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1414) add.s32 %ssa_403, %ssa_402, %ssa_22_bits; // vec1 32 ssa_403 = iadd ssa_402, ssa_22
bb_03	:  PC=0xe70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1417) xor.b32 %ssa_404, %ssa_401, %ssa_403;// vec1 32 ssa_404 = ixor ssa_401, ssa_403
bb_03	:  PC=0xe78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1420) add.s32 %ssa_405, %ssa_389, %ssa_404;// vec1 32 ssa_405 = iadd ssa_389, ssa_404
bb_03	:  PC=0xe80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1423) shl.b32 %ssa_406, %ssa_405, %ssa_25_bits; // vec1 32 ssa_406 = ishl ssa_405, ssa_25
bb_03	:  PC=0xe88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1426) add.s32 %ssa_407, %ssa_406, %ssa_27_bits; // vec1 32 ssa_407 = iadd ssa_406, ssa_27
bb_03	:  PC=0xe90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1429) add.s32 %ssa_408, %ssa_405, %ssa_147_bits; // vec1 32 ssa_408 = iadd ssa_405, ssa_147
bb_03	:  PC=0xe98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1432) xor.b32 %ssa_409, %ssa_407, %ssa_408;// vec1 32 ssa_409 = ixor ssa_407, ssa_408
bb_03	:  PC=0xea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1435) shr.u32 %ssa_410, %ssa_405, %ssa_23_bits; // vec1 32 ssa_410 = ushr ssa_405, ssa_23
bb_03	:  PC=0xea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1438) add.s32 %ssa_411, %ssa_410, %ssa_26_bits; // vec1 32 ssa_411 = iadd ssa_410, ssa_26
bb_03	:  PC=0xeb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1441) xor.b32 %ssa_412, %ssa_409, %ssa_411;// vec1 32 ssa_412 = ixor ssa_409, ssa_411
bb_03	:  PC=0xeb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1444) add.s32 %ssa_413, %ssa_397, %ssa_412;// vec1 32 ssa_413 = iadd ssa_397, ssa_412
bb_03	:  PC=0xec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1447) shl.b32 %ssa_414, %ssa_413, %ssa_25_bits; // vec1 32 ssa_414 = ishl ssa_413, ssa_25
bb_03	:  PC=0xec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1450) add.s32 %ssa_415, %ssa_414, %ssa_24_bits; // vec1 32 ssa_415 = iadd ssa_414, ssa_24
bb_03	:  PC=0xed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1453) add.s32 %ssa_416, %ssa_413, %ssa_147_bits; // vec1 32 ssa_416 = iadd ssa_413, ssa_147
bb_03	:  PC=0xed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1456) xor.b32 %ssa_417, %ssa_415, %ssa_416;// vec1 32 ssa_417 = ixor ssa_415, ssa_416
bb_03	:  PC=0xee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1459) shr.u32 %ssa_418, %ssa_413, %ssa_23_bits; // vec1 32 ssa_418 = ushr ssa_413, ssa_23
bb_03	:  PC=0xee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1462) add.s32 %ssa_419, %ssa_418, %ssa_22_bits; // vec1 32 ssa_419 = iadd ssa_418, ssa_22
bb_03	:  PC=0xef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1465) xor.b32 %ssa_420, %ssa_417, %ssa_419;// vec1 32 ssa_420 = ixor ssa_417, ssa_419
bb_03	:  PC=0xef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1468) add.s32 %ssa_421, %ssa_405, %ssa_420;// vec1 32 ssa_421 = iadd ssa_405, ssa_420
bb_03	:  PC=0xf00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1471) shl.b32 %ssa_422, %ssa_421, %ssa_25_bits; // vec1 32 ssa_422 = ishl ssa_421, ssa_25
bb_03	:  PC=0xf08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1474) add.s32 %ssa_423, %ssa_422, %ssa_27_bits; // vec1 32 ssa_423 = iadd ssa_422, ssa_27
bb_03	:  PC=0xf10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1477) add.s32 %ssa_424, %ssa_421, %ssa_164_bits; // vec1 32 ssa_424 = iadd ssa_421, ssa_164
bb_03	:  PC=0xf18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1480) xor.b32 %ssa_425, %ssa_423, %ssa_424;// vec1 32 ssa_425 = ixor ssa_423, ssa_424
bb_03	:  PC=0xf20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1483) shr.u32 %ssa_426, %ssa_421, %ssa_23_bits; // vec1 32 ssa_426 = ushr ssa_421, ssa_23
bb_03	:  PC=0xf28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1486) add.s32 %ssa_427, %ssa_426, %ssa_26_bits; // vec1 32 ssa_427 = iadd ssa_426, ssa_26
bb_03	:  PC=0xf30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1489) xor.b32 %ssa_428, %ssa_425, %ssa_427;// vec1 32 ssa_428 = ixor ssa_425, ssa_427
bb_03	:  PC=0xf38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1492) add.s32 %ssa_429, %ssa_413, %ssa_428;// vec1 32 ssa_429 = iadd ssa_413, ssa_428
bb_03	:  PC=0xf40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1495) shl.b32 %ssa_430, %ssa_429, %ssa_25_bits; // vec1 32 ssa_430 = ishl ssa_429, ssa_25
bb_03	:  PC=0xf48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1498) add.s32 %ssa_431, %ssa_430, %ssa_24_bits; // vec1 32 ssa_431 = iadd ssa_430, ssa_24
bb_03	:  PC=0xf50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1501) add.s32 %ssa_432, %ssa_429, %ssa_164_bits; // vec1 32 ssa_432 = iadd ssa_429, ssa_164
bb_03	:  PC=0xf58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1504) xor.b32 %ssa_433, %ssa_431, %ssa_432;// vec1 32 ssa_433 = ixor ssa_431, ssa_432
bb_03	:  PC=0xf60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1507) shr.u32 %ssa_434, %ssa_429, %ssa_23_bits; // vec1 32 ssa_434 = ushr ssa_429, ssa_23
bb_03	:  PC=0xf68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1510) add.s32 %ssa_435, %ssa_434, %ssa_22_bits; // vec1 32 ssa_435 = iadd ssa_434, ssa_22
bb_03	:  PC=0xf70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1513) xor.b32 %ssa_436, %ssa_433, %ssa_435;// vec1 32 ssa_436 = ixor ssa_433, ssa_435
bb_03	:  PC=0xf78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1516) add.s32 %ssa_437, %ssa_421, %ssa_436;// vec1 32 ssa_437 = iadd ssa_421, ssa_436
bb_03	:  PC=0xf80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1519) shl.b32 %ssa_438, %ssa_437, %ssa_25_bits; // vec1 32 ssa_438 = ishl ssa_437, ssa_25
bb_03	:  PC=0xf88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1522) add.s32 %ssa_439, %ssa_438, %ssa_27_bits; // vec1 32 ssa_439 = iadd ssa_438, ssa_27
bb_03	:  PC=0xf90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1525) add.s32 %ssa_440, %ssa_437, %ssa_181_bits; // vec1 32 ssa_440 = iadd ssa_437, ssa_181
bb_03	:  PC=0xf98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1528) xor.b32 %ssa_441, %ssa_439, %ssa_440;// vec1 32 ssa_441 = ixor ssa_439, ssa_440
bb_03	:  PC=0xfa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1531) shr.u32 %ssa_442, %ssa_437, %ssa_23_bits; // vec1 32 ssa_442 = ushr ssa_437, ssa_23
bb_03	:  PC=0xfa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1534) add.s32 %ssa_443, %ssa_442, %ssa_26_bits; // vec1 32 ssa_443 = iadd ssa_442, ssa_26
bb_03	:  PC=0xfb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1537) xor.b32 %ssa_444, %ssa_441, %ssa_443;// vec1 32 ssa_444 = ixor ssa_441, ssa_443
bb_03	:  PC=0xfb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1540) add.s32 %ssa_445, %ssa_429, %ssa_444;// vec1 32 ssa_445 = iadd ssa_429, ssa_444
bb_03	:  PC=0xfc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1543) shl.b32 %ssa_446, %ssa_445, %ssa_25_bits; // vec1 32 ssa_446 = ishl ssa_445, ssa_25
bb_03	:  PC=0xfc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1546) add.s32 %ssa_447, %ssa_446, %ssa_24_bits; // vec1 32 ssa_447 = iadd ssa_446, ssa_24
bb_03	:  PC=0xfd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1549) add.s32 %ssa_448, %ssa_445, %ssa_181_bits; // vec1 32 ssa_448 = iadd ssa_445, ssa_181
bb_03	:  PC=0xfd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1552) xor.b32 %ssa_449, %ssa_447, %ssa_448;// vec1 32 ssa_449 = ixor ssa_447, ssa_448
bb_03	:  PC=0xfe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1555) shr.u32 %ssa_450, %ssa_445, %ssa_23_bits; // vec1 32 ssa_450 = ushr ssa_445, ssa_23
bb_03	:  PC=0xfe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1558) add.s32 %ssa_451, %ssa_450, %ssa_22_bits; // vec1 32 ssa_451 = iadd ssa_450, ssa_22
bb_03	:  PC=0xff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1561) xor.b32 %ssa_452, %ssa_449, %ssa_451;// vec1 32 ssa_452 = ixor ssa_449, ssa_451
bb_03	:  PC=0xff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1564) add.s32 %ssa_453, %ssa_437, %ssa_452;// vec1 32 ssa_453 = iadd ssa_437, ssa_452
bb_03	:  PC=0x1000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1567) shl.b32 %ssa_454, %ssa_453, %ssa_25_bits; // vec1 32 ssa_454 = ishl ssa_453, ssa_25
bb_03	:  PC=0x1008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1570) add.s32 %ssa_455, %ssa_454, %ssa_27_bits; // vec1 32 ssa_455 = iadd ssa_454, ssa_27
bb_03	:  PC=0x1010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1573) add.s32 %ssa_456, %ssa_453, %ssa_198_bits; // vec1 32 ssa_456 = iadd ssa_453, ssa_198
bb_03	:  PC=0x1018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1576) xor.b32 %ssa_457, %ssa_455, %ssa_456;// vec1 32 ssa_457 = ixor ssa_455, ssa_456
bb_03	:  PC=0x1020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1579) shr.u32 %ssa_458, %ssa_453, %ssa_23_bits; // vec1 32 ssa_458 = ushr ssa_453, ssa_23
bb_03	:  PC=0x1028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1582) add.s32 %ssa_459, %ssa_458, %ssa_26_bits; // vec1 32 ssa_459 = iadd ssa_458, ssa_26
bb_03	:  PC=0x1030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1585) xor.b32 %ssa_460, %ssa_457, %ssa_459;// vec1 32 ssa_460 = ixor ssa_457, ssa_459
bb_03	:  PC=0x1038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1588) add.s32 %ssa_461, %ssa_445, %ssa_460;// vec1 32 ssa_461 = iadd ssa_445, ssa_460
bb_03	:  PC=0x1040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1591) shl.b32 %ssa_462, %ssa_461, %ssa_25_bits; // vec1 32 ssa_462 = ishl ssa_461, ssa_25
bb_03	:  PC=0x1048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1594) add.s32 %ssa_463, %ssa_462, %ssa_24_bits; // vec1 32 ssa_463 = iadd ssa_462, ssa_24
bb_03	:  PC=0x1050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1597) add.s32 %ssa_464, %ssa_461, %ssa_198_bits; // vec1 32 ssa_464 = iadd ssa_461, ssa_198
bb_03	:  PC=0x1058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1600) xor.b32 %ssa_465, %ssa_463, %ssa_464;// vec1 32 ssa_465 = ixor ssa_463, ssa_464
bb_03	:  PC=0x1060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1603) shr.u32 %ssa_466, %ssa_461, %ssa_23_bits; // vec1 32 ssa_466 = ushr ssa_461, ssa_23
bb_03	:  PC=0x1068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1606) add.s32 %ssa_467, %ssa_466, %ssa_22_bits; // vec1 32 ssa_467 = iadd ssa_466, ssa_22
bb_03	:  PC=0x1070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1609) xor.b32 %ssa_468, %ssa_465, %ssa_467;// vec1 32 ssa_468 = ixor ssa_465, ssa_467
bb_03	:  PC=0x1078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1612) add.s32 %ssa_469, %ssa_453, %ssa_468;// vec1 32 ssa_469 = iadd ssa_453, ssa_468
bb_03	:  PC=0x1080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1615) shl.b32 %ssa_470, %ssa_469, %ssa_25_bits; // vec1 32 ssa_470 = ishl ssa_469, ssa_25
bb_03	:  PC=0x1088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1618) add.s32 %ssa_471, %ssa_470, %ssa_27_bits; // vec1 32 ssa_471 = iadd ssa_470, ssa_27
bb_03	:  PC=0x1090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1621) add.s32 %ssa_472, %ssa_469, %ssa_215_bits; // vec1 32 ssa_472 = iadd ssa_469, ssa_215
bb_03	:  PC=0x1098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1624) xor.b32 %ssa_473, %ssa_471, %ssa_472;// vec1 32 ssa_473 = ixor ssa_471, ssa_472
bb_03	:  PC=0x10a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1627) shr.u32 %ssa_474, %ssa_469, %ssa_23_bits; // vec1 32 ssa_474 = ushr ssa_469, ssa_23
bb_03	:  PC=0x10a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1630) add.s32 %ssa_475, %ssa_474, %ssa_26_bits; // vec1 32 ssa_475 = iadd ssa_474, ssa_26
bb_03	:  PC=0x10b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1633) xor.b32 %ssa_476, %ssa_473, %ssa_475;// vec1 32 ssa_476 = ixor ssa_473, ssa_475
bb_03	:  PC=0x10b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1636) add.s32 %ssa_477, %ssa_461, %ssa_476;// vec1 32 ssa_477 = iadd ssa_461, ssa_476
bb_03	:  PC=0x10c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1639) shl.b32 %ssa_478, %ssa_477, %ssa_25_bits; // vec1 32 ssa_478 = ishl ssa_477, ssa_25
bb_03	:  PC=0x10c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1642) add.s32 %ssa_479, %ssa_478, %ssa_24_bits; // vec1 32 ssa_479 = iadd ssa_478, ssa_24
bb_03	:  PC=0x10d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1645) add.s32 %ssa_480, %ssa_477, %ssa_215_bits; // vec1 32 ssa_480 = iadd ssa_477, ssa_215
bb_03	:  PC=0x10d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1648) xor.b32 %ssa_481, %ssa_479, %ssa_480;// vec1 32 ssa_481 = ixor ssa_479, ssa_480
bb_03	:  PC=0x10e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1651) shr.u32 %ssa_482, %ssa_477, %ssa_23_bits; // vec1 32 ssa_482 = ushr ssa_477, ssa_23
bb_03	:  PC=0x10e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1654) add.s32 %ssa_483, %ssa_482, %ssa_22_bits; // vec1 32 ssa_483 = iadd ssa_482, ssa_22
bb_03	:  PC=0x10f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1657) xor.b32 %ssa_484, %ssa_481, %ssa_483;// vec1 32 ssa_484 = ixor ssa_481, ssa_483
bb_03	:  PC=0x10f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1660) add.s32 %ssa_485, %ssa_469, %ssa_484;// vec1 32 ssa_485 = iadd ssa_469, ssa_484
bb_03	:  PC=0x1100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1663) shl.b32 %ssa_486, %ssa_485, %ssa_25_bits; // vec1 32 ssa_486 = ishl ssa_485, ssa_25
bb_03	:  PC=0x1108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1666) add.s32 %ssa_487, %ssa_486, %ssa_27_bits; // vec1 32 ssa_487 = iadd ssa_486, ssa_27
bb_03	:  PC=0x1110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1669) add.s32 %ssa_488, %ssa_485, %ssa_232_bits; // vec1 32 ssa_488 = iadd ssa_485, ssa_232
bb_03	:  PC=0x1118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1672) xor.b32 %ssa_489, %ssa_487, %ssa_488;// vec1 32 ssa_489 = ixor ssa_487, ssa_488
bb_03	:  PC=0x1120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1675) shr.u32 %ssa_490, %ssa_485, %ssa_23_bits; // vec1 32 ssa_490 = ushr ssa_485, ssa_23
bb_03	:  PC=0x1128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1678) add.s32 %ssa_491, %ssa_490, %ssa_26_bits; // vec1 32 ssa_491 = iadd ssa_490, ssa_26
bb_03	:  PC=0x1130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1681) xor.b32 %ssa_492, %ssa_489, %ssa_491;// vec1 32 ssa_492 = ixor ssa_489, ssa_491
bb_03	:  PC=0x1138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1684) add.s32 %ssa_493, %ssa_477, %ssa_492;// vec1 32 ssa_493 = iadd ssa_477, ssa_492
bb_03	:  PC=0x1140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1687) shl.b32 %ssa_494, %ssa_493, %ssa_25_bits; // vec1 32 ssa_494 = ishl ssa_493, ssa_25
bb_03	:  PC=0x1148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1690) add.s32 %ssa_495, %ssa_494, %ssa_24_bits; // vec1 32 ssa_495 = iadd ssa_494, ssa_24
bb_03	:  PC=0x1150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1693) add.s32 %ssa_496, %ssa_493, %ssa_232_bits; // vec1 32 ssa_496 = iadd ssa_493, ssa_232
bb_03	:  PC=0x1158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1696) xor.b32 %ssa_497, %ssa_495, %ssa_496;// vec1 32 ssa_497 = ixor ssa_495, ssa_496
bb_03	:  PC=0x1160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1699) shr.u32 %ssa_498, %ssa_493, %ssa_23_bits; // vec1 32 ssa_498 = ushr ssa_493, ssa_23
bb_03	:  PC=0x1168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1702) add.s32 %ssa_499, %ssa_498, %ssa_22_bits; // vec1 32 ssa_499 = iadd ssa_498, ssa_22
bb_03	:  PC=0x1170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1705) xor.b32 %ssa_500, %ssa_497, %ssa_499;// vec1 32 ssa_500 = ixor ssa_497, ssa_499
bb_03	:  PC=0x1178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1708) add.s32 %ssa_501, %ssa_485, %ssa_500;// vec1 32 ssa_501 = iadd ssa_485, ssa_500
bb_03	:  PC=0x1180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1711) shl.b32 %ssa_502, %ssa_501, %ssa_25_bits; // vec1 32 ssa_502 = ishl ssa_501, ssa_25
bb_03	:  PC=0x1188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1714) add.s32 %ssa_503, %ssa_502, %ssa_27_bits; // vec1 32 ssa_503 = iadd ssa_502, ssa_27
bb_03	:  PC=0x1190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1717) add.s32 %ssa_504, %ssa_501, %ssa_249_bits; // vec1 32 ssa_504 = iadd ssa_501, ssa_249
bb_03	:  PC=0x1198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1720) xor.b32 %ssa_505, %ssa_503, %ssa_504;// vec1 32 ssa_505 = ixor ssa_503, ssa_504
bb_03	:  PC=0x11a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1723) shr.u32 %ssa_506, %ssa_501, %ssa_23_bits; // vec1 32 ssa_506 = ushr ssa_501, ssa_23
bb_03	:  PC=0x11a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1726) add.s32 %ssa_507, %ssa_506, %ssa_26_bits; // vec1 32 ssa_507 = iadd ssa_506, ssa_26
bb_03	:  PC=0x11b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1729) xor.b32 %ssa_508, %ssa_505, %ssa_507;// vec1 32 ssa_508 = ixor ssa_505, ssa_507
bb_03	:  PC=0x11b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1732) add.s32 %ssa_509, %ssa_493, %ssa_508;// vec1 32 ssa_509 = iadd ssa_493, ssa_508
bb_03	:  PC=0x11c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1735) shl.b32 %ssa_510, %ssa_509, %ssa_25_bits; // vec1 32 ssa_510 = ishl ssa_509, ssa_25
bb_03	:  PC=0x11c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1738) add.s32 %ssa_511, %ssa_510, %ssa_24_bits; // vec1 32 ssa_511 = iadd ssa_510, ssa_24
bb_03	:  PC=0x11d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1741) add.s32 %ssa_512, %ssa_509, %ssa_249_bits; // vec1 32 ssa_512 = iadd ssa_509, ssa_249
bb_03	:  PC=0x11d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1744) xor.b32 %ssa_513, %ssa_511, %ssa_512;// vec1 32 ssa_513 = ixor ssa_511, ssa_512
bb_03	:  PC=0x11e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1747) shr.u32 %ssa_514, %ssa_509, %ssa_23_bits; // vec1 32 ssa_514 = ushr ssa_509, ssa_23
bb_03	:  PC=0x11e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1750) add.s32 %ssa_515, %ssa_514, %ssa_22_bits; // vec1 32 ssa_515 = iadd ssa_514, ssa_22
bb_03	:  PC=0x11f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1753) xor.b32 %ssa_516, %ssa_513, %ssa_515;// vec1 32 ssa_516 = ixor ssa_513, ssa_515
bb_03	:  PC=0x11f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1756) add.s32 %ssa_517, %ssa_501, %ssa_516;// vec1 32 ssa_517 = iadd ssa_501, ssa_516
bb_03	:  PC=0x1200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1759) shl.b32 %ssa_518, %ssa_517, %ssa_25_bits; // vec1 32 ssa_518 = ishl ssa_517, ssa_25
bb_03	:  PC=0x1208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1762) add.s32 %ssa_519, %ssa_518, %ssa_27_bits; // vec1 32 ssa_519 = iadd ssa_518, ssa_27
bb_03	:  PC=0x1210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1765) add.s32 %ssa_520, %ssa_517, %ssa_266_bits; // vec1 32 ssa_520 = iadd ssa_517, ssa_266
bb_03	:  PC=0x1218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1768) xor.b32 %ssa_521, %ssa_519, %ssa_520;// vec1 32 ssa_521 = ixor ssa_519, ssa_520
bb_03	:  PC=0x1220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1771) shr.u32 %ssa_522, %ssa_517, %ssa_23_bits; // vec1 32 ssa_522 = ushr ssa_517, ssa_23
bb_03	:  PC=0x1228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1774) add.s32 %ssa_523, %ssa_522, %ssa_26_bits; // vec1 32 ssa_523 = iadd ssa_522, ssa_26
bb_03	:  PC=0x1230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1777) xor.b32 %ssa_524, %ssa_521, %ssa_523;// vec1 32 ssa_524 = ixor ssa_521, ssa_523
bb_03	:  PC=0x1238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1780) add.s32 %ssa_525, %ssa_509, %ssa_524;// vec1 32 ssa_525 = iadd ssa_509, ssa_524
bb_03	:  PC=0x1240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1783) shl.b32 %ssa_526, %ssa_525, %ssa_25_bits; // vec1 32 ssa_526 = ishl ssa_525, ssa_25
bb_03	:  PC=0x1248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1786) add.s32 %ssa_527, %ssa_526, %ssa_24_bits; // vec1 32 ssa_527 = iadd ssa_526, ssa_24
bb_03	:  PC=0x1250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1789) add.s32 %ssa_528, %ssa_525, %ssa_266_bits; // vec1 32 ssa_528 = iadd ssa_525, ssa_266
bb_03	:  PC=0x1258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1792) xor.b32 %ssa_529, %ssa_527, %ssa_528;// vec1 32 ssa_529 = ixor ssa_527, ssa_528
bb_03	:  PC=0x1260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1795) shr.u32 %ssa_530, %ssa_525, %ssa_23_bits; // vec1 32 ssa_530 = ushr ssa_525, ssa_23
bb_03	:  PC=0x1268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1798) add.s32 %ssa_531, %ssa_530, %ssa_22_bits; // vec1 32 ssa_531 = iadd ssa_530, ssa_22
bb_03	:  PC=0x1270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1801) xor.b32 %ssa_532, %ssa_529, %ssa_531;// vec1 32 ssa_532 = ixor ssa_529, ssa_531
bb_03	:  PC=0x1278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1804) add.s32 %ssa_533, %ssa_517, %ssa_532;// vec1 32 ssa_533 = iadd ssa_517, ssa_532
bb_03	:  PC=0x1280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1807) shl.b32 %ssa_534, %ssa_533, %ssa_25_bits; // vec1 32 ssa_534 = ishl ssa_533, ssa_25
bb_03	:  PC=0x1288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1810) add.s32 %ssa_535, %ssa_534, %ssa_27_bits; // vec1 32 ssa_535 = iadd ssa_534, ssa_27
bb_03	:  PC=0x1290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1813) add.s32 %ssa_536, %ssa_533, %ssa_283_bits; // vec1 32 ssa_536 = iadd ssa_533, ssa_283
bb_03	:  PC=0x1298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1816) xor.b32 %ssa_537, %ssa_535, %ssa_536;// vec1 32 ssa_537 = ixor ssa_535, ssa_536
bb_03	:  PC=0x12a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1819) shr.u32 %ssa_538, %ssa_533, %ssa_23_bits; // vec1 32 ssa_538 = ushr ssa_533, ssa_23
bb_03	:  PC=0x12a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1822) add.s32 %ssa_539, %ssa_538, %ssa_26_bits; // vec1 32 ssa_539 = iadd ssa_538, ssa_26
bb_03	:  PC=0x12b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1825) xor.b32 %ssa_540, %ssa_537, %ssa_539;// vec1 32 ssa_540 = ixor ssa_537, ssa_539
bb_03	:  PC=0x12b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1828) add.s32 %ssa_541, %ssa_525, %ssa_540;// vec1 32 ssa_541 = iadd ssa_525, ssa_540
bb_03	:  PC=0x12c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1831) mov.b64 %ssa_542, %Ray; // vec1 32 ssa_542 = deref_var &Ray (function_temp RayPayload) 
bb_03	:  PC=0x12c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1834) add.u64 %ssa_543, %ssa_542, 44; // vec1 32 ssa_543 = deref_struct &ssa_542->RandomSeed (function_temp uint) /* &Ray.RandomSeed */
bb_03	:  PC=0x12d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1836) st.global.s32 [%ssa_543], %ssa_541; // intrinsic store_deref (%ssa_543, %ssa_541) (1, 0) /* wrmask=x */ /* access=0 */
bb_03	:  PC=0x12d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1839) mov.f32 %ssa_832, 0F00000000; // vec1 32 ssa_832 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x12e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1841) mov.b32 %ssa_832_bits, 0F00000000;
bb_03	:  PC=0x12e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1844) mov.f32 %ssa_833, 0F00000000; // vec1 32 ssa_833 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x12f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1846) mov.b32 %ssa_833_bits, 0F00000000;
bb_03	:  PC=0x12f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1849) mov.f32 %ssa_834, 0F00000000; // vec1 32 ssa_834 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x1300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1851) mov.b32 %ssa_834_bits, 0F00000000;
bb_03	:  PC=0x1308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1853) mov.s32 %ssa_544, %ssa_20; // vec1 32 ssa_544 = phi block_0: ssa_20, block_20: ssa_563
bb_03	:  PC=0x1310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1854) mov.f32 %ssa_762, %ssa_832; // vec1 32 ssa_762 = phi block_0: ssa_832, block_20: ssa_761
bb_03	:  PC=0x1318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1855) mov.f32 %ssa_765, %ssa_833; // vec1 32 ssa_765 = phi block_0: ssa_833, block_20: ssa_764
bb_03	:  PC=0x1320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1856) mov.f32 %ssa_768, %ssa_834; // vec1 32 ssa_768 = phi block_0: ssa_834, block_20: ssa_767
bb_03	:  PC=0x1328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1857) mov.s32 %ssa_546, %ssa_2_bits; // vec1 32 ssa_546 = phi block_0: ssa_2, block_20: ssa_737

bb_04	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1868) .reg .b32 %ssa_769_0;
bb_04	:  PC=0x1330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1872) mov.b32 %ssa_769_0, %ssa_762;
bb_04	:  PC=0x1338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1873) mov.b32 %ssa_769_1, %ssa_765;
bb_04	:  PC=0x1340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1874) mov.b32 %ssa_769_2, %ssa_768; // vec3 32 ssa_769 = vec3 ssa_762, ssa_765, ssa_768
bb_04	:  PC=0x1348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1877) add.u64 %ssa_547, %ssa_18, 288; // vec2 32 ssa_547 = deref_struct &ssa_18->NumberOfSamples (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.NumberOfSamples */
bb_04	:  PC=0x1350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1880) ld.global.u32 %ssa_548, [%ssa_547]; // vec1 32 ssa_548 = intrinsic load_deref (%ssa_547) (16) /* access=16 */
bb_04	:  PC=0x1358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1883) setp.ge.u32 %ssa_549, %ssa_546, %ssa_548;// vec1  1 ssa_549 = uge ssa_546, ssa_548
bb_04	:  PC=0x1360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1888) @!%ssa_549 bra else_0;

bb_05	:  PC=0x1368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1892) bra loop_0_exit;

bb_06	:  PC=0x1370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1896) bra end_if_0;

bb_07	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1903) end_if_0:
bb_07	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1906) .reg .f32 %ssa_550;
bb_07	:  PC=0x1378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1907) cvt.rn.f32.u32 %ssa_550, %ssa_21_0; // vec1 32 ssa_550 = u2f32 ssa_21.x
bb_07	:  PC=0x1380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1910) mov.f32 %ssa_551, 0F00ffffff; // vec1 32 ssa_551 = load_const (0x00ffffff /* 0.000000 */)
bb_07	:  PC=0x1388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1912) mov.b32 %ssa_551_bits, 0F00ffffff;
bb_07	:  PC=0x1390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1915) mov.f32 %ssa_552, 0F3c6ef35f; // vec1 32 ssa_552 = load_const (0x3c6ef35f /* 0.014584 */)
bb_07	:  PC=0x1398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1917) mov.b32 %ssa_552_bits, 0F3c6ef35f;
bb_07	:  PC=0x13a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1920) mov.f32 %ssa_553, 0F0019660d; // vec1 32 ssa_553 = load_const (0x0019660d /* 0.000000 */)
bb_07	:  PC=0x13a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1922) mov.b32 %ssa_553_bits, 0F0019660d;
bb_07	:  PC=0x13b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1925) mul.lo.s32 %ssa_554, %ssa_553_bits, %ssa_544; // vec1 32 ssa_554 = imul ssa_553, ssa_544
bb_07	:  PC=0x13b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1928) add.s32 %ssa_555, %ssa_554, %ssa_552_bits; // vec1 32 ssa_555 = iadd ssa_554, ssa_552
bb_07	:  PC=0x13c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1931) and.b32 %ssa_556, %ssa_555, %ssa_551;// vec1 32 ssa_556 = iand ssa_555, ssa_551
bb_07	:  PC=0x13c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1934) cvt.rn.f32.u32 %ssa_557, %ssa_556;// vec1 32 ssa_557 = u2f32 ssa_556
bb_07	:  PC=0x13d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1937) mov.f32 %ssa_558, 0F33800000; // vec1 32 ssa_558 = load_const (0x33800000 /* 0.000000 */)
bb_07	:  PC=0x13d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1939) mov.b32 %ssa_558_bits, 0F33800000;
bb_07	:  PC=0x13e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1942) mul.f32 %ssa_559, %ssa_557, %ssa_558;// vec1 32 ssa_559 = fmul ssa_557, ssa_558
bb_07	:  PC=0x13e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1945) add.f32 %ssa_560, %ssa_550, %ssa_559;// vec1 32 ssa_560 = fadd ssa_550, ssa_559
bb_07	:  PC=0x13f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1948) cvt.rn.f32.u32 %ssa_561, %ssa_21_1; // vec1 32 ssa_561 = u2f32 ssa_21.y
bb_07	:  PC=0x13f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1951) mul.lo.s32 %ssa_562, %ssa_553_bits, %ssa_555; // vec1 32 ssa_562 = imul ssa_553, ssa_555
bb_07	:  PC=0x1400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1954) add.s32 %ssa_563, %ssa_562, %ssa_552_bits; // vec1 32 ssa_563 = iadd ssa_562, ssa_552
bb_07	:  PC=0x1408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1957) and.b32 %ssa_564, %ssa_563, %ssa_551;// vec1 32 ssa_564 = iand ssa_563, ssa_551
bb_07	:  PC=0x1410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1960) cvt.rn.f32.u32 %ssa_565, %ssa_564;// vec1 32 ssa_565 = u2f32 ssa_564
bb_07	:  PC=0x1418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1963) mul.f32 %ssa_566, %ssa_565, %ssa_558;// vec1 32 ssa_566 = fmul ssa_565, ssa_558
bb_07	:  PC=0x1420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1966) add.f32 %ssa_567, %ssa_561, %ssa_566;// vec1 32 ssa_567 = fadd ssa_561, ssa_566
bb_07	:  PC=0x1428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1972) load_ray_launch_size %ssa_568_0, %ssa_568_1, %ssa_568_2; // vec3 32 ssa_568 = intrinsic load_ray_launch_size () ()
bb_07	:  PC=0x1430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1975) cvt.rn.f32.u32 %ssa_569, %ssa_568_0; // vec1 32 ssa_569 = u2f32 ssa_568.x
bb_07	:  PC=0x1438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1978) cvt.rn.f32.u32 %ssa_570, %ssa_568_1; // vec1 32 ssa_570 = u2f32 ssa_568.y
bb_07	:  PC=0x1440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1981) rcp.approx.f32 %ssa_571, %ssa_569;// vec1 32 ssa_571 = frcp ssa_569
bb_07	:  PC=0x1448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1984) rcp.approx.f32 %ssa_572, %ssa_570;// vec1 32 ssa_572 = frcp ssa_570
bb_07	:  PC=0x1450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1987) mul.f32 %ssa_573, %ssa_560, %ssa_14;// vec1 32 ssa_573 = fmul ssa_560, ssa_14
bb_07	:  PC=0x1458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1990) mul.f32 %ssa_574, %ssa_567, %ssa_14;// vec1 32 ssa_574 = fmul ssa_567, ssa_14
bb_07	:  PC=0x1460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1993) mul.f32 %ssa_575, %ssa_573, %ssa_571;// vec1 32 ssa_575 = fmul ssa_573, ssa_571
bb_07	:  PC=0x1468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1996) mul.f32 %ssa_576, %ssa_574, %ssa_572;// vec1 32 ssa_576 = fmul ssa_574, ssa_572
bb_07	:  PC=0x1470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2000) mov.f32 %ssa_577_0, 0Fbf800000;
bb_07	:  PC=0x1478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2001) mov.f32 %ssa_577_1, 0Fbf800000;
bb_07	:  PC=0x1480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2005) add.f32 %ssa_578, %ssa_575, %ssa_577_0; // vec1 32 ssa_578 = fadd ssa_575, ssa_577.x
bb_07	:  PC=0x1488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2008) add.f32 %ssa_579, %ssa_576, %ssa_577_1; // vec1 32 ssa_579 = fadd ssa_576, ssa_577.y
bb_07	:  PC=0x1490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2011) add.u64 %ssa_580, %ssa_18, 272; // vec2 32 ssa_580 = deref_struct &ssa_18->Aperture (ubo float) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.Aperture */
bb_07	:  PC=0x1498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2014) ld.global.f32 %ssa_581, [%ssa_580]; // vec1 32 ssa_581 = intrinsic load_deref (%ssa_580) (16) /* access=16 */
bb_07	:  PC=0x14a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2017) mov.f32 %ssa_582, 0F3f000000; // vec1 32 ssa_582 = load_const (0x3f000000 /* 0.500000 */)
bb_07	:  PC=0x14a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2019) mov.b32 %ssa_582_bits, 0F3f000000;
bb_07	:  PC=0x14b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2022) mul.f32 %ssa_583, %ssa_581, %ssa_582;// vec1 32 ssa_583 = fmul ssa_581, ssa_582
bb_07	:  PC=0x14b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2025) ld.global.u32 %ssa_584, [%ssa_543]; // vec1 32 ssa_584 = intrinsic load_deref (%ssa_543) (0) /* access=0 */
bb_07	:  PC=0x14c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2028) mov.f32 %ssa_585, 0F3f800000; // vec1 32 ssa_585 = load_const (0x3f800000 /* 1.000000 */)
bb_07	:  PC=0x14c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2030) mov.b32 %ssa_585_bits, 0F3f800000;
bb_07	:  PC=0x14d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2032) mov.s32 %ssa_586, %ssa_584; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592

bb_08	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2039) .reg .s32 %ssa_587;
bb_08	:  PC=0x14d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2040) mul.lo.s32 %ssa_587, %ssa_553_bits, %ssa_586; // vec1 32 ssa_587 = imul ssa_553, ssa_586
bb_08	:  PC=0x14e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2043) add.s32 %ssa_588, %ssa_587, %ssa_552_bits; // vec1 32 ssa_588 = iadd ssa_587, ssa_552
bb_08	:  PC=0x14e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2046) and.b32 %ssa_589, %ssa_588, %ssa_551;// vec1 32 ssa_589 = iand ssa_588, ssa_551
bb_08	:  PC=0x14f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2049) cvt.rn.f32.u32 %ssa_590, %ssa_589;// vec1 32 ssa_590 = u2f32 ssa_589
bb_08	:  PC=0x14f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2052) mul.lo.s32 %ssa_591, %ssa_553_bits, %ssa_588; // vec1 32 ssa_591 = imul ssa_553, ssa_588
bb_08	:  PC=0x1500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2055) add.s32 %ssa_592, %ssa_591, %ssa_552_bits; // vec1 32 ssa_592 = iadd ssa_591, ssa_552
bb_08	:  PC=0x1508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2058) and.b32 %ssa_593, %ssa_592, %ssa_551;// vec1 32 ssa_593 = iand ssa_592, ssa_551
bb_08	:  PC=0x1510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2061) cvt.rn.f32.u32 %ssa_594, %ssa_593;// vec1 32 ssa_594 = u2f32 ssa_593
bb_08	:  PC=0x1518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2064) mov.f32 %ssa_595, 0F34000000; // vec1 32 ssa_595 = load_const (0x34000000 /* 0.000000 */)
bb_08	:  PC=0x1520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2066) mov.b32 %ssa_595_bits, 0F34000000;
bb_08	:  PC=0x1528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2069) mul.f32 %ssa_596, %ssa_595, %ssa_590;// vec1 32 ssa_596 = fmul ssa_595, ssa_590
bb_08	:  PC=0x1530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2072) mul.f32 %ssa_597, %ssa_595, %ssa_594;// vec1 32 ssa_597 = fmul ssa_595, ssa_594
bb_08	:  PC=0x1538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2075) add.f32 %ssa_598, %ssa_596, %ssa_577_0; // vec1 32 ssa_598 = fadd ssa_596, ssa_577.x
bb_08	:  PC=0x1540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2078) add.f32 %ssa_599, %ssa_597, %ssa_577_1; // vec1 32 ssa_599 = fadd ssa_597, ssa_577.y
bb_08	:  PC=0x1548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2081) mul.f32 %ssa_600, %ssa_598, %ssa_598;// vec1 32 ssa_600 = fmul ssa_598, ssa_598
bb_08	:  PC=0x1550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2084) mul.f32 %ssa_601, %ssa_599, %ssa_599;// vec1 32 ssa_601 = fmul ssa_599, ssa_599
bb_08	:  PC=0x1558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2087) add.f32 %ssa_602, %ssa_600, %ssa_601;// vec1 32 ssa_602 = fadd ssa_600, ssa_601
bb_08	:  PC=0x1560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2090) setp.lt.f32 %ssa_603, %ssa_602, %ssa_585;// vec1  1 ssa_603 = flt! ssa_602, ssa_585
bb_08	:  PC=0x1568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2095) @!%ssa_603 bra else_1;

bb_09	:  PC=0x1570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2099) bra loop_1_exit;

bb_10	:  PC=0x1578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2103) bra end_if_1;

bb_11	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2110) end_if_1:
bb_11	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2113) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592
bb_11	:  PC=0x1580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2113) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592
bb_11	:  PC=0x1588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2116) bra loop_1;

bb_12	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2121) st.global.s32 [%ssa_543], %ssa_592; // intrinsic store_deref (%ssa_543, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
bb_12	:  PC=0x1590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2121) st.global.s32 [%ssa_543], %ssa_592; // intrinsic store_deref (%ssa_543, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
bb_12	:  PC=0x1598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2124) mul.f32 %ssa_604, %ssa_598, %ssa_583;// vec1 32 ssa_604 = fmul ssa_598, ssa_583
bb_12	:  PC=0x15a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2127) mul.f32 %ssa_605, %ssa_599, %ssa_583;// vec1 32 ssa_605 = fmul ssa_599, ssa_583
bb_12	:  PC=0x15a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2130) add.u64 %ssa_606, %ssa_18, 128; // vec2 32 ssa_606 = deref_struct &ssa_18->ModelViewInverse (ubo mat4x16a0B) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse */
bb_12	:  PC=0x15b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2133) add.u64 %ssa_607, %ssa_606, 0; // vec2 32 ssa_607 = deref_array &(*ssa_606)[0] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[0] */
bb_12	:  PC=0x15b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2139) ld.global.f32 %ssa_608_0, [%ssa_607 + 0];
bb_12	:  PC=0x15c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2140) ld.global.f32 %ssa_608_1, [%ssa_607 + 4];
bb_12	:  PC=0x15c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2141) ld.global.f32 %ssa_608_2, [%ssa_607 + 8];
bb_12	:  PC=0x15d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2142) ld.global.f32 %ssa_608_3, [%ssa_607 + 12];
bb_12	:  PC=0x15d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2147) add.u64 %ssa_609, %ssa_606, 16; // vec2 32 ssa_609 = deref_array &(*ssa_606)[1] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[1] */
bb_12	:  PC=0x15e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2153) ld.global.f32 %ssa_610_0, [%ssa_609 + 0];
bb_12	:  PC=0x15e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2154) ld.global.f32 %ssa_610_1, [%ssa_609 + 4];
bb_12	:  PC=0x15f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2155) ld.global.f32 %ssa_610_2, [%ssa_609 + 8];
bb_12	:  PC=0x15f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2156) ld.global.f32 %ssa_610_3, [%ssa_609 + 12];
bb_12	:  PC=0x1600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2161) mov.f32 %ssa_611, 0F00000003; // vec1 32 ssa_611 = load_const (0x00000003 /* 0.000000 */)
bb_12	:  PC=0x1608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2163) mov.b32 %ssa_611_bits, 0F00000003;
bb_12	:  PC=0x1610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2166) add.u64 %ssa_612, %ssa_606, 48; // vec2 32 ssa_612 = deref_array &(*ssa_606)[3] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[3] */
bb_12	:  PC=0x1618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2172) ld.global.f32 %ssa_613_0, [%ssa_612 + 0];
bb_12	:  PC=0x1620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2173) ld.global.f32 %ssa_613_1, [%ssa_612 + 4];
bb_12	:  PC=0x1628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2174) ld.global.f32 %ssa_613_2, [%ssa_612 + 8];
bb_12	:  PC=0x1630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2175) ld.global.f32 %ssa_613_3, [%ssa_612 + 12];
bb_12	:  PC=0x1638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2180) mul.f32 %ssa_614, %ssa_610_0, %ssa_605; // vec1 32 ssa_614 = fmul ssa_610.x, ssa_605
bb_12	:  PC=0x1640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2183) mul.f32 %ssa_615, %ssa_610_1, %ssa_605; // vec1 32 ssa_615 = fmul ssa_610.y, ssa_605
bb_12	:  PC=0x1648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2186) mul.f32 %ssa_616, %ssa_610_2, %ssa_605; // vec1 32 ssa_616 = fmul ssa_610.z, ssa_605
bb_12	:  PC=0x1650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2189) mul.f32 %ssa_617, %ssa_610_3, %ssa_605; // vec1 32 ssa_617 = fmul ssa_610.w, ssa_605
bb_12	:  PC=0x1658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2192) add.f32 %ssa_618, %ssa_614, %ssa_613_0; // vec1 32 ssa_618 = fadd ssa_614, ssa_613.x
bb_12	:  PC=0x1660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2195) add.f32 %ssa_619, %ssa_615, %ssa_613_1; // vec1 32 ssa_619 = fadd ssa_615, ssa_613.y
bb_12	:  PC=0x1668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2198) add.f32 %ssa_620, %ssa_616, %ssa_613_2; // vec1 32 ssa_620 = fadd ssa_616, ssa_613.z
bb_12	:  PC=0x1670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2201) add.f32 %ssa_621, %ssa_617, %ssa_613_3; // vec1 32 ssa_621 = fadd ssa_617, ssa_613.w
bb_12	:  PC=0x1678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2204) mul.f32 %ssa_622, %ssa_608_0, %ssa_604; // vec1 32 ssa_622 = fmul ssa_608.x, ssa_604
bb_12	:  PC=0x1680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2207) mul.f32 %ssa_623, %ssa_608_1, %ssa_604; // vec1 32 ssa_623 = fmul ssa_608.y, ssa_604
bb_12	:  PC=0x1688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2210) mul.f32 %ssa_624, %ssa_608_2, %ssa_604; // vec1 32 ssa_624 = fmul ssa_608.z, ssa_604
bb_12	:  PC=0x1690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2213) mul.f32 %ssa_625, %ssa_608_3, %ssa_604; // vec1 32 ssa_625 = fmul ssa_608.w, ssa_604
bb_12	:  PC=0x1698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2216) add.f32 %ssa_626, %ssa_622, %ssa_618;// vec1 32 ssa_626 = fadd ssa_622, ssa_618
bb_12	:  PC=0x16a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2219) add.f32 %ssa_627, %ssa_623, %ssa_619;// vec1 32 ssa_627 = fadd ssa_623, ssa_619
bb_12	:  PC=0x16a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2222) add.f32 %ssa_628, %ssa_624, %ssa_620;// vec1 32 ssa_628 = fadd ssa_624, ssa_620
bb_12	:  PC=0x16b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2225) add.f32 %ssa_629, %ssa_625, %ssa_621;// vec1 32 ssa_629 = fadd ssa_625, ssa_621
bb_12	:  PC=0x16b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2231) mov.f32 %ssa_630_0, %ssa_626;
bb_12	:  PC=0x16c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2232) mov.f32 %ssa_630_1, %ssa_627;
bb_12	:  PC=0x16c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2233) mov.f32 %ssa_630_2, %ssa_628;
bb_12	:  PC=0x16d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2234) mov.f32 %ssa_630_3, %ssa_629; // vec4 32 ssa_630 = vec4 ssa_626, ssa_627, ssa_628, ssa_629
bb_12	:  PC=0x16d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2237) add.u64 %ssa_631, %ssa_18, 192; // vec2 32 ssa_631 = deref_struct &ssa_18->ProjectionInverse (ubo mat4x16a0B) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse */
bb_12	:  PC=0x16e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2240) add.u64 %ssa_632, %ssa_631, 0; // vec2 32 ssa_632 = deref_array &(*ssa_631)[0] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[0] */
bb_12	:  PC=0x16e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2246) ld.global.f32 %ssa_633_0, [%ssa_632 + 0];
bb_12	:  PC=0x16f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2247) ld.global.f32 %ssa_633_1, [%ssa_632 + 4];
bb_12	:  PC=0x16f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2248) ld.global.f32 %ssa_633_2, [%ssa_632 + 8];
bb_12	:  PC=0x1700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2249) ld.global.f32 %ssa_633_3, [%ssa_632 + 12];
bb_12	:  PC=0x1708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2254) add.u64 %ssa_634, %ssa_631, 16; // vec2 32 ssa_634 = deref_array &(*ssa_631)[1] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[1] */
bb_12	:  PC=0x1710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2260) ld.global.f32 %ssa_635_0, [%ssa_634 + 0];
bb_12	:  PC=0x1718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2261) ld.global.f32 %ssa_635_1, [%ssa_634 + 4];
bb_12	:  PC=0x1720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2262) ld.global.f32 %ssa_635_2, [%ssa_634 + 8];
bb_12	:  PC=0x1728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2263) ld.global.f32 %ssa_635_3, [%ssa_634 + 12];
bb_12	:  PC=0x1730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2268) mov.f32 %ssa_636, 0F00000002; // vec1 32 ssa_636 = load_const (0x00000002 /* 0.000000 */)
bb_12	:  PC=0x1738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2270) mov.b32 %ssa_636_bits, 0F00000002;
bb_12	:  PC=0x1740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2273) add.u64 %ssa_637, %ssa_631, 32; // vec2 32 ssa_637 = deref_array &(*ssa_631)[2] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[2] */
bb_12	:  PC=0x1748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2279) ld.global.f32 %ssa_638_0, [%ssa_637 + 0];
bb_12	:  PC=0x1750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2280) ld.global.f32 %ssa_638_1, [%ssa_637 + 4];
bb_12	:  PC=0x1758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2281) ld.global.f32 %ssa_638_2, [%ssa_637 + 8];
bb_12	:  PC=0x1760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2282) ld.global.f32 %ssa_638_3, [%ssa_637 + 12];
bb_12	:  PC=0x1768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2287) add.u64 %ssa_639, %ssa_631, 48; // vec2 32 ssa_639 = deref_array &(*ssa_631)[3] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ProjectionInverse[3] */
bb_12	:  PC=0x1770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2293) ld.global.f32 %ssa_640_0, [%ssa_639 + 0];
bb_12	:  PC=0x1778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2294) ld.global.f32 %ssa_640_1, [%ssa_639 + 4];
bb_12	:  PC=0x1780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2295) ld.global.f32 %ssa_640_2, [%ssa_639 + 8];
bb_12	:  PC=0x1788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2296) ld.global.f32 %ssa_640_3, [%ssa_639 + 12];
bb_12	:  PC=0x1790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2301) add.f32 %ssa_641, %ssa_638_0, %ssa_640_0; // vec1 32 ssa_641 = fadd ssa_638.x, ssa_640.x
bb_12	:  PC=0x1798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2304) add.f32 %ssa_642, %ssa_638_1, %ssa_640_1; // vec1 32 ssa_642 = fadd ssa_638.y, ssa_640.y
bb_12	:  PC=0x17a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2307) add.f32 %ssa_643, %ssa_638_2, %ssa_640_2; // vec1 32 ssa_643 = fadd ssa_638.z, ssa_640.z
bb_12	:  PC=0x17a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2310) mul.f32 %ssa_644, %ssa_635_0, %ssa_579; // vec1 32 ssa_644 = fmul ssa_635.x, ssa_579
bb_12	:  PC=0x17b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2313) mul.f32 %ssa_645, %ssa_635_1, %ssa_579; // vec1 32 ssa_645 = fmul ssa_635.y, ssa_579
bb_12	:  PC=0x17b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2316) mul.f32 %ssa_646, %ssa_635_2, %ssa_579; // vec1 32 ssa_646 = fmul ssa_635.z, ssa_579
bb_12	:  PC=0x17c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2319) add.f32 %ssa_647, %ssa_644, %ssa_641;// vec1 32 ssa_647 = fadd ssa_644, ssa_641
bb_12	:  PC=0x17c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2322) add.f32 %ssa_648, %ssa_645, %ssa_642;// vec1 32 ssa_648 = fadd ssa_645, ssa_642
bb_12	:  PC=0x17d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2325) add.f32 %ssa_649, %ssa_646, %ssa_643;// vec1 32 ssa_649 = fadd ssa_646, ssa_643
bb_12	:  PC=0x17d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2328) mul.f32 %ssa_650, %ssa_633_0, %ssa_578; // vec1 32 ssa_650 = fmul ssa_633.x, ssa_578
bb_12	:  PC=0x17e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2331) mul.f32 %ssa_651, %ssa_633_1, %ssa_578; // vec1 32 ssa_651 = fmul ssa_633.y, ssa_578
bb_12	:  PC=0x17e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2334) mul.f32 %ssa_652, %ssa_633_2, %ssa_578; // vec1 32 ssa_652 = fmul ssa_633.z, ssa_578
bb_12	:  PC=0x17f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2337) add.f32 %ssa_653, %ssa_650, %ssa_647;// vec1 32 ssa_653 = fadd ssa_650, ssa_647
bb_12	:  PC=0x17f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2340) add.f32 %ssa_654, %ssa_651, %ssa_648;// vec1 32 ssa_654 = fadd ssa_651, ssa_648
bb_12	:  PC=0x1800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2343) add.f32 %ssa_655, %ssa_652, %ssa_649;// vec1 32 ssa_655 = fadd ssa_652, ssa_649
bb_12	:  PC=0x1808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2346) add.u64 %ssa_656, %ssa_606, 32; // vec2 32 ssa_656 = deref_array &(*ssa_606)[2] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.ModelViewInverse[2] */
bb_12	:  PC=0x1810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2352) ld.global.f32 %ssa_657_0, [%ssa_656 + 0];
bb_12	:  PC=0x1818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2353) ld.global.f32 %ssa_657_1, [%ssa_656 + 4];
bb_12	:  PC=0x1820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2354) ld.global.f32 %ssa_657_2, [%ssa_656 + 8];
bb_12	:  PC=0x1828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2355) ld.global.f32 %ssa_657_3, [%ssa_656 + 12];
bb_12	:  PC=0x1830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2360) add.u64 %ssa_658, %ssa_18, 276; // vec2 32 ssa_658 = deref_struct &ssa_18->FocusDistance (ubo float) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.FocusDistance */
bb_12	:  PC=0x1838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2363) ld.global.f32 %ssa_659, [%ssa_658]; // vec1 32 ssa_659 = intrinsic load_deref (%ssa_658) (16) /* access=16 */
bb_12	:  PC=0x1840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2366) mul.f32 %ssa_660, %ssa_653, %ssa_659;// vec1 32 ssa_660 = fmul ssa_653, ssa_659
bb_12	:  PC=0x1848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2369) mul.f32 %ssa_661, %ssa_654, %ssa_659;// vec1 32 ssa_661 = fmul ssa_654, ssa_659
bb_12	:  PC=0x1850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2372) mul.f32 %ssa_662, %ssa_655, %ssa_659;// vec1 32 ssa_662 = fmul ssa_655, ssa_659
bb_12	:  PC=0x1858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2375) neg.f32 %ssa_663, %ssa_604;// vec1 32 ssa_663 = fneg ssa_604
bb_12	:  PC=0x1860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2378) neg.f32 %ssa_664, %ssa_605;// vec1 32 ssa_664 = fneg ssa_605
bb_12	:  PC=0x1868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2381) add.f32 %ssa_665, %ssa_660, %ssa_663;// vec1 32 ssa_665 = fadd ssa_660, ssa_663
bb_12	:  PC=0x1870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2384) add.f32 %ssa_666, %ssa_661, %ssa_664;// vec1 32 ssa_666 = fadd ssa_661, ssa_664
bb_12	:  PC=0x1878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2387) mul.f32 %ssa_667, %ssa_665, %ssa_665;// vec1 32 ssa_667 = fmul ssa_665, ssa_665
bb_12	:  PC=0x1880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2390) mul.f32 %ssa_668, %ssa_666, %ssa_666;// vec1 32 ssa_668 = fmul ssa_666, ssa_666
bb_12	:  PC=0x1888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2393) mul.f32 %ssa_669, %ssa_662, %ssa_662;// vec1 32 ssa_669 = fmul ssa_662, ssa_662
bb_12	:  PC=0x1890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2399) mov.f32 %ssa_670_0, %ssa_667;
bb_12	:  PC=0x1898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2400) mov.f32 %ssa_670_1, %ssa_668;
bb_12	:  PC=0x18a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2401) mov.f32 %ssa_670_2, %ssa_669; // vec3 32 ssa_670 = vec3 ssa_667, ssa_668, ssa_669
bb_12	:  PC=0x18a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2404) add.f32 %ssa_671, %ssa_670_0, %ssa_670_1;
bb_12	:  PC=0x18b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2405) add.f32 %ssa_671, %ssa_671, %ssa_670_2; // vec1 32 ssa_671 = fsum3 ssa_670
bb_12	:  PC=0x18b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2408) rsqrt.approx.f32 %ssa_672, %ssa_671;// vec1 32 ssa_672 = frsq ssa_671
bb_12	:  PC=0x18c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2411) mul.f32 %ssa_673, %ssa_665, %ssa_672;// vec1 32 ssa_673 = fmul ssa_665, ssa_672
bb_12	:  PC=0x18c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2414) mul.f32 %ssa_674, %ssa_666, %ssa_672;// vec1 32 ssa_674 = fmul ssa_666, ssa_672
bb_12	:  PC=0x18d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2417) mul.f32 %ssa_675, %ssa_662, %ssa_672;// vec1 32 ssa_675 = fmul ssa_662, ssa_672
bb_12	:  PC=0x18d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2420) mul.f32 %ssa_676, %ssa_657_0, %ssa_675; // vec1 32 ssa_676 = fmul ssa_657.x, ssa_675
bb_12	:  PC=0x18e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2423) mul.f32 %ssa_677, %ssa_657_1, %ssa_675; // vec1 32 ssa_677 = fmul ssa_657.y, ssa_675
bb_12	:  PC=0x18e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2426) mul.f32 %ssa_678, %ssa_657_2, %ssa_675; // vec1 32 ssa_678 = fmul ssa_657.z, ssa_675
bb_12	:  PC=0x18f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2429) mul.f32 %ssa_679, %ssa_657_3, %ssa_675; // vec1 32 ssa_679 = fmul ssa_657.w, ssa_675
bb_12	:  PC=0x18f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2432) mul.f32 %ssa_680, %ssa_610_0, %ssa_674; // vec1 32 ssa_680 = fmul ssa_610.x, ssa_674
bb_12	:  PC=0x1900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2435) mul.f32 %ssa_681, %ssa_610_1, %ssa_674; // vec1 32 ssa_681 = fmul ssa_610.y, ssa_674
bb_12	:  PC=0x1908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2438) mul.f32 %ssa_682, %ssa_610_2, %ssa_674; // vec1 32 ssa_682 = fmul ssa_610.z, ssa_674
bb_12	:  PC=0x1910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2441) mul.f32 %ssa_683, %ssa_610_3, %ssa_674; // vec1 32 ssa_683 = fmul ssa_610.w, ssa_674
bb_12	:  PC=0x1918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2444) add.f32 %ssa_684, %ssa_680, %ssa_676;// vec1 32 ssa_684 = fadd ssa_680, ssa_676
bb_12	:  PC=0x1920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2447) add.f32 %ssa_685, %ssa_681, %ssa_677;// vec1 32 ssa_685 = fadd ssa_681, ssa_677
bb_12	:  PC=0x1928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2450) add.f32 %ssa_686, %ssa_682, %ssa_678;// vec1 32 ssa_686 = fadd ssa_682, ssa_678
bb_12	:  PC=0x1930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2453) add.f32 %ssa_687, %ssa_683, %ssa_679;// vec1 32 ssa_687 = fadd ssa_683, ssa_679
bb_12	:  PC=0x1938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2456) mul.f32 %ssa_688, %ssa_608_0, %ssa_673; // vec1 32 ssa_688 = fmul ssa_608.x, ssa_673
bb_12	:  PC=0x1940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2459) mul.f32 %ssa_689, %ssa_608_1, %ssa_673; // vec1 32 ssa_689 = fmul ssa_608.y, ssa_673
bb_12	:  PC=0x1948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2462) mul.f32 %ssa_690, %ssa_608_2, %ssa_673; // vec1 32 ssa_690 = fmul ssa_608.z, ssa_673
bb_12	:  PC=0x1950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2465) mul.f32 %ssa_691, %ssa_608_3, %ssa_673; // vec1 32 ssa_691 = fmul ssa_608.w, ssa_673
bb_12	:  PC=0x1958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2468) add.f32 %ssa_692, %ssa_688, %ssa_684;// vec1 32 ssa_692 = fadd ssa_688, ssa_684
bb_12	:  PC=0x1960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2471) add.f32 %ssa_693, %ssa_689, %ssa_685;// vec1 32 ssa_693 = fadd ssa_689, ssa_685
bb_12	:  PC=0x1968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2474) add.f32 %ssa_694, %ssa_690, %ssa_686;// vec1 32 ssa_694 = fadd ssa_690, ssa_686
bb_12	:  PC=0x1970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2477) add.f32 %ssa_695, %ssa_691, %ssa_687;// vec1 32 ssa_695 = fadd ssa_691, ssa_687
bb_12	:  PC=0x1978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2483) mov.f32 %ssa_696_0, %ssa_692;
bb_12	:  PC=0x1980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2484) mov.f32 %ssa_696_1, %ssa_693;
bb_12	:  PC=0x1988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2485) mov.f32 %ssa_696_2, %ssa_694;
bb_12	:  PC=0x1990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2486) mov.f32 %ssa_696_3, %ssa_695; // vec4 32 ssa_696 = vec4 ssa_692, ssa_693, ssa_694, ssa_695
bb_12	:  PC=0x1998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2489) mov.f32 %ssa_770, %ssa_630_0; // vec1 32 ssa_770 = mov ssa_630.x
bb_12	:  PC=0x19a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2492) mov.f32 %ssa_773, %ssa_630_1; // vec1 32 ssa_773 = mov ssa_630.y
bb_12	:  PC=0x19a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2495) mov.f32 %ssa_776, %ssa_630_2; // vec1 32 ssa_776 = mov ssa_630.z
bb_12	:  PC=0x19b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2498) mov.f32 %ssa_779, %ssa_630_3; // vec1 32 ssa_779 = mov ssa_630.w
bb_12	:  PC=0x19b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2501) mov.f32 %ssa_783, %ssa_696_0; // vec1 32 ssa_783 = mov ssa_696.x
bb_12	:  PC=0x19c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2504) mov.f32 %ssa_786, %ssa_696_1; // vec1 32 ssa_786 = mov ssa_696.y
bb_12	:  PC=0x19c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2507) mov.f32 %ssa_789, %ssa_696_2; // vec1 32 ssa_789 = mov ssa_696.z
bb_12	:  PC=0x19d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2510) mov.f32 %ssa_792, %ssa_696_3; // vec1 32 ssa_792 = mov ssa_696.w
bb_12	:  PC=0x19d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2513) mov.f32 %ssa_835, 0F3f800000; // vec1 32 ssa_835 = load_const (0x3f800000 /* 1.000000 */)
bb_12	:  PC=0x19e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2515) mov.b32 %ssa_835_bits, 0F3f800000;
bb_12	:  PC=0x19e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2518) mov.f32 %ssa_836, 0F3f800000; // vec1 32 ssa_836 = load_const (0x3f800000 /* 1.000000 */)
bb_12	:  PC=0x19f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2520) mov.b32 %ssa_836_bits, 0F3f800000;
bb_12	:  PC=0x19f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2523) mov.f32 %ssa_837, 0F3f800000; // vec1 32 ssa_837 = load_const (0x3f800000 /* 1.000000 */)
bb_12	:  PC=0x1a00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2525) mov.b32 %ssa_837_bits, 0F3f800000;
bb_12	:  PC=0x1a08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2527) mov.f32 %ssa_772, %ssa_770; // vec1 32 ssa_772 = phi block_9: ssa_770, block_19: ssa_771
bb_12	:  PC=0x1a10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2528) mov.f32 %ssa_775, %ssa_773; // vec1 32 ssa_775 = phi block_9: ssa_773, block_19: ssa_774
bb_12	:  PC=0x1a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2529) mov.f32 %ssa_778, %ssa_776; // vec1 32 ssa_778 = phi block_9: ssa_776, block_19: ssa_777
bb_12	:  PC=0x1a20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2530) mov.f32 %ssa_781, %ssa_779; // vec1 32 ssa_781 = phi block_9: ssa_779, block_19: ssa_780
bb_12	:  PC=0x1a28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2531) mov.f32 %ssa_785, %ssa_783; // vec1 32 ssa_785 = phi block_9: ssa_783, block_19: ssa_784
bb_12	:  PC=0x1a30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2532) mov.f32 %ssa_788, %ssa_786; // vec1 32 ssa_788 = phi block_9: ssa_786, block_19: ssa_787
bb_12	:  PC=0x1a38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2533) mov.f32 %ssa_791, %ssa_789; // vec1 32 ssa_791 = phi block_9: ssa_789, block_19: ssa_790
bb_12	:  PC=0x1a40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2534) mov.f32 %ssa_794, %ssa_792; // vec1 32 ssa_794 = phi block_9: ssa_792, block_19: ssa_793
bb_12	:  PC=0x1a48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2535) mov.f32 %ssa_798, %ssa_835; // vec1 32 ssa_798 = phi block_9: ssa_835, block_19: ssa_797
bb_12	:  PC=0x1a50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2536) mov.f32 %ssa_801, %ssa_836; // vec1 32 ssa_801 = phi block_9: ssa_836, block_19: ssa_800
bb_12	:  PC=0x1a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2537) mov.f32 %ssa_804, %ssa_837; // vec1 32 ssa_804 = phi block_9: ssa_837, block_19: ssa_803
bb_12	:  PC=0x1a60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2538) mov.s32 %ssa_700, %ssa_2_bits; // vec1 32 ssa_700 = phi block_9: ssa_2, block_19: ssa_730

bb_13	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2556) .reg .b32 %ssa_805_0;
bb_13	:  PC=0x1a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2560) mov.b32 %ssa_805_0, %ssa_798;
bb_13	:  PC=0x1a70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2561) mov.b32 %ssa_805_1, %ssa_801;
bb_13	:  PC=0x1a78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2562) mov.b32 %ssa_805_2, %ssa_804; // vec3 32 ssa_805 = vec3 ssa_798, ssa_801, ssa_804
bb_13	:  PC=0x1a80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2568) mov.b32 %ssa_795_0, %ssa_785;
bb_13	:  PC=0x1a88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2569) mov.b32 %ssa_795_1, %ssa_788;
bb_13	:  PC=0x1a90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2570) mov.b32 %ssa_795_2, %ssa_791;
bb_13	:  PC=0x1a98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2571) mov.b32 %ssa_795_3, %ssa_794; // vec4 32 ssa_795 = vec4 ssa_785, ssa_788, ssa_791, ssa_794
bb_13	:  PC=0x1aa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2577) mov.b32 %ssa_782_0, %ssa_772;
bb_13	:  PC=0x1aa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2578) mov.b32 %ssa_782_1, %ssa_775;
bb_13	:  PC=0x1ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2579) mov.b32 %ssa_782_2, %ssa_778;
bb_13	:  PC=0x1ab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2580) mov.b32 %ssa_782_3, %ssa_781; // vec4 32 ssa_782 = vec4 ssa_772, ssa_775, ssa_778, ssa_781
bb_13	:  PC=0x1ac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2583) add.u64 %ssa_701, %ssa_18, 292; // vec2 32 ssa_701 = deref_struct &ssa_18->NumberOfBounces (ubo uint) /* &((UniformBufferObjectStruct *)ssa_16)->Camera.NumberOfBounces */
bb_13	:  PC=0x1ac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2586) ld.global.u32 %ssa_702, [%ssa_701]; // vec1 32 ssa_702 = intrinsic load_deref (%ssa_701) (16) /* access=16 */
bb_13	:  PC=0x1ad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2589) setp.lt.u32 %ssa_703, %ssa_702, %ssa_700;// vec1  1 ssa_703 = ult ssa_702, ssa_700
bb_13	:  PC=0x1ad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2594) @!%ssa_703 bra else_2;

bb_14	:  PC=0x1ae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2599) mov.b32 %ssa_808, %ssa_805_0; // vec1 32 ssa_808 = mov ssa_805.x
bb_14	:  PC=0x1ae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2602) mov.b32 %ssa_812, %ssa_805_1; // vec1 32 ssa_812 = mov ssa_805.y
bb_14	:  PC=0x1af0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2605) mov.b32 %ssa_816, %ssa_805_2; // vec1 32 ssa_816 = mov ssa_805.z
bb_14	:  PC=0x1af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2607) mov.f32 %ssa_809, %ssa_808; // vec1 32 ssa_809 = phi block_14: ssa_838, block_17: ssa_807, block_11: ssa_808
bb_14	:  PC=0x1b00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2608) mov.f32 %ssa_813, %ssa_812; // vec1 32 ssa_813 = phi block_14: ssa_839, block_17: ssa_811, block_11: ssa_812
bb_14	:  PC=0x1b08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2609) mov.f32 %ssa_817, %ssa_816; // vec1 32 ssa_817 = phi block_14: ssa_840, block_17: ssa_815, block_11: ssa_816
bb_14	:  PC=0x1b10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2610) bra loop_2_exit;

bb_15	:  PC=0x1b18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2614) bra end_if_2;

bb_16	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2621) end_if_2:
bb_16	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2624) .reg .pred %ssa_704;
bb_16	:  PC=0x1b20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2625) setp.eq.s32 %ssa_704, %ssa_700, %ssa_702;// vec1  1 ssa_704 = ieq ssa_700, ssa_702
bb_16	:  PC=0x1b28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2630) @!%ssa_704 bra else_3;

bb_17	:  PC=0x1b30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2635) mov.f32 %ssa_838, 0F00000000; // vec1 32 ssa_838 = load_const (0x00000000 /* 0.000000 */)
bb_17	:  PC=0x1b38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2637) mov.b32 %ssa_838_bits, 0F00000000;
bb_17	:  PC=0x1b40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2640) mov.f32 %ssa_839, 0F00000000; // vec1 32 ssa_839 = load_const (0x00000000 /* 0.000000 */)
bb_17	:  PC=0x1b48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2642) mov.b32 %ssa_839_bits, 0F00000000;
bb_17	:  PC=0x1b50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2645) mov.f32 %ssa_840, 0F00000000; // vec1 32 ssa_840 = load_const (0x00000000 /* 0.000000 */)
bb_17	:  PC=0x1b58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2647) mov.b32 %ssa_840_bits, 0F00000000;
bb_17	:  PC=0x1b60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2649) mov.f32 %ssa_809, %ssa_838; // vec1 32 ssa_809 = phi block_14: ssa_838, block_17: ssa_807, block_11: ssa_808
bb_17	:  PC=0x1b68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2650) mov.f32 %ssa_813, %ssa_839; // vec1 32 ssa_813 = phi block_14: ssa_839, block_17: ssa_811, block_11: ssa_812
bb_17	:  PC=0x1b70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2651) mov.f32 %ssa_817, %ssa_840; // vec1 32 ssa_817 = phi block_14: ssa_840, block_17: ssa_815, block_11: ssa_816
bb_17	:  PC=0x1b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2652) bra loop_2_exit;

bb_18	:  PC=0x1b80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2656) bra end_if_3;

bb_19	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2663) end_if_3:
bb_19	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2666) .reg .b64 %ssa_705;
bb_19	:  PC=0x1b88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2667) load_vulkan_descriptor %ssa_705, 0, 0, 1000150000; // vec1 64 ssa_705 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
bb_19	:  PC=0x1b90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2670) mov.b64 %ssa_706, %ssa_705; // vec1 64 ssa_706 = intrinsic load_vulkan_descriptor (%ssa_705) (1000150000) /* desc_type=accel-struct */
bb_19	:  PC=0x1b98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2676) mov.b32 %ssa_707_0, %ssa_782_0;
bb_19	:  PC=0x1ba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2677) mov.b32 %ssa_707_1, %ssa_782_1;
bb_19	:  PC=0x1ba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2678) mov.b32 %ssa_707_2, %ssa_782_2; // vec3 32 ssa_707 = vec3 ssa_782.x, ssa_782.y, ssa_782.z
bb_19	:  PC=0x1bb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2684) mov.b32 %ssa_708_0, %ssa_795_0;
bb_19	:  PC=0x1bb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2685) mov.b32 %ssa_708_1, %ssa_795_1;
bb_19	:  PC=0x1bc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2686) mov.b32 %ssa_708_2, %ssa_795_2; // vec3 32 ssa_708 = vec3 ssa_795.x, ssa_795.y, ssa_795.z
bb_19	:  PC=0x1bc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2689) trace_ray %ssa_706, %ssa_2, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_707_0, %ssa_707_1, %ssa_707_2, %ssa_10, %ssa_708_0, %ssa_708_1, %ssa_708_2, %ssa_9, %traversal_finished_0; // intrinsic trace_ray (%ssa_706, %ssa_2, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_707, %ssa_10, %ssa_708, %ssa_9, %ssa_542) ()
bb_19	:  PC=0x1bd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2692) mov.u32 %intersection_counter_0, 0;

bb_20	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2694) .reg .pred %intersections_exit_0;
bb_20	:  PC=0x1bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2695) intersection_exit.pred %intersections_exit_0, %intersection_counter_0, %traversal_finished_0;
bb_20	:  PC=0x1be0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2696) @%intersections_exit_0 bra exit_intersection_label_0;

bb_21	:  PC=0x1be8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2698) get_intersection_shader_data_address %shader_data_address_0, %intersection_counter_0;
bb_21	:  PC=0x1bf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2700) get_intersection_shaderID %intersection_shaderID_0, %intersection_counter_0;
bb_21	:  PC=0x1bf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2702) setp.ne.u32 %skip_intersection_7_0, %intersection_shaderID_0, 7;
bb_21	:  PC=0x1c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2703) @%skip_intersection_7_0 bra skip_intersection_label_7_0;

bb_22	:  PC=0x1c08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2704) call_intersection_shader %intersection_counter_0;

bb_23	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2706) .reg .pred %skip_intersection_9_0;
bb_23	:  PC=0x1c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2707) setp.ne.u32 %skip_intersection_9_0, %intersection_shaderID_0, 9;
bb_23	:  PC=0x1c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2708) @%skip_intersection_9_0 bra skip_intersection_label_9_0;

bb_24	:  PC=0x1c20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2709) call_intersection_shader %intersection_counter_0;

bb_25	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2711) .reg .pred %skip_intersection_6_0;
bb_25	:  PC=0x1c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2712) setp.ne.u32 %skip_intersection_6_0, %intersection_shaderID_0, 6;
bb_25	:  PC=0x1c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2713) @%skip_intersection_6_0 bra skip_intersection_label_6_0;

bb_26	:  PC=0x1c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2714) call_intersection_shader %intersection_counter_0;

bb_27	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2716) .reg .pred %skip_intersection_8_0;
bb_27	:  PC=0x1c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2717) setp.ne.u32 %skip_intersection_8_0, %intersection_shaderID_0, 8;
bb_27	:  PC=0x1c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2718) @%skip_intersection_8_0 bra skip_intersection_label_8_0;

bb_28	:  PC=0x1c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2719) call_intersection_shader %intersection_counter_0;

bb_29	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2721) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
bb_29	:  PC=0x1c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2721) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
bb_29	:  PC=0x1c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2722) bra intersection_loop_0;

bb_30	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2725) .reg .u32 anyhit_counter_0;
bb_30	:  PC=0x1c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2726) mov.u32 anyhit_counter_0, 0;

bb_31	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2728) .reg .pred %anyhit_exit_0;
bb_31	:  PC=0x1c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2729) anyhit_exit.pred %anyhit_exit_0, anyhit_counter_0, %traversal_finished_0;
bb_31	:  PC=0x1c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2730) @%anyhit_exit_0 bra exit_anyhit_label_0;

bb_32	:  PC=0x1c80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2732) get_anyhit_shader_data_address %shader_data_address_any_0, anyhit_counter_0;
bb_32	:  PC=0x1c88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2734) get_anyhit_shaderID %anyhit_shaderID_0, anyhit_counter_0;
bb_32	:  PC=0x1c90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2736) setp.ne.u32 %skip_anyhit_10_0, %anyhit_shaderID_0, 10;
bb_32	:  PC=0x1c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2737) @%skip_anyhit_10_0 bra skip_anyhit_label_10_0;

bb_33	:  PC=0x1ca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2738) call_anyhit_shader anyhit_counter_0;

bb_34	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2740) add.u32 anyhit_counter_0, anyhit_counter_0, 1;
bb_34	:  PC=0x1ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2740) add.u32 anyhit_counter_0, anyhit_counter_0, 1;
bb_34	:  PC=0x1cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2741) bra anyhit_loop_0;

bb_35	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2744) .reg .pred %hit_geometry_0;
bb_35	:  PC=0x1cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2745) hit_geometry.pred %hit_geometry_0, %traversal_finished_0;
bb_35	:  PC=0x1cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2747) @!%hit_geometry_0 bra exit_closest_hit_label_0;

bb_36	:  PC=0x1cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2749) get_closest_hit_shaderID %closest_hit_shaderID_0;
bb_36	:  PC=0x1cd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2751) setp.ne.u32 %skip_closest_hit_4_0, %closest_hit_shaderID_0, 4;
bb_36	:  PC=0x1cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2752) @%skip_closest_hit_4_0 bra skip_closest_hit_label_4_0;

bb_37	:  PC=0x1ce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2753) call_closest_hit_shader 4;

bb_38	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2755) .reg .pred %skip_closest_hit_2_0;
bb_38	:  PC=0x1ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2756) setp.ne.u32 %skip_closest_hit_2_0, %closest_hit_shaderID_0, 2;
bb_38	:  PC=0x1cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2757) @%skip_closest_hit_2_0 bra skip_closest_hit_label_2_0;

bb_39	:  PC=0x1cf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2758) call_closest_hit_shader 2;

bb_40	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2760) .reg .pred %skip_closest_hit_3_0;
bb_40	:  PC=0x1d00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) setp.ne.u32 %skip_closest_hit_3_0, %closest_hit_shaderID_0, 3;
bb_40	:  PC=0x1d08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2762) @%skip_closest_hit_3_0 bra skip_closest_hit_label_3_0;

bb_41	:  PC=0x1d10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2763) call_closest_hit_shader 3;

bb_42	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2765) .reg .pred %skip_closest_hit_5_0;
bb_42	:  PC=0x1d18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2766) setp.ne.u32 %skip_closest_hit_5_0, %closest_hit_shaderID_0, 5;
bb_42	:  PC=0x1d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2767) @%skip_closest_hit_5_0 bra skip_closest_hit_label_5_0;

bb_43	:  PC=0x1d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2768) call_closest_hit_shader 5;

bb_44	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2770) exit_closest_hit_label_0:
bb_44	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2772) @%hit_geometry_0 bra skip_miss_label_0;
bb_44	:  PC=0x1d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2772) @%hit_geometry_0 bra skip_miss_label_0;

bb_45	:  PC=0x1d38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2773) call_miss_shader ;

bb_46	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2776) end_trace_ray ;
bb_46	:  PC=0x1d40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2776) end_trace_ray ;
bb_46	:  PC=0x1d48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2779) add.u64 %ssa_709, %ssa_542, 0; // vec1 32 ssa_709 = deref_struct &ssa_542->ColorAndDistance (function_temp vec4) /* &Ray.ColorAndDistance */
bb_46	:  PC=0x1d50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2785) ld.global.f32 %ssa_710_0, [%ssa_709 + 0];
bb_46	:  PC=0x1d58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2786) ld.global.f32 %ssa_710_1, [%ssa_709 + 4];
bb_46	:  PC=0x1d60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2787) ld.global.f32 %ssa_710_2, [%ssa_709 + 8];
bb_46	:  PC=0x1d68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2788) ld.global.f32 %ssa_710_3, [%ssa_709 + 12];
bb_46	:  PC=0x1d70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2793) add.u64 %ssa_711, %ssa_542, 16; // vec1 32 ssa_711 = deref_struct &ssa_542->ScatterDirection (function_temp vec4) /* &Ray.ScatterDirection */
bb_46	:  PC=0x1d78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2799) ld.global.f32 %ssa_712_0, [%ssa_711 + 0];
bb_46	:  PC=0x1d80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2800) ld.global.f32 %ssa_712_1, [%ssa_711 + 4];
bb_46	:  PC=0x1d88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2801) ld.global.f32 %ssa_712_2, [%ssa_711 + 8];
bb_46	:  PC=0x1d90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2802) ld.global.f32 %ssa_712_3, [%ssa_711 + 12];
bb_46	:  PC=0x1d98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2807) setp.lt.f32 %ssa_713, %ssa_2, %ssa_712_3; // vec1  1 ssa_713 = flt! ssa_2, ssa_712.w
bb_46	:  PC=0x1da0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2810) mul.f32 %ssa_714, %ssa_805_0, %ssa_710_0; // vec1 32 ssa_714 = fmul ssa_805.x, ssa_710.x
bb_46	:  PC=0x1da8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2813) mul.f32 %ssa_715, %ssa_805_1, %ssa_710_1; // vec1 32 ssa_715 = fmul ssa_805.y, ssa_710.y
bb_46	:  PC=0x1db0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2816) mul.f32 %ssa_716, %ssa_805_2, %ssa_710_2; // vec1 32 ssa_716 = fmul ssa_805.z, ssa_710.z
bb_46	:  PC=0x1db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2822) mov.f32 %ssa_717_0, %ssa_714;
bb_46	:  PC=0x1dc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2823) mov.f32 %ssa_717_1, %ssa_715;
bb_46	:  PC=0x1dc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2824) mov.f32 %ssa_717_2, %ssa_716; // vec3 32 ssa_717 = vec3 ssa_714, ssa_715, ssa_716
bb_46	:  PC=0x1dd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2827) setp.lt.f32 %ssa_718, %ssa_710_3, %ssa_2; // vec1  1 ssa_718 = flt! ssa_710.w, ssa_2
bb_46	:  PC=0x1dd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2830) not.pred %ssa_719, %ssa_713;// vec1  1 ssa_719 = inot ssa_713
bb_46	:  PC=0x1de0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2833) or.pred %ssa_720, %ssa_718, %ssa_719;// vec1  1 ssa_720 = ior ssa_718, ssa_719
bb_46	:  PC=0x1de8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2838) @!%ssa_720 bra else_4;

bb_47	:  PC=0x1df0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2843) mov.f32 %ssa_807, %ssa_717_0; // vec1 32 ssa_807 = mov ssa_717.x
bb_47	:  PC=0x1df8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2846) mov.f32 %ssa_811, %ssa_717_1; // vec1 32 ssa_811 = mov ssa_717.y
bb_47	:  PC=0x1e00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2849) mov.f32 %ssa_815, %ssa_717_2; // vec1 32 ssa_815 = mov ssa_717.z
bb_47	:  PC=0x1e08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2851) mov.f32 %ssa_809, %ssa_807; // vec1 32 ssa_809 = phi block_14: ssa_838, block_17: ssa_807, block_11: ssa_808
bb_47	:  PC=0x1e10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2852) mov.f32 %ssa_813, %ssa_811; // vec1 32 ssa_813 = phi block_14: ssa_839, block_17: ssa_811, block_11: ssa_812
bb_47	:  PC=0x1e18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2853) mov.f32 %ssa_817, %ssa_815; // vec1 32 ssa_817 = phi block_14: ssa_840, block_17: ssa_815, block_11: ssa_816
bb_47	:  PC=0x1e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2854) bra loop_2_exit;

bb_48	:  PC=0x1e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2858) bra end_if_4;

bb_49	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2865) end_if_4:
bb_49	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2868) .reg .f32 %ssa_721;
bb_49	:  PC=0x1e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2869) mul.f32 %ssa_721, %ssa_795_0, %ssa_710_3; // vec1 32 ssa_721 = fmul ssa_795.x, ssa_710.w
bb_49	:  PC=0x1e38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2872) mul.f32 %ssa_722, %ssa_795_1, %ssa_710_3; // vec1 32 ssa_722 = fmul ssa_795.y, ssa_710.w
bb_49	:  PC=0x1e40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2875) mul.f32 %ssa_723, %ssa_795_2, %ssa_710_3; // vec1 32 ssa_723 = fmul ssa_795.z, ssa_710.w
bb_49	:  PC=0x1e48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2878) mul.f32 %ssa_724, %ssa_795_3, %ssa_710_3; // vec1 32 ssa_724 = fmul ssa_795.w, ssa_710.w
bb_49	:  PC=0x1e50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2881) add.f32 %ssa_725, %ssa_782_0, %ssa_721; // vec1 32 ssa_725 = fadd ssa_782.x, ssa_721
bb_49	:  PC=0x1e58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2884) add.f32 %ssa_726, %ssa_782_1, %ssa_722; // vec1 32 ssa_726 = fadd ssa_782.y, ssa_722
bb_49	:  PC=0x1e60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2887) add.f32 %ssa_727, %ssa_782_2, %ssa_723; // vec1 32 ssa_727 = fadd ssa_782.z, ssa_723
bb_49	:  PC=0x1e68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2890) add.f32 %ssa_728, %ssa_782_3, %ssa_724; // vec1 32 ssa_728 = fadd ssa_782.w, ssa_724
bb_49	:  PC=0x1e70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2896) mov.f32 %ssa_729_0, %ssa_725;
bb_49	:  PC=0x1e78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2897) mov.f32 %ssa_729_1, %ssa_726;
bb_49	:  PC=0x1e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2898) mov.f32 %ssa_729_2, %ssa_727;
bb_49	:  PC=0x1e88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2899) mov.f32 %ssa_729_3, %ssa_728; // vec4 32 ssa_729 = vec4 ssa_725, ssa_726, ssa_727, ssa_728
bb_49	:  PC=0x1e90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2902) add.s32 %ssa_730, %ssa_700, %ssa_8_bits; // vec1 32 ssa_730 = iadd ssa_700, ssa_8
bb_49	:  PC=0x1e98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2908) mov.f32 %ssa_731_0, %ssa_712_0;
bb_49	:  PC=0x1ea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2909) mov.f32 %ssa_731_1, %ssa_712_1;
bb_49	:  PC=0x1ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2910) mov.f32 %ssa_731_2, %ssa_712_2;
bb_49	:  PC=0x1eb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2911) mov.f32 %ssa_731_3, %ssa_2; // vec4 32 ssa_731 = vec4 ssa_712.x, ssa_712.y, ssa_712.z, ssa_2
bb_49	:  PC=0x1eb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2914) mov.f32 %ssa_771, %ssa_729_0; // vec1 32 ssa_771 = mov ssa_729.x
bb_49	:  PC=0x1ec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2917) mov.f32 %ssa_774, %ssa_729_1; // vec1 32 ssa_774 = mov ssa_729.y
bb_49	:  PC=0x1ec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2920) mov.f32 %ssa_777, %ssa_729_2; // vec1 32 ssa_777 = mov ssa_729.z
bb_49	:  PC=0x1ed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2923) mov.f32 %ssa_780, %ssa_729_3; // vec1 32 ssa_780 = mov ssa_729.w
bb_49	:  PC=0x1ed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2926) mov.f32 %ssa_784, %ssa_731_0; // vec1 32 ssa_784 = mov ssa_731.x
bb_49	:  PC=0x1ee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2929) mov.f32 %ssa_787, %ssa_731_1; // vec1 32 ssa_787 = mov ssa_731.y
bb_49	:  PC=0x1ee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2932) mov.f32 %ssa_790, %ssa_731_2; // vec1 32 ssa_790 = mov ssa_731.z
bb_49	:  PC=0x1ef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2935) mov.f32 %ssa_793, %ssa_731_3; // vec1 32 ssa_793 = mov ssa_731.w
bb_49	:  PC=0x1ef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2938) mov.f32 %ssa_797, %ssa_717_0; // vec1 32 ssa_797 = mov ssa_717.x
bb_49	:  PC=0x1f00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2941) mov.f32 %ssa_800, %ssa_717_1; // vec1 32 ssa_800 = mov ssa_717.y
bb_49	:  PC=0x1f08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2944) mov.f32 %ssa_803, %ssa_717_2; // vec1 32 ssa_803 = mov ssa_717.z
bb_49	:  PC=0x1f10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2946) mov.f32 %ssa_772, %ssa_771; // vec1 32 ssa_772 = phi block_9: ssa_770, block_19: ssa_771
bb_49	:  PC=0x1f18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2947) mov.f32 %ssa_775, %ssa_774; // vec1 32 ssa_775 = phi block_9: ssa_773, block_19: ssa_774
bb_49	:  PC=0x1f20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2948) mov.f32 %ssa_778, %ssa_777; // vec1 32 ssa_778 = phi block_9: ssa_776, block_19: ssa_777
bb_49	:  PC=0x1f28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2949) mov.f32 %ssa_781, %ssa_780; // vec1 32 ssa_781 = phi block_9: ssa_779, block_19: ssa_780
bb_49	:  PC=0x1f30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2950) mov.f32 %ssa_785, %ssa_784; // vec1 32 ssa_785 = phi block_9: ssa_783, block_19: ssa_784
bb_49	:  PC=0x1f38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2951) mov.f32 %ssa_788, %ssa_787; // vec1 32 ssa_788 = phi block_9: ssa_786, block_19: ssa_787
bb_49	:  PC=0x1f40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2952) mov.f32 %ssa_791, %ssa_790; // vec1 32 ssa_791 = phi block_9: ssa_789, block_19: ssa_790
bb_49	:  PC=0x1f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2953) mov.f32 %ssa_794, %ssa_793; // vec1 32 ssa_794 = phi block_9: ssa_792, block_19: ssa_793
bb_49	:  PC=0x1f50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2954) mov.f32 %ssa_798, %ssa_797; // vec1 32 ssa_798 = phi block_9: ssa_835, block_19: ssa_797
bb_49	:  PC=0x1f58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2955) mov.f32 %ssa_801, %ssa_800; // vec1 32 ssa_801 = phi block_9: ssa_836, block_19: ssa_800
bb_49	:  PC=0x1f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2956) mov.f32 %ssa_804, %ssa_803; // vec1 32 ssa_804 = phi block_9: ssa_837, block_19: ssa_803
bb_49	:  PC=0x1f68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2957) mov.s32 %ssa_700, %ssa_730; // vec1 32 ssa_700 = phi block_9: ssa_2, block_19: ssa_730
bb_49	:  PC=0x1f70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2960) bra loop_2;

bb_50	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2968) .reg .b32 %ssa_818_0;
bb_50	:  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) mov.b32 %ssa_818_0, %ssa_809;
bb_50	:  PC=0x1f80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2973) mov.b32 %ssa_818_1, %ssa_813;
bb_50	:  PC=0x1f88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2974) mov.b32 %ssa_818_2, %ssa_817; // vec3 32 ssa_818 = vec3 ssa_809, ssa_813, ssa_817
bb_50	:  PC=0x1f90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2977) add.f32 %ssa_733, %ssa_769_0, %ssa_818_0; // vec1 32 ssa_733 = fadd ssa_769.x, ssa_818.x
bb_50	:  PC=0x1f98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2980) add.f32 %ssa_734, %ssa_769_1, %ssa_818_1; // vec1 32 ssa_734 = fadd ssa_769.y, ssa_818.y
bb_50	:  PC=0x1fa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2983) add.f32 %ssa_735, %ssa_769_2, %ssa_818_2; // vec1 32 ssa_735 = fadd ssa_769.z, ssa_818.z
bb_50	:  PC=0x1fa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2989) mov.f32 %ssa_736_0, %ssa_733;
bb_50	:  PC=0x1fb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2990) mov.f32 %ssa_736_1, %ssa_734;
bb_50	:  PC=0x1fb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2991) mov.f32 %ssa_736_2, %ssa_735; // vec3 32 ssa_736 = vec3 ssa_733, ssa_734, ssa_735
bb_50	:  PC=0x1fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2994) add.s32 %ssa_737, %ssa_546, %ssa_8_bits; // vec1 32 ssa_737 = iadd ssa_546, ssa_8
bb_50	:  PC=0x1fc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2997) mov.f32 %ssa_761, %ssa_736_0; // vec1 32 ssa_761 = mov ssa_736.x
bb_50	:  PC=0x1fd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3000) mov.f32 %ssa_764, %ssa_736_1; // vec1 32 ssa_764 = mov ssa_736.y
bb_50	:  PC=0x1fd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3003) mov.f32 %ssa_767, %ssa_736_2; // vec1 32 ssa_767 = mov ssa_736.z
bb_50	:  PC=0x1fe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3005) mov.s32 %ssa_544, %ssa_563; // vec1 32 ssa_544 = phi block_0: ssa_20, block_20: ssa_563
bb_50	:  PC=0x1fe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3006) mov.f32 %ssa_762, %ssa_761; // vec1 32 ssa_762 = phi block_0: ssa_832, block_20: ssa_761
bb_50	:  PC=0x1ff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3007) mov.f32 %ssa_765, %ssa_764; // vec1 32 ssa_765 = phi block_0: ssa_833, block_20: ssa_764
bb_50	:  PC=0x1ff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3008) mov.f32 %ssa_768, %ssa_767; // vec1 32 ssa_768 = phi block_0: ssa_834, block_20: ssa_767
bb_50	:  PC=0x2000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3009) mov.s32 %ssa_546, %ssa_737; // vec1 32 ssa_546 = phi block_0: ssa_2, block_20: ssa_737
bb_50	:  PC=0x2008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3012) bra loop_0;

bb_51	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3017) .reg .pred %ssa_738;
bb_51	:  PC=0x2010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3018) setp.ne.s32 %ssa_738, %ssa_548, %ssa_293;// vec1  1 ssa_738 = ine ssa_548, ssa_293
bb_51	:  PC=0x2018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3023) @!%ssa_738 bra else_5;

bb_52	:  PC=0x2020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3028) mov.b64 %ssa_739, %AccumulationImage; // vec1 32 ssa_739 = deref_var &AccumulationImage (image image2D) 
bb_52	:  PC=0x2028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3034) mov.u32 %ssa_740_0, %ssa_21_0;
bb_52	:  PC=0x2030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3035) mov.u32 %ssa_740_1, %ssa_21_1;
bb_52	:  PC=0x2038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3036) mov.u32 %ssa_740_2, %ssa_7_bits;
bb_52	:  PC=0x2040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3037) mov.u32 %ssa_740_3, %ssa_7_bits; // vec4 32 ssa_740 = vec4 ssa_21.x, ssa_21.y, ssa_7, ssa_7
bb_52	:  PC=0x2048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3043) image_deref_load %ssa_739, %ssa_741_0, %ssa_741_1, %ssa_741_2, %ssa_741_3, %ssa_740_0, %ssa_740_1, %ssa_740_2, %ssa_740_3, %ssa_6, %ssa_2, 1, 0, 0, 0, 160; // vec4 32 ssa_741 = intrinsic image_deref_load (%ssa_739, %ssa_740, %ssa_6, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* dest_type=float32 */
bb_52	:  PC=0x2050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3046) mov.f32 %ssa_819, %ssa_741_0; // vec1 32 ssa_819 = mov ssa_741.x
bb_52	:  PC=0x2058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3049) mov.f32 %ssa_822, %ssa_741_1; // vec1 32 ssa_822 = mov ssa_741.y
bb_52	:  PC=0x2060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3052) mov.f32 %ssa_825, %ssa_741_2; // vec1 32 ssa_825 = mov ssa_741.z
bb_52	:  PC=0x2068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3055) mov.f32 %ssa_828, %ssa_741_3; // vec1 32 ssa_828 = mov ssa_741.w
bb_52	:  PC=0x2070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3057) mov.f32 %ssa_821, %ssa_819; // vec1 32 ssa_821 = phi block_22: ssa_819, block_23: ssa_841
bb_52	:  PC=0x2078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3058) mov.f32 %ssa_824, %ssa_822; // vec1 32 ssa_824 = phi block_22: ssa_822, block_23: ssa_842
bb_52	:  PC=0x2080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3059) mov.f32 %ssa_827, %ssa_825; // vec1 32 ssa_827 = phi block_22: ssa_825, block_23: ssa_843
bb_52	:  PC=0x2088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3060) mov.f32 %ssa_830, %ssa_828; // vec1 32 ssa_830 = phi block_22: ssa_828, block_23: ssa_844
bb_52	:  PC=0x2090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3063) bra end_if_5;

bb_53	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3068) .reg .f32 %ssa_841;
bb_53	:  PC=0x2098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3069) mov.f32 %ssa_841, 0F00000000; // vec1 32 ssa_841 = load_const (0x00000000 /* 0.000000 */)
bb_53	:  PC=0x20a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3071) mov.b32 %ssa_841_bits, 0F00000000;
bb_53	:  PC=0x20a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3074) mov.f32 %ssa_842, 0F00000000; // vec1 32 ssa_842 = load_const (0x00000000 /* 0.000000 */)
bb_53	:  PC=0x20b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3076) mov.b32 %ssa_842_bits, 0F00000000;
bb_53	:  PC=0x20b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3079) mov.f32 %ssa_843, 0F00000000; // vec1 32 ssa_843 = load_const (0x00000000 /* 0.000000 */)
bb_53	:  PC=0x20c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3081) mov.b32 %ssa_843_bits, 0F00000000;
bb_53	:  PC=0x20c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3084) mov.f32 %ssa_844, 0F00000000; // vec1 32 ssa_844 = load_const (0x00000000 /* 0.000000 */)
bb_53	:  PC=0x20d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3086) mov.b32 %ssa_844_bits, 0F00000000;
bb_53	:  PC=0x20d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3088) mov.f32 %ssa_821, %ssa_841; // vec1 32 ssa_821 = phi block_22: ssa_819, block_23: ssa_841
bb_53	:  PC=0x20e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3089) mov.f32 %ssa_824, %ssa_842; // vec1 32 ssa_824 = phi block_22: ssa_822, block_23: ssa_842
bb_53	:  PC=0x20e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3090) mov.f32 %ssa_827, %ssa_843; // vec1 32 ssa_827 = phi block_22: ssa_825, block_23: ssa_843
bb_53	:  PC=0x20f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3091) mov.f32 %ssa_830, %ssa_844; // vec1 32 ssa_830 = phi block_22: ssa_828, block_23: ssa_844

bb_54	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3101) .reg .b32 %ssa_831_0;
bb_54	:  PC=0x20f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3105) mov.b32 %ssa_831_0, %ssa_821;
bb_54	:  PC=0x2100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3106) mov.b32 %ssa_831_1, %ssa_824;
bb_54	:  PC=0x2108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3107) mov.b32 %ssa_831_2, %ssa_827;
bb_54	:  PC=0x2110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3108) mov.b32 %ssa_831_3, %ssa_830; // vec4 32 ssa_831 = vec4 ssa_821, ssa_824, ssa_827, ssa_830
bb_54	:  PC=0x2118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3111) add.f32 %ssa_743, %ssa_831_0, %ssa_769_0; // vec1 32 ssa_743 = fadd ssa_831.x, ssa_769.x
bb_54	:  PC=0x2120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3114) add.f32 %ssa_744, %ssa_831_1, %ssa_769_1; // vec1 32 ssa_744 = fadd ssa_831.y, ssa_769.y
bb_54	:  PC=0x2128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3117) add.f32 %ssa_745, %ssa_831_2, %ssa_769_2; // vec1 32 ssa_745 = fadd ssa_831.z, ssa_769.z
bb_54	:  PC=0x2130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3120) cvt.rn.f32.u32 %ssa_746, %ssa_293;// vec1 32 ssa_746 = u2f32 ssa_293
bb_54	:  PC=0x2138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3123) rcp.approx.f32 %ssa_747, %ssa_746;// vec1 32 ssa_747 = frcp ssa_746
bb_54	:  PC=0x2140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3126) mul.f32 %ssa_748, %ssa_743, %ssa_747;// vec1 32 ssa_748 = fmul ssa_743, ssa_747
bb_54	:  PC=0x2148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3129) mul.f32 %ssa_749, %ssa_744, %ssa_747;// vec1 32 ssa_749 = fmul ssa_744, ssa_747
bb_54	:  PC=0x2150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3132) mul.f32 %ssa_750, %ssa_745, %ssa_747;// vec1 32 ssa_750 = fmul ssa_745, ssa_747
bb_54	:  PC=0x2158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3135) sqrt.approx.f32 %ssa_751, %ssa_748;// vec1 32 ssa_751 = fsqrt ssa_748
bb_54	:  PC=0x2160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3138) sqrt.approx.f32 %ssa_752, %ssa_749;// vec1 32 ssa_752 = fsqrt ssa_749
bb_54	:  PC=0x2168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3141) sqrt.approx.f32 %ssa_753, %ssa_750;// vec1 32 ssa_753 = fsqrt ssa_750
bb_54	:  PC=0x2170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3144) mov.b64 %ssa_754, %AccumulationImage; // vec1 32 ssa_754 = deref_var &AccumulationImage (image image2D) 
bb_54	:  PC=0x2178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3150) mov.f32 %ssa_755_0, %ssa_743;
bb_54	:  PC=0x2180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3151) mov.f32 %ssa_755_1, %ssa_744;
bb_54	:  PC=0x2188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3152) mov.f32 %ssa_755_2, %ssa_745;
bb_54	:  PC=0x2190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3153) mov.f32 %ssa_755_3, %ssa_2; // vec4 32 ssa_755 = vec4 ssa_743, ssa_744, ssa_745, ssa_2
bb_54	:  PC=0x2198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3159) mov.u32 %ssa_756_0, %ssa_21_0;
bb_54	:  PC=0x21a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3160) mov.u32 %ssa_756_1, %ssa_21_1;
bb_54	:  PC=0x21a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3161) mov.u32 %ssa_756_2, %ssa_4_bits;
bb_54	:  PC=0x21b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3162) mov.u32 %ssa_756_3, %ssa_4_bits; // vec4 32 ssa_756 = vec4 ssa_21.x, ssa_21.y, ssa_4, ssa_4
bb_54	:  PC=0x21b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3164) image_deref_store %ssa_754, %ssa_756_0, %ssa_756_1, %ssa_756_2, %ssa_756_3, %ssa_3, %ssa_755_0, %ssa_755_1, %ssa_755_2, %ssa_755_3, %ssa_2, 1, 0, 0, 0, 160; // intrinsic image_deref_store (%ssa_754, %ssa_756, %ssa_3, %ssa_755, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* src_type=float32 */
bb_54	:  PC=0x21c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3167) mov.b64 %ssa_757, %OutputImage; // vec1 32 ssa_757 = deref_var &OutputImage (image image2D) 
bb_54	:  PC=0x21c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3173) mov.f32 %ssa_758_0, %ssa_751;
bb_54	:  PC=0x21d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3174) mov.f32 %ssa_758_1, %ssa_752;
bb_54	:  PC=0x21d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3175) mov.f32 %ssa_758_2, %ssa_753;
bb_54	:  PC=0x21e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3176) mov.f32 %ssa_758_3, %ssa_2; // vec4 32 ssa_758 = vec4 ssa_751, ssa_752, ssa_753, ssa_2
bb_54	:  PC=0x21e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3182) mov.u32 %ssa_759_0, %ssa_21_0;
bb_54	:  PC=0x21f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3183) mov.u32 %ssa_759_1, %ssa_21_1;
bb_54	:  PC=0x21f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3184) mov.u32 %ssa_759_2, %ssa_1_bits;
bb_54	:  PC=0x2200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3185) mov.u32 %ssa_759_3, %ssa_1_bits; // vec4 32 ssa_759 = vec4 ssa_21.x, ssa_21.y, ssa_1, ssa_1
bb_54	:  PC=0x2208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3187) image_deref_store %ssa_757, %ssa_759_0, %ssa_759_1, %ssa_759_2, %ssa_759_3, %ssa_0, %ssa_758_0, %ssa_758_1, %ssa_758_2, %ssa_758_3, %ssa_2, 1, 0, 0, 0, 160; // intrinsic image_deref_store (%ssa_757, %ssa_759, %ssa_0, %ssa_758, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* src_type=float32 */

bb_55	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3193) ret ;
bb_55	:  PC=0x2210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3193) ret ;

Summary of basic blocks for 'MESA_SHADER_RAYGEN_func0_main':
bb_00	: first: load_ray_launch_id	 last: bra	
bb_01	: first: bra	 last: bra	
bb_02	: first: bra	 last: bra	
bb_03	: first: load_vulkan_descriptor	 last: mov	
bb_04	: first: mov	 last: bra	
bb_05	: first: bra	 last: bra	
bb_06	: first: bra	 last: bra	
bb_07	: first: cvt	 last: mov	
bb_08	: first: mul	 last: bra	
bb_09	: first: bra	 last: bra	
bb_10	: first: bra	 last: bra	
bb_11	: first: mov	 last: bra	
bb_12	: first: st	 last: mov	
bb_13	: first: mov	 last: bra	
bb_14	: first: mov	 last: bra	
bb_15	: first: bra	 last: bra	
bb_16	: first: setp	 last: bra	
bb_17	: first: mov	 last: bra	
bb_18	: first: bra	 last: bra	
bb_19	: first: load_vulkan_descriptor	 last: mov	
bb_20	: first: intersection_exit	 last: bra	
bb_21	: first: get_intersection_shader_data_address	 last: bra	
bb_22	: first: call_intersection_shader	 last: call_intersection_shader	
bb_23	: first: setp	 last: bra	
bb_24	: first: call_intersection_shader	 last: call_intersection_shader	
bb_25	: first: setp	 last: bra	
bb_26	: first: call_intersection_shader	 last: call_intersection_shader	
bb_27	: first: setp	 last: bra	
bb_28	: first: call_intersection_shader	 last: call_intersection_shader	
bb_29	: first: add	 last: bra	
bb_30	: first: mov	 last: mov	
bb_31	: first: anyhit_exit	 last: bra	
bb_32	: first: get_anyhit_shader_data_address	 last: bra	
bb_33	: first: call_anyhit_shader	 last: call_anyhit_shader	
bb_34	: first: add	 last: bra	
bb_35	: first: hit_geometry	 last: bra	
bb_36	: first: get_closest_hit_shaderID	 last: bra	
bb_37	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_38	: first: setp	 last: bra	
bb_39	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_40	: first: setp	 last: bra	
bb_41	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_42	: first: setp	 last: bra	
bb_43	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_44	: first: bra	 last: bra	
bb_45	: first: call_miss_shader	 last: call_miss_shader	
bb_46	: first: end_trace_ray	 last: bra	
bb_47	: first: mov	 last: bra	
bb_48	: first: bra	 last: bra	
bb_49	: first: mul	 last: bra	
bb_50	: first: mov	 last: bra	
bb_51	: first: setp	 last: bra	
bb_52	: first: mov	 last: bra	
bb_53	: first: mov	 last: mov	
bb_54	: first: mov	 last: image_deref_store	
bb_55	: first: ret	 last: ret	
bb_56	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_RAYGEN_func0_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:32) @%bigger_0 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3193) ret ;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:33) @%bigger_1 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3193) ret ;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:34) @%bigger_2 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3193) ret ;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x1360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1888) @!%ssa_549 bra else_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1892) bra loop_0_exit;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x1368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1892) bra loop_0_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3018) setp.ne.s32 %ssa_738, %ssa_548, %ssa_293;// vec1  1 ssa_738 = ine ssa_548, ssa_293
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x1370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1896) bra end_if_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1907) cvt.rn.f32.u32 %ssa_550, %ssa_21_0; // vec1 32 ssa_550 = u2f32 ssa_21.x
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x1568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2095) @!%ssa_603 bra else_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2099) bra loop_1_exit;
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x1570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2099) bra loop_1_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2121) st.global.s32 [%ssa_543], %ssa_592; // intrinsic store_deref (%ssa_543, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x1578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2103) bra end_if_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2113) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_584, block_8: ssa_592
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x1588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2116) bra loop_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x14d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2040) mul.lo.s32 %ssa_587, %ssa_553_bits, %ssa_586; // vec1 32 ssa_587 = imul ssa_553, ssa_586
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x1ad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2594) @!%ssa_703 bra else_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x1b10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2610) bra loop_2_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x1b18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2614) bra end_if_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1b20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2625) setp.eq.s32 %ssa_704, %ssa_700, %ssa_702;// vec1  1 ssa_704 = ieq ssa_700, ssa_702
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x1b28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2630) @!%ssa_704 bra else_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x1b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2652) bra loop_2_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x1b80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2656) bra end_if_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1b88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2667) load_vulkan_descriptor %ssa_705, 0, 0, 1000150000; // vec1 64 ssa_705 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x1be0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2696) @%intersections_exit_0 bra exit_intersection_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2726) mov.u32 anyhit_counter_0, 0;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x1c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2703) @%skip_intersection_7_0 bra skip_intersection_label_7_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2707) setp.ne.u32 %skip_intersection_9_0, %intersection_shaderID_0, 9;
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x1c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2708) @%skip_intersection_9_0 bra skip_intersection_label_9_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2712) setp.ne.u32 %skip_intersection_6_0, %intersection_shaderID_0, 6;
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x1c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2713) @%skip_intersection_6_0 bra skip_intersection_label_6_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2717) setp.ne.u32 %skip_intersection_8_0, %intersection_shaderID_0, 8;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x1c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2718) @%skip_intersection_8_0 bra skip_intersection_label_8_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2721) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x1c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2722) bra intersection_loop_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2695) intersection_exit.pred %intersections_exit_0, %intersection_counter_0, %traversal_finished_0;
GPGPU-Sim PTX: 23 (potential) branch divergence @  PC=0x1c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2730) @%anyhit_exit_0 bra exit_anyhit_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2745) hit_geometry.pred %hit_geometry_0, %traversal_finished_0;
GPGPU-Sim PTX: 24 (potential) branch divergence @  PC=0x1c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2737) @%skip_anyhit_10_0 bra skip_anyhit_label_10_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2740) add.u32 anyhit_counter_0, anyhit_counter_0, 1;
GPGPU-Sim PTX: 25 (potential) branch divergence @  PC=0x1cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2741) bra anyhit_loop_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2729) anyhit_exit.pred %anyhit_exit_0, anyhit_counter_0, %traversal_finished_0;
GPGPU-Sim PTX: 26 (potential) branch divergence @  PC=0x1cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2747) @!%hit_geometry_0 bra exit_closest_hit_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2772) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX: 27 (potential) branch divergence @  PC=0x1cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2752) @%skip_closest_hit_4_0 bra skip_closest_hit_label_4_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2756) setp.ne.u32 %skip_closest_hit_2_0, %closest_hit_shaderID_0, 2;
GPGPU-Sim PTX: 28 (potential) branch divergence @  PC=0x1cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2757) @%skip_closest_hit_2_0 bra skip_closest_hit_label_2_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1d00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) setp.ne.u32 %skip_closest_hit_3_0, %closest_hit_shaderID_0, 3;
GPGPU-Sim PTX: 29 (potential) branch divergence @  PC=0x1d08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2762) @%skip_closest_hit_3_0 bra skip_closest_hit_label_3_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1d18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2766) setp.ne.u32 %skip_closest_hit_5_0, %closest_hit_shaderID_0, 5;
GPGPU-Sim PTX: 30 (potential) branch divergence @  PC=0x1d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2767) @%skip_closest_hit_5_0 bra skip_closest_hit_label_5_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2772) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX: 31 (potential) branch divergence @  PC=0x1d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2772) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1d40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2776) end_trace_ray ;
GPGPU-Sim PTX: 32 (potential) branch divergence @  PC=0x1de8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2838) @!%ssa_720 bra else_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 33 (potential) branch divergence @  PC=0x1e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2854) bra loop_2_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) mov.b32 %ssa_818_0, %ssa_809;
GPGPU-Sim PTX: 34 (potential) branch divergence @  PC=0x1e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2858) bra end_if_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2869) mul.f32 %ssa_721, %ssa_795_0, %ssa_710_3; // vec1 32 ssa_721 = fmul ssa_795.x, ssa_710.w
GPGPU-Sim PTX: 35 (potential) branch divergence @  PC=0x1f70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2960) bra loop_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2560) mov.b32 %ssa_805_0, %ssa_798;
GPGPU-Sim PTX: 36 (potential) branch divergence @  PC=0x2008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3012) bra loop_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1872) mov.b32 %ssa_769_0, %ssa_762;
GPGPU-Sim PTX: 37 (potential) branch divergence @  PC=0x2018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3023) @!%ssa_738 bra else_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3105) mov.b32 %ssa_831_0, %ssa_821;
GPGPU-Sim PTX: 38 (potential) branch divergence @  PC=0x2090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3063) bra end_if_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3105) mov.b32 %ssa_831_0, %ssa_821;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_RAYGEN_func0_main
Operand information not set. load_vulkan_descriptor %AccumulationImage, 0, 1; // decl_var image INTERP_MODE_NONE restrict r32g32b32a32_float image2D AccumulationImage
Operand information not set. load_vulkan_descriptor %OutputImage, 0, 2; // decl_var image INTERP_MODE_NONE restrict r8g8b8a8_unorm image2D OutputImage
Operand information not set. load_vulkan_descriptor %ssa_15, 0, 3, 6; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_2) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
Operand information not set. load_vulkan_descriptor %ssa_705, 0, 0, 1000150000; // vec1 64 ssa_705 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
trace_ray instruction found at PC 7112 (line 2689, shader 0)!
Operand information not set. get_intersection_shader_data_address %shader_data_address_0, %intersection_counter_0;
Operand information not set. get_intersection_shaderID %intersection_shaderID_0, %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. get_anyhit_shader_data_address %shader_data_address_any_0, anyhit_counter_0;
Operand information not set. get_anyhit_shaderID %anyhit_shaderID_0, anyhit_counter_0;
Operand information not set. call_anyhit_shader anyhit_counter_0;
Operand information not set. get_closest_hit_shaderID %closest_hit_shaderID_0;
Operand information not set. call_closest_hit_shader 4;
Operand information not set. call_closest_hit_shader 2;
Operand information not set. call_closest_hit_shader 3;
Operand information not set. call_closest_hit_shader 5;
Operand information not set. call_miss_shader ;
Operand information not set. end_trace_ray ;
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_RAYGEN_func0_main'.
gpgpusim: launch dimensions 4 x 128 x 1
gpgpusim: SBT: raygen 0x55efb7310000, miss 0x55efb7310020, hit 0x55efb7310040, callable (nil)
gpgpusim: blas address
	[0x14f66ce10000] -> 0xcadf6600
	[0x14f66ce13900] -> 0xcadf9f00
	[0x14f66ce14b00] -> 0xcadfb100
	[0x14f66ce14d00] -> 0xcadfb300
	[0x14f66ce56500] -> 0xcae3cb00
	[0x14f66ce68600] -> 0xcae4ec00
	[0x14f66ceaff00] -> 0xcae96500
	[0x14f66ceb5e00] -> 0xcae9c400
	[0x14f66cf34400] -> 0xcaf1aa00
	[0x14f66cf3d500] -> 0xcaf23b00
	[0x14f66d05ea00] -> 0xcb045000
	[0x14f66d097700] -> 0xcb07dd00
	[0x14f66d0c6600] -> 0xcb0acc00
	[0x14f66d0f2900] -> 0xcb0d8f00
	[0x14f66d110600] -> 0xcb0f6c00
	[0x14f66d13aa00] -> 0xcb121000
	[0x14f66d14cb00] -> 0xcb133100
	[0x14f66d17ec00] -> 0xcb165200
	[0x14f66d185500] -> 0xcb16bb00
	[0x14f66d403000] -> 0xcb3e9600
	[0x14f66d413300] -> 0xcb3f9900
	[0x14f66d4b1400] -> 0xcb497a00
	[0x14f66d4c1700] -> 0xcb4a7d00
	[0x14f66d4ede00] -> 0xcb4d4400
	[0x14f66d4fd100] -> 0xcb4e3700
	[0x14f66d502400] -> 0xcb4e8a00
	[0x14f66d580a00] -> 0xcb567000
	[0x14f66d5b2b00] -> 0xcb599100
	[0x14f66d5ca800] -> 0xcb5b0e00
	[0x14f66d6ba900] -> 0xcb6a0f00
	[0x14f66d6bbb00] -> 0xcb6a2100
	[0x14f66d6efa00] -> 0xcb6d6000
	[0x14f66d701b00] -> 0xcb6e8100
	[0x14f66d702100] -> 0xcb6e8700
	[0x14f66d7f2200] -> 0xcb7d8800
	[0x14f66d865500] -> 0xcb84bb00
	[0x14f66d875800] -> 0xcb85be00
	[0x14f66d884300] -> 0xcb86a900
	[0x14f66d887100] -> 0xcb86d700
	[0x14f66da26f00] -> 0xcba0d500
	[0x14f66da8da00] -> 0xcba74000
	[0x14f66db83600] -> 0xcbb69c00
	[0x14f66dd21300] -> 0xcbd07900
	[0x14f66dda8400] -> 0xcbd8ea00
	[0x14f66ddda500] -> 0xcbdc0b00
	[0x14f66ddda700] -> 0xcbdc0d00
	[0x14f66de0c600] -> 0xcbdf2c00
	[0x14f66e54c800] -> 0xcc532e00
	[0x14f66e57e900] -> 0xcc564f00
	[0x14f66e59c600] -> 0xcc582c00
	[0x14f66e61ac00] -> 0xcc601200
	[0x14f66e65c400] -> 0xcc642a00
	[0x14f66e66af00] -> 0xcc651500
	[0x14f66e66ce00] -> 0xcc653400
	[0x14f66e67d500] -> 0xcc663b00
	[0x14f66e680e00] -> 0xcc667400
	[0x14f66e87d100] -> 0xcc863700
	[0x14f66e975200] -> 0xcc95b800
	[0x14f66e985500] -> 0xcc96bb00
	[0x14f66ea46800] -> 0xcca2ce00
	[0x14f66eb53600] -> 0xccb39c00
	[0x14f66eb5eb00] -> 0xccb45100
	[0x14f66eb70c00] -> 0xccb57200
	[0x14f66ebbaa00] -> 0xccba1000
	[0x14f66ebbf600] -> 0xccba5c00
	[0x14f66ebcf900] -> 0xccbb5f00
	[0x14f66ec11100] -> 0xccbf7700
	[0x14f66ec23200] -> 0xccc09800
	[0x14f66ec7f000] -> 0xccc65600
	[0x14f66ed69100] -> 0xccd4f700
	[0x14f66edc4f00] -> 0xccdab500
	[0x14f66ef64c00] -> 0xccf4b200
	[0x14f66ef96d00] -> 0xccf7d300
	[0x14f66ef9e000] -> 0xccf84600
	[0x14f66efda300] -> 0xccfc0900
	[0x14f66efdb200] -> 0xccfc1800
	[0x14f66f04e500] -> 0xcd034b00
	[0x14f66f0bfc00] -> 0xcd0a6200
	[0x14f66f0f1d00] -> 0xcd0d8300
	[0x14f66f1e7a00] -> 0xcd1ce000
	[0x14f66f3a9b00] -> 0xcd390100
	[0x14f66f3ad400] -> 0xcd393a00
	[0x14f66f3b0d00] -> 0xcd397300
	[0x14f66f3dd400] -> 0xcd3c3a00
	[0x14f66f4d5500] -> 0xcd4bbb00
	[0x14f66f50a000] -> 0xcd4f0600
	[0x14f66f588600] -> 0xcd56ec00
	[0x14f66f59af00] -> 0xcd581500
	[0x14f66f5a9a00] -> 0xcd590000
	[0x14f66f5bcd00] -> 0xcd5a3300
	[0x14f66f759700] -> 0xcd73fd00
	[0x14f66f78b800] -> 0xcd771e00
	[0x14f66fee1b00] -> 0xcdec8100
	[0x14f670016c00] -> 0xcdffd200
	[0x14f670028700] -> 0xce00ed00
	[0x14f67003a200] -> 0xce020800
	[0x14f67004a500] -> 0xce030b00
	[0x14f67007c600] -> 0xce062c00
	[0x14f67009b100] -> 0xce081700
	[0x14f6700ab800] -> 0xce091e00
	[0x14f6700c8100] -> 0xce0ae700
	[0x14f6700ca200] -> 0xce0b0800
	[0x14f6700ca400] -> 0xce0b0a00
	[0x14f6700d8f00] -> 0xce0bf500
	[0x14f6700eaa00] -> 0xce0d1000
	[0x14f670118700] -> 0xce0fed00
	[0x14f670636700] -> 0xce61cd00
	[0x14f67064e400] -> 0xce634a00
	[0x14f670660500] -> 0xce646b00
	[0x14f670875e00] -> 0xce85c400
	[0x14f670d93700] -> 0xced79d00
	[0x14f670dc5800] -> 0xcedabe00
	[0x14f670dc6a00] -> 0xcedad000
	[0x14f670ed3800] -> 0xceeb9e00
	[0x14f670fcb900] -> 0xcefb1f00
	[0x14f67103ec00] -> 0xcf025200
	[0x14f67106b300] -> 0xcf051900
	[0x14f67107d400] -> 0xcf063a00
	[0x14f671104500] -> 0xcf0eab00
	[0x14f67110fa00] -> 0xcf0f6000
	[0x14f6712af800] -> 0xcf295e00
	[0x14f6712bc700] -> 0xcf2a2d00
	[0x14f671304000] -> 0xcf2ea600
	[0x14f671307900] -> 0xcf2edf00
	[0x14f671312e00] -> 0xcf2f9400
	[0x14f671324700] -> 0xcf30ad00
	[0x14f671414600] -> 0xcf3fac00
	[0x14f67149b700] -> 0xcf481d00
	[0x14f67149c900] -> 0xcf482f00
	[0x14f6715efa00] -> 0xcf5d6000
	[0x14f6715fed00] -> 0xcf5e5300
	[0x14f671751e00] -> 0xcf738400
	[0x14f671779d00] -> 0xcf760300
	[0x14f67177d600] -> 0xcf763c00
	[0x14f6717af700] -> 0xcf795d00
	[0x14f6717d7600] -> 0xcf7bdc00
	[0x14f6717f5300] -> 0xcf7db900
	[0x14f672fdd400] -> 0xd0fc3a00
	[0x14f673091500] -> 0xd1077b00
	[0x14f673189600] -> 0xd116fc00
	[0x14f673198900] -> 0xd117ef00
	[0x14f67320bc00] -> 0xd11f2200
	[0x14f67320be00] -> 0xd11f2400
	[0x14f67320f700] -> 0xd11f5d00
	[0x14f673960e00] -> 0xd1947400
	[0x14f673995100] -> 0xd197b700
	[0x14f6739c9100] -> 0xd19af700
	[0x14f67411f400] -> 0xd2105a00
	[0x14f674797400] -> 0xd277da00
	[0x14f67481a900] -> 0xd2800f00
	[0x14f674829c00] -> 0xd2810200
	[0x14f674838700] -> 0xd281ed00
	[0x14f674881400] -> 0xd2867a00
	[0x14f67490b700] -> 0xd28f1d00
	[0x14f67490b900] -> 0xd28f1f00
	[0x14f67493da00] -> 0xd2924000
	[0x14f67493ec00] -> 0xd2925200
	[0x14f674945200] -> 0xd292b800
	[0x14f674be0700] -> 0xd2bc6d00
	[0x14f674c08600] -> 0xd2beec00
	[0x14f674c3a700] -> 0xd2c20d00
	[0x14f674c3b900] -> 0xd2c21f00
	[0x14f674c3bb00] -> 0xd2c22100
	[0x14f674ce5700] -> 0xd2ccbd00
	[0x14f674e85200] -> 0xd2e6b800
	[0x14f674eb1500] -> 0xd2e97b00
	[0x14f674fa0400] -> 0xd2f86a00
	[0x14f67506b800] -> 0xd3051e00
	[0x14f67511f900] -> 0xd3105f00
	[0x14f67512fc00] -> 0xd3116200
	[0x14f675440900] -> 0xd3426f00
	[0x14f675472a00] -> 0xd3459000
	[0x14f6755a7b00] -> 0xd358e100
	[0x14f6755f9c00] -> 0xd35e0200
	[0x14f6756f1d00] -> 0xd36d8300
	[0x14f6756f1f00] -> 0xd36d8500
	[0x14f6756f6800] -> 0xd36dce00
	[0x14f6756f6e00] -> 0xd36dd400
	[0x14f67573e700] -> 0xd3724d00
	[0x14f675771600] -> 0xd3757c00
	[0x14f6757b8f00] -> 0xd379f500
	[0x14f6757bf800] -> 0xd37a5e00
	[0x14f67581e200] -> 0xd3804800
	[0x14f6759be000] -> 0xd39a4600
	[0x14f6759f0100] -> 0xd39d6700
	[0x14f675a22100] -> 0xd3a08700
	[0x14f675a25900] -> 0xd3a0bf00
	[0x14f675a3bf00] -> 0xd3a22500
	[0x14f675a3c500] -> 0xd3a22b00
	[0x14f675a4c800] -> 0xd3a32e00
	[0x14f675a52e00] -> 0xd3a39400
	[0x14f675a65700] -> 0xd3a4bd00
	[0x14f675aabd00] -> 0xd3a92300
	[0x14f675ad3c00] -> 0xd3aba200
	[0x14f675ae5d00] -> 0xd3acc300
	[0x14f675af6c00] -> 0xd3add200
	[0x14f675b08d00] -> 0xd3aef300
	[0x14f675ca8b00] -> 0xd3c8f100
	[0x14f675cb4000] -> 0xd3c9a600
	[0x14f675d1ad00] -> 0xd3d01300
	[0x14f675d28a00] -> 0xd3d0f000
	[0x14f675d2c300] -> 0xd3d12900
	[0x14f675d31600] -> 0xd3d17c00
	[0x14f675e48f00] -> 0xd3e2f500
	[0x14f675ec7000] -> 0xd3ead600
	[0x14f675ec8200] -> 0xd3eae800
	[0x14f675ecbb00] -> 0xd3eb2100
	[0x14f675ee9800] -> 0xd3ecfe00
	[0x14f675f12200] -> 0xd3ef8800
	[0x14f675f24300] -> 0xd3f0a900
	[0x14f676007200] -> 0xd3fed800
	[0x14f6760fcf00] -> 0xd40e3500
	[0x14f67612be00] -> 0xd4112400
	[0x14f6761b2f00] -> 0xd4199500
	[0x14f676231500] -> 0xd4217b00
	[0x14f6762c4800] -> 0xd42aae00
	[0x14f6763bc900] -> 0xd43a2f00
	[0x14f6763da600] -> 0xd43c0c00
	[0x14f6764a1300] -> 0xd4487900
	[0x14f67663dd00] -> 0xd4624300
	[0x14f6766c4e00] -> 0xd46ab400
	[0x14f6766f3400] -> 0xd46d9a00
	[0x14f676760500] -> 0xd4746b00
	[0x14f6767fce00] -> 0xd47e3400
	[0x14f676801a00] -> 0xd47e8000
	[0x14f676808300] -> 0xd47ee900
	[0x14f676900400] -> 0xd48e6a00
	[0x14f67697ea00] -> 0xd4965000
	[0x14f67697ef00] -> 0xd4965500
	[0x14f6769f0700] -> 0xd49d6d00
	[0x14f676b69c00] -> 0xd4b50200
	[0x14f676b69e00] -> 0xd4b50400
	[0x14f676c06700] -> 0xd4becd00
	[0x14f676c06900] -> 0xd4becf00
	[0x14f676c06b00] -> 0xd4bed100
	[0x14f676c0a400] -> 0xd4bf0a00
	[0x14f676c0a600] -> 0xd4bf0c00
	[0x14f676c7d900] -> 0xd4c63f00
	[0x14f676c88e00] -> 0xd4c6f400
	[0x14f676cae500] -> 0xd4c94b00
	[0x14f676cbe800] -> 0xd4ca4e00
	[0x14f676ccfa00] -> 0xd4cb6000
	[0x14f676d56b00] -> 0xd4d3d100
	[0x14f676d75e00] -> 0xd4d5c400
	[0x14f676da4d00] -> 0xd4d8b300
	[0x14f676da5f00] -> 0xd4d8c500
	[0x14f676eb2d00] -> 0xd4e99300
	[0x14f676edf000] -> 0xd4ec5600
	[0x14f676f5d600] -> 0xd4f43c00
	[0x14f676f74800] -> 0xd4f5ae00
	[0x14f676f76900] -> 0xd4f5cf00
	[0x14f676fe9c00] -> 0xd4fd0200
	[0x14f677186600] -> 0xd516cc00
	[0x14f677189d00] -> 0xd5170300
	[0x14f6771a6600] -> 0xd518cc00
	[0x14f6771b1900] -> 0xd5197f00
	[0x14f6771cd400] -> 0xd51b3a00
	[0x14f677c68b00] -> 0xd5c4f100
	[0x14f677e08600] -> 0xd5deec00
	[0x14f677e1ce00] -> 0xd5e03400
	[0x14f677e34c00] -> 0xd5e1b200
	[0x14f677e35e00] -> 0xd5e1c400
	[0x14f677ea9100] -> 0xd5e8f700
	[0x14f677f27200] -> 0xd5f0d800
	[0x14f677f36c00] -> 0xd5f1d200
	[0x14f677f6aa00] -> 0xd5f51000
	[0x14f677f7d700] -> 0xd5f63d00
	[0x14f67824e200] -> 0xd6234800
	[0x14f678257d00] -> 0xd623e300
	[0x14f678341e00] -> 0xd6328400
	[0x14f6784e1b00] -> 0xd64c8100
	[0x14f6784f3c00] -> 0xd64da200
	[0x14f678572200] -> 0xd6558800
	[0x14f678576e00] -> 0xd655d400
	[0x14f67858f300] -> 0xd6575900
	[0x14f678ccf500] -> 0xd6cb5b00
	[0x14f678cdaa00] -> 0xd6cc1000
	[0x14f678d1c200] -> 0xd6d02800
	[0x14f678d39f00] -> 0xd6d20500
	[0x14f678d46e00] -> 0xd6d2d400
	[0x14f678d7c300] -> 0xd6d62900
	[0x14f678e03400] -> 0xd6de9a00
	[0x14f67947b400] -> 0xd7461a00
	[0x14f67947b600] -> 0xd7461c00
	[0x14f679489300] -> 0xd746f900
	[0x14f679525c00] -> 0xd750c200
	[0x14f6796d6500] -> 0xd76bcb00
	[0x14f679708600] -> 0xd76eec00
	[0x14f67970b400] -> 0xd76f1a00
	[0x14f679803500] -> 0xd77e9b00
	[0x14f679874000] -> 0xd785a600
	[0x14f6798a0700] -> 0xd7886d00
	[0x14f6798be400] -> 0xd78a4a00
	[0x14f6799b4300] -> 0xd799a900
	[0x14f6799c3600] -> 0xd79a9c00
	[0x14f6799d3900] -> 0xd79b9f00
	[0x14f679b9e600] -> 0xd7b84c00
	[0x14f679c94200] -> 0xd7c7a800
	[0x14f679c99500] -> 0xd7c7fb00
	[0x14f679cc4600] -> 0xd7caac00
	[0x14f679ce7800] -> 0xd7ccde00
	[0x14f679cf1300] -> 0xd7cd7900
	[0x14f679d23400] -> 0xd7d09a00
	[0x14f679d33700] -> 0xd7d19d00
	[0x14f679d33e00] -> 0xd7d1a400
	[0x14f679d37700] -> 0xd7d1dd00
	[0x14f679d42c00] -> 0xd7d29200
	[0x14f679d51f00] -> 0xd7d38500
	[0x14f679d5b700] -> 0xd7d41d00
	[0x14f679d5d800] -> 0xd7d43e00
	[0x14f679db9600] -> 0xd7d9fc00
	[0x14f679e18000] -> 0xd7dfe600
	[0x14f679e1df00] -> 0xd7e04500
	[0x14f679e97c00] -> 0xd7e7e200
	[0x14f679e99300] -> 0xd7e7f900
	[0x14f679ea8600] -> 0xd7e8ec00
	[0x14f679f1b900] -> 0xd7f01f00
	[0x14f679f20800] -> 0xd7f06e00
	[0x14f679f21a00] -> 0xd7f08000
	[0x14f679f21c00] -> 0xd7f08200
gpgpusim: tlas address 0xdf09c300
Streaming cache with 4096 mshr
GPGPU-Sim uArch: Shader 0 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: CTA/core = 16, limited by: cta_limit
GPGPU-Sim uArch: Shader 1 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: Shader 2 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: Shader 3 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: Shader 4 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: Shader 5 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: Shader 6 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim uArch: Shader 7 bind to kernel 1 'MESA_SHADER_RAYGEN_func0_main'
GPGPU-Sim PTX: WARNING (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:99) ** reading undefined register '%const1_f32' (cuid:0). Setting to 0X00000000. This is okay if you are simulating the native ISA
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_MISS_func1_main'...
Printing basic blocks for function 'MESA_SHADER_MISS_func1_main':
bb_00	:  PC=0x2218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:13) rt_alloc_mem %Ray, 48, 32; // decl_var shader_call_data INTERP_MODE_NONE RayPayload Ray
bb_00	:  PC=0x2220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:21) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x2228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:24) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x2230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:27) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x2238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:30) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x2240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:38) mov.f32 %ssa_0_0, 0F00000000;
bb_00	:  PC=0x2248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:39) mov.f32 %ssa_0_1, 0F00000000;
bb_00	:  PC=0x2250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:40) mov.f32 %ssa_0_2, 0F00000000;
bb_00	:  PC=0x2258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:41) mov.f32 %ssa_0_3, 0Fbf800000;
bb_00	:  PC=0x2260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:45) mov.f32 %ssa_1, 0Fbf800000; // vec1 32 ssa_1 = load_const (0xbf800000 /* -1.000000 */)
bb_00	:  PC=0x2268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:47) mov.b32 %ssa_1_bits, 0Fbf800000;
bb_00	:  PC=0x2270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:53) mov.f32 %ssa_2_0, 0F3f800000;
bb_00	:  PC=0x2278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:54) mov.f32 %ssa_2_1, 0F3f800000;
bb_00	:  PC=0x2280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:55) mov.f32 %ssa_2_2, 0F3f800000;
bb_00	:  PC=0x2288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:56) mov.f32 %ssa_2_3, 0F00000000;
bb_00	:  PC=0x2290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:60) mov.f32 %ssa_3, 0F3f800000; // vec1 32 ssa_3 = load_const (0x3f800000 /* 1.000000 */)
bb_00	:  PC=0x2298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:62) mov.b32 %ssa_3_bits, 0F3f800000;
bb_00	:  PC=0x22a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:65) mov.f32 %ssa_4, 0F00000000; // vec1 32 ssa_4 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x22a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:67) mov.b32 %ssa_4_bits, 0F00000000;
bb_00	:  PC=0x22b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:70) load_vulkan_descriptor %ssa_5, 0, 3, 6; // vec2 32 ssa_5 = intrinsic vulkan_resource_index (%ssa_4) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
bb_00	:  PC=0x22b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:73) mov.b64 %ssa_6, %ssa_5; // vec2 32 ssa_6 = intrinsic load_vulkan_descriptor (%ssa_5) (6) /* desc_type=UBO */
bb_00	:  PC=0x22c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:76) mov.b64 %ssa_7, %ssa_6; // vec2 32 ssa_7 = deref_cast (UniformBufferObjectStruct *)ssa_6 (ubo UniformBufferObjectStruct)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x22c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:79) add.u64 %ssa_8, %ssa_7, 0; // vec2 32 ssa_8 = deref_struct &ssa_7->Camera (ubo UniformBufferObject) /* &((UniformBufferObjectStruct *)ssa_6)->Camera */
bb_00	:  PC=0x22d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:82) add.u64 %ssa_9, %ssa_8, 312; // vec2 32 ssa_9 = deref_struct &ssa_8->HasSky (ubo uint) /* &((UniformBufferObjectStruct *)ssa_6)->Camera.HasSky */
bb_00	:  PC=0x22d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:85) ld.global.u32 %ssa_10, [%ssa_9]; // vec1 32 ssa_10 = intrinsic load_deref (%ssa_9) (16) /* access=16 */
bb_00	:  PC=0x22e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:88) setp.ne.s32 %ssa_11, %ssa_10, %ssa_4_bits; // vec1  1 ssa_11 = ine ssa_10, ssa_4
bb_00	:  PC=0x22e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:93) @!%ssa_11 bra else_6;

bb_01	:  PC=0x22f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:102) load_ray_world_direction %ssa_12_address; // vec3 32 ssa_12 = intrinsic load_ray_world_direction () ()
bb_01	:  PC=0x22f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:103) ld.global.f32 %ssa_12_0, [%ssa_12_address + 0];
bb_01	:  PC=0x2300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:104) ld.global.f32 %ssa_12_1, [%ssa_12_address + 4];
bb_01	:  PC=0x2308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:105) ld.global.f32 %ssa_12_2, [%ssa_12_address + 8];
bb_01	:  PC=0x2310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:106) ld.global.f32 %ssa_12_3, [%ssa_12_address + 12];
bb_01	:  PC=0x2318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:109) mul.f32 %ssa_13, %ssa_12_0, %ssa_12_0; // vec1 32 ssa_13 = fmul ssa_12.x, ssa_12.x
bb_01	:  PC=0x2320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:112) mul.f32 %ssa_14, %ssa_12_1, %ssa_12_1; // vec1 32 ssa_14 = fmul ssa_12.y, ssa_12.y
bb_01	:  PC=0x2328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:115) mul.f32 %ssa_15, %ssa_12_2, %ssa_12_2; // vec1 32 ssa_15 = fmul ssa_12.z, ssa_12.z
bb_01	:  PC=0x2330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:121) mov.f32 %ssa_16_0, %ssa_13;
bb_01	:  PC=0x2338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:122) mov.f32 %ssa_16_1, %ssa_14;
bb_01	:  PC=0x2340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:123) mov.f32 %ssa_16_2, %ssa_15; // vec3 32 ssa_16 = vec3 ssa_13, ssa_14, ssa_15
bb_01	:  PC=0x2348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:126) add.f32 %ssa_17, %ssa_16_0, %ssa_16_1;
bb_01	:  PC=0x2350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:127) add.f32 %ssa_17, %ssa_17, %ssa_16_2; // vec1 32 ssa_17 = fsum3 ssa_16
bb_01	:  PC=0x2358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:130) rsqrt.approx.f32 %ssa_18, %ssa_17;// vec1 32 ssa_18 = frsq ssa_17
bb_01	:  PC=0x2360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:133) mul.f32 %ssa_19, %ssa_12_1, %ssa_18; // vec1 32 ssa_19 = fmul ssa_12.y, ssa_18
bb_01	:  PC=0x2368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:136) add.f32 %ssa_20, %ssa_19, %ssa_3;// vec1 32 ssa_20 = fadd ssa_19, ssa_3
bb_01	:  PC=0x2370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:139) mov.f32 %ssa_21, 0Fbe800000; // vec1 32 ssa_21 = load_const (0xbe800000 /* -0.250000 */)
bb_01	:  PC=0x2378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:141) mov.b32 %ssa_21_bits, 0Fbe800000;
bb_01	:  PC=0x2380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:144) mul.f32 %ssa_22, %ssa_21, %ssa_20;// vec1 32 ssa_22 = fmul ssa_21, ssa_20
bb_01	:  PC=0x2388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:147) mov.f32 %ssa_23, 0Fbe19999a; // vec1 32 ssa_23 = load_const (0xbe19999a /* -0.150000 */)
bb_01	:  PC=0x2390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:149) mov.b32 %ssa_23_bits, 0Fbe19999a;
bb_01	:  PC=0x2398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:152) mul.f32 %ssa_24, %ssa_23, %ssa_20;// vec1 32 ssa_24 = fmul ssa_23, ssa_20
bb_01	:  PC=0x23a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:155) add.f32 %ssa_25, %ssa_2_0, %ssa_22; // vec1 32 ssa_25 = fadd ssa_2.x, ssa_22
bb_01	:  PC=0x23a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:158) add.f32 %ssa_26, %ssa_2_1, %ssa_24; // vec1 32 ssa_26 = fadd ssa_2.y, ssa_24
bb_01	:  PC=0x23b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:164) mov.f32 %ssa_27_0, %ssa_25;
bb_01	:  PC=0x23b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:165) mov.f32 %ssa_27_1, %ssa_26;
bb_01	:  PC=0x23c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:166) mov.f32 %ssa_27_2, %ssa_3;
bb_01	:  PC=0x23c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:167) mov.f32 %ssa_27_3, %ssa_1; // vec4 32 ssa_27 = vec4 ssa_25, ssa_26, ssa_3, ssa_1
bb_01	:  PC=0x23d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:170) mov.b64 %ssa_28, %Ray; // vec1 32 ssa_28 = deref_var &Ray (shader_call_data RayPayload) 
bb_01	:  PC=0x23d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:173) add.u64 %ssa_29, %ssa_28, 0; // vec1 32 ssa_29 = deref_struct &ssa_28->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_01	:  PC=0x23e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:175) st.global.f32 [%ssa_29 + 0], %ssa_27_0;
bb_01	:  PC=0x23e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:176) st.global.f32 [%ssa_29 + 4], %ssa_27_1;
bb_01	:  PC=0x23f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:177) st.global.f32 [%ssa_29 + 8], %ssa_27_2;
bb_01	:  PC=0x23f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:178) st.global.f32 [%ssa_29 + 12], %ssa_27_3;
bb_01	:  PC=0x2400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:184) bra end_if_6;

bb_02	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:189) .reg .b64 %ssa_30;
bb_02	:  PC=0x2408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:190) mov.b64 %ssa_30, %Ray; // vec1 32 ssa_30 = deref_var &Ray (shader_call_data RayPayload) 
bb_02	:  PC=0x2410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:193) add.u64 %ssa_31, %ssa_30, 0; // vec1 32 ssa_31 = deref_struct &ssa_30->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_02	:  PC=0x2418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:195) st.global.f32 [%ssa_31 + 0], %ssa_0_0;
bb_02	:  PC=0x2420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:196) st.global.f32 [%ssa_31 + 4], %ssa_0_1;
bb_02	:  PC=0x2428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:197) st.global.f32 [%ssa_31 + 8], %ssa_0_2;
bb_02	:  PC=0x2430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:198) st.global.f32 [%ssa_31 + 12], %ssa_0_3;

bb_03	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:210) shader_exit:
bb_03	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
bb_03	:  PC=0x2438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;

Summary of basic blocks for 'MESA_SHADER_MISS_func1_main':
bb_00	: first: rt_alloc_mem	 last: bra	
bb_01	: first: load_ray_world_direction	 last: bra	
bb_02	: first: mov	 last: st	
bb_03	: first: ret	 last: ret	
bb_04	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_MISS_func1_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x22e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:93) @!%ssa_11 bra else_6;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x2400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:184) bra end_if_6;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_MISS_func1_main
Operand information not set. load_vulkan_descriptor %ssa_5, 0, 3, 6; // vec2 32 ssa_5 = intrinsic vulkan_resource_index (%ssa_4) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_MISS_func1_main'.
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_ANY_HIT_func10_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_ANY_HIT_func10_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_ANY_HIT_func10_main'...
Printing basic blocks for function 'MESA_SHADER_ANY_HIT_func10_main':
bb_00	:  PC=0x8c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:20) rt_alloc_mem %HitAttributes, 16, 64; // decl_var ray_hit_attrib INTERP_MODE_NONE vec2 HitAttributes
bb_00	:  PC=0x8c08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:22) load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
bb_00	:  PC=0x8c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:30) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x8c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:33) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x8c20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:36) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x8c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:39) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x8c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:44) mov.f32 %ssa_0, 0F00000000; // vec1 32 ssa_0 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x8c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:46) mov.b32 %ssa_0_bits, 0F00000000;
bb_00	:  PC=0x8c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:52) mov.f32 %ssa_1_0, 0F3f800000;
bb_00	:  PC=0x8c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:53) mov.f32 %ssa_1_1, 0F3f800000;
bb_00	:  PC=0x8c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:54) mov.f32 %ssa_1_2, 0F3f800000;
bb_00	:  PC=0x8c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:55) mov.f32 %ssa_1_3, 0F3f800000;
bb_00	:  PC=0x8c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:59) mov.f32 %ssa_2, 0F3f800000; // vec1 32 ssa_2 = load_const (0x3f800000 /* 1.000000 */)
bb_00	:  PC=0x8c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:61) mov.b32 %ssa_2_bits, 0F3f800000;
bb_00	:  PC=0x8c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:64) mov.f32 %ssa_3, 0F00000002; // vec1 32 ssa_3 = load_const (0x00000002 /* 0.000000 */)
bb_00	:  PC=0x8c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:66) mov.b32 %ssa_3_bits, 0F00000002;
bb_00	:  PC=0x8c80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:69) mov.f32 %ssa_4, 0F00000003; // vec1 32 ssa_4 = load_const (0x00000003 /* 0.000000 */)
bb_00	:  PC=0x8c88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:71) mov.b32 %ssa_4_bits, 0F00000003;
bb_00	:  PC=0x8c90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:74) mov.f32 %ssa_5, 0F00000001; // vec1 32 ssa_5 = load_const (0x00000001 /* 0.000000 */)
bb_00	:  PC=0x8c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:76) mov.b32 %ssa_5_bits, 0F00000001;
bb_00	:  PC=0x8ca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:79) load_ray_instance_custom_index %ssa_6;// vec1 32 ssa_6 = intrinsic load_ray_instance_custom_index () ()
bb_00	:  PC=0x8ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:82) load_vulkan_descriptor %ssa_7, 0, 7, 7; // vec2 32 ssa_7 = intrinsic vulkan_resource_index (%ssa_0) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
bb_00	:  PC=0x8cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:85) mov.b64 %ssa_8, %ssa_7; // vec2 32 ssa_8 = intrinsic load_vulkan_descriptor (%ssa_7) (7) /* desc_type=SSBO */
bb_00	:  PC=0x8cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:88) mov.b64 %ssa_9, %ssa_8; // vec2 32 ssa_9 = deref_cast (OffsetArray *)ssa_8 (ssbo OffsetArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x8cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:91) add.u64 %ssa_10, %ssa_9, 0; // vec2 32 ssa_10 = deref_struct &ssa_9->Offsets (ssbo uvec2[]) /* &((OffsetArray *)ssa_8)->Offsets */
bb_00	:  PC=0x8cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:96) mov.u32 %ssa_11_array_index_32, %ssa_6;
bb_00	:  PC=0x8cd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:97) mul.wide.u32 %ssa_11_array_index_64, %ssa_11_array_index_32, 8;
bb_00	:  PC=0x8cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:98) add.u64 %ssa_11, %ssa_10, %ssa_11_array_index_64; // vec2 32 ssa_11 = deref_array &(*ssa_10)[ssa_6] (ssbo uvec2) /* &((OffsetArray *)ssa_8)->Offsets[ssa_6] */
bb_00	:  PC=0x8ce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:102) ld.global.u32 %ssa_12_0, [%ssa_11 + 0];
bb_00	:  PC=0x8ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:103) ld.global.u32 %ssa_12_1, [%ssa_11 + 4];
bb_00	:  PC=0x8cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:108) load_primitive_id %ssa_13;// vec1 32 ssa_13 = intrinsic load_primitive_id () ()
bb_00	:  PC=0x8cf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:111) mul.lo.s32 %ssa_14, %ssa_13, %ssa_4_bits; // vec1 32 ssa_14 = imul ssa_13, ssa_4
bb_00	:  PC=0x8d00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:114) add.s32 %ssa_15, %ssa_12_0, %ssa_14; // vec1 32 ssa_15 = iadd ssa_12.x, ssa_14
bb_00	:  PC=0x8d08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:117) load_vulkan_descriptor %ssa_16, 0, 5, 7; // vec2 32 ssa_16 = intrinsic vulkan_resource_index (%ssa_0) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
bb_00	:  PC=0x8d10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:120) mov.b64 %ssa_17, %ssa_16; // vec2 32 ssa_17 = intrinsic load_vulkan_descriptor (%ssa_16) (7) /* desc_type=SSBO */
bb_00	:  PC=0x8d18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:123) mov.b64 %ssa_18, %ssa_17; // vec2 32 ssa_18 = deref_cast (IndexArray *)ssa_17 (ssbo IndexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x8d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:126) add.u64 %ssa_19, %ssa_18, 0; // vec2 32 ssa_19 = deref_struct &ssa_18->Indices (ssbo uint[]) /* &((IndexArray *)ssa_17)->Indices */
bb_00	:  PC=0x8d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:131) cvt.u32.s32 %ssa_20_array_index_32, %ssa_15;
bb_00	:  PC=0x8d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:132) mul.wide.u32 %ssa_20_array_index_64, %ssa_20_array_index_32, 4;
bb_00	:  PC=0x8d38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:133) add.u64 %ssa_20, %ssa_19, %ssa_20_array_index_64; // vec2 32 ssa_20 = deref_array &(*ssa_19)[ssa_15] (ssbo uint) /* &((IndexArray *)ssa_17)->Indices[ssa_15] */
bb_00	:  PC=0x8d40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:136) ld.global.u32 %ssa_21, [%ssa_20]; // vec1 32 ssa_21 = intrinsic load_deref (%ssa_20) (16) /* access=16 */
bb_00	:  PC=0x8d48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:139) add.s32 %ssa_22, %ssa_12_1, %ssa_21; // vec1 32 ssa_22 = iadd ssa_12.y, ssa_21
bb_00	:  PC=0x8d50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:142) mov.f32 %ssa_23, 0F00000008; // vec1 32 ssa_23 = load_const (0x00000008 /* 0.000000 */)
bb_00	:  PC=0x8d58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:144) mov.b32 %ssa_23_bits, 0F00000008;
bb_00	:  PC=0x8d60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:147) mov.f32 %ssa_24, 0F00000007; // vec1 32 ssa_24 = load_const (0x00000007 /* 0.000000 */)
bb_00	:  PC=0x8d68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:149) mov.b32 %ssa_24_bits, 0F00000007;
bb_00	:  PC=0x8d70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:152) mov.f32 %ssa_25, 0F00000006; // vec1 32 ssa_25 = load_const (0x00000006 /* 0.000000 */)
bb_00	:  PC=0x8d78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:154) mov.b32 %ssa_25_bits, 0F00000006;
bb_00	:  PC=0x8d80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:157) mov.f32 %ssa_26, 0F00000009; // vec1 32 ssa_26 = load_const (0x00000009 /* 0.000000 */)
bb_00	:  PC=0x8d88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:159) mov.b32 %ssa_26_bits, 0F00000009;
bb_00	:  PC=0x8d90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:162) mul.lo.s32 %ssa_27, %ssa_22, %ssa_26_bits; // vec1 32 ssa_27 = imul ssa_22, ssa_26
bb_00	:  PC=0x8d98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:165) add.s32 %ssa_28, %ssa_27, %ssa_25_bits; // vec1 32 ssa_28 = iadd ssa_27, ssa_25
bb_00	:  PC=0x8da0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:168) load_vulkan_descriptor %ssa_29, 0, 4, 7; // vec2 32 ssa_29 = intrinsic vulkan_resource_index (%ssa_0) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
bb_00	:  PC=0x8da8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:171) mov.b64 %ssa_30, %ssa_29; // vec2 32 ssa_30 = intrinsic load_vulkan_descriptor (%ssa_29) (7) /* desc_type=SSBO */
bb_00	:  PC=0x8db0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:174) mov.b64 %ssa_31, %ssa_30; // vec2 32 ssa_31 = deref_cast (VertexArray *)ssa_30 (ssbo VertexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x8db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:177) add.u64 %ssa_32, %ssa_31, 0; // vec2 32 ssa_32 = deref_struct &ssa_31->Vertices (ssbo float[]) /* &((VertexArray *)ssa_30)->Vertices */
bb_00	:  PC=0x8dc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:182) cvt.u32.s32 %ssa_33_array_index_32, %ssa_28;
bb_00	:  PC=0x8dc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:183) mul.wide.u32 %ssa_33_array_index_64, %ssa_33_array_index_32, 4;
bb_00	:  PC=0x8dd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:184) add.u64 %ssa_33, %ssa_32, %ssa_33_array_index_64; // vec2 32 ssa_33 = deref_array &(*ssa_32)[ssa_28] (ssbo float) /* &((VertexArray *)ssa_30)->Vertices[ssa_28] */
bb_00	:  PC=0x8dd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:187) ld.global.f32 %ssa_34, [%ssa_33]; // vec1 32 ssa_34 = intrinsic load_deref (%ssa_33) (16) /* access=16 */
bb_00	:  PC=0x8de0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:190) add.s32 %ssa_35, %ssa_27, %ssa_24_bits; // vec1 32 ssa_35 = iadd ssa_27, ssa_24
bb_00	:  PC=0x8de8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:195) cvt.u32.s32 %ssa_36_array_index_32, %ssa_35;
bb_00	:  PC=0x8df0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:196) mul.wide.u32 %ssa_36_array_index_64, %ssa_36_array_index_32, 4;
bb_00	:  PC=0x8df8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:197) add.u64 %ssa_36, %ssa_32, %ssa_36_array_index_64; // vec2 32 ssa_36 = deref_array &(*ssa_32)[ssa_35] (ssbo float) /* &((VertexArray *)ssa_30)->Vertices[ssa_35] */
bb_00	:  PC=0x8e00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:200) ld.global.f32 %ssa_37, [%ssa_36]; // vec1 32 ssa_37 = intrinsic load_deref (%ssa_36) (16) /* access=16 */
bb_00	:  PC=0x8e08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:203) add.s32 %ssa_38, %ssa_27, %ssa_23_bits; // vec1 32 ssa_38 = iadd ssa_27, ssa_23
bb_00	:  PC=0x8e10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:208) cvt.u32.s32 %ssa_39_array_index_32, %ssa_38;
bb_00	:  PC=0x8e18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:209) mul.wide.u32 %ssa_39_array_index_64, %ssa_39_array_index_32, 4;
bb_00	:  PC=0x8e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:210) add.u64 %ssa_39, %ssa_32, %ssa_39_array_index_64; // vec2 32 ssa_39 = deref_array &(*ssa_32)[ssa_38] (ssbo float) /* &((VertexArray *)ssa_30)->Vertices[ssa_38] */
bb_00	:  PC=0x8e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:213) ld.global.f32 %ssa_40, [%ssa_39]; // vec1 32 ssa_40 = intrinsic load_deref (%ssa_39) (16) /* access=16 */
bb_00	:  PC=0x8e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:216) add.s32 %ssa_41, %ssa_12_0, %ssa_5_bits; // vec1 32 ssa_41 = iadd ssa_12.x, ssa_5
bb_00	:  PC=0x8e38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:219) add.s32 %ssa_42, %ssa_41, %ssa_14;// vec1 32 ssa_42 = iadd ssa_41, ssa_14
bb_00	:  PC=0x8e40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:224) cvt.u32.s32 %ssa_43_array_index_32, %ssa_42;
bb_00	:  PC=0x8e48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:225) mul.wide.u32 %ssa_43_array_index_64, %ssa_43_array_index_32, 4;
bb_00	:  PC=0x8e50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:226) add.u64 %ssa_43, %ssa_19, %ssa_43_array_index_64; // vec2 32 ssa_43 = deref_array &(*ssa_19)[ssa_42] (ssbo uint) /* &((IndexArray *)ssa_17)->Indices[ssa_42] */
bb_00	:  PC=0x8e58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:229) ld.global.u32 %ssa_44, [%ssa_43]; // vec1 32 ssa_44 = intrinsic load_deref (%ssa_43) (16) /* access=16 */
bb_00	:  PC=0x8e60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:232) add.s32 %ssa_45, %ssa_12_1, %ssa_44; // vec1 32 ssa_45 = iadd ssa_12.y, ssa_44
bb_00	:  PC=0x8e68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:235) mul.lo.s32 %ssa_46, %ssa_45, %ssa_26_bits; // vec1 32 ssa_46 = imul ssa_45, ssa_26
bb_00	:  PC=0x8e70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:238) add.s32 %ssa_47, %ssa_46, %ssa_25_bits; // vec1 32 ssa_47 = iadd ssa_46, ssa_25
bb_00	:  PC=0x8e78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:243) cvt.u32.s32 %ssa_48_array_index_32, %ssa_47;
bb_00	:  PC=0x8e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:244) mul.wide.u32 %ssa_48_array_index_64, %ssa_48_array_index_32, 4;
bb_00	:  PC=0x8e88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:245) add.u64 %ssa_48, %ssa_32, %ssa_48_array_index_64; // vec2 32 ssa_48 = deref_array &(*ssa_32)[ssa_47] (ssbo float) /* &((VertexArray *)ssa_30)->Vertices[ssa_47] */
bb_00	:  PC=0x8e90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:248) ld.global.f32 %ssa_49, [%ssa_48]; // vec1 32 ssa_49 = intrinsic load_deref (%ssa_48) (16) /* access=16 */
bb_00	:  PC=0x8e98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:251) add.s32 %ssa_50, %ssa_46, %ssa_24_bits; // vec1 32 ssa_50 = iadd ssa_46, ssa_24
bb_00	:  PC=0x8ea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:256) cvt.u32.s32 %ssa_51_array_index_32, %ssa_50;
bb_00	:  PC=0x8ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:257) mul.wide.u32 %ssa_51_array_index_64, %ssa_51_array_index_32, 4;
bb_00	:  PC=0x8eb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:258) add.u64 %ssa_51, %ssa_32, %ssa_51_array_index_64; // vec2 32 ssa_51 = deref_array &(*ssa_32)[ssa_50] (ssbo float) /* &((VertexArray *)ssa_30)->Vertices[ssa_50] */
bb_00	:  PC=0x8eb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:261) ld.global.f32 %ssa_52, [%ssa_51]; // vec1 32 ssa_52 = intrinsic load_deref (%ssa_51) (16) /* access=16 */
bb_00	:  PC=0x8ec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:264) add.s32 %ssa_53, %ssa_12_0, %ssa_3_bits; // vec1 32 ssa_53 = iadd ssa_12.x, ssa_3
bb_00	:  PC=0x8ec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:267) add.s32 %ssa_54, %ssa_53, %ssa_14;// vec1 32 ssa_54 = iadd ssa_53, ssa_14
bb_00	:  PC=0x8ed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:272) cvt.u32.s32 %ssa_55_array_index_32, %ssa_54;
bb_00	:  PC=0x8ed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:273) mul.wide.u32 %ssa_55_array_index_64, %ssa_55_array_index_32, 4;
bb_00	:  PC=0x8ee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:274) add.u64 %ssa_55, %ssa_19, %ssa_55_array_index_64; // vec2 32 ssa_55 = deref_array &(*ssa_19)[ssa_54] (ssbo uint) /* &((IndexArray *)ssa_17)->Indices[ssa_54] */
bb_00	:  PC=0x8ee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:277) ld.global.u32 %ssa_56, [%ssa_55]; // vec1 32 ssa_56 = intrinsic load_deref (%ssa_55) (16) /* access=16 */
bb_00	:  PC=0x8ef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:280) add.s32 %ssa_57, %ssa_12_1, %ssa_56; // vec1 32 ssa_57 = iadd ssa_12.y, ssa_56
bb_00	:  PC=0x8ef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:283) mul.lo.s32 %ssa_58, %ssa_57, %ssa_26_bits; // vec1 32 ssa_58 = imul ssa_57, ssa_26
bb_00	:  PC=0x8f00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:286) add.s32 %ssa_59, %ssa_58, %ssa_25_bits; // vec1 32 ssa_59 = iadd ssa_58, ssa_25
bb_00	:  PC=0x8f08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:291) cvt.u32.s32 %ssa_60_array_index_32, %ssa_59;
bb_00	:  PC=0x8f10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:292) mul.wide.u32 %ssa_60_array_index_64, %ssa_60_array_index_32, 4;
bb_00	:  PC=0x8f18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:293) add.u64 %ssa_60, %ssa_32, %ssa_60_array_index_64; // vec2 32 ssa_60 = deref_array &(*ssa_32)[ssa_59] (ssbo float) /* &((VertexArray *)ssa_30)->Vertices[ssa_59] */
bb_00	:  PC=0x8f20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:296) ld.global.f32 %ssa_61, [%ssa_60]; // vec1 32 ssa_61 = intrinsic load_deref (%ssa_60) (16) /* access=16 */
bb_00	:  PC=0x8f28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:299) add.s32 %ssa_62, %ssa_58, %ssa_24_bits; // vec1 32 ssa_62 = iadd ssa_58, ssa_24
bb_00	:  PC=0x8f30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:304) cvt.u32.s32 %ssa_63_array_index_32, %ssa_62;
bb_00	:  PC=0x8f38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:305) mul.wide.u32 %ssa_63_array_index_64, %ssa_63_array_index_32, 4;
bb_00	:  PC=0x8f40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:306) add.u64 %ssa_63, %ssa_32, %ssa_63_array_index_64; // vec2 32 ssa_63 = deref_array &(*ssa_32)[ssa_62] (ssbo float) /* &((VertexArray *)ssa_30)->Vertices[ssa_62] */
bb_00	:  PC=0x8f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:309) ld.global.f32 %ssa_64, [%ssa_63]; // vec1 32 ssa_64 = intrinsic load_deref (%ssa_63) (16) /* access=16 */
bb_00	:  PC=0x8f50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:312) load_vulkan_descriptor %ssa_65, 0, 6, 7; // vec2 32 ssa_65 = intrinsic vulkan_resource_index (%ssa_0) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
bb_00	:  PC=0x8f58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:315) mov.b64 %ssa_66, %ssa_65; // vec2 32 ssa_66 = intrinsic load_vulkan_descriptor (%ssa_65) (7) /* desc_type=SSBO */
bb_00	:  PC=0x8f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:318) mov.b64 %ssa_67, %ssa_66; // vec2 32 ssa_67 = deref_cast (MaterialArray *)ssa_66 (ssbo MaterialArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x8f68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:321) add.u64 %ssa_68, %ssa_67, 0; // vec2 32 ssa_68 = deref_struct &ssa_67->Materials (ssbo Material[]) /* &((MaterialArray *)ssa_66)->Materials */
bb_00	:  PC=0x8f70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:326) mov.b32 %ssa_69_array_index_32, %ssa_40;
bb_00	:  PC=0x8f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:327) mul.wide.u32 %ssa_69_array_index_64, %ssa_69_array_index_32, 32;
bb_00	:  PC=0x8f80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:328) add.u64 %ssa_69, %ssa_68, %ssa_69_array_index_64; // vec2 32 ssa_69 = deref_array &(*ssa_68)[ssa_40] (ssbo Material) /* &((MaterialArray *)ssa_66)->Materials[ssa_40] */
bb_00	:  PC=0x8f88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:331) add.u64 %ssa_70, %ssa_69, 16; // vec2 32 ssa_70 = deref_struct &ssa_69->DiffuseTextureId (ssbo int) /* &((MaterialArray *)ssa_66)->Materials[ssa_40].DiffuseTextureId */
bb_00	:  PC=0x8f90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:334) ld.global.s32 %ssa_71, [%ssa_70]; // vec1 32 ssa_71 = intrinsic load_deref (%ssa_70) (16) /* access=16 */
bb_00	:  PC=0x8f98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:337) mov.b64 %ssa_72, %HitAttributes; // vec1 32 ssa_72 = deref_var &HitAttributes (ray_hit_attrib vec2) 
bb_00	:  PC=0x8fa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:341) ld.global.f32 %ssa_73_0, [%ssa_72 + 0];
bb_00	:  PC=0x8fa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:342) ld.global.f32 %ssa_73_1, [%ssa_72 + 4];
bb_00	:  PC=0x8fb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:347) neg.f32 %ssa_74, %ssa_73_0; // vec1 32 ssa_74 = fneg ssa_73.x
bb_00	:  PC=0x8fb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:350) add.f32 %ssa_75, %ssa_2, %ssa_74;// vec1 32 ssa_75 = fadd ssa_2, ssa_74
bb_00	:  PC=0x8fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:353) neg.f32 %ssa_76, %ssa_73_1; // vec1 32 ssa_76 = fneg ssa_73.y
bb_00	:  PC=0x8fc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:356) add.f32 %ssa_77, %ssa_75, %ssa_76;// vec1 32 ssa_77 = fadd ssa_75, ssa_76
bb_00	:  PC=0x8fd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:359) mul.f32 %ssa_78, %ssa_34, %ssa_77;// vec1 32 ssa_78 = fmul ssa_34, ssa_77
bb_00	:  PC=0x8fd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:362) mul.f32 %ssa_79, %ssa_37, %ssa_77;// vec1 32 ssa_79 = fmul ssa_37, ssa_77
bb_00	:  PC=0x8fe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:365) mul.f32 %ssa_80, %ssa_49, %ssa_73_0; // vec1 32 ssa_80 = fmul ssa_49, ssa_73.x
bb_00	:  PC=0x8fe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:368) mul.f32 %ssa_81, %ssa_52, %ssa_73_0; // vec1 32 ssa_81 = fmul ssa_52, ssa_73.x
bb_00	:  PC=0x8ff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:371) add.f32 %ssa_82, %ssa_78, %ssa_80;// vec1 32 ssa_82 = fadd ssa_78, ssa_80
bb_00	:  PC=0x8ff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:374) add.f32 %ssa_83, %ssa_79, %ssa_81;// vec1 32 ssa_83 = fadd ssa_79, ssa_81
bb_00	:  PC=0x9000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:377) mul.f32 %ssa_84, %ssa_61, %ssa_73_1; // vec1 32 ssa_84 = fmul ssa_61, ssa_73.y
bb_00	:  PC=0x9008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:380) mul.f32 %ssa_85, %ssa_64, %ssa_73_1; // vec1 32 ssa_85 = fmul ssa_64, ssa_73.y
bb_00	:  PC=0x9010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:383) add.f32 %ssa_86, %ssa_82, %ssa_84;// vec1 32 ssa_86 = fadd ssa_82, ssa_84
bb_00	:  PC=0x9018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:386) add.f32 %ssa_87, %ssa_83, %ssa_85;// vec1 32 ssa_87 = fadd ssa_83, ssa_85
bb_00	:  PC=0x9020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:390) mov.f32 %ssa_88_0, %ssa_86;
bb_00	:  PC=0x9028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:391) mov.f32 %ssa_88_1, %ssa_87; // vec2 32 ssa_88 = vec2 ssa_86, ssa_87
bb_00	:  PC=0x9030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:394) setp.ge.s32 %ssa_89, %ssa_71, %ssa_0_bits; // vec1  1 ssa_89 = ige ssa_71, ssa_0
bb_00	:  PC=0x9038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:399) @!%ssa_89 bra else_49;

bb_01	:  PC=0x9040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:404) mov.b64 %ssa_90, %TextureSamplers; // vec1 32 ssa_90 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_01	:  PC=0x9048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:409) cvt.u32.s32 %ssa_91_array_index_32, %ssa_71;
bb_01	:  PC=0x9050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:410) mul.wide.u32 %ssa_91_array_index_64, %ssa_91_array_index_32, 48;
bb_01	:  PC=0x9058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:411) add.u64 %ssa_91, %ssa_90, %ssa_91_array_index_64; // vec1 32 ssa_91 = deref_array &(*ssa_90)[ssa_71] (uniform sampler2D) /* &TextureSamplers[ssa_71] */
bb_01	:  PC=0x9060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:417) txl %ssa_91, %ssa_91, %ssa_92_0, %ssa_92_1, %ssa_92_2, %ssa_92_3, %ssa_88_0, %ssa_88_1, %ssa_0; // vec4 32 ssa_92 = (float32)txl ssa_91 (texture_deref), ssa_91 (sampler_deref), ssa_88 (coord), ssa_0 (lod), texture non-uniform, sampler non-uniform
bb_01	:  PC=0x9068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:420) mov.f32 %ssa_95, %ssa_92_0; // vec1 32 ssa_95 = mov ssa_92.x
bb_01	:  PC=0x9070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:423) mov.f32 %ssa_98, %ssa_92_1; // vec1 32 ssa_98 = mov ssa_92.y
bb_01	:  PC=0x9078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:426) mov.f32 %ssa_101, %ssa_92_2; // vec1 32 ssa_101 = mov ssa_92.z
bb_01	:  PC=0x9080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:429) mov.f32 %ssa_104, %ssa_92_3; // vec1 32 ssa_104 = mov ssa_92.w
bb_01	:  PC=0x9088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:431) mov.f32 %ssa_97, %ssa_95; // vec1 32 ssa_97 = phi block_1: ssa_95, block_2: ssa_108
bb_01	:  PC=0x9090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:432) mov.f32 %ssa_100, %ssa_98; // vec1 32 ssa_100 = phi block_1: ssa_98, block_2: ssa_109
bb_01	:  PC=0x9098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:433) mov.f32 %ssa_103, %ssa_101; // vec1 32 ssa_103 = phi block_1: ssa_101, block_2: ssa_110
bb_01	:  PC=0x90a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:434) mov.f32 %ssa_106, %ssa_104; // vec1 32 ssa_106 = phi block_1: ssa_104, block_2: ssa_111
bb_01	:  PC=0x90a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:437) bra end_if_49;

bb_02	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:442) .reg .f32 %ssa_108;
bb_02	:  PC=0x90b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:443) mov.f32 %ssa_108, 0F3f800000; // vec1 32 ssa_108 = load_const (0x3f800000 /* 1.000000 */)
bb_02	:  PC=0x90b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:445) mov.b32 %ssa_108_bits, 0F3f800000;
bb_02	:  PC=0x90c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:448) mov.f32 %ssa_109, 0F3f800000; // vec1 32 ssa_109 = load_const (0x3f800000 /* 1.000000 */)
bb_02	:  PC=0x90c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:450) mov.b32 %ssa_109_bits, 0F3f800000;
bb_02	:  PC=0x90d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:453) mov.f32 %ssa_110, 0F3f800000; // vec1 32 ssa_110 = load_const (0x3f800000 /* 1.000000 */)
bb_02	:  PC=0x90d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:455) mov.b32 %ssa_110_bits, 0F3f800000;
bb_02	:  PC=0x90e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:458) mov.f32 %ssa_111, 0F3f800000; // vec1 32 ssa_111 = load_const (0x3f800000 /* 1.000000 */)
bb_02	:  PC=0x90e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:460) mov.b32 %ssa_111_bits, 0F3f800000;
bb_02	:  PC=0x90f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:462) mov.f32 %ssa_97, %ssa_108; // vec1 32 ssa_97 = phi block_1: ssa_95, block_2: ssa_108
bb_02	:  PC=0x90f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:463) mov.f32 %ssa_100, %ssa_109; // vec1 32 ssa_100 = phi block_1: ssa_98, block_2: ssa_109
bb_02	:  PC=0x9100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:464) mov.f32 %ssa_103, %ssa_110; // vec1 32 ssa_103 = phi block_1: ssa_101, block_2: ssa_110
bb_02	:  PC=0x9108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:465) mov.f32 %ssa_106, %ssa_111; // vec1 32 ssa_106 = phi block_1: ssa_104, block_2: ssa_111

bb_03	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:475) .reg .b32 %ssa_107_0;
bb_03	:  PC=0x9110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:479) mov.b32 %ssa_107_0, %ssa_97;
bb_03	:  PC=0x9118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:480) mov.b32 %ssa_107_1, %ssa_100;
bb_03	:  PC=0x9120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:481) mov.b32 %ssa_107_2, %ssa_103;
bb_03	:  PC=0x9128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:482) mov.b32 %ssa_107_3, %ssa_106; // vec4 32 ssa_107 = vec4 ssa_97, ssa_100, ssa_103, ssa_106
bb_03	:  PC=0x9130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:485) setp.eq.f32 %ssa_94, %ssa_107_3, %ssa_0; // vec1  1 ssa_94 = feq! ssa_107.w, ssa_0
bb_03	:  PC=0x9138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:490) @!%ssa_94 bra else_50;

bb_04	:  PC=0x9140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:494) ignore_ray_intersection ;// intrinsic ignore_ray_intersection () ()
bb_04	:  PC=0x9148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:500) bra end_if_50;

bb_05	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:507) end_if_50:
bb_05	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:513) shader_exit:
bb_05	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:514) ret ;
bb_05	:  PC=0x9150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:514) ret ;

Summary of basic blocks for 'MESA_SHADER_ANY_HIT_func10_main':
bb_00	: first: rt_alloc_mem	 last: bra	
bb_01	: first: mov	 last: bra	
bb_02	: first: mov	 last: mov	
bb_03	: first: mov	 last: bra	
bb_04	: first: ignore_ray_intersection	 last: bra	
bb_05	: first: ret	 last: ret	
bb_06	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_ANY_HIT_func10_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_ANY_HIT_func10_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_ANY_HIT_func10_main'...
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_ANY_HIT_func10_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x9038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:399) @!%ssa_89 bra else_49;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:479) mov.b32 %ssa_107_0, %ssa_97;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x90a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:437) bra end_if_49;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:479) mov.b32 %ssa_107_0, %ssa_97;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x9138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:490) @!%ssa_94 bra else_50;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:514) ret ;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x9148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:500) bra end_if_50;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x9150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_ANY_HIT_10.ptx:514) ret ;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_ANY_HIT_func10_main
Operand information not set. load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
Operand information not set. load_vulkan_descriptor %ssa_7, 0, 7, 7; // vec2 32 ssa_7 = intrinsic vulkan_resource_index (%ssa_0) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
Operand information not set. load_primitive_id %ssa_13;// vec1 32 ssa_13 = intrinsic load_primitive_id () ()
Operand information not set. load_vulkan_descriptor %ssa_16, 0, 5, 7; // vec2 32 ssa_16 = intrinsic vulkan_resource_index (%ssa_0) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_29, 0, 4, 7; // vec2 32 ssa_29 = intrinsic vulkan_resource_index (%ssa_0) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_65, 0, 6, 7; // vec2 32 ssa_65 = intrinsic vulkan_resource_index (%ssa_0) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
Operand information not set. ignore_ray_intersection ;// intrinsic ignore_ray_intersection () ()
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_ANY_HIT_func10_main'.
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
Printing basic blocks for function 'MESA_SHADER_CLOSEST_HIT_func2_main':
bb_00	:  PC=0x2440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:96) load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
bb_00	:  PC=0x2448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:98) rt_alloc_mem %HitAttributes, 16, 64; // decl_var ray_hit_attrib INTERP_MODE_NONE vec2 HitAttributes
bb_00	:  PC=0x2450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:100) rt_alloc_mem %Ray, 48, 32; // decl_var shader_call_data INTERP_MODE_NONE RayPayload Ray
bb_00	:  PC=0x2458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:108) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x2460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:111) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x2468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:114) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x2470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:117) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x2478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:122) mov.f32 %ssa_0, 0F3f800000; // vec1 32 ssa_0 = load_const (0x3f800000 /* 1.000000 */)
bb_00	:  PC=0x2480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:124) mov.b32 %ssa_0_bits, 0F3f800000;
bb_00	:  PC=0x2488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:127) mov.f32 %ssa_1, 0F00000002; // vec1 32 ssa_1 = load_const (0x00000002 /* 0.000000 */)
bb_00	:  PC=0x2490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:129) mov.b32 %ssa_1_bits, 0F00000002;
bb_00	:  PC=0x2498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:132) mov.f32 %ssa_2, 0F00000003; // vec1 32 ssa_2 = load_const (0x00000003 /* 0.000000 */)
bb_00	:  PC=0x24a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:134) mov.b32 %ssa_2_bits, 0F00000003;
bb_00	:  PC=0x24a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:137) mov.f32 %ssa_3, 0F00000001; // vec1 32 ssa_3 = load_const (0x00000001 /* 0.000000 */)
bb_00	:  PC=0x24b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:139) mov.b32 %ssa_3_bits, 0F00000001;
bb_00	:  PC=0x24b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:142) load_ray_instance_custom_index %ssa_4;// vec1 32 ssa_4 = intrinsic load_ray_instance_custom_index () ()
bb_00	:  PC=0x24c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:145) mov.f32 %ssa_5, 0F00000000; // vec1 32 ssa_5 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x24c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:147) mov.b32 %ssa_5_bits, 0F00000000;
bb_00	:  PC=0x24d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:150) load_vulkan_descriptor %ssa_6, 0, 7, 7; // vec2 32 ssa_6 = intrinsic vulkan_resource_index (%ssa_5) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
bb_00	:  PC=0x24d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:153) mov.b64 %ssa_7, %ssa_6; // vec2 32 ssa_7 = intrinsic load_vulkan_descriptor (%ssa_6) (7) /* desc_type=SSBO */
bb_00	:  PC=0x24e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:156) mov.b64 %ssa_8, %ssa_7; // vec2 32 ssa_8 = deref_cast (OffsetArray *)ssa_7 (ssbo OffsetArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x24e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:159) add.u64 %ssa_9, %ssa_8, 0; // vec2 32 ssa_9 = deref_struct &ssa_8->Offsets (ssbo uvec2[]) /* &((OffsetArray *)ssa_7)->Offsets */
bb_00	:  PC=0x24f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:164) mov.u32 %ssa_10_array_index_32, %ssa_4;
bb_00	:  PC=0x24f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:165) mul.wide.u32 %ssa_10_array_index_64, %ssa_10_array_index_32, 8;
bb_00	:  PC=0x2500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:166) add.u64 %ssa_10, %ssa_9, %ssa_10_array_index_64; // vec2 32 ssa_10 = deref_array &(*ssa_9)[ssa_4] (ssbo uvec2) /* &((OffsetArray *)ssa_7)->Offsets[ssa_4] */
bb_00	:  PC=0x2508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:170) ld.global.u32 %ssa_11_0, [%ssa_10 + 0];
bb_00	:  PC=0x2510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:171) ld.global.u32 %ssa_11_1, [%ssa_10 + 4];
bb_00	:  PC=0x2518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:176) load_primitive_id %ssa_12;// vec1 32 ssa_12 = intrinsic load_primitive_id () ()
bb_00	:  PC=0x2520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:179) mul.lo.s32 %ssa_13, %ssa_12, %ssa_2_bits; // vec1 32 ssa_13 = imul ssa_12, ssa_2
bb_00	:  PC=0x2528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:182) add.s32 %ssa_14, %ssa_11_0, %ssa_13; // vec1 32 ssa_14 = iadd ssa_11.x, ssa_13
bb_00	:  PC=0x2530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:185) load_vulkan_descriptor %ssa_15, 0, 5, 7; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_5) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
bb_00	:  PC=0x2538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:188) mov.b64 %ssa_16, %ssa_15; // vec2 32 ssa_16 = intrinsic load_vulkan_descriptor (%ssa_15) (7) /* desc_type=SSBO */
bb_00	:  PC=0x2540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:191) mov.b64 %ssa_17, %ssa_16; // vec2 32 ssa_17 = deref_cast (IndexArray *)ssa_16 (ssbo IndexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:194) add.u64 %ssa_18, %ssa_17, 0; // vec2 32 ssa_18 = deref_struct &ssa_17->Indices (ssbo uint[]) /* &((IndexArray *)ssa_16)->Indices */
bb_00	:  PC=0x2550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:199) cvt.u32.s32 %ssa_19_array_index_32, %ssa_14;
bb_00	:  PC=0x2558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:200) mul.wide.u32 %ssa_19_array_index_64, %ssa_19_array_index_32, 4;
bb_00	:  PC=0x2560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:201) add.u64 %ssa_19, %ssa_18, %ssa_19_array_index_64; // vec2 32 ssa_19 = deref_array &(*ssa_18)[ssa_14] (ssbo uint) /* &((IndexArray *)ssa_16)->Indices[ssa_14] */
bb_00	:  PC=0x2568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:204) ld.global.u32 %ssa_20, [%ssa_19]; // vec1 32 ssa_20 = intrinsic load_deref (%ssa_19) (16) /* access=16 */
bb_00	:  PC=0x2570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:207) add.s32 %ssa_21, %ssa_11_1, %ssa_20; // vec1 32 ssa_21 = iadd ssa_11.y, ssa_20
bb_00	:  PC=0x2578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:210) mov.f32 %ssa_22, 0F00000008; // vec1 32 ssa_22 = load_const (0x00000008 /* 0.000000 */)
bb_00	:  PC=0x2580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:212) mov.b32 %ssa_22_bits, 0F00000008;
bb_00	:  PC=0x2588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:215) mov.f32 %ssa_23, 0F00000007; // vec1 32 ssa_23 = load_const (0x00000007 /* 0.000000 */)
bb_00	:  PC=0x2590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:217) mov.b32 %ssa_23_bits, 0F00000007;
bb_00	:  PC=0x2598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:220) mov.f32 %ssa_24, 0F00000006; // vec1 32 ssa_24 = load_const (0x00000006 /* 0.000000 */)
bb_00	:  PC=0x25a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:222) mov.b32 %ssa_24_bits, 0F00000006;
bb_00	:  PC=0x25a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:225) mov.f32 %ssa_25, 0F00000005; // vec1 32 ssa_25 = load_const (0x00000005 /* 0.000000 */)
bb_00	:  PC=0x25b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:227) mov.b32 %ssa_25_bits, 0F00000005;
bb_00	:  PC=0x25b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:230) mov.f32 %ssa_26, 0F00000004; // vec1 32 ssa_26 = load_const (0x00000004 /* 0.000000 */)
bb_00	:  PC=0x25c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:232) mov.b32 %ssa_26_bits, 0F00000004;
bb_00	:  PC=0x25c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:235) mov.f32 %ssa_27, 0F00000009; // vec1 32 ssa_27 = load_const (0x00000009 /* 0.000000 */)
bb_00	:  PC=0x25d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:237) mov.b32 %ssa_27_bits, 0F00000009;
bb_00	:  PC=0x25d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:240) mul.lo.s32 %ssa_28, %ssa_21, %ssa_27_bits; // vec1 32 ssa_28 = imul ssa_21, ssa_27
bb_00	:  PC=0x25e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:243) add.s32 %ssa_29, %ssa_28, %ssa_2_bits; // vec1 32 ssa_29 = iadd ssa_28, ssa_2
bb_00	:  PC=0x25e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:246) load_vulkan_descriptor %ssa_30, 0, 4, 7; // vec2 32 ssa_30 = intrinsic vulkan_resource_index (%ssa_5) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
bb_00	:  PC=0x25f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:249) mov.b64 %ssa_31, %ssa_30; // vec2 32 ssa_31 = intrinsic load_vulkan_descriptor (%ssa_30) (7) /* desc_type=SSBO */
bb_00	:  PC=0x25f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:252) mov.b64 %ssa_32, %ssa_31; // vec2 32 ssa_32 = deref_cast (VertexArray *)ssa_31 (ssbo VertexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:255) add.u64 %ssa_33, %ssa_32, 0; // vec2 32 ssa_33 = deref_struct &ssa_32->Vertices (ssbo float[]) /* &((VertexArray *)ssa_31)->Vertices */
bb_00	:  PC=0x2608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:260) cvt.u32.s32 %ssa_34_array_index_32, %ssa_29;
bb_00	:  PC=0x2610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:261) mul.wide.u32 %ssa_34_array_index_64, %ssa_34_array_index_32, 4;
bb_00	:  PC=0x2618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:262) add.u64 %ssa_34, %ssa_33, %ssa_34_array_index_64; // vec2 32 ssa_34 = deref_array &(*ssa_33)[ssa_29] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_29] */
bb_00	:  PC=0x2620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:265) ld.global.f32 %ssa_35, [%ssa_34]; // vec1 32 ssa_35 = intrinsic load_deref (%ssa_34) (16) /* access=16 */
bb_00	:  PC=0x2628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:268) add.s32 %ssa_36, %ssa_28, %ssa_26_bits; // vec1 32 ssa_36 = iadd ssa_28, ssa_26
bb_00	:  PC=0x2630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:273) cvt.u32.s32 %ssa_37_array_index_32, %ssa_36;
bb_00	:  PC=0x2638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:274) mul.wide.u32 %ssa_37_array_index_64, %ssa_37_array_index_32, 4;
bb_00	:  PC=0x2640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:275) add.u64 %ssa_37, %ssa_33, %ssa_37_array_index_64; // vec2 32 ssa_37 = deref_array &(*ssa_33)[ssa_36] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_36] */
bb_00	:  PC=0x2648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:278) ld.global.f32 %ssa_38, [%ssa_37]; // vec1 32 ssa_38 = intrinsic load_deref (%ssa_37) (16) /* access=16 */
bb_00	:  PC=0x2650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:281) add.s32 %ssa_39, %ssa_28, %ssa_25_bits; // vec1 32 ssa_39 = iadd ssa_28, ssa_25
bb_00	:  PC=0x2658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:286) cvt.u32.s32 %ssa_40_array_index_32, %ssa_39;
bb_00	:  PC=0x2660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:287) mul.wide.u32 %ssa_40_array_index_64, %ssa_40_array_index_32, 4;
bb_00	:  PC=0x2668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:288) add.u64 %ssa_40, %ssa_33, %ssa_40_array_index_64; // vec2 32 ssa_40 = deref_array &(*ssa_33)[ssa_39] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_39] */
bb_00	:  PC=0x2670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:291) ld.global.f32 %ssa_41, [%ssa_40]; // vec1 32 ssa_41 = intrinsic load_deref (%ssa_40) (16) /* access=16 */
bb_00	:  PC=0x2678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:294) add.s32 %ssa_42, %ssa_28, %ssa_24_bits; // vec1 32 ssa_42 = iadd ssa_28, ssa_24
bb_00	:  PC=0x2680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:299) cvt.u32.s32 %ssa_43_array_index_32, %ssa_42;
bb_00	:  PC=0x2688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:300) mul.wide.u32 %ssa_43_array_index_64, %ssa_43_array_index_32, 4;
bb_00	:  PC=0x2690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:301) add.u64 %ssa_43, %ssa_33, %ssa_43_array_index_64; // vec2 32 ssa_43 = deref_array &(*ssa_33)[ssa_42] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_42] */
bb_00	:  PC=0x2698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:304) ld.global.f32 %ssa_44, [%ssa_43]; // vec1 32 ssa_44 = intrinsic load_deref (%ssa_43) (16) /* access=16 */
bb_00	:  PC=0x26a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:307) add.s32 %ssa_45, %ssa_28, %ssa_23_bits; // vec1 32 ssa_45 = iadd ssa_28, ssa_23
bb_00	:  PC=0x26a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:312) cvt.u32.s32 %ssa_46_array_index_32, %ssa_45;
bb_00	:  PC=0x26b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:313) mul.wide.u32 %ssa_46_array_index_64, %ssa_46_array_index_32, 4;
bb_00	:  PC=0x26b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:314) add.u64 %ssa_46, %ssa_33, %ssa_46_array_index_64; // vec2 32 ssa_46 = deref_array &(*ssa_33)[ssa_45] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_45] */
bb_00	:  PC=0x26c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:317) ld.global.f32 %ssa_47, [%ssa_46]; // vec1 32 ssa_47 = intrinsic load_deref (%ssa_46) (16) /* access=16 */
bb_00	:  PC=0x26c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:320) add.s32 %ssa_48, %ssa_28, %ssa_22_bits; // vec1 32 ssa_48 = iadd ssa_28, ssa_22
bb_00	:  PC=0x26d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:325) cvt.u32.s32 %ssa_49_array_index_32, %ssa_48;
bb_00	:  PC=0x26d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:326) mul.wide.u32 %ssa_49_array_index_64, %ssa_49_array_index_32, 4;
bb_00	:  PC=0x26e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:327) add.u64 %ssa_49, %ssa_33, %ssa_49_array_index_64; // vec2 32 ssa_49 = deref_array &(*ssa_33)[ssa_48] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_48] */
bb_00	:  PC=0x26e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:330) ld.global.f32 %ssa_50, [%ssa_49]; // vec1 32 ssa_50 = intrinsic load_deref (%ssa_49) (16) /* access=16 */
bb_00	:  PC=0x26f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:333) add.s32 %ssa_51, %ssa_11_0, %ssa_3_bits; // vec1 32 ssa_51 = iadd ssa_11.x, ssa_3
bb_00	:  PC=0x26f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:336) add.s32 %ssa_52, %ssa_51, %ssa_13;// vec1 32 ssa_52 = iadd ssa_51, ssa_13
bb_00	:  PC=0x2700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:341) cvt.u32.s32 %ssa_53_array_index_32, %ssa_52;
bb_00	:  PC=0x2708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:342) mul.wide.u32 %ssa_53_array_index_64, %ssa_53_array_index_32, 4;
bb_00	:  PC=0x2710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:343) add.u64 %ssa_53, %ssa_18, %ssa_53_array_index_64; // vec2 32 ssa_53 = deref_array &(*ssa_18)[ssa_52] (ssbo uint) /* &((IndexArray *)ssa_16)->Indices[ssa_52] */
bb_00	:  PC=0x2718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:346) ld.global.u32 %ssa_54, [%ssa_53]; // vec1 32 ssa_54 = intrinsic load_deref (%ssa_53) (16) /* access=16 */
bb_00	:  PC=0x2720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:349) add.s32 %ssa_55, %ssa_11_1, %ssa_54; // vec1 32 ssa_55 = iadd ssa_11.y, ssa_54
bb_00	:  PC=0x2728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:352) mul.lo.s32 %ssa_56, %ssa_55, %ssa_27_bits; // vec1 32 ssa_56 = imul ssa_55, ssa_27
bb_00	:  PC=0x2730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:355) add.s32 %ssa_57, %ssa_56, %ssa_2_bits; // vec1 32 ssa_57 = iadd ssa_56, ssa_2
bb_00	:  PC=0x2738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:360) cvt.u32.s32 %ssa_58_array_index_32, %ssa_57;
bb_00	:  PC=0x2740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:361) mul.wide.u32 %ssa_58_array_index_64, %ssa_58_array_index_32, 4;
bb_00	:  PC=0x2748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:362) add.u64 %ssa_58, %ssa_33, %ssa_58_array_index_64; // vec2 32 ssa_58 = deref_array &(*ssa_33)[ssa_57] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_57] */
bb_00	:  PC=0x2750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:365) ld.global.f32 %ssa_59, [%ssa_58]; // vec1 32 ssa_59 = intrinsic load_deref (%ssa_58) (16) /* access=16 */
bb_00	:  PC=0x2758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:368) add.s32 %ssa_60, %ssa_56, %ssa_26_bits; // vec1 32 ssa_60 = iadd ssa_56, ssa_26
bb_00	:  PC=0x2760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:373) cvt.u32.s32 %ssa_61_array_index_32, %ssa_60;
bb_00	:  PC=0x2768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:374) mul.wide.u32 %ssa_61_array_index_64, %ssa_61_array_index_32, 4;
bb_00	:  PC=0x2770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:375) add.u64 %ssa_61, %ssa_33, %ssa_61_array_index_64; // vec2 32 ssa_61 = deref_array &(*ssa_33)[ssa_60] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_60] */
bb_00	:  PC=0x2778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:378) ld.global.f32 %ssa_62, [%ssa_61]; // vec1 32 ssa_62 = intrinsic load_deref (%ssa_61) (16) /* access=16 */
bb_00	:  PC=0x2780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:381) add.s32 %ssa_63, %ssa_56, %ssa_25_bits; // vec1 32 ssa_63 = iadd ssa_56, ssa_25
bb_00	:  PC=0x2788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:386) cvt.u32.s32 %ssa_64_array_index_32, %ssa_63;
bb_00	:  PC=0x2790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:387) mul.wide.u32 %ssa_64_array_index_64, %ssa_64_array_index_32, 4;
bb_00	:  PC=0x2798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:388) add.u64 %ssa_64, %ssa_33, %ssa_64_array_index_64; // vec2 32 ssa_64 = deref_array &(*ssa_33)[ssa_63] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_63] */
bb_00	:  PC=0x27a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:391) ld.global.f32 %ssa_65, [%ssa_64]; // vec1 32 ssa_65 = intrinsic load_deref (%ssa_64) (16) /* access=16 */
bb_00	:  PC=0x27a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:394) add.s32 %ssa_66, %ssa_56, %ssa_24_bits; // vec1 32 ssa_66 = iadd ssa_56, ssa_24
bb_00	:  PC=0x27b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:399) cvt.u32.s32 %ssa_67_array_index_32, %ssa_66;
bb_00	:  PC=0x27b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:400) mul.wide.u32 %ssa_67_array_index_64, %ssa_67_array_index_32, 4;
bb_00	:  PC=0x27c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:401) add.u64 %ssa_67, %ssa_33, %ssa_67_array_index_64; // vec2 32 ssa_67 = deref_array &(*ssa_33)[ssa_66] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_66] */
bb_00	:  PC=0x27c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:404) ld.global.f32 %ssa_68, [%ssa_67]; // vec1 32 ssa_68 = intrinsic load_deref (%ssa_67) (16) /* access=16 */
bb_00	:  PC=0x27d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:407) add.s32 %ssa_69, %ssa_56, %ssa_23_bits; // vec1 32 ssa_69 = iadd ssa_56, ssa_23
bb_00	:  PC=0x27d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:412) cvt.u32.s32 %ssa_70_array_index_32, %ssa_69;
bb_00	:  PC=0x27e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:413) mul.wide.u32 %ssa_70_array_index_64, %ssa_70_array_index_32, 4;
bb_00	:  PC=0x27e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:414) add.u64 %ssa_70, %ssa_33, %ssa_70_array_index_64; // vec2 32 ssa_70 = deref_array &(*ssa_33)[ssa_69] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_69] */
bb_00	:  PC=0x27f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:417) ld.global.f32 %ssa_71, [%ssa_70]; // vec1 32 ssa_71 = intrinsic load_deref (%ssa_70) (16) /* access=16 */
bb_00	:  PC=0x27f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:420) add.s32 %ssa_72, %ssa_11_0, %ssa_1_bits; // vec1 32 ssa_72 = iadd ssa_11.x, ssa_1
bb_00	:  PC=0x2800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:423) add.s32 %ssa_73, %ssa_72, %ssa_13;// vec1 32 ssa_73 = iadd ssa_72, ssa_13
bb_00	:  PC=0x2808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:428) cvt.u32.s32 %ssa_74_array_index_32, %ssa_73;
bb_00	:  PC=0x2810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:429) mul.wide.u32 %ssa_74_array_index_64, %ssa_74_array_index_32, 4;
bb_00	:  PC=0x2818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:430) add.u64 %ssa_74, %ssa_18, %ssa_74_array_index_64; // vec2 32 ssa_74 = deref_array &(*ssa_18)[ssa_73] (ssbo uint) /* &((IndexArray *)ssa_16)->Indices[ssa_73] */
bb_00	:  PC=0x2820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:433) ld.global.u32 %ssa_75, [%ssa_74]; // vec1 32 ssa_75 = intrinsic load_deref (%ssa_74) (16) /* access=16 */
bb_00	:  PC=0x2828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:436) add.s32 %ssa_76, %ssa_11_1, %ssa_75; // vec1 32 ssa_76 = iadd ssa_11.y, ssa_75
bb_00	:  PC=0x2830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:439) mul.lo.s32 %ssa_77, %ssa_76, %ssa_27_bits; // vec1 32 ssa_77 = imul ssa_76, ssa_27
bb_00	:  PC=0x2838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:442) add.s32 %ssa_78, %ssa_77, %ssa_2_bits; // vec1 32 ssa_78 = iadd ssa_77, ssa_2
bb_00	:  PC=0x2840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:447) cvt.u32.s32 %ssa_79_array_index_32, %ssa_78;
bb_00	:  PC=0x2848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:448) mul.wide.u32 %ssa_79_array_index_64, %ssa_79_array_index_32, 4;
bb_00	:  PC=0x2850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:449) add.u64 %ssa_79, %ssa_33, %ssa_79_array_index_64; // vec2 32 ssa_79 = deref_array &(*ssa_33)[ssa_78] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_78] */
bb_00	:  PC=0x2858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:452) ld.global.f32 %ssa_80, [%ssa_79]; // vec1 32 ssa_80 = intrinsic load_deref (%ssa_79) (16) /* access=16 */
bb_00	:  PC=0x2860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:455) add.s32 %ssa_81, %ssa_77, %ssa_26_bits; // vec1 32 ssa_81 = iadd ssa_77, ssa_26
bb_00	:  PC=0x2868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:460) cvt.u32.s32 %ssa_82_array_index_32, %ssa_81;
bb_00	:  PC=0x2870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:461) mul.wide.u32 %ssa_82_array_index_64, %ssa_82_array_index_32, 4;
bb_00	:  PC=0x2878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:462) add.u64 %ssa_82, %ssa_33, %ssa_82_array_index_64; // vec2 32 ssa_82 = deref_array &(*ssa_33)[ssa_81] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_81] */
bb_00	:  PC=0x2880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:465) ld.global.f32 %ssa_83, [%ssa_82]; // vec1 32 ssa_83 = intrinsic load_deref (%ssa_82) (16) /* access=16 */
bb_00	:  PC=0x2888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:468) add.s32 %ssa_84, %ssa_77, %ssa_25_bits; // vec1 32 ssa_84 = iadd ssa_77, ssa_25
bb_00	:  PC=0x2890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:473) cvt.u32.s32 %ssa_85_array_index_32, %ssa_84;
bb_00	:  PC=0x2898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:474) mul.wide.u32 %ssa_85_array_index_64, %ssa_85_array_index_32, 4;
bb_00	:  PC=0x28a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:475) add.u64 %ssa_85, %ssa_33, %ssa_85_array_index_64; // vec2 32 ssa_85 = deref_array &(*ssa_33)[ssa_84] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_84] */
bb_00	:  PC=0x28a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:478) ld.global.f32 %ssa_86, [%ssa_85]; // vec1 32 ssa_86 = intrinsic load_deref (%ssa_85) (16) /* access=16 */
bb_00	:  PC=0x28b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:481) add.s32 %ssa_87, %ssa_77, %ssa_24_bits; // vec1 32 ssa_87 = iadd ssa_77, ssa_24
bb_00	:  PC=0x28b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:486) cvt.u32.s32 %ssa_88_array_index_32, %ssa_87;
bb_00	:  PC=0x28c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:487) mul.wide.u32 %ssa_88_array_index_64, %ssa_88_array_index_32, 4;
bb_00	:  PC=0x28c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:488) add.u64 %ssa_88, %ssa_33, %ssa_88_array_index_64; // vec2 32 ssa_88 = deref_array &(*ssa_33)[ssa_87] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_87] */
bb_00	:  PC=0x28d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:491) ld.global.f32 %ssa_89, [%ssa_88]; // vec1 32 ssa_89 = intrinsic load_deref (%ssa_88) (16) /* access=16 */
bb_00	:  PC=0x28d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:494) add.s32 %ssa_90, %ssa_77, %ssa_23_bits; // vec1 32 ssa_90 = iadd ssa_77, ssa_23
bb_00	:  PC=0x28e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:499) cvt.u32.s32 %ssa_91_array_index_32, %ssa_90;
bb_00	:  PC=0x28e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:500) mul.wide.u32 %ssa_91_array_index_64, %ssa_91_array_index_32, 4;
bb_00	:  PC=0x28f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:501) add.u64 %ssa_91, %ssa_33, %ssa_91_array_index_64; // vec2 32 ssa_91 = deref_array &(*ssa_33)[ssa_90] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_90] */
bb_00	:  PC=0x28f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:504) ld.global.f32 %ssa_92, [%ssa_91]; // vec1 32 ssa_92 = intrinsic load_deref (%ssa_91) (16) /* access=16 */
bb_00	:  PC=0x2900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:507) load_vulkan_descriptor %ssa_93, 0, 6, 7; // vec2 32 ssa_93 = intrinsic vulkan_resource_index (%ssa_5) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
bb_00	:  PC=0x2908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:510) mov.b64 %ssa_94, %ssa_93; // vec2 32 ssa_94 = intrinsic load_vulkan_descriptor (%ssa_93) (7) /* desc_type=SSBO */
bb_00	:  PC=0x2910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:513) mov.b64 %ssa_95, %ssa_94; // vec2 32 ssa_95 = deref_cast (MaterialArray *)ssa_94 (ssbo MaterialArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:516) add.u64 %ssa_96, %ssa_95, 0; // vec2 32 ssa_96 = deref_struct &ssa_95->Materials (ssbo Material[]) /* &((MaterialArray *)ssa_94)->Materials */
bb_00	:  PC=0x2920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:521) mov.b32 %ssa_97_array_index_32, %ssa_50;
bb_00	:  PC=0x2928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:522) mul.wide.u32 %ssa_97_array_index_64, %ssa_97_array_index_32, 32;
bb_00	:  PC=0x2930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:523) add.u64 %ssa_97, %ssa_96, %ssa_97_array_index_64; // vec2 32 ssa_97 = deref_array &(*ssa_96)[ssa_50] (ssbo Material) /* &((MaterialArray *)ssa_94)->Materials[ssa_50] */
bb_00	:  PC=0x2938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:526) add.u64 %ssa_98, %ssa_97, 0; // vec2 32 ssa_98 = deref_struct &ssa_97->Diffuse (ssbo vec4) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].Diffuse */
bb_00	:  PC=0x2940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:532) ld.global.f32 %ssa_99_0, [%ssa_98 + 0];
bb_00	:  PC=0x2948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:533) ld.global.f32 %ssa_99_1, [%ssa_98 + 4];
bb_00	:  PC=0x2950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:534) ld.global.f32 %ssa_99_2, [%ssa_98 + 8];
bb_00	:  PC=0x2958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:535) ld.global.f32 %ssa_99_3, [%ssa_98 + 12];
bb_00	:  PC=0x2960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:540) add.u64 %ssa_100, %ssa_97, 16; // vec2 32 ssa_100 = deref_struct &ssa_97->DiffuseTextureId (ssbo int) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].DiffuseTextureId */
bb_00	:  PC=0x2968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:543) ld.global.s32 %ssa_101, [%ssa_100]; // vec1 32 ssa_101 = intrinsic load_deref (%ssa_100) (16) /* access=16 */
bb_00	:  PC=0x2970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:546) add.u64 %ssa_102, %ssa_97, 20; // vec2 32 ssa_102 = deref_struct &ssa_97->Fuzziness (ssbo float) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].Fuzziness */
bb_00	:  PC=0x2978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:549) ld.global.f32 %ssa_103, [%ssa_102]; // vec1 32 ssa_103 = intrinsic load_deref (%ssa_102) (16) /* access=16 */
bb_00	:  PC=0x2980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:552) add.u64 %ssa_104, %ssa_97, 24; // vec2 32 ssa_104 = deref_struct &ssa_97->RefractionIndex (ssbo float) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].RefractionIndex */
bb_00	:  PC=0x2988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:555) ld.global.f32 %ssa_105, [%ssa_104]; // vec1 32 ssa_105 = intrinsic load_deref (%ssa_104) (16) /* access=16 */
bb_00	:  PC=0x2990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:558) add.u64 %ssa_106, %ssa_97, 28; // vec2 32 ssa_106 = deref_struct &ssa_97->MaterialModel (ssbo uint) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].MaterialModel */
bb_00	:  PC=0x2998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:561) ld.global.u32 %ssa_107, [%ssa_106]; // vec1 32 ssa_107 = intrinsic load_deref (%ssa_106) (16) /* access=16 */
bb_00	:  PC=0x29a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:564) mov.b64 %ssa_108, %HitAttributes; // vec1 32 ssa_108 = deref_var &HitAttributes (ray_hit_attrib vec2) 
bb_00	:  PC=0x29a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:568) ld.global.f32 %ssa_109_0, [%ssa_108 + 0];
bb_00	:  PC=0x29b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:569) ld.global.f32 %ssa_109_1, [%ssa_108 + 4];
bb_00	:  PC=0x29b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:574) neg.f32 %ssa_110, %ssa_109_0; // vec1 32 ssa_110 = fneg ssa_109.x
bb_00	:  PC=0x29c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:577) add.f32 %ssa_111, %ssa_0, %ssa_110;// vec1 32 ssa_111 = fadd ssa_0, ssa_110
bb_00	:  PC=0x29c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:580) neg.f32 %ssa_112, %ssa_109_1; // vec1 32 ssa_112 = fneg ssa_109.y
bb_00	:  PC=0x29d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:583) add.f32 %ssa_113, %ssa_111, %ssa_112;// vec1 32 ssa_113 = fadd ssa_111, ssa_112
bb_00	:  PC=0x29d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:586) mul.f32 %ssa_114, %ssa_35, %ssa_113;// vec1 32 ssa_114 = fmul ssa_35, ssa_113
bb_00	:  PC=0x29e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:589) mul.f32 %ssa_115, %ssa_38, %ssa_113;// vec1 32 ssa_115 = fmul ssa_38, ssa_113
bb_00	:  PC=0x29e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:592) mul.f32 %ssa_116, %ssa_41, %ssa_113;// vec1 32 ssa_116 = fmul ssa_41, ssa_113
bb_00	:  PC=0x29f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:595) mul.f32 %ssa_117, %ssa_59, %ssa_109_0; // vec1 32 ssa_117 = fmul ssa_59, ssa_109.x
bb_00	:  PC=0x29f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:598) mul.f32 %ssa_118, %ssa_62, %ssa_109_0; // vec1 32 ssa_118 = fmul ssa_62, ssa_109.x
bb_00	:  PC=0x2a00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:601) mul.f32 %ssa_119, %ssa_65, %ssa_109_0; // vec1 32 ssa_119 = fmul ssa_65, ssa_109.x
bb_00	:  PC=0x2a08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:604) add.f32 %ssa_120, %ssa_114, %ssa_117;// vec1 32 ssa_120 = fadd ssa_114, ssa_117
bb_00	:  PC=0x2a10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:607) add.f32 %ssa_121, %ssa_115, %ssa_118;// vec1 32 ssa_121 = fadd ssa_115, ssa_118
bb_00	:  PC=0x2a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:610) add.f32 %ssa_122, %ssa_116, %ssa_119;// vec1 32 ssa_122 = fadd ssa_116, ssa_119
bb_00	:  PC=0x2a20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:613) mul.f32 %ssa_123, %ssa_80, %ssa_109_1; // vec1 32 ssa_123 = fmul ssa_80, ssa_109.y
bb_00	:  PC=0x2a28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:616) mul.f32 %ssa_124, %ssa_83, %ssa_109_1; // vec1 32 ssa_124 = fmul ssa_83, ssa_109.y
bb_00	:  PC=0x2a30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:619) mul.f32 %ssa_125, %ssa_86, %ssa_109_1; // vec1 32 ssa_125 = fmul ssa_86, ssa_109.y
bb_00	:  PC=0x2a38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:622) add.f32 %ssa_126, %ssa_120, %ssa_123;// vec1 32 ssa_126 = fadd ssa_120, ssa_123
bb_00	:  PC=0x2a40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:625) add.f32 %ssa_127, %ssa_121, %ssa_124;// vec1 32 ssa_127 = fadd ssa_121, ssa_124
bb_00	:  PC=0x2a48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:628) add.f32 %ssa_128, %ssa_122, %ssa_125;// vec1 32 ssa_128 = fadd ssa_122, ssa_125
bb_00	:  PC=0x2a50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:631) mul.f32 %ssa_129, %ssa_126, %ssa_126;// vec1 32 ssa_129 = fmul ssa_126, ssa_126
bb_00	:  PC=0x2a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:634) mul.f32 %ssa_130, %ssa_127, %ssa_127;// vec1 32 ssa_130 = fmul ssa_127, ssa_127
bb_00	:  PC=0x2a60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:637) mul.f32 %ssa_131, %ssa_128, %ssa_128;// vec1 32 ssa_131 = fmul ssa_128, ssa_128
bb_00	:  PC=0x2a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:643) mov.f32 %ssa_132_0, %ssa_129;
bb_00	:  PC=0x2a70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:644) mov.f32 %ssa_132_1, %ssa_130;
bb_00	:  PC=0x2a78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:645) mov.f32 %ssa_132_2, %ssa_131; // vec3 32 ssa_132 = vec3 ssa_129, ssa_130, ssa_131
bb_00	:  PC=0x2a80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:648) add.f32 %ssa_133, %ssa_132_0, %ssa_132_1;
bb_00	:  PC=0x2a88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:649) add.f32 %ssa_133, %ssa_133, %ssa_132_2; // vec1 32 ssa_133 = fsum3 ssa_132
bb_00	:  PC=0x2a90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:652) rsqrt.approx.f32 %ssa_134, %ssa_133;// vec1 32 ssa_134 = frsq ssa_133
bb_00	:  PC=0x2a98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:655) mul.f32 %ssa_135, %ssa_126, %ssa_134;// vec1 32 ssa_135 = fmul ssa_126, ssa_134
bb_00	:  PC=0x2aa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:658) mul.f32 %ssa_136, %ssa_127, %ssa_134;// vec1 32 ssa_136 = fmul ssa_127, ssa_134
bb_00	:  PC=0x2aa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:661) mul.f32 %ssa_137, %ssa_128, %ssa_134;// vec1 32 ssa_137 = fmul ssa_128, ssa_134
bb_00	:  PC=0x2ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:667) mov.f32 %ssa_138_0, %ssa_135;
bb_00	:  PC=0x2ab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:668) mov.f32 %ssa_138_1, %ssa_136;
bb_00	:  PC=0x2ac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:669) mov.f32 %ssa_138_2, %ssa_137; // vec3 32 ssa_138 = vec3 ssa_135, ssa_136, ssa_137
bb_00	:  PC=0x2ac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:672) mul.f32 %ssa_139, %ssa_44, %ssa_113;// vec1 32 ssa_139 = fmul ssa_44, ssa_113
bb_00	:  PC=0x2ad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:675) mul.f32 %ssa_140, %ssa_47, %ssa_113;// vec1 32 ssa_140 = fmul ssa_47, ssa_113
bb_00	:  PC=0x2ad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:678) mul.f32 %ssa_141, %ssa_68, %ssa_109_0; // vec1 32 ssa_141 = fmul ssa_68, ssa_109.x
bb_00	:  PC=0x2ae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:681) mul.f32 %ssa_142, %ssa_71, %ssa_109_0; // vec1 32 ssa_142 = fmul ssa_71, ssa_109.x
bb_00	:  PC=0x2ae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:684) add.f32 %ssa_143, %ssa_139, %ssa_141;// vec1 32 ssa_143 = fadd ssa_139, ssa_141
bb_00	:  PC=0x2af0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:687) add.f32 %ssa_144, %ssa_140, %ssa_142;// vec1 32 ssa_144 = fadd ssa_140, ssa_142
bb_00	:  PC=0x2af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:690) mul.f32 %ssa_145, %ssa_89, %ssa_109_1; // vec1 32 ssa_145 = fmul ssa_89, ssa_109.y
bb_00	:  PC=0x2b00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:693) mul.f32 %ssa_146, %ssa_92, %ssa_109_1; // vec1 32 ssa_146 = fmul ssa_92, ssa_109.y
bb_00	:  PC=0x2b08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:696) add.f32 %ssa_147, %ssa_143, %ssa_145;// vec1 32 ssa_147 = fadd ssa_143, ssa_145
bb_00	:  PC=0x2b10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:699) add.f32 %ssa_148, %ssa_144, %ssa_146;// vec1 32 ssa_148 = fadd ssa_144, ssa_146
bb_00	:  PC=0x2b18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:703) mov.f32 %ssa_149_0, %ssa_147;
bb_00	:  PC=0x2b20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:704) mov.f32 %ssa_149_1, %ssa_148; // vec2 32 ssa_149 = vec2 ssa_147, ssa_148
bb_00	:  PC=0x2b28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:711) load_ray_world_direction %ssa_150_address; // vec3 32 ssa_150 = intrinsic load_ray_world_direction () ()
bb_00	:  PC=0x2b30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:712) ld.global.f32 %ssa_150_0, [%ssa_150_address + 0];
bb_00	:  PC=0x2b38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:713) ld.global.f32 %ssa_150_1, [%ssa_150_address + 4];
bb_00	:  PC=0x2b40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:714) ld.global.f32 %ssa_150_2, [%ssa_150_address + 8];
bb_00	:  PC=0x2b48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:715) ld.global.f32 %ssa_150_3, [%ssa_150_address + 12];
bb_00	:  PC=0x2b50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:718) load_ray_t_max %ssa_151;// vec1 32 ssa_151 = intrinsic load_ray_t_max () ()
bb_00	:  PC=0x2b58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:721) mov.b64 %ssa_152, %Ray; // vec1 32 ssa_152 = deref_var &Ray (shader_call_data RayPayload) 
bb_00	:  PC=0x2b60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:724) add.u64 %ssa_153, %ssa_152, 44; // vec1 32 ssa_153 = deref_struct &ssa_152->RandomSeed (shader_call_data uint) /* &Ray.RandomSeed */
bb_00	:  PC=0x2b68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:727) ld.global.u32 %ssa_154, [%ssa_153]; // vec1 32 ssa_154 = intrinsic load_deref (%ssa_153) (0) /* access=0 */
bb_00	:  PC=0x2b70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:730) mul.f32 %ssa_155, %ssa_150_0, %ssa_150_0; // vec1 32 ssa_155 = fmul ssa_150.x, ssa_150.x
bb_00	:  PC=0x2b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:733) mul.f32 %ssa_156, %ssa_150_1, %ssa_150_1; // vec1 32 ssa_156 = fmul ssa_150.y, ssa_150.y
bb_00	:  PC=0x2b80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:736) mul.f32 %ssa_157, %ssa_150_2, %ssa_150_2; // vec1 32 ssa_157 = fmul ssa_150.z, ssa_150.z
bb_00	:  PC=0x2b88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:742) mov.f32 %ssa_158_0, %ssa_155;
bb_00	:  PC=0x2b90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:743) mov.f32 %ssa_158_1, %ssa_156;
bb_00	:  PC=0x2b98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:744) mov.f32 %ssa_158_2, %ssa_157; // vec3 32 ssa_158 = vec3 ssa_155, ssa_156, ssa_157
bb_00	:  PC=0x2ba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:747) add.f32 %ssa_159, %ssa_158_0, %ssa_158_1;
bb_00	:  PC=0x2ba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:748) add.f32 %ssa_159, %ssa_159, %ssa_158_2; // vec1 32 ssa_159 = fsum3 ssa_158
bb_00	:  PC=0x2bb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:751) rsqrt.approx.f32 %ssa_160, %ssa_159;// vec1 32 ssa_160 = frsq ssa_159
bb_00	:  PC=0x2bb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:754) mul.f32 %ssa_161, %ssa_150_0, %ssa_160; // vec1 32 ssa_161 = fmul ssa_150.x, ssa_160
bb_00	:  PC=0x2bc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:757) mul.f32 %ssa_162, %ssa_150_1, %ssa_160; // vec1 32 ssa_162 = fmul ssa_150.y, ssa_160
bb_00	:  PC=0x2bc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:760) mul.f32 %ssa_163, %ssa_150_2, %ssa_160; // vec1 32 ssa_163 = fmul ssa_150.z, ssa_160
bb_00	:  PC=0x2bd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:763) setp.eq.s32 %ssa_164, %ssa_107, %ssa_5_bits; // vec1  1 ssa_164 = ieq ssa_107, ssa_5
bb_00	:  PC=0x2bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:768) @!%ssa_164 bra else_7;

bb_01	:  PC=0x2be0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:776) mov.f32 %ssa_165_0, 0F3f800000;
bb_01	:  PC=0x2be8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:777) mov.f32 %ssa_165_1, 0F3f800000;
bb_01	:  PC=0x2bf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:778) mov.f32 %ssa_165_2, 0F3f800000;
bb_01	:  PC=0x2bf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:779) mov.f32 %ssa_165_3, 0F3f800000;
bb_01	:  PC=0x2c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:783) mul.f32 %ssa_166, %ssa_161, %ssa_135;// vec1 32 ssa_166 = fmul ssa_161, ssa_135
bb_01	:  PC=0x2c08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:786) mul.f32 %ssa_167, %ssa_162, %ssa_136;// vec1 32 ssa_167 = fmul ssa_162, ssa_136
bb_01	:  PC=0x2c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:789) mul.f32 %ssa_168, %ssa_163, %ssa_137;// vec1 32 ssa_168 = fmul ssa_163, ssa_137
bb_01	:  PC=0x2c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:795) mov.f32 %ssa_169_0, %ssa_166;
bb_01	:  PC=0x2c20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:796) mov.f32 %ssa_169_1, %ssa_167;
bb_01	:  PC=0x2c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:797) mov.f32 %ssa_169_2, %ssa_168; // vec3 32 ssa_169 = vec3 ssa_166, ssa_167, ssa_168
bb_01	:  PC=0x2c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:800) add.f32 %ssa_170, %ssa_169_0, %ssa_169_1;
bb_01	:  PC=0x2c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:801) add.f32 %ssa_170, %ssa_170, %ssa_169_2; // vec1 32 ssa_170 = fsum3 ssa_169
bb_01	:  PC=0x2c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:804) setp.lt.f32 %ssa_171, %ssa_170, %ssa_5;// vec1  1 ssa_171 = flt! ssa_170, ssa_5
bb_01	:  PC=0x2c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:807) setp.ge.s32 %ssa_172, %ssa_101, %ssa_5_bits; // vec1  1 ssa_172 = ige ssa_101, ssa_5
bb_01	:  PC=0x2c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:812) @!%ssa_172 bra else_8;

bb_02	:  PC=0x2c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:817) mov.b64 %ssa_173, %TextureSamplers; // vec1 32 ssa_173 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_02	:  PC=0x2c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:822) cvt.u32.s32 %ssa_174_array_index_32, %ssa_101;
bb_02	:  PC=0x2c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:823) mul.wide.u32 %ssa_174_array_index_64, %ssa_174_array_index_32, 48;
bb_02	:  PC=0x2c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:824) add.u64 %ssa_174, %ssa_173, %ssa_174_array_index_64; // vec1 32 ssa_174 = deref_array &(*ssa_173)[ssa_101] (uniform sampler2D) /* &TextureSamplers[ssa_101] */
bb_02	:  PC=0x2c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:830) txl %ssa_174, %ssa_174, %ssa_175_0, %ssa_175_1, %ssa_175_2, %ssa_175_3, %ssa_149_0, %ssa_149_1, %ssa_5; // vec4 32 ssa_175 = (float32)txl ssa_174 (texture_deref), ssa_174 (sampler_deref), ssa_149 (coord), ssa_5 (lod), texture non-uniform, sampler non-uniform
bb_02	:  PC=0x2c80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:833) mov.f32 %ssa_403, %ssa_175_0; // vec1 32 ssa_403 = mov ssa_175.x
bb_02	:  PC=0x2c88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:836) mov.f32 %ssa_406, %ssa_175_1; // vec1 32 ssa_406 = mov ssa_175.y
bb_02	:  PC=0x2c90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:839) mov.f32 %ssa_409, %ssa_175_2; // vec1 32 ssa_409 = mov ssa_175.z
bb_02	:  PC=0x2c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:842) mov.f32 %ssa_412, %ssa_175_3; // vec1 32 ssa_412 = mov ssa_175.w
bb_02	:  PC=0x2ca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:844) mov.f32 %ssa_405, %ssa_403; // vec1 32 ssa_405 = phi block_2: ssa_403, block_3: ssa_520
bb_02	:  PC=0x2ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:845) mov.f32 %ssa_408, %ssa_406; // vec1 32 ssa_408 = phi block_2: ssa_406, block_3: ssa_521
bb_02	:  PC=0x2cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:846) mov.f32 %ssa_411, %ssa_409; // vec1 32 ssa_411 = phi block_2: ssa_409, block_3: ssa_522
bb_02	:  PC=0x2cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:847) mov.f32 %ssa_414, %ssa_412; // vec1 32 ssa_414 = phi block_2: ssa_412, block_3: ssa_523
bb_02	:  PC=0x2cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:850) bra end_if_8;

bb_03	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:855) .reg .f32 %ssa_520;
bb_03	:  PC=0x2cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:856) mov.f32 %ssa_520, 0F3f800000; // vec1 32 ssa_520 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x2cd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:858) mov.b32 %ssa_520_bits, 0F3f800000;
bb_03	:  PC=0x2cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:861) mov.f32 %ssa_521, 0F3f800000; // vec1 32 ssa_521 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x2ce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:863) mov.b32 %ssa_521_bits, 0F3f800000;
bb_03	:  PC=0x2ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:866) mov.f32 %ssa_522, 0F3f800000; // vec1 32 ssa_522 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x2cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:868) mov.b32 %ssa_522_bits, 0F3f800000;
bb_03	:  PC=0x2cf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:871) mov.f32 %ssa_523, 0F3f800000; // vec1 32 ssa_523 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x2d00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:873) mov.b32 %ssa_523_bits, 0F3f800000;
bb_03	:  PC=0x2d08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:875) mov.f32 %ssa_405, %ssa_520; // vec1 32 ssa_405 = phi block_2: ssa_403, block_3: ssa_520
bb_03	:  PC=0x2d10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:876) mov.f32 %ssa_408, %ssa_521; // vec1 32 ssa_408 = phi block_2: ssa_406, block_3: ssa_521
bb_03	:  PC=0x2d18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:877) mov.f32 %ssa_411, %ssa_522; // vec1 32 ssa_411 = phi block_2: ssa_409, block_3: ssa_522
bb_03	:  PC=0x2d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:878) mov.f32 %ssa_414, %ssa_523; // vec1 32 ssa_414 = phi block_2: ssa_412, block_3: ssa_523

bb_04	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:888) .reg .b32 %ssa_415_0;
bb_04	:  PC=0x2d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:892) mov.b32 %ssa_415_0, %ssa_405;
bb_04	:  PC=0x2d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:893) mov.b32 %ssa_415_1, %ssa_408;
bb_04	:  PC=0x2d38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:894) mov.b32 %ssa_415_2, %ssa_411;
bb_04	:  PC=0x2d40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:895) mov.b32 %ssa_415_3, %ssa_414; // vec4 32 ssa_415 = vec4 ssa_405, ssa_408, ssa_411, ssa_414
bb_04	:  PC=0x2d48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:898) mul.f32 %ssa_177, %ssa_99_0, %ssa_415_0; // vec1 32 ssa_177 = fmul ssa_99.x, ssa_415.x
bb_04	:  PC=0x2d50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:901) mul.f32 %ssa_178, %ssa_99_1, %ssa_415_1; // vec1 32 ssa_178 = fmul ssa_99.y, ssa_415.y
bb_04	:  PC=0x2d58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:904) mul.f32 %ssa_179, %ssa_99_2, %ssa_415_2; // vec1 32 ssa_179 = fmul ssa_99.z, ssa_415.z
bb_04	:  PC=0x2d60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:906) mov.s32 %ssa_180, %ssa_154; // vec1 32 ssa_180 = phi block_4: ssa_154, block_8: ssa_193

bb_05	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:913) .reg .f32 %ssa_181;
bb_05	:  PC=0x2d68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:914) mov.f32 %ssa_181, 0F00ffffff; // vec1 32 ssa_181 = load_const (0x00ffffff /* 0.000000 */)
bb_05	:  PC=0x2d70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:916) mov.b32 %ssa_181_bits, 0F00ffffff;
bb_05	:  PC=0x2d78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:919) mov.f32 %ssa_182, 0F3c6ef35f; // vec1 32 ssa_182 = load_const (0x3c6ef35f /* 0.014584 */)
bb_05	:  PC=0x2d80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:921) mov.b32 %ssa_182_bits, 0F3c6ef35f;
bb_05	:  PC=0x2d88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:924) mov.f32 %ssa_183, 0F0019660d; // vec1 32 ssa_183 = load_const (0x0019660d /* 0.000000 */)
bb_05	:  PC=0x2d90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:926) mov.b32 %ssa_183_bits, 0F0019660d;
bb_05	:  PC=0x2d98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:929) mul.lo.s32 %ssa_184, %ssa_183_bits, %ssa_180; // vec1 32 ssa_184 = imul ssa_183, ssa_180
bb_05	:  PC=0x2da0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:932) add.s32 %ssa_185, %ssa_184, %ssa_182_bits; // vec1 32 ssa_185 = iadd ssa_184, ssa_182
bb_05	:  PC=0x2da8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:935) and.b32 %ssa_186, %ssa_185, %ssa_181;// vec1 32 ssa_186 = iand ssa_185, ssa_181
bb_05	:  PC=0x2db0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:938) cvt.rn.f32.u32 %ssa_187, %ssa_186;// vec1 32 ssa_187 = u2f32 ssa_186
bb_05	:  PC=0x2db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:941) mul.lo.s32 %ssa_188, %ssa_183_bits, %ssa_185; // vec1 32 ssa_188 = imul ssa_183, ssa_185
bb_05	:  PC=0x2dc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:944) add.s32 %ssa_189, %ssa_188, %ssa_182_bits; // vec1 32 ssa_189 = iadd ssa_188, ssa_182
bb_05	:  PC=0x2dc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:947) and.b32 %ssa_190, %ssa_189, %ssa_181;// vec1 32 ssa_190 = iand ssa_189, ssa_181
bb_05	:  PC=0x2dd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:950) cvt.rn.f32.u32 %ssa_191, %ssa_190;// vec1 32 ssa_191 = u2f32 ssa_190
bb_05	:  PC=0x2dd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:953) mul.lo.s32 %ssa_192, %ssa_183_bits, %ssa_189; // vec1 32 ssa_192 = imul ssa_183, ssa_189
bb_05	:  PC=0x2de0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:956) add.s32 %ssa_193, %ssa_192, %ssa_182_bits; // vec1 32 ssa_193 = iadd ssa_192, ssa_182
bb_05	:  PC=0x2de8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:959) and.b32 %ssa_194, %ssa_193, %ssa_181;// vec1 32 ssa_194 = iand ssa_193, ssa_181
bb_05	:  PC=0x2df0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:962) cvt.rn.f32.u32 %ssa_195, %ssa_194;// vec1 32 ssa_195 = u2f32 ssa_194
bb_05	:  PC=0x2df8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:965) mov.f32 %ssa_196, 0F34000000; // vec1 32 ssa_196 = load_const (0x34000000 /* 0.000000 */)
bb_05	:  PC=0x2e00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:967) mov.b32 %ssa_196_bits, 0F34000000;
bb_05	:  PC=0x2e08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:970) mul.f32 %ssa_197, %ssa_196, %ssa_187;// vec1 32 ssa_197 = fmul ssa_196, ssa_187
bb_05	:  PC=0x2e10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:973) mul.f32 %ssa_198, %ssa_196, %ssa_191;// vec1 32 ssa_198 = fmul ssa_196, ssa_191
bb_05	:  PC=0x2e18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:976) mul.f32 %ssa_199, %ssa_196, %ssa_195;// vec1 32 ssa_199 = fmul ssa_196, ssa_195
bb_05	:  PC=0x2e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:982) mov.f32 %ssa_200_0, 0Fbf800000;
bb_05	:  PC=0x2e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:983) mov.f32 %ssa_200_1, 0Fbf800000;
bb_05	:  PC=0x2e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:984) mov.f32 %ssa_200_2, 0Fbf800000;
bb_05	:  PC=0x2e38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:985) mov.f32 %ssa_200_3, 0F00000000;
bb_05	:  PC=0x2e40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:989) add.f32 %ssa_201, %ssa_197, %ssa_200_0; // vec1 32 ssa_201 = fadd ssa_197, ssa_200.x
bb_05	:  PC=0x2e48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:992) add.f32 %ssa_202, %ssa_198, %ssa_200_1; // vec1 32 ssa_202 = fadd ssa_198, ssa_200.y
bb_05	:  PC=0x2e50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:995) add.f32 %ssa_203, %ssa_199, %ssa_200_2; // vec1 32 ssa_203 = fadd ssa_199, ssa_200.z
bb_05	:  PC=0x2e58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:998) mul.f32 %ssa_204, %ssa_201, %ssa_201;// vec1 32 ssa_204 = fmul ssa_201, ssa_201
bb_05	:  PC=0x2e60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1001) mul.f32 %ssa_205, %ssa_202, %ssa_202;// vec1 32 ssa_205 = fmul ssa_202, ssa_202
bb_05	:  PC=0x2e68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1004) mul.f32 %ssa_206, %ssa_203, %ssa_203;// vec1 32 ssa_206 = fmul ssa_203, ssa_203
bb_05	:  PC=0x2e70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1010) mov.f32 %ssa_207_0, %ssa_204;
bb_05	:  PC=0x2e78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1011) mov.f32 %ssa_207_1, %ssa_205;
bb_05	:  PC=0x2e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1012) mov.f32 %ssa_207_2, %ssa_206; // vec3 32 ssa_207 = vec3 ssa_204, ssa_205, ssa_206
bb_05	:  PC=0x2e88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1015) add.f32 %ssa_208, %ssa_207_0, %ssa_207_1;
bb_05	:  PC=0x2e90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1016) add.f32 %ssa_208, %ssa_208, %ssa_207_2; // vec1 32 ssa_208 = fsum3 ssa_207
bb_05	:  PC=0x2e98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1019) setp.lt.f32 %ssa_209, %ssa_208, %ssa_0;// vec1  1 ssa_209 = flt! ssa_208, ssa_0
bb_05	:  PC=0x2ea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1024) @!%ssa_209 bra else_9;

bb_06	:  PC=0x2ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1028) bra loop_3_exit;

bb_07	:  PC=0x2eb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1032) bra end_if_9;

bb_08	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1039) end_if_9:
bb_08	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1042) mov.s32 %ssa_180, %ssa_193; // vec1 32 ssa_180 = phi block_4: ssa_154, block_8: ssa_193
bb_08	:  PC=0x2eb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1042) mov.s32 %ssa_180, %ssa_193; // vec1 32 ssa_180 = phi block_4: ssa_154, block_8: ssa_193
bb_08	:  PC=0x2ec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1045) bra loop_3;

bb_09	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1050) .reg .f32 %ssa_210;
bb_09	:  PC=0x2ec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1051) add.f32 %ssa_210, %ssa_135, %ssa_201;// vec1 32 ssa_210 = fadd ssa_135, ssa_201
bb_09	:  PC=0x2ed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1054) add.f32 %ssa_211, %ssa_136, %ssa_202;// vec1 32 ssa_211 = fadd ssa_136, ssa_202
bb_09	:  PC=0x2ed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1057) add.f32 %ssa_212, %ssa_137, %ssa_203;// vec1 32 ssa_212 = fadd ssa_137, ssa_203
bb_09	:  PC=0x2ee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1060) selp.f32 %ssa_213, 0F3f800000, 0F00000000, %ssa_171; // vec1 32 ssa_213 = b2f32 ssa_171
bb_09	:  PC=0x2ee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1066) mov.f32 %ssa_214_0, %ssa_177;
bb_09	:  PC=0x2ef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1067) mov.f32 %ssa_214_1, %ssa_178;
bb_09	:  PC=0x2ef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1068) mov.f32 %ssa_214_2, %ssa_179;
bb_09	:  PC=0x2f00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1069) mov.f32 %ssa_214_3, %ssa_151; // vec4 32 ssa_214 = vec4 ssa_177, ssa_178, ssa_179, ssa_151
bb_09	:  PC=0x2f08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1075) mov.f32 %ssa_215_0, %ssa_210;
bb_09	:  PC=0x2f10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1076) mov.f32 %ssa_215_1, %ssa_211;
bb_09	:  PC=0x2f18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1077) mov.f32 %ssa_215_2, %ssa_212;
bb_09	:  PC=0x2f20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1078) mov.f32 %ssa_215_3, %ssa_213; // vec4 32 ssa_215 = vec4 ssa_210, ssa_211, ssa_212, ssa_213
bb_09	:  PC=0x2f28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1081) mov.f32 %ssa_494, %ssa_215_0; // vec1 32 ssa_494 = mov ssa_215.x
bb_09	:  PC=0x2f30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1084) mov.f32 %ssa_497, %ssa_215_1; // vec1 32 ssa_497 = mov ssa_215.y
bb_09	:  PC=0x2f38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1087) mov.f32 %ssa_500, %ssa_215_2; // vec1 32 ssa_500 = mov ssa_215.z
bb_09	:  PC=0x2f40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1090) mov.f32 %ssa_503, %ssa_215_3; // vec1 32 ssa_503 = mov ssa_215.w
bb_09	:  PC=0x2f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1093) mov.f32 %ssa_507, %ssa_214_0; // vec1 32 ssa_507 = mov ssa_214.x
bb_09	:  PC=0x2f50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1096) mov.f32 %ssa_510, %ssa_214_1; // vec1 32 ssa_510 = mov ssa_214.y
bb_09	:  PC=0x2f58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1099) mov.f32 %ssa_513, %ssa_214_2; // vec1 32 ssa_513 = mov ssa_214.z
bb_09	:  PC=0x2f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1102) mov.f32 %ssa_516, %ssa_214_3; // vec1 32 ssa_516 = mov ssa_214.w
bb_09	:  PC=0x2f68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1104) mov.s32 %ssa_397, %ssa_193; // vec1 32 ssa_397 = phi block_9: ssa_193, block_30: ssa_394
bb_09	:  PC=0x2f70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1105) mov.b32 %ssa_496, %ssa_494; // vec1 32 ssa_496 = phi block_9: ssa_494, block_30: ssa_495
bb_09	:  PC=0x2f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1106) mov.b32 %ssa_499, %ssa_497; // vec1 32 ssa_499 = phi block_9: ssa_497, block_30: ssa_498
bb_09	:  PC=0x2f80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1107) mov.b32 %ssa_502, %ssa_500; // vec1 32 ssa_502 = phi block_9: ssa_500, block_30: ssa_501
bb_09	:  PC=0x2f88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1108) mov.b32 %ssa_505, %ssa_503; // vec1 32 ssa_505 = phi block_9: ssa_503, block_30: ssa_504
bb_09	:  PC=0x2f90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1109) mov.b32 %ssa_509, %ssa_507; // vec1 32 ssa_509 = phi block_9: ssa_507, block_30: ssa_508
bb_09	:  PC=0x2f98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1110) mov.b32 %ssa_512, %ssa_510; // vec1 32 ssa_512 = phi block_9: ssa_510, block_30: ssa_511
bb_09	:  PC=0x2fa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1111) mov.b32 %ssa_515, %ssa_513; // vec1 32 ssa_515 = phi block_9: ssa_513, block_30: ssa_514
bb_09	:  PC=0x2fa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1112) mov.b32 %ssa_518, %ssa_516; // vec1 32 ssa_518 = phi block_9: ssa_516, block_30: ssa_517
bb_09	:  PC=0x2fb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1115) bra end_if_7;

bb_10	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1120) .reg .pred %ssa_216;
bb_10	:  PC=0x2fb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1121) setp.eq.s32 %ssa_216, %ssa_107, %ssa_3_bits; // vec1  1 ssa_216 = ieq ssa_107, ssa_3
bb_10	:  PC=0x2fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1126) @!%ssa_216 bra else_10;

bb_11	:  PC=0x2fc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1134) mov.f32 %ssa_217_0, 0F3f800000;
bb_11	:  PC=0x2fd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1135) mov.f32 %ssa_217_1, 0F3f800000;
bb_11	:  PC=0x2fd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1136) mov.f32 %ssa_217_2, 0F3f800000;
bb_11	:  PC=0x2fe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1137) mov.f32 %ssa_217_3, 0F3f800000;
bb_11	:  PC=0x2fe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1141) mov.f32 %ssa_218, 0F40000000; // vec1 32 ssa_218 = load_const (0x40000000 /* 2.000000 */)
bb_11	:  PC=0x2ff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1143) mov.b32 %ssa_218_bits, 0F40000000;
bb_11	:  PC=0x2ff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1146) mul.f32 %ssa_219, %ssa_161, %ssa_135;// vec1 32 ssa_219 = fmul ssa_161, ssa_135
bb_11	:  PC=0x3000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1149) mul.f32 %ssa_220, %ssa_162, %ssa_136;// vec1 32 ssa_220 = fmul ssa_162, ssa_136
bb_11	:  PC=0x3008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1152) mul.f32 %ssa_221, %ssa_163, %ssa_137;// vec1 32 ssa_221 = fmul ssa_163, ssa_137
bb_11	:  PC=0x3010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1158) mov.f32 %ssa_222_0, %ssa_219;
bb_11	:  PC=0x3018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1159) mov.f32 %ssa_222_1, %ssa_220;
bb_11	:  PC=0x3020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1160) mov.f32 %ssa_222_2, %ssa_221; // vec3 32 ssa_222 = vec3 ssa_219, ssa_220, ssa_221
bb_11	:  PC=0x3028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1163) add.f32 %ssa_223, %ssa_222_0, %ssa_222_1;
bb_11	:  PC=0x3030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1164) add.f32 %ssa_223, %ssa_223, %ssa_222_2; // vec1 32 ssa_223 = fsum3 ssa_222
bb_11	:  PC=0x3038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1167) mul.f32 %ssa_224, %ssa_223, %ssa_218;// vec1 32 ssa_224 = fmul ssa_223, ssa_218
bb_11	:  PC=0x3040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1170) mul.f32 %ssa_225, %ssa_135, %ssa_224;// vec1 32 ssa_225 = fmul ssa_135, ssa_224
bb_11	:  PC=0x3048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1173) neg.f32 %ssa_226, %ssa_225;// vec1 32 ssa_226 = fneg ssa_225
bb_11	:  PC=0x3050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1176) mul.f32 %ssa_227, %ssa_136, %ssa_224;// vec1 32 ssa_227 = fmul ssa_136, ssa_224
bb_11	:  PC=0x3058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1179) neg.f32 %ssa_228, %ssa_227;// vec1 32 ssa_228 = fneg ssa_227
bb_11	:  PC=0x3060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1182) mul.f32 %ssa_229, %ssa_137, %ssa_224;// vec1 32 ssa_229 = fmul ssa_137, ssa_224
bb_11	:  PC=0x3068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1185) neg.f32 %ssa_230, %ssa_229;// vec1 32 ssa_230 = fneg ssa_229
bb_11	:  PC=0x3070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1188) add.f32 %ssa_231, %ssa_226, %ssa_161;// vec1 32 ssa_231 = fadd ssa_226, ssa_161
bb_11	:  PC=0x3078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1191) add.f32 %ssa_232, %ssa_228, %ssa_162;// vec1 32 ssa_232 = fadd ssa_228, ssa_162
bb_11	:  PC=0x3080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1194) add.f32 %ssa_233, %ssa_230, %ssa_163;// vec1 32 ssa_233 = fadd ssa_230, ssa_163
bb_11	:  PC=0x3088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1197) mul.f32 %ssa_234, %ssa_231, %ssa_135;// vec1 32 ssa_234 = fmul ssa_231, ssa_135
bb_11	:  PC=0x3090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1200) mul.f32 %ssa_235, %ssa_232, %ssa_136;// vec1 32 ssa_235 = fmul ssa_232, ssa_136
bb_11	:  PC=0x3098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1203) mul.f32 %ssa_236, %ssa_233, %ssa_137;// vec1 32 ssa_236 = fmul ssa_233, ssa_137
bb_11	:  PC=0x30a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1209) mov.f32 %ssa_237_0, %ssa_234;
bb_11	:  PC=0x30a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1210) mov.f32 %ssa_237_1, %ssa_235;
bb_11	:  PC=0x30b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1211) mov.f32 %ssa_237_2, %ssa_236; // vec3 32 ssa_237 = vec3 ssa_234, ssa_235, ssa_236
bb_11	:  PC=0x30b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1214) add.f32 %ssa_238, %ssa_237_0, %ssa_237_1;
bb_11	:  PC=0x30c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1215) add.f32 %ssa_238, %ssa_238, %ssa_237_2; // vec1 32 ssa_238 = fsum3 ssa_237
bb_11	:  PC=0x30c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1218) setp.lt.f32 %ssa_239, %ssa_5, %ssa_238;// vec1  1 ssa_239 = flt! ssa_5, ssa_238
bb_11	:  PC=0x30d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1221) setp.ge.s32 %ssa_240, %ssa_101, %ssa_5_bits; // vec1  1 ssa_240 = ige ssa_101, ssa_5
bb_11	:  PC=0x30d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1226) @!%ssa_240 bra else_11;

bb_12	:  PC=0x30e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1231) mov.b64 %ssa_241, %TextureSamplers; // vec1 32 ssa_241 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_12	:  PC=0x30e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1236) cvt.u32.s32 %ssa_242_array_index_32, %ssa_101;
bb_12	:  PC=0x30f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1237) mul.wide.u32 %ssa_242_array_index_64, %ssa_242_array_index_32, 48;
bb_12	:  PC=0x30f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1238) add.u64 %ssa_242, %ssa_241, %ssa_242_array_index_64; // vec1 32 ssa_242 = deref_array &(*ssa_241)[ssa_101] (uniform sampler2D) /* &TextureSamplers[ssa_101] */
bb_12	:  PC=0x3100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1244) txl %ssa_242, %ssa_242, %ssa_243_0, %ssa_243_1, %ssa_243_2, %ssa_243_3, %ssa_149_0, %ssa_149_1, %ssa_5; // vec4 32 ssa_243 = (float32)txl ssa_242 (texture_deref), ssa_242 (sampler_deref), ssa_149 (coord), ssa_5 (lod), texture non-uniform, sampler non-uniform
bb_12	:  PC=0x3108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1247) mov.f32 %ssa_416, %ssa_243_0; // vec1 32 ssa_416 = mov ssa_243.x
bb_12	:  PC=0x3110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1250) mov.f32 %ssa_419, %ssa_243_1; // vec1 32 ssa_419 = mov ssa_243.y
bb_12	:  PC=0x3118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1253) mov.f32 %ssa_422, %ssa_243_2; // vec1 32 ssa_422 = mov ssa_243.z
bb_12	:  PC=0x3120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1256) mov.f32 %ssa_425, %ssa_243_3; // vec1 32 ssa_425 = mov ssa_243.w
bb_12	:  PC=0x3128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1258) mov.f32 %ssa_418, %ssa_416; // vec1 32 ssa_418 = phi block_12: ssa_416, block_13: ssa_524
bb_12	:  PC=0x3130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1259) mov.f32 %ssa_421, %ssa_419; // vec1 32 ssa_421 = phi block_12: ssa_419, block_13: ssa_525
bb_12	:  PC=0x3138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1260) mov.f32 %ssa_424, %ssa_422; // vec1 32 ssa_424 = phi block_12: ssa_422, block_13: ssa_526
bb_12	:  PC=0x3140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1261) mov.f32 %ssa_427, %ssa_425; // vec1 32 ssa_427 = phi block_12: ssa_425, block_13: ssa_527
bb_12	:  PC=0x3148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1264) bra end_if_11;

bb_13	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1269) .reg .f32 %ssa_524;
bb_13	:  PC=0x3150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1270) mov.f32 %ssa_524, 0F3f800000; // vec1 32 ssa_524 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1272) mov.b32 %ssa_524_bits, 0F3f800000;
bb_13	:  PC=0x3160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1275) mov.f32 %ssa_525, 0F3f800000; // vec1 32 ssa_525 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1277) mov.b32 %ssa_525_bits, 0F3f800000;
bb_13	:  PC=0x3170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1280) mov.f32 %ssa_526, 0F3f800000; // vec1 32 ssa_526 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1282) mov.b32 %ssa_526_bits, 0F3f800000;
bb_13	:  PC=0x3180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1285) mov.f32 %ssa_527, 0F3f800000; // vec1 32 ssa_527 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1287) mov.b32 %ssa_527_bits, 0F3f800000;
bb_13	:  PC=0x3190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1289) mov.f32 %ssa_418, %ssa_524; // vec1 32 ssa_418 = phi block_12: ssa_416, block_13: ssa_524
bb_13	:  PC=0x3198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1290) mov.f32 %ssa_421, %ssa_525; // vec1 32 ssa_421 = phi block_12: ssa_419, block_13: ssa_525
bb_13	:  PC=0x31a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1291) mov.f32 %ssa_424, %ssa_526; // vec1 32 ssa_424 = phi block_12: ssa_422, block_13: ssa_526
bb_13	:  PC=0x31a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1292) mov.f32 %ssa_427, %ssa_527; // vec1 32 ssa_427 = phi block_12: ssa_425, block_13: ssa_527

bb_14	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1302) .reg .b32 %ssa_428_0;
bb_14	:  PC=0x31b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1306) mov.b32 %ssa_428_0, %ssa_418;
bb_14	:  PC=0x31b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1307) mov.b32 %ssa_428_1, %ssa_421;
bb_14	:  PC=0x31c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1308) mov.b32 %ssa_428_2, %ssa_424;
bb_14	:  PC=0x31c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1309) mov.b32 %ssa_428_3, %ssa_427; // vec4 32 ssa_428 = vec4 ssa_418, ssa_421, ssa_424, ssa_427
bb_14	:  PC=0x31d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1312) mul.f32 %ssa_245, %ssa_99_0, %ssa_428_0; // vec1 32 ssa_245 = fmul ssa_99.x, ssa_428.x
bb_14	:  PC=0x31d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1315) mul.f32 %ssa_246, %ssa_99_1, %ssa_428_1; // vec1 32 ssa_246 = fmul ssa_99.y, ssa_428.y
bb_14	:  PC=0x31e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1318) mul.f32 %ssa_247, %ssa_99_2, %ssa_428_2; // vec1 32 ssa_247 = fmul ssa_99.z, ssa_428.z
bb_14	:  PC=0x31e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1320) mov.s32 %ssa_248, %ssa_154; // vec1 32 ssa_248 = phi block_14: ssa_154, block_18: ssa_261

bb_15	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1327) .reg .f32 %ssa_249;
bb_15	:  PC=0x31f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1328) mov.f32 %ssa_249, 0F00ffffff; // vec1 32 ssa_249 = load_const (0x00ffffff /* 0.000000 */)
bb_15	:  PC=0x31f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1330) mov.b32 %ssa_249_bits, 0F00ffffff;
bb_15	:  PC=0x3200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1333) mov.f32 %ssa_250, 0F3c6ef35f; // vec1 32 ssa_250 = load_const (0x3c6ef35f /* 0.014584 */)
bb_15	:  PC=0x3208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1335) mov.b32 %ssa_250_bits, 0F3c6ef35f;
bb_15	:  PC=0x3210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1338) mov.f32 %ssa_251, 0F0019660d; // vec1 32 ssa_251 = load_const (0x0019660d /* 0.000000 */)
bb_15	:  PC=0x3218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1340) mov.b32 %ssa_251_bits, 0F0019660d;
bb_15	:  PC=0x3220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1343) mul.lo.s32 %ssa_252, %ssa_251_bits, %ssa_248; // vec1 32 ssa_252 = imul ssa_251, ssa_248
bb_15	:  PC=0x3228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1346) add.s32 %ssa_253, %ssa_252, %ssa_250_bits; // vec1 32 ssa_253 = iadd ssa_252, ssa_250
bb_15	:  PC=0x3230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1349) and.b32 %ssa_254, %ssa_253, %ssa_249;// vec1 32 ssa_254 = iand ssa_253, ssa_249
bb_15	:  PC=0x3238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1352) cvt.rn.f32.u32 %ssa_255, %ssa_254;// vec1 32 ssa_255 = u2f32 ssa_254
bb_15	:  PC=0x3240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1355) mul.lo.s32 %ssa_256, %ssa_251_bits, %ssa_253; // vec1 32 ssa_256 = imul ssa_251, ssa_253
bb_15	:  PC=0x3248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1358) add.s32 %ssa_257, %ssa_256, %ssa_250_bits; // vec1 32 ssa_257 = iadd ssa_256, ssa_250
bb_15	:  PC=0x3250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1361) and.b32 %ssa_258, %ssa_257, %ssa_249;// vec1 32 ssa_258 = iand ssa_257, ssa_249
bb_15	:  PC=0x3258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1364) cvt.rn.f32.u32 %ssa_259, %ssa_258;// vec1 32 ssa_259 = u2f32 ssa_258
bb_15	:  PC=0x3260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1367) mul.lo.s32 %ssa_260, %ssa_251_bits, %ssa_257; // vec1 32 ssa_260 = imul ssa_251, ssa_257
bb_15	:  PC=0x3268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1370) add.s32 %ssa_261, %ssa_260, %ssa_250_bits; // vec1 32 ssa_261 = iadd ssa_260, ssa_250
bb_15	:  PC=0x3270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1373) and.b32 %ssa_262, %ssa_261, %ssa_249;// vec1 32 ssa_262 = iand ssa_261, ssa_249
bb_15	:  PC=0x3278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1376) cvt.rn.f32.u32 %ssa_263, %ssa_262;// vec1 32 ssa_263 = u2f32 ssa_262
bb_15	:  PC=0x3280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1379) mov.f32 %ssa_264, 0F34000000; // vec1 32 ssa_264 = load_const (0x34000000 /* 0.000000 */)
bb_15	:  PC=0x3288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1381) mov.b32 %ssa_264_bits, 0F34000000;
bb_15	:  PC=0x3290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1384) mul.f32 %ssa_265, %ssa_264, %ssa_255;// vec1 32 ssa_265 = fmul ssa_264, ssa_255
bb_15	:  PC=0x3298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1387) mul.f32 %ssa_266, %ssa_264, %ssa_259;// vec1 32 ssa_266 = fmul ssa_264, ssa_259
bb_15	:  PC=0x32a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1390) mul.f32 %ssa_267, %ssa_264, %ssa_263;// vec1 32 ssa_267 = fmul ssa_264, ssa_263
bb_15	:  PC=0x32a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1396) mov.f32 %ssa_268_0, 0Fbf800000;
bb_15	:  PC=0x32b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1397) mov.f32 %ssa_268_1, 0Fbf800000;
bb_15	:  PC=0x32b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1398) mov.f32 %ssa_268_2, 0Fbf800000;
bb_15	:  PC=0x32c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1399) mov.f32 %ssa_268_3, 0F00000000;
bb_15	:  PC=0x32c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1403) add.f32 %ssa_269, %ssa_265, %ssa_268_0; // vec1 32 ssa_269 = fadd ssa_265, ssa_268.x
bb_15	:  PC=0x32d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1406) add.f32 %ssa_270, %ssa_266, %ssa_268_1; // vec1 32 ssa_270 = fadd ssa_266, ssa_268.y
bb_15	:  PC=0x32d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1409) add.f32 %ssa_271, %ssa_267, %ssa_268_2; // vec1 32 ssa_271 = fadd ssa_267, ssa_268.z
bb_15	:  PC=0x32e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1412) mul.f32 %ssa_272, %ssa_269, %ssa_269;// vec1 32 ssa_272 = fmul ssa_269, ssa_269
bb_15	:  PC=0x32e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1415) mul.f32 %ssa_273, %ssa_270, %ssa_270;// vec1 32 ssa_273 = fmul ssa_270, ssa_270
bb_15	:  PC=0x32f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1418) mul.f32 %ssa_274, %ssa_271, %ssa_271;// vec1 32 ssa_274 = fmul ssa_271, ssa_271
bb_15	:  PC=0x32f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1424) mov.f32 %ssa_275_0, %ssa_272;
bb_15	:  PC=0x3300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1425) mov.f32 %ssa_275_1, %ssa_273;
bb_15	:  PC=0x3308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1426) mov.f32 %ssa_275_2, %ssa_274; // vec3 32 ssa_275 = vec3 ssa_272, ssa_273, ssa_274
bb_15	:  PC=0x3310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1429) add.f32 %ssa_276, %ssa_275_0, %ssa_275_1;
bb_15	:  PC=0x3318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1430) add.f32 %ssa_276, %ssa_276, %ssa_275_2; // vec1 32 ssa_276 = fsum3 ssa_275
bb_15	:  PC=0x3320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1433) setp.lt.f32 %ssa_277, %ssa_276, %ssa_0;// vec1  1 ssa_277 = flt! ssa_276, ssa_0
bb_15	:  PC=0x3328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1438) @!%ssa_277 bra else_12;

bb_16	:  PC=0x3330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1442) bra loop_4_exit;

bb_17	:  PC=0x3338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1446) bra end_if_12;

bb_18	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1453) end_if_12:
bb_18	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1456) mov.s32 %ssa_248, %ssa_261; // vec1 32 ssa_248 = phi block_14: ssa_154, block_18: ssa_261
bb_18	:  PC=0x3340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1456) mov.s32 %ssa_248, %ssa_261; // vec1 32 ssa_248 = phi block_14: ssa_154, block_18: ssa_261
bb_18	:  PC=0x3348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1459) bra loop_4;

bb_19	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1464) .reg .f32 %ssa_278;
bb_19	:  PC=0x3350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1465) mul.f32 %ssa_278, %ssa_269, %ssa_103;// vec1 32 ssa_278 = fmul ssa_269, ssa_103
bb_19	:  PC=0x3358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1468) mul.f32 %ssa_279, %ssa_270, %ssa_103;// vec1 32 ssa_279 = fmul ssa_270, ssa_103
bb_19	:  PC=0x3360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1471) mul.f32 %ssa_280, %ssa_271, %ssa_103;// vec1 32 ssa_280 = fmul ssa_271, ssa_103
bb_19	:  PC=0x3368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1474) add.f32 %ssa_281, %ssa_231, %ssa_278;// vec1 32 ssa_281 = fadd ssa_231, ssa_278
bb_19	:  PC=0x3370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1477) add.f32 %ssa_282, %ssa_232, %ssa_279;// vec1 32 ssa_282 = fadd ssa_232, ssa_279
bb_19	:  PC=0x3378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1480) add.f32 %ssa_283, %ssa_233, %ssa_280;// vec1 32 ssa_283 = fadd ssa_233, ssa_280
bb_19	:  PC=0x3380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1483) selp.f32 %ssa_284, 0F3f800000, 0F00000000, %ssa_239; // vec1 32 ssa_284 = b2f32 ssa_239
bb_19	:  PC=0x3388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1489) mov.f32 %ssa_285_0, %ssa_245;
bb_19	:  PC=0x3390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1490) mov.f32 %ssa_285_1, %ssa_246;
bb_19	:  PC=0x3398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1491) mov.f32 %ssa_285_2, %ssa_247;
bb_19	:  PC=0x33a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1492) mov.f32 %ssa_285_3, %ssa_151; // vec4 32 ssa_285 = vec4 ssa_245, ssa_246, ssa_247, ssa_151
bb_19	:  PC=0x33a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1498) mov.f32 %ssa_286_0, %ssa_281;
bb_19	:  PC=0x33b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1499) mov.f32 %ssa_286_1, %ssa_282;
bb_19	:  PC=0x33b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1500) mov.f32 %ssa_286_2, %ssa_283;
bb_19	:  PC=0x33c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1501) mov.f32 %ssa_286_3, %ssa_284; // vec4 32 ssa_286 = vec4 ssa_281, ssa_282, ssa_283, ssa_284
bb_19	:  PC=0x33c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1504) mov.f32 %ssa_468, %ssa_286_0; // vec1 32 ssa_468 = mov ssa_286.x
bb_19	:  PC=0x33d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1507) mov.f32 %ssa_471, %ssa_286_1; // vec1 32 ssa_471 = mov ssa_286.y
bb_19	:  PC=0x33d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1510) mov.f32 %ssa_474, %ssa_286_2; // vec1 32 ssa_474 = mov ssa_286.z
bb_19	:  PC=0x33e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1513) mov.f32 %ssa_477, %ssa_286_3; // vec1 32 ssa_477 = mov ssa_286.w
bb_19	:  PC=0x33e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1516) mov.f32 %ssa_481, %ssa_285_0; // vec1 32 ssa_481 = mov ssa_285.x
bb_19	:  PC=0x33f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1519) mov.f32 %ssa_484, %ssa_285_1; // vec1 32 ssa_484 = mov ssa_285.y
bb_19	:  PC=0x33f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1522) mov.f32 %ssa_487, %ssa_285_2; // vec1 32 ssa_487 = mov ssa_285.z
bb_19	:  PC=0x3400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1525) mov.f32 %ssa_490, %ssa_285_3; // vec1 32 ssa_490 = mov ssa_285.w
bb_19	:  PC=0x3408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1527) mov.s32 %ssa_394, %ssa_261; // vec1 32 ssa_394 = phi block_19: ssa_261, block_29: ssa_391
bb_19	:  PC=0x3410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1528) mov.b32 %ssa_470, %ssa_468; // vec1 32 ssa_470 = phi block_19: ssa_468, block_29: ssa_469
bb_19	:  PC=0x3418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1529) mov.b32 %ssa_473, %ssa_471; // vec1 32 ssa_473 = phi block_19: ssa_471, block_29: ssa_472
bb_19	:  PC=0x3420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1530) mov.b32 %ssa_476, %ssa_474; // vec1 32 ssa_476 = phi block_19: ssa_474, block_29: ssa_475
bb_19	:  PC=0x3428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1531) mov.b32 %ssa_479, %ssa_477; // vec1 32 ssa_479 = phi block_19: ssa_477, block_29: ssa_478
bb_19	:  PC=0x3430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1532) mov.b32 %ssa_483, %ssa_481; // vec1 32 ssa_483 = phi block_19: ssa_481, block_29: ssa_482
bb_19	:  PC=0x3438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1533) mov.b32 %ssa_486, %ssa_484; // vec1 32 ssa_486 = phi block_19: ssa_484, block_29: ssa_485
bb_19	:  PC=0x3440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1534) mov.b32 %ssa_489, %ssa_487; // vec1 32 ssa_489 = phi block_19: ssa_487, block_29: ssa_488
bb_19	:  PC=0x3448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1535) mov.b32 %ssa_492, %ssa_490; // vec1 32 ssa_492 = phi block_19: ssa_490, block_29: ssa_491
bb_19	:  PC=0x3450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1538) bra end_if_10;

bb_20	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1543) .reg .pred %ssa_287;
bb_20	:  PC=0x3458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1544) setp.eq.s32 %ssa_287, %ssa_107, %ssa_1_bits; // vec1  1 ssa_287 = ieq ssa_107, ssa_1
bb_20	:  PC=0x3460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1549) @!%ssa_287 bra else_13;

bb_21	:  PC=0x3468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1557) mov.f32 %ssa_288_0, 0F3f800000;
bb_21	:  PC=0x3470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1558) mov.f32 %ssa_288_1, 0F3f800000;
bb_21	:  PC=0x3478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1559) mov.f32 %ssa_288_2, 0F3f800000;
bb_21	:  PC=0x3480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1560) mov.f32 %ssa_288_3, 0F3f800000;
bb_21	:  PC=0x3488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1564) mul.f32 %ssa_289, %ssa_161, %ssa_135;// vec1 32 ssa_289 = fmul ssa_161, ssa_135
bb_21	:  PC=0x3490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1567) mul.f32 %ssa_290, %ssa_162, %ssa_136;// vec1 32 ssa_290 = fmul ssa_162, ssa_136
bb_21	:  PC=0x3498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1570) mul.f32 %ssa_291, %ssa_163, %ssa_137;// vec1 32 ssa_291 = fmul ssa_163, ssa_137
bb_21	:  PC=0x34a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1576) mov.f32 %ssa_292_0, %ssa_289;
bb_21	:  PC=0x34a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1577) mov.f32 %ssa_292_1, %ssa_290;
bb_21	:  PC=0x34b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1578) mov.f32 %ssa_292_2, %ssa_291; // vec3 32 ssa_292 = vec3 ssa_289, ssa_290, ssa_291
bb_21	:  PC=0x34b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1581) add.f32 %ssa_293, %ssa_292_0, %ssa_292_1;
bb_21	:  PC=0x34c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1582) add.f32 %ssa_293, %ssa_293, %ssa_292_2; // vec1 32 ssa_293 = fsum3 ssa_292
bb_21	:  PC=0x34c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1585) setp.lt.f32 %ssa_294, %ssa_5, %ssa_293;// vec1  1 ssa_294 = flt! ssa_5, ssa_293
bb_21	:  PC=0x34d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1588) neg.f32 %ssa_295, %ssa_135;// vec1 32 ssa_295 = fneg ssa_135
bb_21	:  PC=0x34d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1591) neg.f32 %ssa_296, %ssa_136;// vec1 32 ssa_296 = fneg ssa_136
bb_21	:  PC=0x34e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1594) neg.f32 %ssa_297, %ssa_137;// vec1 32 ssa_297 = fneg ssa_137
bb_21	:  PC=0x34e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1597) selp.f32 %ssa_298, %ssa_295, %ssa_135, %ssa_294; // vec1 32 ssa_298 = bcsel ssa_294, ssa_295, ssa_135
bb_21	:  PC=0x34f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1600) selp.f32 %ssa_299, %ssa_296, %ssa_136, %ssa_294; // vec1 32 ssa_299 = bcsel ssa_294, ssa_296, ssa_136
bb_21	:  PC=0x34f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1603) selp.f32 %ssa_300, %ssa_297, %ssa_137, %ssa_294; // vec1 32 ssa_300 = bcsel ssa_294, ssa_297, ssa_137
bb_21	:  PC=0x3500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1606) rcp.approx.f32 %ssa_301, %ssa_105;// vec1 32 ssa_301 = frcp ssa_105
bb_21	:  PC=0x3508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1609) selp.f32 %ssa_302, %ssa_105, %ssa_301, %ssa_294; // vec1 32 ssa_302 = bcsel ssa_294, ssa_105, ssa_301
bb_21	:  PC=0x3510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1612) mul.f32 %ssa_303, %ssa_105, %ssa_293;// vec1 32 ssa_303 = fmul ssa_105, ssa_293
bb_21	:  PC=0x3518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1615) neg.f32 %ssa_304, %ssa_293;// vec1 32 ssa_304 = fneg ssa_293
bb_21	:  PC=0x3520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1618) selp.f32 %ssa_305, %ssa_303, %ssa_304, %ssa_294; // vec1 32 ssa_305 = bcsel ssa_294, ssa_303, ssa_304
bb_21	:  PC=0x3528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1621) mul.f32 %ssa_306, %ssa_298, %ssa_161;// vec1 32 ssa_306 = fmul ssa_298, ssa_161
bb_21	:  PC=0x3530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1624) mul.f32 %ssa_307, %ssa_299, %ssa_162;// vec1 32 ssa_307 = fmul ssa_299, ssa_162
bb_21	:  PC=0x3538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1627) mul.f32 %ssa_308, %ssa_300, %ssa_163;// vec1 32 ssa_308 = fmul ssa_300, ssa_163
bb_21	:  PC=0x3540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1633) mov.f32 %ssa_309_0, %ssa_306;
bb_21	:  PC=0x3548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1634) mov.f32 %ssa_309_1, %ssa_307;
bb_21	:  PC=0x3550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1635) mov.f32 %ssa_309_2, %ssa_308; // vec3 32 ssa_309 = vec3 ssa_306, ssa_307, ssa_308
bb_21	:  PC=0x3558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1638) add.f32 %ssa_310, %ssa_309_0, %ssa_309_1;
bb_21	:  PC=0x3560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1639) add.f32 %ssa_310, %ssa_310, %ssa_309_2; // vec1 32 ssa_310 = fsum3 ssa_309
bb_21	:  PC=0x3568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1642) mul.f32 %ssa_311, %ssa_310, %ssa_310;// vec1 32 ssa_311 = fmul ssa_310, ssa_310
bb_21	:  PC=0x3570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1645) neg.f32 %ssa_312, %ssa_311;// vec1 32 ssa_312 = fneg ssa_311
bb_21	:  PC=0x3578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1648) add.f32 %ssa_313, %ssa_312, %ssa_0;// vec1 32 ssa_313 = fadd ssa_312, ssa_0
bb_21	:  PC=0x3580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1651) mul.f32 %ssa_314, %ssa_302, %ssa_313;// vec1 32 ssa_314 = fmul ssa_302, ssa_313
bb_21	:  PC=0x3588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1654) mul.f32 %ssa_315, %ssa_302, %ssa_314;// vec1 32 ssa_315 = fmul ssa_302, ssa_314
bb_21	:  PC=0x3590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1657) neg.f32 %ssa_316, %ssa_315;// vec1 32 ssa_316 = fneg ssa_315
bb_21	:  PC=0x3598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1660) add.f32 %ssa_317, %ssa_316, %ssa_0;// vec1 32 ssa_317 = fadd ssa_316, ssa_0
bb_21	:  PC=0x35a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1663) sqrt.approx.f32 %ssa_318, %ssa_317;// vec1 32 ssa_318 = fsqrt ssa_317
bb_21	:  PC=0x35a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1666) mul.f32 %ssa_319, %ssa_302, %ssa_310;// vec1 32 ssa_319 = fmul ssa_302, ssa_310
bb_21	:  PC=0x35b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1669) add.f32 %ssa_320, %ssa_319, %ssa_318;// vec1 32 ssa_320 = fadd ssa_319, ssa_318
bb_21	:  PC=0x35b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1672) mul.f32 %ssa_321, %ssa_302, %ssa_161;// vec1 32 ssa_321 = fmul ssa_302, ssa_161
bb_21	:  PC=0x35c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1675) mul.f32 %ssa_322, %ssa_302, %ssa_162;// vec1 32 ssa_322 = fmul ssa_302, ssa_162
bb_21	:  PC=0x35c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1678) mul.f32 %ssa_323, %ssa_302, %ssa_163;// vec1 32 ssa_323 = fmul ssa_302, ssa_163
bb_21	:  PC=0x35d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1681) mul.f32 %ssa_324, %ssa_320, %ssa_298;// vec1 32 ssa_324 = fmul ssa_320, ssa_298
bb_21	:  PC=0x35d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1684) neg.f32 %ssa_325, %ssa_324;// vec1 32 ssa_325 = fneg ssa_324
bb_21	:  PC=0x35e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1687) mul.f32 %ssa_326, %ssa_320, %ssa_299;// vec1 32 ssa_326 = fmul ssa_320, ssa_299
bb_21	:  PC=0x35e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1690) neg.f32 %ssa_327, %ssa_326;// vec1 32 ssa_327 = fneg ssa_326
bb_21	:  PC=0x35f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1693) mul.f32 %ssa_328, %ssa_320, %ssa_300;// vec1 32 ssa_328 = fmul ssa_320, ssa_300
bb_21	:  PC=0x35f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1696) neg.f32 %ssa_329, %ssa_328;// vec1 32 ssa_329 = fneg ssa_328
bb_21	:  PC=0x3600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1699) add.f32 %ssa_330, %ssa_325, %ssa_321;// vec1 32 ssa_330 = fadd ssa_325, ssa_321
bb_21	:  PC=0x3608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1702) add.f32 %ssa_331, %ssa_327, %ssa_322;// vec1 32 ssa_331 = fadd ssa_327, ssa_322
bb_21	:  PC=0x3610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1705) add.f32 %ssa_332, %ssa_329, %ssa_323;// vec1 32 ssa_332 = fadd ssa_329, ssa_323
bb_21	:  PC=0x3618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1708) setp.lt.f32 %ssa_333, %ssa_317, %ssa_5;// vec1  1 ssa_333 = flt ssa_317, ssa_5
bb_21	:  PC=0x3620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1711) selp.f32 %ssa_334, %ssa_5_bits, %ssa_330, %ssa_333; // vec1 32 ssa_334 = bcsel ssa_333, ssa_5, ssa_330
bb_21	:  PC=0x3628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1714) selp.f32 %ssa_335, %ssa_5_bits, %ssa_331, %ssa_333; // vec1 32 ssa_335 = bcsel ssa_333, ssa_5, ssa_331
bb_21	:  PC=0x3630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1717) selp.f32 %ssa_336, %ssa_5_bits, %ssa_332, %ssa_333; // vec1 32 ssa_336 = bcsel ssa_333, ssa_5, ssa_332
bb_21	:  PC=0x3638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1720) abs.f32 %ssa_337, %ssa_335;// vec1 32 ssa_337 = fabs! ssa_335
bb_21	:  PC=0x3640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1723) abs.f32 %ssa_338, %ssa_336;// vec1 32 ssa_338 = fabs! ssa_336
bb_21	:  PC=0x3648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1726) add.f32 %ssa_339, %ssa_337, %ssa_338;// vec1 32 ssa_339 = fadd! ssa_337, ssa_338
bb_21	:  PC=0x3650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1729) abs.f32 %ssa_340, %ssa_334;// vec1 32 ssa_340 = fabs! ssa_334
bb_21	:  PC=0x3658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1732) add.f32 %ssa_341, %ssa_340, %ssa_339;// vec1 32 ssa_341 = fadd! ssa_340, ssa_339
bb_21	:  PC=0x3660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1735) setp.ne.f32 %ssa_342, %ssa_341, %ssa_5;// vec1  1 ssa_342 = fneu! ssa_341, ssa_5
bb_21	:  PC=0x3668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1740) @!%ssa_342 bra else_14;

bb_22	:  PC=0x3670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1745) mov.f32 %ssa_343, 0F40a00000; // vec1 32 ssa_343 = load_const (0x40a00000 /* 5.000000 */)
bb_22	:  PC=0x3678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1747) mov.b32 %ssa_343_bits, 0F40a00000;
bb_22	:  PC=0x3680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1750) neg.f32 %ssa_344, %ssa_105;// vec1 32 ssa_344 = fneg ssa_105
bb_22	:  PC=0x3688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1753) add.f32 %ssa_345, %ssa_0, %ssa_344;// vec1 32 ssa_345 = fadd ssa_0, ssa_344
bb_22	:  PC=0x3690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1756) add.f32 %ssa_346, %ssa_0, %ssa_105;// vec1 32 ssa_346 = fadd ssa_0, ssa_105
bb_22	:  PC=0x3698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1759) rcp.approx.f32 %ssa_347, %ssa_346;// vec1 32 ssa_347 = frcp ssa_346
bb_22	:  PC=0x36a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1762) mul.f32 %ssa_348, %ssa_345, %ssa_347;// vec1 32 ssa_348 = fmul ssa_345, ssa_347
bb_22	:  PC=0x36a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1765) mul.f32 %ssa_349, %ssa_348, %ssa_348;// vec1 32 ssa_349 = fmul ssa_348, ssa_348
bb_22	:  PC=0x36b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1768) neg.f32 %ssa_350, %ssa_349;// vec1 32 ssa_350 = fneg ssa_349
bb_22	:  PC=0x36b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1771) add.f32 %ssa_351, %ssa_0, %ssa_350;// vec1 32 ssa_351 = fadd ssa_0, ssa_350
bb_22	:  PC=0x36c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1774) neg.f32 %ssa_352, %ssa_305;// vec1 32 ssa_352 = fneg ssa_305
bb_22	:  PC=0x36c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1777) add.f32 %ssa_353, %ssa_0, %ssa_352;// vec1 32 ssa_353 = fadd ssa_0, ssa_352
bb_22	:  PC=0x36d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1780) lg2.approx.f32 %ssa_354, %ssa_353;
bb_22	:  PC=0x36d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1781) mul.f32 %ssa_354, %ssa_354, %ssa_343;
bb_22	:  PC=0x36e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1782) ex2.approx.f32 %ssa_354, %ssa_354;
bb_22	:  PC=0x36e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1785) mul.f32 %ssa_355, %ssa_351, %ssa_354;// vec1 32 ssa_355 = fmul ssa_351, ssa_354
bb_22	:  PC=0x36f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1788) add.f32 %ssa_356, %ssa_349, %ssa_355;// vec1 32 ssa_356 = fadd ssa_349, ssa_355
bb_22	:  PC=0x36f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1790) mov.f32 %ssa_357, %ssa_356; // vec1 32 ssa_357 = phi block_22: ssa_356, block_23: ssa_0
bb_22	:  PC=0x3700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1793) bra end_if_14;

bb_23	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1798) mov.f32 %ssa_357, %ssa_0; // vec1 32 ssa_357 = phi block_22: ssa_356, block_23: ssa_0
bb_23	:  PC=0x3708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1798) mov.f32 %ssa_357, %ssa_0; // vec1 32 ssa_357 = phi block_22: ssa_356, block_23: ssa_0

bb_24	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1805) .reg .pred %ssa_358;
bb_24	:  PC=0x3710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1806) setp.ge.s32 %ssa_358, %ssa_101, %ssa_5_bits; // vec1  1 ssa_358 = ige ssa_101, ssa_5
bb_24	:  PC=0x3718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1811) @!%ssa_358 bra else_15;

bb_25	:  PC=0x3720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1816) mov.b64 %ssa_359, %TextureSamplers; // vec1 32 ssa_359 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_25	:  PC=0x3728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1821) cvt.u32.s32 %ssa_360_array_index_32, %ssa_101;
bb_25	:  PC=0x3730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1822) mul.wide.u32 %ssa_360_array_index_64, %ssa_360_array_index_32, 48;
bb_25	:  PC=0x3738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1823) add.u64 %ssa_360, %ssa_359, %ssa_360_array_index_64; // vec1 32 ssa_360 = deref_array &(*ssa_359)[ssa_101] (uniform sampler2D) /* &TextureSamplers[ssa_101] */
bb_25	:  PC=0x3740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1829) txl %ssa_360, %ssa_360, %ssa_361_0, %ssa_361_1, %ssa_361_2, %ssa_361_3, %ssa_149_0, %ssa_149_1, %ssa_5; // vec4 32 ssa_361 = (float32)txl ssa_360 (texture_deref), ssa_360 (sampler_deref), ssa_149 (coord), ssa_5 (lod), texture non-uniform, sampler non-uniform
bb_25	:  PC=0x3748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1832) mov.f32 %ssa_429, %ssa_361_0; // vec1 32 ssa_429 = mov ssa_361.x
bb_25	:  PC=0x3750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1835) mov.f32 %ssa_432, %ssa_361_1; // vec1 32 ssa_432 = mov ssa_361.y
bb_25	:  PC=0x3758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1838) mov.f32 %ssa_435, %ssa_361_2; // vec1 32 ssa_435 = mov ssa_361.z
bb_25	:  PC=0x3760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1841) mov.f32 %ssa_438, %ssa_361_3; // vec1 32 ssa_438 = mov ssa_361.w
bb_25	:  PC=0x3768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1843) mov.f32 %ssa_431, %ssa_429; // vec1 32 ssa_431 = phi block_25: ssa_429, block_26: ssa_528
bb_25	:  PC=0x3770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1844) mov.f32 %ssa_434, %ssa_432; // vec1 32 ssa_434 = phi block_25: ssa_432, block_26: ssa_529
bb_25	:  PC=0x3778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1845) mov.f32 %ssa_437, %ssa_435; // vec1 32 ssa_437 = phi block_25: ssa_435, block_26: ssa_530
bb_25	:  PC=0x3780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1846) mov.f32 %ssa_440, %ssa_438; // vec1 32 ssa_440 = phi block_25: ssa_438, block_26: ssa_531
bb_25	:  PC=0x3788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1849) bra end_if_15;

bb_26	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1854) .reg .f32 %ssa_528;
bb_26	:  PC=0x3790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1855) mov.f32 %ssa_528, 0F3f800000; // vec1 32 ssa_528 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x3798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1857) mov.b32 %ssa_528_bits, 0F3f800000;
bb_26	:  PC=0x37a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1860) mov.f32 %ssa_529, 0F3f800000; // vec1 32 ssa_529 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x37a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1862) mov.b32 %ssa_529_bits, 0F3f800000;
bb_26	:  PC=0x37b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1865) mov.f32 %ssa_530, 0F3f800000; // vec1 32 ssa_530 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x37b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1867) mov.b32 %ssa_530_bits, 0F3f800000;
bb_26	:  PC=0x37c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1870) mov.f32 %ssa_531, 0F3f800000; // vec1 32 ssa_531 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x37c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1872) mov.b32 %ssa_531_bits, 0F3f800000;
bb_26	:  PC=0x37d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1874) mov.f32 %ssa_431, %ssa_528; // vec1 32 ssa_431 = phi block_25: ssa_429, block_26: ssa_528
bb_26	:  PC=0x37d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1875) mov.f32 %ssa_434, %ssa_529; // vec1 32 ssa_434 = phi block_25: ssa_432, block_26: ssa_529
bb_26	:  PC=0x37e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1876) mov.f32 %ssa_437, %ssa_530; // vec1 32 ssa_437 = phi block_25: ssa_435, block_26: ssa_530
bb_26	:  PC=0x37e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1877) mov.f32 %ssa_440, %ssa_531; // vec1 32 ssa_440 = phi block_25: ssa_438, block_26: ssa_531

bb_27	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1887) .reg .b32 %ssa_441_0;
bb_27	:  PC=0x37f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1891) mov.b32 %ssa_441_0, %ssa_431;
bb_27	:  PC=0x37f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1892) mov.b32 %ssa_441_1, %ssa_434;
bb_27	:  PC=0x3800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1893) mov.b32 %ssa_441_2, %ssa_437;
bb_27	:  PC=0x3808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1894) mov.b32 %ssa_441_3, %ssa_440; // vec4 32 ssa_441 = vec4 ssa_431, ssa_434, ssa_437, ssa_440
bb_27	:  PC=0x3810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1897) mov.f32 %ssa_363, 0F00ffffff; // vec1 32 ssa_363 = load_const (0x00ffffff /* 0.000000 */)
bb_27	:  PC=0x3818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1899) mov.b32 %ssa_363_bits, 0F00ffffff;
bb_27	:  PC=0x3820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1902) mov.f32 %ssa_364, 0F3c6ef35f; // vec1 32 ssa_364 = load_const (0x3c6ef35f /* 0.014584 */)
bb_27	:  PC=0x3828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1904) mov.b32 %ssa_364_bits, 0F3c6ef35f;
bb_27	:  PC=0x3830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1907) mov.f32 %ssa_365, 0F0019660d; // vec1 32 ssa_365 = load_const (0x0019660d /* 0.000000 */)
bb_27	:  PC=0x3838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1909) mov.b32 %ssa_365_bits, 0F0019660d;
bb_27	:  PC=0x3840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1912) mul.lo.s32 %ssa_366, %ssa_365_bits, %ssa_154; // vec1 32 ssa_366 = imul ssa_365, ssa_154
bb_27	:  PC=0x3848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1915) add.s32 %ssa_367, %ssa_366, %ssa_364_bits; // vec1 32 ssa_367 = iadd ssa_366, ssa_364
bb_27	:  PC=0x3850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1918) and.b32 %ssa_368, %ssa_367, %ssa_363;// vec1 32 ssa_368 = iand ssa_367, ssa_363
bb_27	:  PC=0x3858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1921) cvt.rn.f32.u32 %ssa_369, %ssa_368;// vec1 32 ssa_369 = u2f32 ssa_368
bb_27	:  PC=0x3860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1924) mov.f32 %ssa_370, 0F33800000; // vec1 32 ssa_370 = load_const (0x33800000 /* 0.000000 */)
bb_27	:  PC=0x3868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1926) mov.b32 %ssa_370_bits, 0F33800000;
bb_27	:  PC=0x3870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1929) mul.f32 %ssa_371, %ssa_369, %ssa_370;// vec1 32 ssa_371 = fmul ssa_369, ssa_370
bb_27	:  PC=0x3878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1932) setp.lt.f32 %ssa_372, %ssa_371, %ssa_357;// vec1  1 ssa_372 = flt! ssa_371, ssa_357
bb_27	:  PC=0x3880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1935) mov.f32 %ssa_373, 0F40000000; // vec1 32 ssa_373 = load_const (0x40000000 /* 2.000000 */)
bb_27	:  PC=0x3888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1937) mov.b32 %ssa_373_bits, 0F40000000;
bb_27	:  PC=0x3890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1940) mul.f32 %ssa_374, %ssa_293, %ssa_373;// vec1 32 ssa_374 = fmul ssa_293, ssa_373
bb_27	:  PC=0x3898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1943) mul.f32 %ssa_375, %ssa_135, %ssa_374;// vec1 32 ssa_375 = fmul ssa_135, ssa_374
bb_27	:  PC=0x38a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1946) neg.f32 %ssa_376, %ssa_375;// vec1 32 ssa_376 = fneg ssa_375
bb_27	:  PC=0x38a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1949) mul.f32 %ssa_377, %ssa_136, %ssa_374;// vec1 32 ssa_377 = fmul ssa_136, ssa_374
bb_27	:  PC=0x38b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1952) neg.f32 %ssa_378, %ssa_377;// vec1 32 ssa_378 = fneg ssa_377
bb_27	:  PC=0x38b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1955) mul.f32 %ssa_379, %ssa_137, %ssa_374;// vec1 32 ssa_379 = fmul ssa_137, ssa_374
bb_27	:  PC=0x38c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1958) neg.f32 %ssa_380, %ssa_379;// vec1 32 ssa_380 = fneg ssa_379
bb_27	:  PC=0x38c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1961) add.f32 %ssa_381, %ssa_376, %ssa_161;// vec1 32 ssa_381 = fadd ssa_376, ssa_161
bb_27	:  PC=0x38d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1964) add.f32 %ssa_382, %ssa_378, %ssa_162;// vec1 32 ssa_382 = fadd ssa_378, ssa_162
bb_27	:  PC=0x38d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1967) add.f32 %ssa_383, %ssa_380, %ssa_163;// vec1 32 ssa_383 = fadd ssa_380, ssa_163
bb_27	:  PC=0x38e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1970) selp.f32 %ssa_384, %ssa_381, %ssa_334, %ssa_372; // vec1 32 ssa_384 = bcsel ssa_372, ssa_381, ssa_334
bb_27	:  PC=0x38e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1973) selp.f32 %ssa_385, %ssa_382, %ssa_335, %ssa_372; // vec1 32 ssa_385 = bcsel ssa_372, ssa_382, ssa_335
bb_27	:  PC=0x38f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1976) selp.f32 %ssa_386, %ssa_383, %ssa_336, %ssa_372; // vec1 32 ssa_386 = bcsel ssa_372, ssa_383, ssa_336
bb_27	:  PC=0x38f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1982) mov.f32 %ssa_387_0, %ssa_384;
bb_27	:  PC=0x3900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1983) mov.f32 %ssa_387_1, %ssa_385;
bb_27	:  PC=0x3908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1984) mov.f32 %ssa_387_2, %ssa_386;
bb_27	:  PC=0x3910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1985) mov.f32 %ssa_387_3, %ssa_0; // vec4 32 ssa_387 = vec4 ssa_384, ssa_385, ssa_386, ssa_0
bb_27	:  PC=0x3918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1991) mov.b32 %ssa_388_0, %ssa_441_0;
bb_27	:  PC=0x3920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1992) mov.b32 %ssa_388_1, %ssa_441_1;
bb_27	:  PC=0x3928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1993) mov.b32 %ssa_388_2, %ssa_441_2;
bb_27	:  PC=0x3930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1994) mov.b32 %ssa_388_3, %ssa_151; // vec4 32 ssa_388 = vec4 ssa_441.x, ssa_441.y, ssa_441.z, ssa_151
bb_27	:  PC=0x3938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1997) mov.f32 %ssa_442, %ssa_387_0; // vec1 32 ssa_442 = mov ssa_387.x
bb_27	:  PC=0x3940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2000) mov.f32 %ssa_445, %ssa_387_1; // vec1 32 ssa_445 = mov ssa_387.y
bb_27	:  PC=0x3948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2003) mov.f32 %ssa_448, %ssa_387_2; // vec1 32 ssa_448 = mov ssa_387.z
bb_27	:  PC=0x3950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2006) mov.f32 %ssa_451, %ssa_387_3; // vec1 32 ssa_451 = mov ssa_387.w
bb_27	:  PC=0x3958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2009) mov.b32 %ssa_455, %ssa_388_0; // vec1 32 ssa_455 = mov ssa_388.x
bb_27	:  PC=0x3960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2012) mov.b32 %ssa_458, %ssa_388_1; // vec1 32 ssa_458 = mov ssa_388.y
bb_27	:  PC=0x3968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2015) mov.b32 %ssa_461, %ssa_388_2; // vec1 32 ssa_461 = mov ssa_388.z
bb_27	:  PC=0x3970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2018) mov.b32 %ssa_464, %ssa_388_3; // vec1 32 ssa_464 = mov ssa_388.w
bb_27	:  PC=0x3978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2020) mov.s32 %ssa_391, %ssa_367; // vec1 32 ssa_391 = phi block_27: ssa_367, block_28: ssa_154
bb_27	:  PC=0x3980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2021) mov.f32 %ssa_444, %ssa_442; // vec1 32 ssa_444 = phi block_27: ssa_442, block_28: ssa_532
bb_27	:  PC=0x3988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2022) mov.f32 %ssa_447, %ssa_445; // vec1 32 ssa_447 = phi block_27: ssa_445, block_28: ssa_533
bb_27	:  PC=0x3990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2023) mov.f32 %ssa_450, %ssa_448; // vec1 32 ssa_450 = phi block_27: ssa_448, block_28: ssa_534
bb_27	:  PC=0x3998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2024) mov.f32 %ssa_453, %ssa_451; // vec1 32 ssa_453 = phi block_27: ssa_451, block_28: ssa_535
bb_27	:  PC=0x39a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2025) mov.b32 %ssa_457, %ssa_455; // vec1 32 ssa_457 = phi block_27: ssa_455, block_28: ssa_456
bb_27	:  PC=0x39a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2026) mov.b32 %ssa_460, %ssa_458; // vec1 32 ssa_460 = phi block_27: ssa_458, block_28: ssa_459
bb_27	:  PC=0x39b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2027) mov.b32 %ssa_463, %ssa_461; // vec1 32 ssa_463 = phi block_27: ssa_461, block_28: ssa_462
bb_27	:  PC=0x39b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2028) mov.b32 %ssa_466, %ssa_464; // vec1 32 ssa_466 = phi block_27: ssa_464, block_28: ssa_465
bb_27	:  PC=0x39c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2031) bra end_if_13;

bb_28	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2036) .reg .f32 %ssa_389_0;
bb_28	:  PC=0x39c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2040) mov.f32 %ssa_389_0, 0F3f800000;
bb_28	:  PC=0x39d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2041) mov.f32 %ssa_389_1, 0F00000000;
bb_28	:  PC=0x39d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2042) mov.f32 %ssa_389_2, 0F00000000;
bb_28	:  PC=0x39e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2043) mov.f32 %ssa_389_3, 0F00000000;
bb_28	:  PC=0x39e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2050) mov.f32 %ssa_390_0, %ssa_99_0;
bb_28	:  PC=0x39f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2051) mov.f32 %ssa_390_1, %ssa_99_1;
bb_28	:  PC=0x39f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2052) mov.f32 %ssa_390_2, %ssa_99_2;
bb_28	:  PC=0x3a00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2053) mov.f32 %ssa_390_3, %ssa_151; // vec4 32 ssa_390 = vec4 ssa_99.x, ssa_99.y, ssa_99.z, ssa_151
bb_28	:  PC=0x3a08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2056) mov.f32 %ssa_532, 0F3f800000; // vec1 32 ssa_532 = load_const (0x3f800000 /* 1.000000 */)
bb_28	:  PC=0x3a10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2058) mov.b32 %ssa_532_bits, 0F3f800000;
bb_28	:  PC=0x3a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2061) mov.f32 %ssa_533, 0F00000000; // vec1 32 ssa_533 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x3a20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2063) mov.b32 %ssa_533_bits, 0F00000000;
bb_28	:  PC=0x3a28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2066) mov.f32 %ssa_534, 0F00000000; // vec1 32 ssa_534 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x3a30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2068) mov.b32 %ssa_534_bits, 0F00000000;
bb_28	:  PC=0x3a38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2071) mov.f32 %ssa_535, 0F00000000; // vec1 32 ssa_535 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x3a40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2073) mov.b32 %ssa_535_bits, 0F00000000;
bb_28	:  PC=0x3a48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2076) mov.f32 %ssa_456, %ssa_390_0; // vec1 32 ssa_456 = mov ssa_390.x
bb_28	:  PC=0x3a50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2079) mov.f32 %ssa_459, %ssa_390_1; // vec1 32 ssa_459 = mov ssa_390.y
bb_28	:  PC=0x3a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2082) mov.f32 %ssa_462, %ssa_390_2; // vec1 32 ssa_462 = mov ssa_390.z
bb_28	:  PC=0x3a60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2085) mov.f32 %ssa_465, %ssa_390_3; // vec1 32 ssa_465 = mov ssa_390.w
bb_28	:  PC=0x3a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2087) mov.s32 %ssa_391, %ssa_154; // vec1 32 ssa_391 = phi block_27: ssa_367, block_28: ssa_154
bb_28	:  PC=0x3a70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2088) mov.f32 %ssa_444, %ssa_532; // vec1 32 ssa_444 = phi block_27: ssa_442, block_28: ssa_532
bb_28	:  PC=0x3a78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2089) mov.f32 %ssa_447, %ssa_533; // vec1 32 ssa_447 = phi block_27: ssa_445, block_28: ssa_533
bb_28	:  PC=0x3a80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2090) mov.f32 %ssa_450, %ssa_534; // vec1 32 ssa_450 = phi block_27: ssa_448, block_28: ssa_534
bb_28	:  PC=0x3a88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2091) mov.f32 %ssa_453, %ssa_535; // vec1 32 ssa_453 = phi block_27: ssa_451, block_28: ssa_535
bb_28	:  PC=0x3a90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2092) mov.b32 %ssa_457, %ssa_456; // vec1 32 ssa_457 = phi block_27: ssa_455, block_28: ssa_456
bb_28	:  PC=0x3a98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2093) mov.b32 %ssa_460, %ssa_459; // vec1 32 ssa_460 = phi block_27: ssa_458, block_28: ssa_459
bb_28	:  PC=0x3aa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2094) mov.b32 %ssa_463, %ssa_462; // vec1 32 ssa_463 = phi block_27: ssa_461, block_28: ssa_462
bb_28	:  PC=0x3aa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2095) mov.b32 %ssa_466, %ssa_465; // vec1 32 ssa_466 = phi block_27: ssa_464, block_28: ssa_465

bb_29	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2110) .reg .b32 %ssa_467_0;
bb_29	:  PC=0x3ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2114) mov.b32 %ssa_467_0, %ssa_457;
bb_29	:  PC=0x3ab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2115) mov.b32 %ssa_467_1, %ssa_460;
bb_29	:  PC=0x3ac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2116) mov.b32 %ssa_467_2, %ssa_463;
bb_29	:  PC=0x3ac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2117) mov.b32 %ssa_467_3, %ssa_466; // vec4 32 ssa_467 = vec4 ssa_457, ssa_460, ssa_463, ssa_466
bb_29	:  PC=0x3ad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2123) mov.b32 %ssa_454_0, %ssa_444;
bb_29	:  PC=0x3ad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2124) mov.b32 %ssa_454_1, %ssa_447;
bb_29	:  PC=0x3ae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2125) mov.b32 %ssa_454_2, %ssa_450;
bb_29	:  PC=0x3ae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2126) mov.b32 %ssa_454_3, %ssa_453; // vec4 32 ssa_454 = vec4 ssa_444, ssa_447, ssa_450, ssa_453
bb_29	:  PC=0x3af0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2129) mov.b32 %ssa_469, %ssa_454_0; // vec1 32 ssa_469 = mov ssa_454.x
bb_29	:  PC=0x3af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2132) mov.b32 %ssa_472, %ssa_454_1; // vec1 32 ssa_472 = mov ssa_454.y
bb_29	:  PC=0x3b00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2135) mov.b32 %ssa_475, %ssa_454_2; // vec1 32 ssa_475 = mov ssa_454.z
bb_29	:  PC=0x3b08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2138) mov.b32 %ssa_478, %ssa_454_3; // vec1 32 ssa_478 = mov ssa_454.w
bb_29	:  PC=0x3b10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2141) mov.b32 %ssa_482, %ssa_467_0; // vec1 32 ssa_482 = mov ssa_467.x
bb_29	:  PC=0x3b18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2144) mov.b32 %ssa_485, %ssa_467_1; // vec1 32 ssa_485 = mov ssa_467.y
bb_29	:  PC=0x3b20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2147) mov.b32 %ssa_488, %ssa_467_2; // vec1 32 ssa_488 = mov ssa_467.z
bb_29	:  PC=0x3b28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2150) mov.b32 %ssa_491, %ssa_467_3; // vec1 32 ssa_491 = mov ssa_467.w
bb_29	:  PC=0x3b30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2152) mov.s32 %ssa_394, %ssa_391; // vec1 32 ssa_394 = phi block_19: ssa_261, block_29: ssa_391
bb_29	:  PC=0x3b38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2153) mov.b32 %ssa_470, %ssa_469; // vec1 32 ssa_470 = phi block_19: ssa_468, block_29: ssa_469
bb_29	:  PC=0x3b40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2154) mov.b32 %ssa_473, %ssa_472; // vec1 32 ssa_473 = phi block_19: ssa_471, block_29: ssa_472
bb_29	:  PC=0x3b48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2155) mov.b32 %ssa_476, %ssa_475; // vec1 32 ssa_476 = phi block_19: ssa_474, block_29: ssa_475
bb_29	:  PC=0x3b50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2156) mov.b32 %ssa_479, %ssa_478; // vec1 32 ssa_479 = phi block_19: ssa_477, block_29: ssa_478
bb_29	:  PC=0x3b58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2157) mov.b32 %ssa_483, %ssa_482; // vec1 32 ssa_483 = phi block_19: ssa_481, block_29: ssa_482
bb_29	:  PC=0x3b60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2158) mov.b32 %ssa_486, %ssa_485; // vec1 32 ssa_486 = phi block_19: ssa_484, block_29: ssa_485
bb_29	:  PC=0x3b68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2159) mov.b32 %ssa_489, %ssa_488; // vec1 32 ssa_489 = phi block_19: ssa_487, block_29: ssa_488
bb_29	:  PC=0x3b70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2160) mov.b32 %ssa_492, %ssa_491; // vec1 32 ssa_492 = phi block_19: ssa_490, block_29: ssa_491

bb_30	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2175) .reg .b32 %ssa_493_0;
bb_30	:  PC=0x3b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2179) mov.b32 %ssa_493_0, %ssa_483;
bb_30	:  PC=0x3b80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2180) mov.b32 %ssa_493_1, %ssa_486;
bb_30	:  PC=0x3b88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2181) mov.b32 %ssa_493_2, %ssa_489;
bb_30	:  PC=0x3b90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2182) mov.b32 %ssa_493_3, %ssa_492; // vec4 32 ssa_493 = vec4 ssa_483, ssa_486, ssa_489, ssa_492
bb_30	:  PC=0x3b98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2188) mov.b32 %ssa_480_0, %ssa_470;
bb_30	:  PC=0x3ba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2189) mov.b32 %ssa_480_1, %ssa_473;
bb_30	:  PC=0x3ba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2190) mov.b32 %ssa_480_2, %ssa_476;
bb_30	:  PC=0x3bb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2191) mov.b32 %ssa_480_3, %ssa_479; // vec4 32 ssa_480 = vec4 ssa_470, ssa_473, ssa_476, ssa_479
bb_30	:  PC=0x3bb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2194) mov.b32 %ssa_495, %ssa_480_0; // vec1 32 ssa_495 = mov ssa_480.x
bb_30	:  PC=0x3bc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2197) mov.b32 %ssa_498, %ssa_480_1; // vec1 32 ssa_498 = mov ssa_480.y
bb_30	:  PC=0x3bc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2200) mov.b32 %ssa_501, %ssa_480_2; // vec1 32 ssa_501 = mov ssa_480.z
bb_30	:  PC=0x3bd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2203) mov.b32 %ssa_504, %ssa_480_3; // vec1 32 ssa_504 = mov ssa_480.w
bb_30	:  PC=0x3bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2206) mov.b32 %ssa_508, %ssa_493_0; // vec1 32 ssa_508 = mov ssa_493.x
bb_30	:  PC=0x3be0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2209) mov.b32 %ssa_511, %ssa_493_1; // vec1 32 ssa_511 = mov ssa_493.y
bb_30	:  PC=0x3be8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2212) mov.b32 %ssa_514, %ssa_493_2; // vec1 32 ssa_514 = mov ssa_493.z
bb_30	:  PC=0x3bf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2215) mov.b32 %ssa_517, %ssa_493_3; // vec1 32 ssa_517 = mov ssa_493.w
bb_30	:  PC=0x3bf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2217) mov.s32 %ssa_397, %ssa_394; // vec1 32 ssa_397 = phi block_9: ssa_193, block_30: ssa_394
bb_30	:  PC=0x3c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2218) mov.b32 %ssa_496, %ssa_495; // vec1 32 ssa_496 = phi block_9: ssa_494, block_30: ssa_495
bb_30	:  PC=0x3c08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2219) mov.b32 %ssa_499, %ssa_498; // vec1 32 ssa_499 = phi block_9: ssa_497, block_30: ssa_498
bb_30	:  PC=0x3c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2220) mov.b32 %ssa_502, %ssa_501; // vec1 32 ssa_502 = phi block_9: ssa_500, block_30: ssa_501
bb_30	:  PC=0x3c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2221) mov.b32 %ssa_505, %ssa_504; // vec1 32 ssa_505 = phi block_9: ssa_503, block_30: ssa_504
bb_30	:  PC=0x3c20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2222) mov.b32 %ssa_509, %ssa_508; // vec1 32 ssa_509 = phi block_9: ssa_507, block_30: ssa_508
bb_30	:  PC=0x3c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2223) mov.b32 %ssa_512, %ssa_511; // vec1 32 ssa_512 = phi block_9: ssa_510, block_30: ssa_511
bb_30	:  PC=0x3c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2224) mov.b32 %ssa_515, %ssa_514; // vec1 32 ssa_515 = phi block_9: ssa_513, block_30: ssa_514
bb_30	:  PC=0x3c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2225) mov.b32 %ssa_518, %ssa_517; // vec1 32 ssa_518 = phi block_9: ssa_516, block_30: ssa_517

bb_31	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2240) .reg .b32 %ssa_519_0;
bb_31	:  PC=0x3c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2244) mov.b32 %ssa_519_0, %ssa_509;
bb_31	:  PC=0x3c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2245) mov.b32 %ssa_519_1, %ssa_512;
bb_31	:  PC=0x3c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2246) mov.b32 %ssa_519_2, %ssa_515;
bb_31	:  PC=0x3c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2247) mov.b32 %ssa_519_3, %ssa_518; // vec4 32 ssa_519 = vec4 ssa_509, ssa_512, ssa_515, ssa_518
bb_31	:  PC=0x3c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2253) mov.b32 %ssa_506_0, %ssa_496;
bb_31	:  PC=0x3c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2254) mov.b32 %ssa_506_1, %ssa_499;
bb_31	:  PC=0x3c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2255) mov.b32 %ssa_506_2, %ssa_502;
bb_31	:  PC=0x3c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2256) mov.b32 %ssa_506_3, %ssa_505; // vec4 32 ssa_506 = vec4 ssa_496, ssa_499, ssa_502, ssa_505
bb_31	:  PC=0x3c80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2258) st.global.b32 [%ssa_153], %ssa_397; // intrinsic store_deref (%ssa_153, %ssa_397) (1, 0) /* wrmask=x */ /* access=0 */
bb_31	:  PC=0x3c88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2261) add.u64 %ssa_400, %ssa_152, 0; // vec1 32 ssa_400 = deref_struct &ssa_152->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_31	:  PC=0x3c90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2263) st.global.b32 [%ssa_400 + 0], %ssa_519_0;
bb_31	:  PC=0x3c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2264) st.global.b32 [%ssa_400 + 4], %ssa_519_1;
bb_31	:  PC=0x3ca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2265) st.global.b32 [%ssa_400 + 8], %ssa_519_2;
bb_31	:  PC=0x3ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2266) st.global.b32 [%ssa_400 + 12], %ssa_519_3;
bb_31	:  PC=0x3cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2271) add.u64 %ssa_401, %ssa_152, 16; // vec1 32 ssa_401 = deref_struct &ssa_152->ScatterDirection (shader_call_data vec4) /* &Ray.ScatterDirection */
bb_31	:  PC=0x3cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2273) st.global.b32 [%ssa_401 + 0], %ssa_506_0;
bb_31	:  PC=0x3cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2274) st.global.b32 [%ssa_401 + 4], %ssa_506_1;
bb_31	:  PC=0x3cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2275) st.global.b32 [%ssa_401 + 8], %ssa_506_2;
bb_31	:  PC=0x3cd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2276) st.global.b32 [%ssa_401 + 12], %ssa_506_3;
bb_31	:  PC=0x3cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2281) add.u64 %ssa_402, %ssa_152, 32; // vec1 32 ssa_402 = deref_struct &ssa_152->SurfaceNormal (shader_call_data vec3) /* &Ray.SurfaceNormal */
bb_31	:  PC=0x3ce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2283) st.global.f32 [%ssa_402 + 0], %ssa_138_0;
bb_31	:  PC=0x3ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2284) st.global.f32 [%ssa_402 + 4], %ssa_138_1;
bb_31	:  PC=0x3cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2285) st.global.f32 [%ssa_402 + 8], %ssa_138_2;

bb_32	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2293) ret ;
bb_32	:  PC=0x3cf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2293) ret ;

Summary of basic blocks for 'MESA_SHADER_CLOSEST_HIT_func2_main':
bb_00	: first: load_vulkan_descriptor	 last: bra	
bb_01	: first: mov	 last: bra	
bb_02	: first: mov	 last: bra	
bb_03	: first: mov	 last: mov	
bb_04	: first: mov	 last: mov	
bb_05	: first: mov	 last: bra	
bb_06	: first: bra	 last: bra	
bb_07	: first: bra	 last: bra	
bb_08	: first: mov	 last: bra	
bb_09	: first: add	 last: bra	
bb_10	: first: setp	 last: bra	
bb_11	: first: mov	 last: bra	
bb_12	: first: mov	 last: bra	
bb_13	: first: mov	 last: mov	
bb_14	: first: mov	 last: mov	
bb_15	: first: mov	 last: bra	
bb_16	: first: bra	 last: bra	
bb_17	: first: bra	 last: bra	
bb_18	: first: mov	 last: bra	
bb_19	: first: mul	 last: bra	
bb_20	: first: setp	 last: bra	
bb_21	: first: mov	 last: bra	
bb_22	: first: mov	 last: bra	
bb_23	: first: mov	 last: mov	
bb_24	: first: setp	 last: bra	
bb_25	: first: mov	 last: bra	
bb_26	: first: mov	 last: mov	
bb_27	: first: mov	 last: bra	
bb_28	: first: mov	 last: mov	
bb_29	: first: mov	 last: mov	
bb_30	: first: mov	 last: mov	
bb_31	: first: mov	 last: st	
bb_32	: first: ret	 last: ret	
bb_33	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
Operand information not set. load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_CLOSEST_HIT_func2_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x2bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:768) @!%ssa_164 bra else_7;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2244) mov.b32 %ssa_519_0, %ssa_509;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x2c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:812) @!%ssa_172 bra else_8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:892) mov.b32 %ssa_415_0, %ssa_405;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x2cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:850) bra end_if_8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:892) mov.b32 %ssa_415_0, %ssa_405;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x2ea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1024) @!%ssa_209 bra else_9;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1028) bra loop_3_exit;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x2ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1028) bra loop_3_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2ec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1051) add.f32 %ssa_210, %ssa_135, %ssa_201;// vec1 32 ssa_210 = fadd ssa_135, ssa_201
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x2eb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1032) bra end_if_9;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2eb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1042) mov.s32 %ssa_180, %ssa_193; // vec1 32 ssa_180 = phi block_4: ssa_154, block_8: ssa_193
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x2ec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1045) bra loop_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2d68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:914) mov.f32 %ssa_181, 0F00ffffff; // vec1 32 ssa_181 = load_const (0x00ffffff /* 0.000000 */)
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x2fb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1115) bra end_if_7;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2244) mov.b32 %ssa_519_0, %ssa_509;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x2fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1126) @!%ssa_216 bra else_10;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2179) mov.b32 %ssa_493_0, %ssa_483;
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x30d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1226) @!%ssa_240 bra else_11;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x31b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1306) mov.b32 %ssa_428_0, %ssa_418;
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x3148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1264) bra end_if_11;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x31b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1306) mov.b32 %ssa_428_0, %ssa_418;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x3328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1438) @!%ssa_277 bra else_12;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1442) bra loop_4_exit;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x3330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1442) bra loop_4_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1465) mul.f32 %ssa_278, %ssa_269, %ssa_103;// vec1 32 ssa_278 = fmul ssa_269, ssa_103
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x3338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1446) bra end_if_12;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1456) mov.s32 %ssa_248, %ssa_261; // vec1 32 ssa_248 = phi block_14: ssa_154, block_18: ssa_261
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x3348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1459) bra loop_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x31f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1328) mov.f32 %ssa_249, 0F00ffffff; // vec1 32 ssa_249 = load_const (0x00ffffff /* 0.000000 */)
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x3450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1538) bra end_if_10;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2179) mov.b32 %ssa_493_0, %ssa_483;
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x3460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1549) @!%ssa_287 bra else_13;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2114) mov.b32 %ssa_467_0, %ssa_457;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x3668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1740) @!%ssa_342 bra else_14;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1806) setp.ge.s32 %ssa_358, %ssa_101, %ssa_5_bits; // vec1  1 ssa_358 = ige ssa_101, ssa_5
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x3700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1793) bra end_if_14;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1806) setp.ge.s32 %ssa_358, %ssa_101, %ssa_5_bits; // vec1  1 ssa_358 = ige ssa_101, ssa_5
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x3718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1811) @!%ssa_358 bra else_15;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x37f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1891) mov.b32 %ssa_441_0, %ssa_431;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x3788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1849) bra end_if_15;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x37f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1891) mov.b32 %ssa_441_0, %ssa_431;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x39c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2031) bra end_if_13;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2114) mov.b32 %ssa_467_0, %ssa_457;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_CLOSEST_HIT_func2_main
Operand information not set. load_vulkan_descriptor %ssa_6, 0, 7, 7; // vec2 32 ssa_6 = intrinsic vulkan_resource_index (%ssa_5) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
Operand information not set. load_primitive_id %ssa_12;// vec1 32 ssa_12 = intrinsic load_primitive_id () ()
Operand information not set. load_vulkan_descriptor %ssa_15, 0, 5, 7; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_5) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_30, 0, 4, 7; // vec2 32 ssa_30 = intrinsic vulkan_resource_index (%ssa_5) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_93, 0, 6, 7; // vec2 32 ssa_93 = intrinsic vulkan_resource_index (%ssa_5) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_CLOSEST_HIT_func2_main'.
gpgpusim: saving image SCENE to file 06-09-2025-13-21-36-SCENE.ppm
kernel_name = MESA_SHADER_RAYGEN_func0_main 
kernel_launch_uid = 1 
gpu_sim_cycle = 18090736
gpu_sim_insn = 152679722
gpu_ipc =       8.4397
gpu_tot_sim_cycle = 18090736
gpu_tot_sim_insn = 152679722
gpu_tot_ipc =       8.4397
gpu_tot_issued_cta = 512
gpu_occupancy = 48.9024% 
gpu_tot_occupancy = 48.9024% 
max_total_param_size = 0
splits_table_push_back = 0
splits_table_update_active_entry = 0
max_recvg_time = 0
max_st entries = 0
max_rec entries = 0
triggered_timeouts = 0
gpu_st_spills = 0
gpu_rt_spills = 0
gpu_st_fills = 0
gpu_rt_fills = 0
gpu_st_fills_hits = 0
gpu_st_fills_misses = 0
gpu_rt_fills_hits = 0
gpu_rt_fills_misses = 0
avg_st_entries = 0.000000
avg_rt_entries = 0.000000
Reuse Stats:
Overall Average:
gpu_stall_dramfull = 8270
gpu_stall_icnt2sh    = 0
partiton_level_parallism =       0.7943
partiton_level_parallism_total  =       0.7943
partiton_level_parallism_util =       1.3686
partiton_level_parallism_util_total  =       1.3686
L2_BW  =      34.6967 GB/Sec
L2_BW_total  =      34.6967 GB/Sec
gpu_total_sim_rate=11300

========= Core cache stats =========
L1I_cache:
	L1I_total_cache_accesses = 0
	L1I_total_cache_misses = 0
	L1I_total_cache_pending_hits = 0
	L1I_total_cache_reservation_fails = 0
L1D_cache:
	L1D_cache_core[0]: Access = 3384068, Miss = 2110143, Miss_rate = 0.624, Pending_hits = 0, Reservation_fails = 38385
	L1D_cache_core[1]: Access = 3419520, Miss = 2147834, Miss_rate = 0.628, Pending_hits = 0, Reservation_fails = 40427
	L1D_cache_core[2]: Access = 3624402, Miss = 2269972, Miss_rate = 0.626, Pending_hits = 0, Reservation_fails = 51966
	L1D_cache_core[3]: Access = 3478924, Miss = 2178031, Miss_rate = 0.626, Pending_hits = 0, Reservation_fails = 43250
	L1D_cache_core[4]: Access = 3623476, Miss = 2266025, Miss_rate = 0.625, Pending_hits = 0, Reservation_fails = 42993
	L1D_cache_core[5]: Access = 3587656, Miss = 2243405, Miss_rate = 0.625, Pending_hits = 0, Reservation_fails = 45242
	L1D_cache_core[6]: Access = 3635225, Miss = 2239470, Miss_rate = 0.616, Pending_hits = 0, Reservation_fails = 48016
	L1D_cache_core[7]: Access = 3542549, Miss = 2198680, Miss_rate = 0.621, Pending_hits = 0, Reservation_fails = 46199
	L1D_total_cache_accesses = 28295820
	L1D_total_cache_misses = 17653560
	L1D_total_cache_miss_rate = 0.6239
	L1D_total_cache_pending_hits = 0
	L1D_total_cache_reservation_fails = 356478
	L1D_cache_data_port_util = 0.075
	L1D_cache_fill_port_util = 0.081
L1C_cache:
	L1C_total_cache_accesses = 0
	L1C_total_cache_misses = 0
	L1C_total_cache_pending_hits = 0
	L1C_total_cache_reservation_fails = 0
L1T_cache:
	L1T_total_cache_accesses = 0
	L1T_total_cache_misses = 0
	L1T_total_cache_pending_hits = 0
	L1T_total_cache_reservation_fails = 0
L0_Complet_Cache:
	L0C_cache_core[0]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[1]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[2]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[3]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[4]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[5]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[6]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_cache_core[7]: Access = 0, Miss = 0, Miss_rate = -nan, Pending_hits = 0, Reservation_fails = 0
	L0C_total_cache_accesses = 0
	L0C_total_cache_misses = 0
	L0C_total_cache_pending_hits = 0
	L0C_total_cache_reservation_fails = 0

Total_core_cache_stats:
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][HIT] = 10510526
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][MISS] = 7129757
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][RESERVATION_FAIL] = 340170
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][SECTOR_MISS] = 7828405
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[CONST_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[TEXTURE_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][HIT] = 131734
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][MISS] = 2695387
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][RESERVATION_FAIL] = 16308
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][SECTOR_MISS] = 11
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_ST_SPILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_ST_FILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_RT_SPILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][HIT] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][MISS] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[BRU_RT_FILL][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][HIT] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][MISS] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[LOCAL_ACC_W][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][HIT] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][MISS] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L1_WRBK_ACC][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][HIT] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][MISS] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L2_WRBK_ACC][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][HIT] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][MISS] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[INST_ACC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][HIT] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][MISS] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L1_WR_ALLOC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][HIT] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][HIT_RESERVED] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][MISS] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][RESERVATION_FAIL] = 0
	Total_core_cache_stats_breakdown[L2_WR_ALLOC_R][SECTOR_MISS] = 0
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R][TOTAL_ACCESS] = 25468688
	Total_core_cache_stats_breakdown[GLOBAL_ACC_W][TOTAL_ACCESS] = 2827132
	Total_core_cache_stats_breakdown[GLOBAL_ACC_R]_miss_rate = 0.5873
RT_Total_core_cache_stats_breakdown:
	rt_read_cold_miss = 1052090
	rt_read_other_miss = 4295756
	rt_stats[READ][HIT] = 7096148
	rt_stats[READ][HIT_RESERVED] = 0
	rt_stats[READ][MISS] = 5347846
	rt_stats[READ][RESERVATION_FAIL] = 222322
	rt_stats[READ][SECTOR_MISS] = 3823493
	rt_read_miss_rate = 0.5638
	rt_stats[WRITE][HIT] = 0
	rt_stats[WRITE][HIT_RESERVED] = 0
	rt_stats[WRITE][MISS] = 1474276
	rt_stats[WRITE][RESERVATION_FAIL] = 16308
	rt_stats[WRITE][SECTOR_MISS] = 0
	rt_overall_miss_rate = 0.6000

Total_core_cache_fail_stats:
	Total_core_cache_fail_stats_breakdown[GLOBAL_ACC_R][MISS_QUEUE_FULL] = 328801
	Total_core_cache_fail_stats_breakdown[GLOBAL_ACC_R][MSHR_MERGE_ENTRY_FAIL] = 11369
	Total_core_cache_fail_stats_breakdown[GLOBAL_ACC_W][MISS_QUEUE_FULL] = 16308
ctas_completed 512, Shader 0 warp_id issue ditsribution:
warp_id:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
distro:
198307, 167869, 174331, 181407, 183092, 192350, 203918, 193967, 186498, 206104, 192555, 187632, 181021, 181924, 188138, 225641, 
gpgpu_n_tot_thrd_icount = 791955072
gpgpu_n_tot_w_icount = 24748596
gpgpu_n_stall_shd_mem = 8322053
gpgpu_n_mem_read_local = 0
gpgpu_n_mem_write_local = 0
gpgpu_n_mem_read_global = 11543045
gpgpu_n_mem_write_global = 2827132
gpgpu_n_mem_texture = 0
gpgpu_n_mem_const = 0
gpgpu_n_rt_mem:
1090146	6214463	2162117	2274609	3701512	822488	0	0	
gpgpu_n_local_load_insn  = 0
gpgpu_n_local_store_insn = 0
gpgpu_n_global_load_insn  = 13403439
gpgpu_n_global_store_insn = 1369240
gpgpu_n_shmem_insn = 0
gpgpu_n_sstarr_insn = 0
gpgpu_n_tex_insn = 0
gpgpu_n_const_mem_insn = 0
gpgpu_n_param_mem_insn = 0
gpgpu_n_rt_insn = 123966
gpgpu_n_rt_access_insn = 11423822
gpgpu_n_shmem_bkconflict = 0
gpgpu_n_cache_bkconflict = 0
gpgpu_n_intrawarp_mshr_merge = 0
gpgpu_n_cmem_portconflict = 0
gpgpu_stall_shd_mem[c_mem][resource_stall] = 0
gpgpu_stall_shd_mem[s_mem][bk_conf] = 0
gpgpu_stall_shd_mem[gl_mem][resource_stall] = 8322053
gpgpu_stall_shd_mem[gl_mem][coal_stall] = 0
gpgpu_stall_shd_mem[gl_mem][data_port_stall] = 0
gpu_reg_bank_conflict_stalls = 0
rt_avg_warp_latency = 45356.585938
rt_avg_thread_latency = 5417.542480
rt_avg_efficiency = 0.104910
rt_avg_warp_occupancy = 0.991277
rt_total_cacheline_fetched = 1922649	1935048	1990329	1995202	2066184	2047966	2074279	1990335	
rt_total_intersection_stages = 9278684	9025716	9442444	9501448	9937332	10060768	10016500	9444872	
rt_op_intensity = 4.825990	4.664337	4.744163	4.762148	4.809510	4.912566	4.828907	4.745368	
rt_perf = 0.530160	0.500173	0.538852	0.530017	0.563110	0.572784	0.567402	0.530337	
rt_avg_op_intensity = 4.786623
rt_avg_performance = 0.541604
rt_writes = 1474276
rt_max_mem_store_q = 1226
rt_avg_mem_store_cycles = 198229.125000
rt_cycles = 0.978893
rt_total_cycles = 17708896.000000
rt_total_cycles_sum = 141671157
rt_cycles_dist:	17501667	18045191	17523252	17926695	17647225	17564667	17653275	17809185
rt_store_cycles_dist:	188246	189647	210535	190644	201936	198724	204991	201110
rt_latency_dist = 0.00	0.00	14771.37	506.53	46798.11	0.00	277.88	186.38	10.21	293.31	0.00	103.76	1388.55	75.39	1244.65	
warp_dist_rt = 382992	19212	137008706	1476746	492298	1035018	529218	68626	113315	0	927875	
warp_dist_empty = 1932618	858418	757310	1001855	1383900	136119905	0	0	0	0	0	
Warp Occupancy Distribution:
Stall:659505	W0_Idle:4923470	W0_Scoreboard:537884453	W1:9001227	W2:3824044	W3:2204735	W4:1510693	W5:1088646	W6:787352	W7:634186	W8:532904	W9:460272	W10:374253	W11:312818	W12:274543	W13:246269	W14:221288	W15:208534	W16:170795	W17:163448	W18:141851	W19:127281	W20:121016	W21:120589	W22:106895	W23:99723	W24:91538	W25:82137	W26:67003	W27:54752	W28:63860	W29:60021	W30:44560	W31:45542	W32:1505821
single_issue_nums: WS0:6225178	WS1:6195751	WS2:6206299	WS3:6121368	
dual_issue_nums: WS0:0	WS1:0	WS2:0	WS3:0	
traffic_breakdown_coretomem[GLOBAL_ACC_R] = 92344360 {8:11543045,}
traffic_breakdown_coretomem[GLOBAL_ACC_W] = 113085280 {40:2827132,}
traffic_breakdown_memtocore[GLOBAL_ACC_R] = 461721800 {40:11543045,}
traffic_breakdown_memtocore[GLOBAL_ACC_W] = 22617056 {8:2827132,}
maxmflatency = 3898 
max_icnt2mem_latency = 2565 
maxmrqlatency = 1514 
max_icnt2sh_latency = 195 
averagemflatency = 247 
avg_icnt2mem_latency = 10 
avg_mrq_latency = 8 
avg_icnt2sh_latency = 3 
mrq_lat_table:5588491 	76330 	143347 	441738 	1436767 	402320 	112113 	26955 	10616 	3054 	220 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
dq_lat_table:0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
mf_lat_table:0 	0 	0 	0 	0 	0 	0 	6885440 	7457757 	20213 	4022 	2745 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
icnt2mem_lat_table:0 	7960642 	1991947 	269449 	3640157 	486552 	7818 	3125 	3922 	2487 	3574 	504 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
icnt2sh_lat_table:0 	12127270 	1222571 	599245 	308310 	94531 	17236 	1014 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
mf_lat_pw_table:0 	0 	0 	0 	0 	0 	0 	26062 	10092 	1 	5 	3 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	0 	
maximum concurrent accesses to same row:
dram[0]:        15        30        16        30        20        32        20        32        20        32        16        20        20        30        20        26 
dram[1]:        16        32        16        26        19        28        19        32        19        26        16        32        19        28        18        32 
dram[2]:        16        32        16        32        19        32        19        26        19        32        16        32        19        32        18        30 
dram[3]:        16        32        16        32        19        24        19        28        16        32        16        30        19        26        18        22 
maximum service time to same row:
dram[0]:     45946     68737     54214     65793     27994     27155     39342     43899     46261     43924     33783     91603     46259     43898     51658    105723 
dram[1]:     77365     51746     33258     31410     37393     48160     25236     39667     36338     46800     27931     67463     46000     55821     47059     80787 
dram[2]:     58782     57155     30483     31795     37534     36905     39916     39168     43549     52760     40337     67250     29966     50567     35806     47696 
dram[3]:     40009     79303     35897     42755     29320     58243     31968     44320     49615     30825     30541     51731     43829     78132     53094    111257 
average row accesses per activate:
dram[0]:  1.432434  1.491192  1.426917  1.519960  1.388468  1.433017  1.417018  1.420940  1.386375  1.440358  1.376695  1.466659  1.387518  1.428325  1.384902  1.466347 
dram[1]:  1.418510  1.518986  1.441574  1.516070  1.398254  1.423173  1.374859  1.393506  1.370145  1.435554  1.371836  1.468330  1.370289  1.413273  1.374491  1.409142 
dram[2]:  1.423505  1.511836  1.432941  1.534088  1.370546  1.402339  1.328640  1.389623  1.368604  1.415401  1.380073  1.471706  1.373157  1.419521  1.371406  1.423843 
dram[3]:  1.433871  1.512819  1.421589  1.529379  1.353865  1.445902  1.356574  1.460091  1.367267  1.457533  1.393858  1.481583  1.359678  1.427739  1.369238  1.436294 
average row locality = 8241951/5824488 = 1.415052
number of total memory accesses made:
dram[0]:         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0 
dram[1]:         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0 
dram[2]:         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0 
dram[3]:         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0         0 
total accesses: 0
min_bank_accesses = 0!
min_chip_accesses = 0!
number of total read accesses:
dram[0]:    237668    219296    217842    213134    244954    239658    273168    247390    224320    203740    213490    198554    255358    230774    252406    236046 
dram[1]:    221826    210360    226450    210186    241110    231386    260160    243480    212426    210992    208840    195438    260630    239374    263526    243518 
dram[2]:    227316    218578    232714    204990    256786    236196    248996    239094    232406    216670    209240    193892    248714    235744    258662    243126 
dram[3]:    227306    200898    210298    203796    263266    232842    254184    220680    219926    204442    207512    192002    252660    233194    253058    235708 
total dram reads = 14702396
bank skew: 273168/192002 = 1.42
chip skew: 3707798/3611772 = 1.03
number of total write accesses:
dram[0]:     56714     11132     56780     12162     61030     12436     61344     12218     60670     12020     58898     11212     62508     11238     59988     11878 
dram[1]:     61170     16032     62656     17112     66580     17566     66570     16862     66940     17200     63958     16212     67856     16412     64364     16646 
dram[2]:     58528     15632     59506     16464     63980     16474     63786     16038     62686     16152     61648     15488     64168     15576     62768     16106 
dram[3]:     57126     13180     58076     13978     63454     14126     62296     13486     61994     13408     60238     12878     63074     13036     59978     13864 
total dram writes = 2445556
bank skew: 67856/11132 = 6.10
chip skew: 654136/572228 = 1.14
average mf latency per bank:
dram[0]:        230       208       208       187       238       216       217       191       215       199       209       185       214       194       217       210
dram[1]:        267       268       198       190       223       182       201       184       207       182       200       181       219       193       223       209
dram[2]:        240       222       191       208       203       183       200       184       216       196       188       176       203       192       217       212
dram[3]:        247       223       232       195       216       194       199       185       204       184       190       173       203       191       215       212
maximum mf latency per bank:
dram[0]:       3415       779      3516      1020      3518       974      3507      1222      3541       811      3537      1045      3898       812      3528       979
dram[1]:       3718      1040      3459      1204      3469       819      3499      1002      3760       948      3512       727      3622      1041      3497      1044
dram[2]:       3641      2835      3383      1119      3390      1036      3380      1226      3680       875      3438       804      3577       786      3417      1191
dram[3]:       3674      1130      3453      1233      3455       760      3456       980      3727       909      3484       817      3601      1138      3541       911
DRAM[0]: 16 bks, busW=2 BL=8 CL=20, tRRD=10 tCCD=4, tRCD=20 tRAS=50 tRP=20 tRC=62
n_cmd=46386501 n_nop=39356471 n_act=1452634 n_pre=1452618 n_ref_event=18446744073709551615 n_req=2069259 n_rd=3707798 n_rd_L2_A=0 n_write=0 n_wr_bk=572228 bw_util=0.3691
n_activity=41221743 dram_eff=0.4153
bk0: 237668a 39554341i bk1: 219296a 41592978i bk2: 217842a 39984756i bk3: 213134a 41796079i bk4: 244954a 39216932i bk5: 239658a 41032380i bk6: 273168a 38680446i bk7: 247390a 40801395i bk8: 224320a 39578855i bk9: 203740a 41739104i bk10: 213490a 39844542i bk11: 198554a 41991486i bk12: 255358a 38934762i bk13: 230774a 41217231i bk14: 252406a 39022825i bk15: 236046a 41134631i 

------------------------------------------------------------------------

Row_Buffer_Locality = 0.297993
Row_Buffer_Locality_read = 0.320778
Row_Buffer_Locality_write = 0.101853
Bank_Level_Parallism = 2.654366
Bank_Level_Parallism_Col = 1.896488
Bank_Level_Parallism_Ready = 1.328950
write_to_read_ratio_blp_rw_average = 0.189672
GrpLevelPara = 1.603446 

BW Util details:
bwutil = 0.369075 
total_CMD = 46386501 
util_bw = 17120104 
Wasted_Col = 13937321 
Wasted_Row = 6141650 
Idle = 9187426 

BW Util Bottlenecks: 
RCDc_limit = 14303714 
RCDWRc_limit = 1082364 
WTRc_limit = 3644083 
RTWc_limit = 3482893 
CCDLc_limit = 0 
rwq = 0 
CCDLc_limit_alone = 0 
WTRc_limit_alone = 3644083 
RTWc_limit_alone = 3482893 

Commands details: 
total_CMD = 46386501 
n_nop = 39356471 
Read = 3707798 
Write = 0 
L2_Alloc = 0 
L2_WB = 572228 
n_act = 1452634 
n_pre = 1452618 
n_ref = 18446744073709551615 
n_req = 2069259 
total_req = 4280026 

Dual Bus Interface Util: 
issued_total_row = 2905252 
issued_total_col = 4280026 
Row_Bus_Util =  0.062631 
CoL_Bus_Util = 0.092269 
Either_Row_CoL_Bus_Util = 0.151553 
Issued_on_Two_Bus_Simul_Util = 0.003347 
issued_two_Eff = 0.022084 
queue_avg = 0.992556 


dram_util_bins: 0 0 0 0 0 0 0 0 0 0
dram_eff_bins: 0 0 0 0 0 0 0 0 0 0
mrqq: max=64 avg=0.992556
DRAM[1]: 16 bks, busW=2 BL=8 CL=20, tRRD=10 tCCD=4, tRCD=20 tRAS=50 tRP=20 tRC=62
n_cmd=46386501 n_nop=39279984 n_act=1465850 n_pre=1465834 n_ref_event=0 n_req=2070832 n_rd=3679702 n_rd_L2_A=0 n_write=0 n_wr_bk=654136 bw_util=0.3737
n_activity=41326669 dram_eff=0.4195
bk0: 221826a 39732010i bk1: 210360a 41705119i bk2: 226450a 39739940i bk3: 210186a 41720217i bk4: 241110a 39185872i bk5: 231386a 41026571i bk6: 260160a 38642403i bk7: 243480a 40652396i bk8: 212426a 39628620i bk9: 210992a 41467072i bk10: 208840a 39809099i bk11: 195438a 41939638i bk12: 260630a 38625103i bk13: 239374a 40833107i bk14: 263526a 38584167i bk15: 243518a 40650454i 

------------------------------------------------------------------------

Row_Buffer_Locality = 0.292144
Row_Buffer_Locality_read = 0.316726
Row_Buffer_Locality_write = 0.096346
Bank_Level_Parallism = 2.701468
Bank_Level_Parallism_Col = 1.933036
Bank_Level_Parallism_Ready = 1.348057
write_to_read_ratio_blp_rw_average = 0.200475
GrpLevelPara = 1.624220 

BW Util details:
bwutil = 0.373715 
total_CMD = 46386501 
util_bw = 17335352 
Wasted_Col = 13969260 
Wasted_Row = 6056573 
Idle = 9025316 

BW Util Bottlenecks: 
RCDc_limit = 14183589 
RCDWRc_limit = 1162538 
WTRc_limit = 3912198 
RTWc_limit = 3667172 
CCDLc_limit = 0 
rwq = 0 
CCDLc_limit_alone = 0 
WTRc_limit_alone = 3912198 
RTWc_limit_alone = 3667172 

Commands details: 
total_CMD = 46386501 
n_nop = 39279984 
Read = 3679702 
Write = 0 
L2_Alloc = 0 
L2_WB = 654136 
n_act = 1465850 
n_pre = 1465834 
n_ref = 0 
n_req = 2070832 
total_req = 4333838 

Dual Bus Interface Util: 
issued_total_row = 2931684 
issued_total_col = 4333838 
Row_Bus_Util =  0.063201 
CoL_Bus_Util = 0.093429 
Either_Row_CoL_Bus_Util = 0.153202 
Issued_on_Two_Bus_Simul_Util = 0.003428 
issued_two_Eff = 0.022375 
queue_avg = 1.037044 


dram_util_bins: 0 0 0 0 0 0 0 0 0 0
dram_eff_bins: 0 0 0 0 0 0 0 0 0 0
mrqq: max=64 avg=1.03704
DRAM[2]: 16 bks, busW=2 BL=8 CL=20, tRRD=10 tCCD=4, tRCD=20 tRAS=50 tRP=20 tRC=62
n_cmd=46386501 n_nop=39265553 n_act=1476251 n_pre=1476235 n_ref_event=256 n_req=2076607 n_rd=3703124 n_rd_L2_A=0 n_write=0 n_wr_bk=625000 bw_util=0.3732
n_activity=41448933 dram_eff=0.4177
bk0: 227316a 39683418i bk1: 218578a 41566080i bk2: 232714a 39634678i bk3: 204990a 41891633i bk4: 256786a 38792932i bk5: 236196a 40881422i bk6: 248996a 38761728i bk7: 239094a 40788973i bk8: 232406a 39264914i bk9: 216670a 41320174i bk10: 209240a 39861954i bk11: 193892a 42015820i bk12: 248714a 38969190i bk13: 235744a 40976530i bk14: 258662a 38736056i bk15: 243126a 40751592i 

------------------------------------------------------------------------

Row_Buffer_Locality = 0.289104
Row_Buffer_Locality_read = 0.312522
Row_Buffer_Locality_write = 0.096434
Bank_Level_Parallism = 2.693671
Bank_Level_Parallism_Col = 1963843.875000
Bank_Level_Parallism_Ready = 1.340056
write_to_read_ratio_blp_rw_average = 0.000003
GrpLevelPara = 0.000021 

BW Util details:
bwutil = 0.373223 
total_CMD = 46386501 
util_bw = 17312496 
Wasted_Col = 14074335 
Wasted_Row = 6097677 
Idle = 8901993 

BW Util Bottlenecks: 
RCDc_limit = 14402210 
RCDWRc_limit = 1135044 
WTRc_limit = 3851790 
RTWc_limit = 3618954 
CCDLc_limit = 0 
rwq = 0 
CCDLc_limit_alone = 0 
WTRc_limit_alone = 3851790 
RTWc_limit_alone = 3618954 

Commands details: 
total_CMD = 46386501 
n_nop = 39265553 
Read = 3703124 
Write = 0 
L2_Alloc = 0 
L2_WB = 625000 
n_act = 1476251 
n_pre = 1476235 
n_ref = 256 
n_req = 2076607 
total_req = 4328124 

Dual Bus Interface Util: 
issued_total_row = 2952486 
issued_total_col = 4328124 
Row_Bus_Util =  0.063650 
CoL_Bus_Util = 0.093306 
Either_Row_CoL_Bus_Util = 0.153513 
Issued_on_Two_Bus_Simul_Util = 0.003442 
issued_two_Eff = 0.022421 
queue_avg = 1.010751 


dram_util_bins: 0 0 0 0 0 0 0 0 0 0
dram_eff_bins: 0 0 0 0 0 0 0 0 0 0
mrqq: max=64 avg=1.01075
DRAM[3]: 16 bks, busW=2 BL=8 CL=20, tRRD=10 tCCD=4, tRCD=20 tRAS=50 tRP=20 tRC=62
n_cmd=46386501 n_nop=39470237 n_act=1429753 n_pre=1429737 n_ref_event=36477157253424 n_req=2025253 n_rd=3611772 n_rd_L2_A=0 n_write=0 n_wr_bk=594192 bw_util=0.3627
n_activity=41110932 dram_eff=0.4092
bk0: 227306a 39818235i bk1: 200898a 42008974i bk2: 210298a 40151635i bk3: 203796a 41994601i bk4: 263266a 38669858i bk5: 232842a 41169938i bk6: 254184a 38869560i bk7: 220680a 41457930i bk8: 219926a 39627123i bk9: 204442a 41790560i bk10: 207512a 40069676i bk11: 192002a 42166790i bk12: 252660a 38934795i bk13: 233194a 41147483i bk14: 253058a 38986570i bk15: 235708a 41030931i 

------------------------------------------------------------------------

Row_Buffer_Locality = 0.294037
Row_Buffer_Locality_read = 0.317897
Row_Buffer_Locality_write = 0.097617
Bank_Level_Parallism = 2.620907
Bank_Level_Parallism_Col = 0.999883
Bank_Level_Parallism_Ready = 1.322289
write_to_read_ratio_blp_rw_average = 0.000000
GrpLevelPara = 0.000001 

BW Util details:
bwutil = 0.362689 
total_CMD = 46386501 
util_bw = 16823856 
Wasted_Col = 13952104 
Wasted_Row = 6215120 
Idle = 9395421 

BW Util Bottlenecks: 
RCDc_limit = 14197430 
RCDWRc_limit = 1126052 
WTRc_limit = 3667715 
RTWc_limit = 3485585 
CCDLc_limit = 0 
rwq = 0 
CCDLc_limit_alone = 0 
WTRc_limit_alone = 3667715 
RTWc_limit_alone = 3485585 

Commands details: 
total_CMD = 46386501 
n_nop = 39470237 
Read = 3611772 
Write = 0 
L2_Alloc = 0 
L2_WB = 594192 
n_act = 1429753 
n_pre = 1429737 
n_ref = 36477157253424 
n_req = 2025253 
total_req = 4205964 

Dual Bus Interface Util: 
issued_total_row = 2859490 
issued_total_col = 4205964 
Row_Bus_Util =  0.061645 
CoL_Bus_Util = 0.090672 
Either_Row_CoL_Bus_Util = 0.149101 
Issued_on_Two_Bus_Simul_Util = 0.003216 
issued_two_Eff = 0.021571 
queue_avg = 0.941348 


dram_util_bins: 0 0 0 0 0 0 0 0 0 0
dram_eff_bins: 0 0 0 0 0 0 0 0 0 0
mrqq: max=64 avg=0.941348

========= L2 cache stats =========
L2_cache_bank[0]: Access = 3665522, Miss = 2309566, Miss_rate = 0.630, Pending_hits = 28472, Reservation_fails = 5367
L2_cache_bank[1]: Access = 3677779, Miss = 2339321, Miss_rate = 0.636, Pending_hits = 29005, Reservation_fails = 7348
L2_cache_bank[2]: Access = 3525331, Miss = 2331843, Miss_rate = 0.661, Pending_hits = 30825, Reservation_fails = 7875
L2_cache_bank[3]: Access = 3501545, Miss = 2270327, Miss_rate = 0.648, Pending_hits = 28762, Reservation_fails = 6202
L2_total_cache_accesses = 14370177
L2_total_cache_misses = 9251057
L2_total_cache_miss_rate = 0.6438
L2_total_cache_pending_hits = 117064
L2_total_cache_reservation_fails = 26792
L2_total_cache_breakdown:
	L2_cache_stats_breakdown[GLOBAL_ACC_R][HIT] = 4074821
	L2_cache_stats_breakdown[GLOBAL_ACC_R][HIT_RESERVED] = 117026
	L2_cache_stats_breakdown[GLOBAL_ACC_R][MISS] = 2969527
	L2_cache_stats_breakdown[GLOBAL_ACC_R][RESERVATION_FAIL] = 26792
	L2_cache_stats_breakdown[GLOBAL_ACC_R][SECTOR_MISS] = 4381671
	L2_cache_stats_breakdown[LOCAL_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[CONST_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[TEXTURE_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[GLOBAL_ACC_W][HIT] = 927235
	L2_cache_stats_breakdown[GLOBAL_ACC_W][HIT_RESERVED] = 38
	L2_cache_stats_breakdown[GLOBAL_ACC_W][MISS] = 778479
	L2_cache_stats_breakdown[GLOBAL_ACC_W][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[GLOBAL_ACC_W][SECTOR_MISS] = 1121380
	L2_cache_stats_breakdown[BRU_ST_SPILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_ST_SPILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_ST_FILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_RT_SPILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][HIT] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][MISS] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[BRU_RT_FILL][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][HIT] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][MISS] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[LOCAL_ACC_W][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][HIT] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][MISS] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L1_WRBK_ACC][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][HIT] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][MISS] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L2_WRBK_ACC][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[INST_ACC_R][HIT] = 0
	L2_cache_stats_breakdown[INST_ACC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[INST_ACC_R][MISS] = 0
	L2_cache_stats_breakdown[INST_ACC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[INST_ACC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][HIT] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][MISS] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L1_WR_ALLOC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][HIT] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][HIT_RESERVED] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][MISS] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][RESERVATION_FAIL] = 0
	L2_cache_stats_breakdown[L2_WR_ALLOC_R][SECTOR_MISS] = 0
	L2_cache_stats_breakdown[GLOBAL_ACC_R][TOTAL_ACCESS] = 11543045
	L2_cache_stats_breakdown[GLOBAL_ACC_W][TOTAL_ACCESS] = 2827132
	L2_cache_stats_breakdown[GLOBAL_ACC_R]_miss_rate = 0.6369
RT_L2_cache_stats_breakdown:
	rt_read_cold_miss = 336342
	rt_read_other_miss = 1506231
	rt_stats[READ][HIT] = 3407668
	rt_stats[READ][HIT_RESERVED] = 115658
	rt_stats[READ][MISS] = 1842573
	rt_stats[READ][RESERVATION_FAIL] = 18769
	rt_stats[READ][SECTOR_MISS] = 3559945
	rt_read_miss_rate = 0.6053
	rt_stats[WRITE][HIT] = 489024
	rt_stats[WRITE][HIT_RESERVED] = 0
	rt_stats[WRITE][MISS] = 733363
	rt_stats[WRITE][RESERVATION_FAIL] = 0
	rt_stats[WRITE][SECTOR_MISS] = 251889
	rt_overall_miss_rate = 0.6142
L2_total_cache_reservation_fail_breakdown:
	L2_cache_stats_fail_breakdown[GLOBAL_ACC_R][MSHR_ENTRY_FAIL] = 7162
	L2_cache_stats_fail_breakdown[GLOBAL_ACC_R][MSHR_MERGE_ENTRY_FAIL] = 19630
L2_cache_data_port_util = 0.073
L2_cache_fill_port_util = 0.102
Stats for Kernel 0 Classification

Min 0.000000 Max 15.000000 Average 3.105585 
[ 1559760 125489046 0 3889171 386738 14739911 0 0 0 0 0 7435478 123966 615412 0 14739911 0 0 0 0 0 0 0 0 0 ]
Stats for Kernel 0 OP Classification

Min 1.000000 Max 145.000000 Average 35.151856 
[ 0 35627233 0 0 714098 0 0 0 0 0 0 4817135 0 0 0 0 0 0 0 0 0 0 0 7655722 0 0 0 0 0 0 0 13403439 0 0 0 0 0 0 0 0 0 51828190 0 20941060 1246292 0 0 123966 123966 0 0 0 0 0 0 81920 0 0 631796 0 255666 0 98932 3033587 0 0 1015808 1015808 0 0 49152 0 0 1336472 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2031616 0 0 0 32768 123966 8050890 ]
Ray tracing memory access distribution: 
868700	4206382	744734	2802003	2310557	491446	0	0	
rt_num_hits = 0
rt_num_any_hits = 491446
rt_n_anyhit_rays = 0
rt_n_closesthit_rays = 123966
rt_n_total_rays = 123966
rt_max_tree_depth = 15
rt_max_nodes_per_ray = 806
rt_tot_nodes_per_ray = 7753119
rt_avg_nodes_per_ray = 62.542301
g_inst_type_latency = 0 100288624 3751358 0 0 23901534 58372096 0 432924160 0 0 2018379390 6158320 4074386 0 0 601011 740997 0 0 0 0 0 0 0 0 0 0 
inst_class_by_shader
0:1336862	90360964	0	3264407	163840	9765869	0	0	0	0	0	6272124	123966	615412	0	0	0	0	0	0	
1:25034	1176598	0	50068	25034	225306	0	0	0	0	0	75102	0	0	0	0	0	0	0	0	
2:197864	33951484	0	574696	197864	4748736	0	0	0	0	0	1088252	0	0	0	0	0	0	0	0	
3:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
4:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
5:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
6:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
7:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
8:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
9:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
10:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
11:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
12:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
13:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
14:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	
15:0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	

icnt_total_pkts_mem_to_simt=14370177
icnt_total_pkts_simt_to_mem=14370177
LD_mem_lat_dist  0 0 1.14444 0 0 0 0 2.26561 160 2.68673 0.640262 0.624914 60.5407 12.2949 0.0322998 2.27433 4.73299 0.605501 0.252646 0 1.07998 1.6252 1 0 0 0 0
ST_mem_lat_dist  0 0 0 0 0 0 0 3.41228 2.69548 160 0 0 0 0 0 0 0 0 0 0 1.03746 1.1585 5.5896 1 0 0 0
----------------------------Interconnect-DETAILS--------------------------------
Req_Network_injected_packets_num = 14370177
Req_Network_cycles = 18090736
Req_Network_injected_packets_per_cycle =       0.7943 
Req_Network_conflicts_per_cycle =       0.1064
Req_Network_conflicts_per_cycle_util =       0.1833
Req_Bank_Level_Parallism =       1.3685
Req_Network_in_buffer_full_per_cycle =       0.0000
Req_Network_in_buffer_avg_util =       0.0683
Req_Network_out_buffer_full_per_cycle =       0.0001
Req_Network_out_buffer_avg_util =       0.2682

Reply_Network_injected_packets_num = 14370177
Reply_Network_cycles = 18090736
Reply_Network_injected_packets_per_cycle =        0.7943
Reply_Network_conflicts_per_cycle =        0.2312
Reply_Network_conflicts_per_cycle_util =       0.3956
Reply_Bank_Level_Parallism =       1.3592
Reply_Network_in_buffer_full_per_cycle =       0.0000
Reply_Network_in_buffer_avg_util =       0.2977
Reply_Network_out_buffer_full_per_cycle =       0.0000
Reply_Network_out_buffer_avg_util =       0.0993
----------------------------END-of-Interconnect-DETAILS-------------------------


gpgpu_simulation_time = 0 days, 3 hrs, 45 min, 16 sec (13516 sec)
gpgpu_simulation_rate = 11296 (inst/sec)
gpgpu_simulation_rate = 1338 (cycle/sec)
gpgpu_silicon_slowdown = 1020179x
Destroy streams for kernel 1: size 0
Max simulated kernels of 1 has reached, exiting.
GPGPU-Sim: *** exit detected ***
