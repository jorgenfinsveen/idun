Running from: /cluster/home/jorgfi
Job: vulkan_sim  ID: 23025488  Nodes: idun-07-03


ENVIRONMENT INFO
---------------------------
	- OS:	 Ubuntu 20.04.6 LTS
	- CPU:	 Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz
	- RAM:	 753Gi

Thu Sep  4 11:41:28 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 575.57.08              Driver Version: 575.57.08      CUDA Version: 12.9     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  Tesla V100-PCIE-32GB           On  |   00000000:12:00.0 Off |                    0 |
| N/A   28C    P0             23W /  250W |       0MiB /  32768MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+


SIMULATION SETUP
---------------------
	- Device config:	 /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/configs/tested-cfgs/MOBILE_SIM_2
	- gpgpu_ptx_sim_mode:	 1
	- Scene:		 12
	- Dimensions:
		- Width:	 512
		- Height:	 512
	- Samples:		 5
	- Shader type:		 1




STARTING SIMULATION...
--------------------------------------------------------



GPGPU-Sim version 4.0.0 - Vulkan-Sim version 2.0.0 (build gpgpu-sim_git-commit-dc742faa6e5fcfaf415fe51eab71dcf9345388fd-modified_585.0) configured with GPUWattch.

----------------------------------------------------------------------------
INFO - If you only care about PTX execution, ignore this message. GPGPU-Sim supports PTX execution in modern CUDA.
If you want to run PTXPLUS (sm_1x SASS) with a modern card configuration - set the envronment variable
$PTXAS_CUDA_INSTALL_PATH to point a CUDA version compabible with your card configurations (i.e. 8+ for PASCAL, 9+ for VOLTA etc..)
For example: "export $PTXAS_CUDA_INSTALL_PATH=/usr/local/cuda-9.1"

The following text describes why:
If you are using PTXPLUS, only sm_1x is supported and it requires that the app and simulator binaries are compiled in CUDA 4.2 or less.
The simulator requires it since CUDA headers desribe struct sizes in the exec which change from gen to gen.
The apps require 4.2 because new versions of CUDA tools have dropped parsing support for generating sm_1x
When running using modern config (i.e. volta) and PTXPLUS with CUDA 4.2, the $PTXAS_CUDA_INSTALL_PATH env variable is required to get proper register usage
(and hence occupancy) using a version of CUDA that knows the register usage on the real card.

----------------------------------------------------------------------------
setup_environment succeeded
MESA: Linking to LLVM resource bind packing.
Vulkan SDK Header Version: 296

Vulkan Instance Extensions: 
- VK_KHR_device_group_creation (0.0.1)
- VK_KHR_external_fence_capabilities (0.0.1)
- VK_KHR_external_memory_capabilities (0.0.1)
- VK_KHR_external_semaphore_capabilities (0.0.1)
- VK_KHR_get_physical_device_properties2 (0.0.2)
- VK_KHR_get_surface_capabilities2 (0.0.1)
- VK_KHR_surface (0.0.25)
- VK_KHR_surface_protected_capabilities (0.0.1)
- VK_KHR_xcb_surface (0.0.6)
- VK_KHR_xlib_surface (0.0.6)
- VK_EXT_debug_report (0.0.10)
- VK_EXT_debug_utils (0.0.2)
- VK_KHR_portability_enumeration (0.0.1)
- VK_LUNARG_direct_driver_loading (0.0.1)

Vulkan Instance Layers: 
- VK_LAYER_NV_optimus (1.4.303) : NVIDIA Optimus layer
- VK_LAYER_NV_present (1.4.303) : NVIDIA GR2608 layer

Vulkan Devices: 
- [0] UnknownVendor 'llvmpipe (LLVM 10.0.0, 256 bits)' (CPU: vulkan 1.3.254, driver llvmpipe Mesa 23.2.0-devel (git-b8f3e3980e) (LLVM 10.0.0) - 0.0.1)

Setting Device [0]:
Getting ray tracing pipeline properties...
- loading '../../../Scenes/Blender_2.83/Cube_042.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0781005s
- loading '../../../Scenes/Blender_2.83/Cube_132.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.036703s
- loading '../../../Scenes/Blender_2.83/BezierCurve_009.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0803243s
- loading '../../../Scenes/Blender_2.83/Cube_076.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.021971s
- loading '../../../Scenes/Blender_2.83/Cube_078.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0247666s
- loading '../../../Scenes/Blender_2.83/light_X_warning_006.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.0232644s
- loading '../../../Scenes/Blender_2.83/Cylinder_030.obj'... (288 vertices, 360 unique vertices, 1 materials) 0.0166672s
- loading '../../../Scenes/Blender_2.83/Cube_065.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0671745s
- loading '../../../Scenes/Blender_2.83/Power_Pole_ID.obj'... (438 vertices, 438 unique vertices, 1 materials) 0.0456865s
- loading '../../../Scenes/Blender_2.83/Text_001.obj'... (28068 vertices, 9509 unique vertices, 1 materials) 0.105832s
- loading '../../../Scenes/Blender_2.83/_Grill_017.obj'... (2862 vertices, 3596 unique vertices, 1 materials) 0.0541478s
- loading '../../../Scenes/Blender_2.83/Cube_109.obj'... (6546 vertices, 2179 unique vertices, 1 materials) 0.0344883s
- loading '../../../Scenes/Blender_2.83/Cube_055.obj'... (2124 vertices, 856 unique vertices, 1 materials) 0.0600593s
- loading '../../../Scenes/Blender_2.83/Cylinder_072.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.10529s
- loading '../../../Scenes/Blender_2.83/boatback_008.obj'... (3078 vertices, 2360 unique vertices, 1 materials) 0.044427s
- loading '../../../Scenes/Blender_2.83/Cube_082.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0487524s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_007.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0546551s
- loading '../../../Scenes/Blender_2.83/boxes_001.obj'... (318 vertices, 315 unique vertices, 1 materials) 0.0213563s
- loading '../../../Scenes/Blender_2.83/Charlie_001.obj'... (31032 vertices, 15032 unique vertices, 1 materials) 0.119045s
- loading '../../../Scenes/Blender_2.83/Cylinder_011.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0698724s
- loading '../../../Scenes/Blender_2.83/Text_002.obj'... (15288 vertices, 5143 unique vertices, 1 materials) 0.0812935s
- loading '../../../Scenes/Blender_2.83/Cylinder_010.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0275582s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_001.obj'... (2184 vertices, 2204 unique vertices, 6 materials) 0.0260211s
- loading '../../../Scenes/Blender_2.83/Cylinder_006.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.198781s
- loading '../../../Scenes/Blender_2.83/Cube_006.obj'... (318 vertices, 306 unique vertices, 1 materials) 0.0917289s
- loading '../../../Scenes/Blender_2.83/Cube_067.obj'... (6477 vertices, 8222 unique vertices, 1 materials) 0.0816324s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_016.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.0484105s
- loading '../../../Scenes/Blender_2.83/Cube_004.obj'... (1242 vertices, 1467 unique vertices, 1 materials) 0.0419822s
- loading '../../../Scenes/Blender_2.83/BezierCurve_014.obj'... (11808 vertices, 2132 unique vertices, 1 materials) 0.0697586s
- loading '../../../Scenes/Blender_2.83/Cube_128.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.045527s
- loading '../../../Scenes/Blender_2.83/Cube_028.obj'... (2688 vertices, 2678 unique vertices, 1 materials) 0.0565408s
- loading '../../../Scenes/Blender_2.83/Cube_080.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0409704s
- loading '../../../Scenes/Blender_2.83/boxes_004.obj'... (48 vertices, 20 unique vertices, 1 materials) 0.0315671s
- loading '../../../Scenes/Blender_2.83/BezierCurve_013.obj'... (11808 vertices, 2132 unique vertices, 1 materials) 0.0704654s
- loading '../../../Scenes/Blender_2.83/20191230_134947_060.obj'... (5922 vertices, 5730 unique vertices, 1 materials) 0.086668s
- loading '../../../Scenes/Blender_2.83/Cylinder_012.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0578496s
- loading '../../../Scenes/Blender_2.83/boatback_007.obj'... (708 vertices, 694 unique vertices, 1 materials) 0.0588828s
- loading '../../../Scenes/Blender_2.83/boatback_013.obj'... (165 vertices, 117 unique vertices, 1 materials) 0.0499046s
- loading '../../../Scenes/Blender_2.83/20191230_134947_011.obj'... (21504 vertices, 21200 unique vertices, 1 materials) 0.0864425s
- loading '../../../Scenes/Blender_2.83/Cylinder_021.obj'... (5022 vertices, 5331 unique vertices, 1 materials) 0.0283823s
- loading '../../../Scenes/Blender_2.83/Cube_059.obj'... (11994 vertices, 14468 unique vertices, 2 materials) 0.0359529s
- loading '../../../Scenes/Blender_2.83/Cube_074.obj'... (21156 vertices, 26956 unique vertices, 1 materials) 0.0880607s
- loading '../../../Scenes/Blender_2.83/BezierCurve_007.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0371954s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_004.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0227192s
- loading '../../../Scenes/Blender_2.83/Steady_Breeze_Chimney_Steam.obj'... (12 vertices, 4 unique vertices, 1 materials) 0.0573277s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_017.obj'... (6144 vertices, 2413 unique vertices, 7 materials) 0.0447429s
- loading '../../../Scenes/Blender_2.83/Boss_001.obj'... (89253 vertices, 42613 unique vertices, 1 materials) 0.279557s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_009.obj'... (6144 vertices, 2380 unique vertices, 7 materials) 0.0526037s
- loading '../../../Scenes/Blender_2.83/Cylinder_036.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0901017s
- loading '../../../Scenes/Blender_2.83/Cube_071.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.064514s
- loading '../../../Scenes/Blender_2.83/Cube_034.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.0484545s
- loading '../../../Scenes/Blender_2.83/boatback_004.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.00747155s
- loading '../../../Scenes/Blender_2.83/Text_005.obj'... (228 vertices, 84 unique vertices, 1 materials) 0.0535167s
- loading '../../../Scenes/Blender_2.83/_Steel_Cover_001.obj'... (948 vertices, 808 unique vertices, 1 materials) 0.0369263s
- loading '../../../Scenes/Blender_2.83/Cube_017.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0470247s
- loading '../../../Scenes/Blender_2.83/BezierCurve_002.obj'... (24696 vertices, 9777 unique vertices, 2 materials) 0.0538136s
- loading '../../../Scenes/Blender_2.83/Cube_5597.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.081265s
- loading '../../../Scenes/Blender_2.83/Cylinder_017.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.0554173s
- loading '../../../Scenes/Blender_2.83/cables_repeating.obj'... (9693 vertices, 7052 unique vertices, 1 materials) 0.0765517s
- loading '../../../Scenes/Blender_2.83/Wall_Electrical.obj'... (22710 vertices, 7533 unique vertices, 2 materials) 0.0907261s
- loading '../../../Scenes/Blender_2.83/boatback_015.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.029503s
- loading '../../../Scenes/Blender_2.83/Cube_083.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0253438s
- loading '../../../Scenes/Blender_2.83/Phone_Booth_001.obj'... (4008 vertices, 2894 unique vertices, 6 materials) 0.0980024s
- loading '../../../Scenes/Blender_2.83/boatback_024.obj'... (264 vertices, 298 unique vertices, 1 materials) 0.0675182s
- loading '../../../Scenes/Blender_2.83/Cylinder_009.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.00965652s
- loading '../../../Scenes/Blender_2.83/Cube_077.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.0219256s
- loading '../../../Scenes/Blender_2.83/Cube_087.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0651084s
- loading '../../../Scenes/Blender_2.83/Cube_038.obj'... (4428 vertices, 2494 unique vertices, 3 materials) 0.0517042s
- loading '../../../Scenes/Blender_2.83/BezierCurve_016.obj'... (11304 vertices, 2041 unique vertices, 1 materials) 0.180037s
- loading '../../../Scenes/Blender_2.83/Cube_126.obj'... (4428 vertices, 2494 unique vertices, 3 materials) 0.706584s
- loading '../../../Scenes/Blender_2.83/20191230_134947_012.obj'... (21504 vertices, 21184 unique vertices, 1 materials) 0.0742664s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_015.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.0730023s
- loading '../../../Scenes/Blender_2.83/Cylinder_029.obj'... (360 vertices, 364 unique vertices, 3 materials) 0.0167172s
- loading '../../../Scenes/Blender_2.83/Cylinder_024.obj'... (3000 vertices, 2040 unique vertices, 3 materials) 0.0232373s
- loading '../../../Scenes/Blender_2.83/Cube_054.obj'... (48 vertices, 44 unique vertices, 1 materials) 0.0330443s
- loading '../../../Scenes/Blender_2.83/20191230_134947_015.obj'... (5922 vertices, 5727 unique vertices, 1 materials) 0.0344003s
- loading '../../../Scenes/Blender_2.83/_Grill_003.obj'... (5808 vertices, 7508 unique vertices, 1 materials) 0.0860112s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_022.obj'... (6144 vertices, 2372 unique vertices, 7 materials) 0.099405s
- loading '../../../Scenes/Blender_2.83/Cube_104.obj'... (11994 vertices, 14472 unique vertices, 2 materials) 0.0459208s
- loading '../../../Scenes/Blender_2.83/BezierCurve_010.obj'... (22248 vertices, 4017 unique vertices, 1 materials) 0.0826667s
- loading '../../../Scenes/Blender_2.83/Cube_043.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0856426s
- loading '../../../Scenes/Blender_2.83/Cube_002.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0435821s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_003.obj'... (2184 vertices, 2230 unique vertices, 6 materials) 0.0660557s
- loading '../../../Scenes/Blender_2.83/Cube_107.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.116838s
- loading '../../../Scenes/Blender_2.83/Cube_022.obj'... (2676 vertices, 2930 unique vertices, 1 materials) 0.0303432s
- loading '../../../Scenes/Blender_2.83/Cube_068.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0760881s
- loading '../../../Scenes/Blender_2.83/Pier.obj'... (900 vertices, 374 unique vertices, 1 materials) 0.0639504s
- loading '../../../Scenes/Blender_2.83/boatback_005.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.0258517s
- loading '../../../Scenes/Blender_2.83/Cylinder_008.obj'... (996 vertices, 1132 unique vertices, 1 materials) 0.0230736s
- loading '../../../Scenes/Blender_2.83/Backpacks_002.obj'... (19938 vertices, 39600 unique vertices, 1 materials) 0.0979695s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_012.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.327894s
- loading '../../../Scenes/Blender_2.83/Gondolier_002.obj'... (90228 vertices, 180036 unique vertices, 1 materials) 0.331776s
- loading '../../../Scenes/Blender_2.83/BezierCurve.obj'... (15624 vertices, 2821 unique vertices, 1 materials) 0.0996661s
- loading '../../../Scenes/Blender_2.83/Cube_095.obj'... (852 vertices, 978 unique vertices, 2 materials) 0.120382s
- loading '../../../Scenes/Blender_2.83/Cube_036.obj'... (852 vertices, 978 unique vertices, 2 materials) 0.0234334s
- loading '../../../Scenes/Blender_2.83/Cylinder_018.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.0387425s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_018.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.00719685s
- loading '../../../Scenes/Blender_2.83/Cylinder_027.obj'... (1626 vertices, 901 unique vertices, 3 materials) 0.0218771s
- loading '../../../Scenes/Blender_2.83/_Steel_Cover_005.obj'... (948 vertices, 808 unique vertices, 1 materials) 0.0226848s
- loading '../../../Scenes/Blender_2.83/BezierCurve_030.obj'... (2160 vertices, 724 unique vertices, 4 materials) 0.0155065s
- loading '../../../Scenes/Blender_2.83/boatback_010.obj'... (102 vertices, 90 unique vertices, 1 materials) 0.0318319s
- loading '../../../Scenes/Blender_2.83/Plane_006.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0318249s
- loading '../../../Scenes/Blender_2.83/boatback_006.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.0556206s
- loading '../../../Scenes/Blender_2.83/Cube_108.obj'... (852 vertices, 978 unique vertices, 2 materials) 0.0477073s
- loading '../../../Scenes/Blender_2.83/Cube_015.obj'... (2520 vertices, 1716 unique vertices, 2 materials) 0.0147533s
- loading '../../../Scenes/Blender_2.83/SWAT_001.obj'... (62826 vertices, 41928 unique vertices, 4 materials) 0.1852s
- loading '../../../Scenes/Blender_2.83/Cube_003.obj'... (1242 vertices, 1467 unique vertices, 1 materials) 0.0272282s
- loading '../../../Scenes/Blender_2.83/Cube_086.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0192307s
- loading '../../../Scenes/Blender_2.83/Backpacks_001.obj'... (25893 vertices, 51206 unique vertices, 1 materials) 0.124857s
- loading '../../../Scenes/Blender_2.83/SWAT_002.obj'... (62826 vertices, 41928 unique vertices, 4 materials) 0.17885s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_008.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0191569s
- loading '../../../Scenes/Blender_2.83/Cube_049.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0208616s
- loading '../../../Scenes/Blender_2.83/Wall_Electrical_002.obj'... (22710 vertices, 7532 unique vertices, 2 materials) 0.0764492s
- loading '../../../Scenes/Blender_2.83/Cube_106.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0595701s
- loading '../../../Scenes/Blender_2.83/20191230_134947_005.obj'... (5922 vertices, 5761 unique vertices, 1 materials) 0.073208s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_004.obj'... (2184 vertices, 2192 unique vertices, 6 materials) 0.0700326s
- loading '../../../Scenes/Blender_2.83/Cube_081.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0256646s
- loading '../../../Scenes/Blender_2.83/BezierCurve_006.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.052517s
- loading '../../../Scenes/Blender_2.83/boatback_021.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.0471699s
- loading '../../../Scenes/Blender_2.83/20191230_134947_029.obj'... (21504 vertices, 21188 unique vertices, 1 materials) 0.0974913s
- loading '../../../Scenes/Blender_2.83/_Robot_Flyers_001.obj'... (1092 vertices, 364 unique vertices, 1 materials) 0.0239469s
- loading '../../../Scenes/Blender_2.83/light_X_warning_001.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.0465423s
- loading '../../../Scenes/Blender_2.83/Cube_040.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0457995s
- loading '../../../Scenes/Blender_2.83/boatback_014.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.0217746s
- loading '../../../Scenes/Blender_2.83/boatback_018.obj'... (1038 vertices, 966 unique vertices, 1 materials) 0.0433234s
- loading '../../../Scenes/Blender_2.83/Cylinder_2683.obj'... (35160 vertices, 11745 unique vertices, 1 materials) 0.307645s
- loading '../../../Scenes/Blender_2.83/BezierCurve_008.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0552162s
- loading '../../../Scenes/Blender_2.83/Cube_131.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0188247s
- loading '../../../Scenes/Blender_2.83/Cube_018.obj'... (19296 vertices, 10848 unique vertices, 1 materials) 0.0742417s
- loading '../../../Scenes/Blender_2.83/Cylinder_007.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.0476463s
- loading '../../../Scenes/Blender_2.83/Cube_019.obj'... (19296 vertices, 10848 unique vertices, 1 materials) 0.0656209s
- loading '../../../Scenes/Blender_2.83/Cube_014.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0777952s
- loading '../../../Scenes/Blender_2.83/Cube_011.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.030101s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_011.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.0431506s
- loading '../../../Scenes/Blender_2.83/Cube_012.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0588661s
- loading '../../../Scenes/Blender_2.83/Cylinder_073.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0819366s
- loading '../../../Scenes/Blender_2.83/BezierCurve_042.obj'... (294336 vertices, 54197 unique vertices, 1 materials) 0.847005s
- loading '../../../Scenes/Blender_2.83/BezierCurve_004.obj'... (8712 vertices, 1573 unique vertices, 1 materials) 0.0674511s
- loading '../../../Scenes/Blender_2.83/Cube_098.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0463714s
- loading '../../../Scenes/Blender_2.83/Cylinder_002.obj'... (804 vertices, 850 unique vertices, 1 materials) 0.0598571s
- loading '../../../Scenes/Blender_2.83/20191230_134947_009.obj'... (5922 vertices, 5756 unique vertices, 1 materials) 0.050882s
- loading '../../../Scenes/Blender_2.83/Armature_007.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0411182s
- loading '../../../Scenes/Blender_2.83/Cube_048.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0223488s
- loading '../../../Scenes/Blender_2.83/CyberSean.obj'... (90072 vertices, 50202 unique vertices, 1 materials) 0.289123s
- loading '../../../Scenes/Blender_2.83/Cube_008.obj'... (2700 vertices, 1815 unique vertices, 2 materials) 0.0679043s
- loading '../../../Scenes/Blender_2.83/Power_Meter_3.obj'... (5490 vertices, 1896 unique vertices, 6 materials) 0.0243394s
- loading '../../../Scenes/Blender_2.83/Gondolier_001.obj'... (90228 vertices, 40813 unique vertices, 1 materials) 0.286933s
- loading '../../../Scenes/Blender_2.83/KaitlinSarong_002.obj'... (79602 vertices, 41748 unique vertices, 1 materials) 0.246949s
- loading '../../../Scenes/Blender_2.83/Cube_027.obj'... (7200 vertices, 2634 unique vertices, 1 materials) 0.261098s
- loading '../../../Scenes/Blender_2.83/Cylinder_004.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.047009s
- loading '../../../Scenes/Blender_2.83/boatback_003.obj'... (708 vertices, 692 unique vertices, 1 materials) 0.0133243s
- loading '../../../Scenes/Blender_2.83/Text.obj'... (7068 vertices, 2398 unique vertices, 1 materials) 0.39813s
- loading '../../../Scenes/Blender_2.83/Cube_110.obj'... (6720 vertices, 4774 unique vertices, 3 materials) 0.0501584s
- loading '../../../Scenes/Blender_2.83/Armature_006.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.045471s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_006.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0313392s
- loading '../../../Scenes/Blender_2.83/Cube_130.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0213775s
- loading '../../../Scenes/Blender_2.83/Cube_030.obj'... (360 vertices, 237 unique vertices, 1 materials) 0.0546679s
- loading '../../../Scenes/Blender_2.83/Cylinder_020.obj'... (32874 vertices, 29340 unique vertices, 1 materials) 0.0897637s
- loading '../../../Scenes/Blender_2.83/Cube_013.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0407749s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_021.obj'... (6144 vertices, 2372 unique vertices, 7 materials) 0.0162223s
- loading '../../../Scenes/Blender_2.83/Cube_123.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0289241s
- loading '../../../Scenes/Blender_2.83/Armature_003.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0570025s
- loading '../../../Scenes/Blender_2.83/Cube_039.obj'... (8316 vertices, 6454 unique vertices, 2 materials) 0.0419607s
- loading '../../../Scenes/Blender_2.83/20191230_134947_013.obj'... (21504 vertices, 21186 unique vertices, 1 materials) 0.0785915s
- loading '../../../Scenes/Blender_2.83/Cube_035.obj'... (2124 vertices, 856 unique vertices, 1 materials) 0.0397763s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_002.obj'... (27540 vertices, 9558 unique vertices, 3 materials) 0.0496751s
- loading '../../../Scenes/Blender_2.83/Cube_026.obj'... (9762 vertices, 9196 unique vertices, 4 materials) 0.0419211s
- loading '../../../Scenes/Blender_2.83/BezierCurve_003.obj'... (8784 vertices, 1586 unique vertices, 1 materials) 0.0664552s
- loading '../../../Scenes/Blender_2.83/Cylinder.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.0333856s
- loading '../../../Scenes/Blender_2.83/Power_Meter_2.obj'... (97656 vertices, 32903 unique vertices, 5 materials) 0.110564s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_010.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.0321457s
- loading '../../../Scenes/Blender_2.83/BezierCurve_001.obj'... (15624 vertices, 2821 unique vertices, 1 materials) 0.0640945s
- loading '../../../Scenes/Blender_2.83/Cube_021.obj'... (3372 vertices, 5159 unique vertices, 1 materials) 0.0505431s
- loading '../../../Scenes/Blender_2.83/Cube_100.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0910605s
- loading '../../../Scenes/Blender_2.83/Armature_005.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0181465s
- loading '../../../Scenes/Blender_2.83/BezierCurve_041.obj'... (288 vertices, 52 unique vertices, 1 materials) 0.0546196s
- loading '../../../Scenes/Blender_2.83/boxes_005.obj'... (48 vertices, 20 unique vertices, 1 materials) 0.0388159s
- loading '../../../Scenes/Blender_2.83/light_X_warning_003.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.0288877s
- loading '../../../Scenes/Blender_2.83/Cube_009.obj'... (2685 vertices, 1766 unique vertices, 1 materials) 0.0682189s
- loading '../../../Scenes/Blender_2.83/light_X_warning_002.obj'... (3558 vertices, 1400 unique vertices, 4 materials) 0.0368422s
- loading '../../../Scenes/Blender_2.83/boxes_006.obj'... (318 vertices, 311 unique vertices, 1 materials) 0.0802988s
- loading '../../../Scenes/Blender_2.83/Cylinder_040.obj'... (8856 vertices, 3126 unique vertices, 5 materials) 0.0406679s
- loading '../../../Scenes/Blender_2.83/20191230_134947_002.obj'... (21504 vertices, 21214 unique vertices, 1 materials) 0.104179s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_014.obj'... (6144 vertices, 2422 unique vertices, 7 materials) 0.100012s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_019.obj'... (6144 vertices, 2420 unique vertices, 7 materials) 0.0246697s
- loading '../../../Scenes/Blender_2.83/Cube_023.obj'... (228 vertices, 220 unique vertices, 1 materials) 0.0205206s
- loading '../../../Scenes/Blender_2.83/Cube_1320.obj'... (1836 vertices, 612 unique vertices, 1 materials) 0.0195587s
- loading '../../../Scenes/Blender_2.83/boxes_003.obj'... (48 vertices, 20 unique vertices, 1 materials) 0.0582809s
- loading '../../../Scenes/Blender_2.83/Cylinder_015.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0334837s
- loading '../../../Scenes/Blender_2.83/Cube_075.obj'... (360 vertices, 237 unique vertices, 1 materials) 0.0391438s
- loading '../../../Scenes/Blender_2.83/Cube_063.obj'... (900 vertices, 374 unique vertices, 1 materials) 0.0503508s
- loading '../../../Scenes/Blender_2.83/Cylinder_028.obj'... (3588 vertices, 2347 unique vertices, 3 materials) 0.0204926s
- loading '../../../Scenes/Blender_2.83/Cube_033.obj'... (2232 vertices, 1416 unique vertices, 2 materials) 0.0218945s
- loading '../../../Scenes/Blender_2.83/Cube_085.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.00477285s
- loading '../../../Scenes/Blender_2.83/Cylinder_042.obj'... (828 vertices, 620 unique vertices, 1 materials) 0.0432534s
- loading '../../../Scenes/Blender_2.83/Cube_111.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0427274s
- loading '../../../Scenes/Blender_2.83/20191230_134947_010.obj'... (21504 vertices, 21188 unique vertices, 1 materials) 0.128333s
- loading '../../../Scenes/Blender_2.83/boatback_016.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.03712s
- loading '../../../Scenes/Blender_2.83/Cylinder_022.obj'... (5022 vertices, 5349 unique vertices, 1 materials) 0.0382189s
- loading '../../../Scenes/Blender_2.83/Cube_060.obj'... (666 vertices, 664 unique vertices, 1 materials) 0.055078s
- loading '../../../Scenes/Blender_2.83/Cube_016.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0548367s
- loading '../../../Scenes/Blender_2.83/Cube_005.obj'... (318 vertices, 306 unique vertices, 1 materials) 0.0450047s
- loading '../../../Scenes/Blender_2.83/Cube_020.obj'... (11538 vertices, 17654 unique vertices, 4 materials) 0.0819003s
- loading '../../../Scenes/Blender_2.83/BezierCurve_040.obj'... (6120 vertices, 1105 unique vertices, 1 materials) 0.0452947s
- loading '../../../Scenes/Blender_2.83/Cube_127.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0114386s
- loading '../../../Scenes/Blender_2.83/Cube_041.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0250684s
- loading '../../../Scenes/Blender_2.83/Cylinder_037.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0378999s
- loading '../../../Scenes/Blender_2.83/Cube_029.obj'... (2067 vertices, 1313 unique vertices, 1 materials) 0.384635s
- loading '../../../Scenes/Blender_2.83/Cube_079.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0245345s
- loading '../../../Scenes/Blender_2.83/Text_006.obj'... (22032 vertices, 7439 unique vertices, 1 materials) 0.0377945s
- loading '../../../Scenes/Blender_2.83/Cube_064.obj'... (11994 vertices, 14472 unique vertices, 2 materials) 0.0439547s
- loading '../../../Scenes/Blender_2.83/Cube_093.obj'... (6546 vertices, 2179 unique vertices, 1 materials) 0.0264447s
- loading '../../../Scenes/Blender_2.83/BezierCurve_017.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0628916s
- loading '../../../Scenes/Blender_2.83/Cube_072.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0791113s
- loading '../../../Scenes/Blender_2.83/Cube_112.obj'... (7152 vertices, 4924 unique vertices, 3 materials) 0.03096s
- loading '../../../Scenes/Blender_2.83/Cube_102.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0493577s
- loading '../../../Scenes/Blender_2.83/Cylinder_071.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0394244s
- loading '../../../Scenes/Blender_2.83/BezierCurve_027.obj'... (9612 vertices, 3471 unique vertices, 1 materials) 0.0631789s
- loading '../../../Scenes/Blender_2.83/Backpacks_004.obj'... (19938 vertices, 39604 unique vertices, 1 materials) 0.0881919s
- loading '../../../Scenes/Blender_2.83/BezierCurve_005.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0603736s
- loading '../../../Scenes/Blender_2.83/Cube_050.obj'... (2313 vertices, 956 unique vertices, 1 materials) 0.0748917s
- loading '../../../Scenes/Blender_2.83/Text_004.obj'... (10584 vertices, 3564 unique vertices, 1 materials) 0.0305285s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_003.obj'... (18441 vertices, 6795 unique vertices, 7 materials) 0.0416315s
- loading '../../../Scenes/Blender_2.83/boatback_025.obj'... (264 vertices, 298 unique vertices, 1 materials) 0.00290272s
- loading '../../../Scenes/Blender_2.83/boxes_002.obj'... (318 vertices, 315 unique vertices, 1 materials) 0.0314153s
- loading '../../../Scenes/Blender_2.83/Cube_099.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0156174s
- loading '../../../Scenes/Blender_2.83/Cube_066.obj'... (6477 vertices, 8224 unique vertices, 1 materials) 0.0235698s
- loading '../../../Scenes/Blender_2.83/Plane_015.obj'... (36 vertices, 12 unique vertices, 1 materials) 0.038604s
- loading '../../../Scenes/Blender_2.83/_Grill_002.obj'... (5808 vertices, 7512 unique vertices, 1 materials) 0.0328496s
- loading '../../../Scenes/Blender_2.83/Power_Meter_4.obj'... (48414 vertices, 16119 unique vertices, 5 materials) 0.0918773s
- loading '../../../Scenes/Blender_2.83/aaass.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0488675s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_001.obj'... (18441 vertices, 6787 unique vertices, 7 materials) 0.0656762s
- loading '../../../Scenes/Blender_2.83/Low_Drift_Complex_Steam_004.obj'... (12 vertices, 4 unique vertices, 1 materials) 0.0029515s
- loading '../../../Scenes/Blender_2.83/Armature_002.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.300858s
- loading '../../../Scenes/Blender_2.83/Cube_047.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.00947391s
- loading '../../../Scenes/Blender_2.83/Armature_004.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0616625s
- loading '../../../Scenes/Blender_2.83/20191230_134947_014.obj'... (5922 vertices, 5712 unique vertices, 1 materials) 0.0247032s
- loading '../../../Scenes/Blender_2.83/boatback_022.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.046745s
- loading '../../../Scenes/Blender_2.83/Cube_007.obj'... (2100 vertices, 1030 unique vertices, 1 materials) 0.0307434s
- loading '../../../Scenes/Blender_2.83/Cylinder_016.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0172989s
- loading '../../../Scenes/Blender_2.83/_scaffold_000.obj'... (1068 vertices, 1068 unique vertices, 2 materials) 0.00413693s
- loading '../../../Scenes/Blender_2.83/BezierCurve_011.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0646441s
- loading '../../../Scenes/Blender_2.83/Cube_073.obj'... (1740 vertices, 858 unique vertices, 1 materials) 0.0362598s
- loading '../../../Scenes/Blender_2.83/Cube_094.obj'... (6546 vertices, 2179 unique vertices, 1 materials) 0.0399626s
- loading '../../../Scenes/Blender_2.83/Cube_129.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.00542421s
- loading '../../../Scenes/Blender_2.83/Wall_Electrical_001.obj'... (22710 vertices, 7533 unique vertices, 2 materials) 0.0899889s
- loading '../../../Scenes/Blender_2.83/Cube_031.obj'... (2124 vertices, 856 unique vertices, 1 materials) 0.0479341s
- loading '../../../Scenes/Blender_2.83/Cube_069.obj'... (6477 vertices, 8222 unique vertices, 1 materials) 0.0908631s
- loading '../../../Scenes/Blender_2.83/Cube_045.obj'... (1920 vertices, 640 unique vertices, 1 materials) 0.036121s
- loading '../../../Scenes/Blender_2.83/boatback_011.obj'... (102 vertices, 90 unique vertices, 1 materials) 0.0501583s
- loading '../../../Scenes/Blender_2.83/20191230_134947_007.obj'... (5922 vertices, 5728 unique vertices, 1 materials) 0.0754255s
- loading '../../../Scenes/Blender_2.83/Backpacks_003.obj'... (19938 vertices, 39600 unique vertices, 1 materials) 0.0919367s
- loading '../../../Scenes/Blender_2.83/Cube_062.obj'... (288 vertices, 96 unique vertices, 2 materials) 0.0285424s
- loading '../../../Scenes/Blender_2.83/BezierCurve_028.obj'... (2160 vertices, 724 unique vertices, 4 materials) 0.0513057s
- loading '../../../Scenes/Blender_2.83/Cube_1490.obj'... (1800 vertices, 600 unique vertices, 1 materials) 0.0371154s
- loading '../../../Scenes/Blender_2.83/Cube_051.obj'... (3015 vertices, 1044 unique vertices, 1 materials) 0.0525728s
- loading '../../../Scenes/Blender_2.83/Plane_012.obj'... (329676 vertices, 112397 unique vertices, 3 materials) 0.404081s
- loading '../../../Scenes/Blender_2.83/20191230_134947_004.obj'... (21504 vertices, 21209 unique vertices, 1 materials) 0.0835947s
- loading '../../../Scenes/Blender_2.83/boatback_020.obj'... (1008 vertices, 958 unique vertices, 1 materials) 0.0207151s
- loading '../../../Scenes/Blender_2.83/Plane_976.obj'... (1170 vertices, 1421 unique vertices, 1 materials) 0.0466915s
- loading '../../../Scenes/Blender_2.83/Cube_052.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.0166262s
- loading '../../../Scenes/Blender_2.83/20191230_134947_006.obj'... (5922 vertices, 5722 unique vertices, 1 materials) 0.0658078s
- loading '../../../Scenes/Blender_2.83/BezierCurve_032.obj'... (6120 vertices, 1105 unique vertices, 1 materials) 0.0313826s
- loading '../../../Scenes/Blender_2.83/boatback_019.obj'... (1296 vertices, 882 unique vertices, 1 materials) 0.0230992s
- loading '../../../Scenes/Blender_2.83/Cylinder_023.obj'... (2640 vertices, 1680 unique vertices, 3 materials) 0.0513136s
- loading '../../../Scenes/Blender_2.83/Cylinder_014.obj'... (996 vertices, 1052 unique vertices, 1 materials) 0.00521191s
- loading '../../../Scenes/Blender_2.83/Cube.obj'... (35115 vertices, 30510 unique vertices, 1 materials) 0.115684s
- loading '../../../Scenes/Blender_2.83/Cube_056.obj'... (468 vertices, 378 unique vertices, 3 materials) 0.00989542s
- loading '../../../Scenes/Blender_2.83/BezierCurve_015.obj'... (11304 vertices, 2041 unique vertices, 1 materials) 0.127447s
- loading '../../../Scenes/Blender_2.83/20191230_134947_001.obj'... (21504 vertices, 21239 unique vertices, 1 materials) 0.086868s
- loading '../../../Scenes/Blender_2.83/Cube_084.obj'... (864 vertices, 381 unique vertices, 1 materials) 0.0384391s
- loading '../../../Scenes/Blender_2.83/Cube_070.obj'... (6477 vertices, 8222 unique vertices, 1 materials) 0.0337116s
- loading '../../../Scenes/Blender_2.83/boatback_023.obj'... (264 vertices, 298 unique vertices, 1 materials) 0.0277325s
- loading '../../../Scenes/Blender_2.83/Cube_2182.obj'... (1326 vertices, 1187 unique vertices, 1 materials) 0.0174304s
- loading '../../../Scenes/Blender_2.83/Boss_002.obj'... (89253 vertices, 42613 unique vertices, 1 materials) 0.265104s
- loading '../../../Scenes/Blender_2.83/boatback_017.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.039744s
- loading '../../../Scenes/Blender_2.83/Cube_024.obj'... (3213 vertices, 2075 unique vertices, 1 materials) 0.0441298s
- loading '../../../Scenes/Blender_2.83/Cylinder_070.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0436765s
- loading '../../../Scenes/Blender_2.83/_Robot_Flyers.obj'... (1092 vertices, 364 unique vertices, 1 materials) 0.00741666s
- loading '../../../Scenes/Blender_2.83/Cylinder_025.obj'... (2661 vertices, 1651 unique vertices, 3 materials) 0.0229761s
- loading '../../../Scenes/Blender_2.83/BezierCurve_012.obj'... (6624 vertices, 1196 unique vertices, 1 materials) 0.0523007s
- loading '../../../Scenes/Blender_2.83/KaitlinSarong_001.obj'... (79602 vertices, 41748 unique vertices, 1 materials) 0.992353s
- loading '../../../Scenes/Blender_2.83/Armature_001.obj'... (0 vertices, 0 unique vertices, 1 materials) 0.0172405s
- loading '../../../Scenes/Blender_2.83/Cube_053.obj'... (666 vertices, 664 unique vertices, 1 materials) 0.0487792s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_020.obj'... (18441 vertices, 6787 unique vertices, 7 materials) 0.0398707s
- loading '../../../Scenes/Blender_2.83/Cube_001.obj'... (23580 vertices, 8937 unique vertices, 1 materials) 0.0606824s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_013.obj'... (6144 vertices, 2376 unique vertices, 7 materials) 0.0570185s
- loading '../../../Scenes/Blender_2.83/boatback_009.obj'... (165 vertices, 117 unique vertices, 1 materials) 0.0255065s
- loading '../../../Scenes/Blender_2.83/Cube_101.obj'... (24264 vertices, 8088 unique vertices, 1 materials) 0.0929817s
- loading '../../../Scenes/Blender_2.83/_Grill_001.obj'... (5808 vertices, 7474 unique vertices, 1 materials) 0.0488671s
- loading '../../../Scenes/Blender_2.83/Rusty_Mounted_Box_1_002.obj'... (2184 vertices, 2230 unique vertices, 6 materials) 0.0841281s
- loading '../../../Scenes/Blender_2.83/Cylinder_039.obj'... (1482 vertices, 554 unique vertices, 1 materials) 0.0412005s
- loading '../../../Scenes/Blender_2.83/Cube_105.obj'... (12012 vertices, 15278 unique vertices, 2 materials) 0.0628463s
- loading '../../../Scenes/Blender_2.83/Cylinder_005.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.0131329s
- loading '../../../Scenes/Blender_2.83/Cylinder_001.obj'... (852 vertices, 900 unique vertices, 1 materials) 0.0138363s
- loading '../../../Scenes/Blender_2.83/Backpacks.obj'... (22251 vertices, 44033 unique vertices, 1 materials) 0.111825s
- loading '../../../Scenes/Blender_2.83/Cube_103.obj'... (11994 vertices, 14468 unique vertices, 2 materials) 0.0706899s
- loading '../../../Scenes/Blender_2.83/Cube_032.obj'... (318 vertices, 306 unique vertices, 1 materials) 0.0445662s
- loading '../../../Scenes/Blender_2.83/Cube_025.obj'... (2088 vertices, 1312 unique vertices, 2 materials) 0.0349792s
- loading '../../../Scenes/Blender_2.83/Mounted_Box_2_001.obj'... (4167 vertices, 1401 unique vertices, 1 materials) 0.0132437s
- loading '../../../Scenes/Blender_2.83/Cube_057.obj'... (468 vertices, 378 unique vertices, 3 materials) 0.0189293s
- loading '../../../Scenes/Blender_2.83/Power_Meter_1_005.obj'... (6144 vertices, 2370 unique vertices, 7 materials) 0.0362607s
- loading '../../../Scenes/Blender_2.83/Cylinder_013.obj'... (852 vertices, 908 unique vertices, 1 materials) 0.0124161s
- loading '../../../Scenes/Blender_2.83/Cube_058.obj'... (24 vertices, 24 unique vertices, 1 materials) 0.0628436s
- loading '../../../Scenes/Blender_2.83/Cube_046.obj'... (216 vertices, 220 unique vertices, 1 materials) 0.0429421s
- loading '../../../Scenes/Blender_2.83/boatback_001.obj'... (546 vertices, 718 unique vertices, 1 materials) 0.00360646s
- loading '../../../Scenes/Blender_2.83/Cylinder_003.obj'... (804 vertices, 844 unique vertices, 1 materials) 0.00916724s
- loading '../../../Scenes/Blender_2.83/boatback_002.obj'... (735 vertices, 469 unique vertices, 1 materials) 0.181117s
- loading '../../../Scenes/Blender_2.83/boatback_012.obj'... (102 vertices, 90 unique vertices, 1 materials) 0.0118184s
- loading '../../../Scenes/Blender_2.83/Cube_115.obj'... (4428 vertices, 2494 unique vertices, 3 materials) 0.0402478s
- loading '../../../Scenes/Blender_2.83/Cylinder_066.obj'... (8856 vertices, 3126 unique vertices, 5 materials) 0.0193824s
- loading '../../../Scenes/Blender_2.83/Cylinder_031.obj'... (288 vertices, 360 unique vertices, 1 materials) 0.00906095s
- loading '../../../Scenes/Blender_2.83/Text_003.obj'... (11808 vertices, 3983 unique vertices, 1 materials) 0.027443s
- loading '../../../Scenes/Blender_2.83/Cylinder_026.obj'... (72 vertices, 64 unique vertices, 3 materials) 0.00820775s
- loading '../../../Scenes/Blender_2.83/Cylinder_019.obj'... (804 vertices, 850 unique vertices, 1 materials) 0.00310744s
- loading '../../../Scenes/Blender_2.83/20191230_134947_008.obj'... (5922 vertices, 5756 unique vertices, 1 materials) 0.0507004s
- loading '../../../Scenes/Blender_2.83/Cube_010.obj'... (312 vertices, 312 unique vertices, 1 materials) 0.0517187s
- loading '../../../Scenes/Blender_2.83/Cube_133.obj'... (156 vertices, 68 unique vertices, 1 materials) 0.00330962s
- loading '../../../Scenes/Blender_2.83/The_Water.obj'... (12 vertices, 4 unique vertices, 1 materials) 0.0300739s
- loading '../../../Scenes/Blender_2.83/20191230_134947_003.obj'... (21504 vertices, 21214 unique vertices, 1 materials) 0.0921357s
done loading
- loading '../assets/textures/white.png'... (1 x 1 x 3) 0.0171804s
RTV: Creating device buffer Vertices of size 70442964
LVP: vkBuffer size 70442964 created at 0x563d0d461ec8
RTV: New vkBuffer created at 0x563d0d461ec8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d1104ea90; llvmpipe_resource 0x563d1104ea90; pipe_memory_allocation 0x153f8e0c3000;
LVP: Binding lvp_buffer 0x563d0cba5e40: buffer->bo: 0x563d1104ea90; buffer->pmem: 0x153f8e0c3000; memory-offset: 0;


        *** GPGPU-Sim Simulator Version 4.0.0 - Vulkan-Sim version 2.0.0  [build gpgpu-sim_git-commit-dc742faa6e5fcfaf415fe51eab71dcf9345388fd_modified_1.0] ***


GPGPU-Sim PTX: simulation mode 0 (can change with PTX_SIM_MODE_FUNC environment variable:
               1=functional simulation only, 0=detailed performance simulator)
GPGPU-Sim PTX: overriding embedded ptx with ptx file (PTX_SIM_USE_PTX_FILE is set)
GPGPU-Sim: Configuration options:

-save_embedded_ptx                      0 # saves ptx files embedded in binary as <n>.ptx
-keep                                   0 # keep intermediate files created by GPGPU-Sim when interfacing with external programs
-gpgpu_ptx_save_converted_ptxplus                    0 # Saved converted ptxplus to a file
-gpgpu_occupancy_sm_number                   75 # The SM number to pass to ptxas when getting register usage for computing GPU occupancy. This parameter is required in the config.
-ptx_opcode_latency_int      4,13,4,5,145,32 # Opcode latencies for integers <ADD,MAX,MUL,MAD,DIV,SHFL>Default 1,1,19,25,145,32
-ptx_opcode_latency_fp          4,13,4,5,39 # Opcode latencies for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,30
-ptx_opcode_latency_dp         8,19,8,8,330 # Opcode latencies for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,335
-ptx_opcode_latency_sfu                  100 # Opcode latencies for SFU instructionsDefault 8
-ptx_opcode_latency_tesnor                   64 # Opcode latencies for Tensor instructionsDefault 64
-ptx_opcode_initiation_int          2,2,2,2,8,4 # Opcode initiation intervals for integers <ADD,MAX,MUL,MAD,DIV,SHFL>Default 1,1,4,4,32,4
-ptx_opcode_initiation_fp            2,2,2,2,4 # Opcode initiation intervals for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,5
-ptx_opcode_initiation_dp          4,4,4,4,130 # Opcode initiation intervals for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,130
-ptx_opcode_initiation_sfu                    8 # Opcode initiation intervals for sfu instructionsDefault 8
-ptx_opcode_initiation_tensor                   64 # Opcode initiation intervals for tensor instructionsDefault 64
-cdp_latency         7200,8000,100,12000,1600 # CDP API latency <cudaStreamCreateWithFlags, cudaGetParameterBufferV2_init_perWarp, cudaGetParameterBufferV2_perKernel, cudaLaunchDeviceV2_init_perWarp, cudaLaunchDevicV2_perKernel>Default 7200,8000,100,12000,1600
-network_mode                           2 # Interconnection network mode
-inter_config_file                   mesh # Interconnection network config file
-icnt_in_buffer_limit                  512 # in_buffer_limit
-icnt_out_buffer_limit                  512 # out_buffer_limit
-icnt_subnets                           2 # subnets
-icnt_arbiter_algo                      1 # arbiter_algo
-icnt_verbose                           0 # inct_verbose
-icnt_grant_cycles                      1 # grant_cycles
-gpgpu_ptx_use_cuobjdump                    1 # Use cuobjdump to extract ptx and sass from binaries
-gpgpu_experimental_lib_support                    0 # Try to extract code from cuda libraries [Broken because of unknown cudaGetExportTable]
-checkpoint_option                      0 #  checkpointing flag (0 = no checkpoint)
-checkpoint_kernel                      1 #  checkpointing during execution of which kernel (1- 1st kernel)
-checkpoint_CTA                         0 #  checkpointing after # of CTA (< less than total CTA)
-resume_option                          0 #  resume flag (0 = no resume)
-resume_kernel                          0 #  Resume from which kernel (1= 1st kernel)
-resume_CTA                             0 #  resume from which CTA 
-checkpoint_CTA_t                       0 #  resume from which CTA 
-checkpoint_insn_Y                      0 #  resume from which CTA 
-gpgpu_ptx_convert_to_ptxplus                    0 # Convert SASS (native ISA) to ptxplus and run ptxplus
-gpgpu_ptx_force_max_capability                   75 # Force maximum compute capability
-gpgpu_ptx_inst_debug_to_file                    0 # Dump executed instructions' debug information to file
-gpgpu_ptx_inst_debug_file       inst_debug.txt # Executed instructions' debug output file
-gpgpu_ptx_inst_debug_thread_uid                    1 # Thread UID for executed instructions' debug output
-gpgpu_simd_model                       1 # 1 = post-dominator
-gpgpu_simd_rec_time_out                   -1 # -1 = no reconvergence time out
-gpgpu_simd_rec_size                    6 # number of physical entries in the reconvergence table
-gpgpu_simd_st_size                     6 # number of physical entries in the splits table
-gpgpu_simd_rec_replacement                    0 # reconvergence table replacement policy
-gpgpu_simd_st_replacement                    0 # splits table replacement policy
-gpgpu_shader_core_pipeline              1024:32 # shader core pipeline config, i.e., {<nthread>:<warpsize>}
-gpgpu_tex_cache:l1  N:4:128:256,L:R:m:N:L,T:512:8,128:2 # per-shader L1 texture cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>:<rf>}
-gpgpu_const_cache:l1 N:128:64:8,L:R:f:N:L,S:2:64,4 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_rt_cache:l1   S:32:128:16,L:R:m:L:P,A:256:256,32:0,32 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_rt_use_l1                        1 # use existing L1 cache instead of dedicated L0 cache 
-gpgpu_rt_perfect_mem                    0 # assume 0 latency BVH accesses 
-gpgpu_rt_coherence_engine                    0 # enable coherency engine (ray sorting) 
-gpgpu_rt_coherence_engine_config 100,10,16,g,0,3,2,0.25 # max cycles, hash 
-gpgpu_rt_disable_rt_cache                    0 # bypass RT cache and connect RT unit directly to interconnect 
-gpgpu_rt_max_warps                     4 # max number of warps concurrently in one rt core 
-gpgpu_rt_max_mshr                     64 # max number of MSHR entries in RT unit 
-gpgpu_rt_coalesce_warps                    0 # try to coalesce memory requests between warps 
-gpgpu_rt_intersection_latency        4,8,8,4,8,8,8 # latency of pipelined intersection tests (7 types)
-gpgpu_rt_intersection_table_type                    0 # type of intersection table
-gpgpu_cache:il1     N:64:128:16,L:R:f:N:L,S:2:48,4 # shader L1 instruction cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:dl1     S:1:128:256,L:L:s:N:L,A:256:8,16:0,32 # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_l1_banks                         4 # The number of L1 cache banks
-gpgpu_l1_banks_byte_interleaving                   32 # l1 banks byte interleaving granularity
-gpgpu_l1_banks_hashing_function                    0 # l1 banks hashing function
-gpgpu_l1_latency                      20 # L1 Hit Latency
-gpgpu_smem_latency                    20 # smem Latency
-gpgpu_cache:dl1PrefL1                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_cache:dl1PrefShared                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_gmem_skip_L1D                    0 # global memory access skip L1D cache (implements -Xptxas -dlcm=cg, default=no skip)
-gpgpu_perfect_mem                      0 # enable perfect memory mode (no cache miss)
-n_regfile_gating_group                    4 # group of lanes that should be read/written together)
-gpgpu_clock_gated_reg_file                    0 # enable clock gated reg file for power calculations
-gpgpu_clock_gated_lanes                    0 # enable clock gated lanes for power calculations
-gpgpu_shader_registers                32768 # Number of registers per shader core. Limits number of concurrent CTAs. (default 8192)
-gpgpu_registers_per_block                32768 # Maximum number of registers per CTA. (default 8192)
-gpgpu_ignore_resources_limitation                    0 # gpgpu_ignore_resources_limitation (default 0)
-gpgpu_shader_cta                      16 # Maximum number of concurrent CTAs in shader (default 8)
-gpgpu_num_cta_barriers                   16 # Maximum number of named barriers per CTA (default 16)
-gpgpu_n_clusters                       8 # number of processing clusters
-gpgpu_n_cores_per_cluster                    1 # number of simd cores per cluster
-gpgpu_n_cluster_ejection_buffer_size                   32 # number of packets in ejection buffer
-gpgpu_n_ldst_response_buffer_size                    2 # number of response packets in ld/st unit ejection buffer
-gpgpu_shmem_per_block                65536 # Size of shared memory per thread block or CTA (default 48kB)
-gpgpu_shmem_size                   65536 # Size of shared memory per shader core (default 16kB)
-gpgpu_adaptive_cache_config                    0 # adaptive_cache_config
-gpgpu_shmem_sizeDefault                65536 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefL1                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefShared                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_num_banks                   32 # Number of banks in the shared memory in each shader core (default 16)
-gpgpu_shmem_limited_broadcast                    0 # Limit shared memory to do one broadcast per cycle (default on)
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_mem_unit_ports                    1 # The number of memory transactions allowed per core cycle
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_warpdistro_shader                   -1 # Specify which shader core to collect the warp size distribution from
-gpgpu_warp_issue_shader                    0 # Specify which shader core to collect the warp issue distribution from
-gpgpu_local_mem_map                    1 # Mapping from local memory space address to simulated GPU physical address space (default = enabled)
-gpgpu_num_reg_banks                   16 # Number of register banks (default = 8)
-gpgpu_reg_bank_use_warp_id                    0 # Use warp ID in mapping registers to banks (default = off)
-gpgpu_sub_core_model                    1 # Sub Core Volta/Pascal model (default = off)
-gpgpu_enable_specialized_operand_collector                    0 # enable_specialized_operand_collector
-gpgpu_operand_collector_num_units_sp                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_dp                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_units_sfu                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_int                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_units_tensor_core                    4 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_mem                    2 # number of collector units (default = 2)
-gpgpu_operand_collector_num_units_gen                    8 # number of collector units (default = 0)
-gpgpu_operand_collector_num_in_ports_sp                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_dp                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_in_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_int                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_in_ports_tensor_core                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_gen                    8 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sp                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_dp                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_int                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_tensor_core                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_gen                    8 # number of collector unit in ports (default = 0)
-gpgpu_coalesce_arch                   75 # Coalescing arch (GT200 = 13, Fermi = 20)
-gpgpu_num_sched_per_core                    4 # Number of warp schedulers per core
-gpgpu_max_insn_issue_per_warp                    1 # Max number of instructions that can be issued per warp in one cycle by scheduler (either 1 or 2)
-gpgpu_dual_issue_diff_exec_units                    1 # should dual issue use two different execution unit resources (Default = 1)
-gpgpu_simt_core_sim_order                    1 # Select the simulation order of cores in a cluster (0=Fix, 1=Round-Robin)
-gpgpu_pipeline_widths 4,0,4,4,4,4,0,4,4,4,8,4,4,4,4 # Pipeline widths ID_OC_SP,ID_OC_DP,ID_OC_INT,ID_OC_SFU,ID_OC_MEM,OC_EX_SP,OC_EX_DP,OC_EX_INT,OC_EX_SFU,OC_EX_MEM,EX_WB,ID_OC_TENSOR_CORE,OC_EX_TENSOR_CORE,ID_OC_RT,OC_EX_RT
-gpgpu_tensor_core_avail                    1 # Tensor Core Available (default=0)
-gpgpu_num_sp_units                     4 # Number of SP units (default=1)
-gpgpu_num_dp_units                     0 # Number of DP units (default=0)
-gpgpu_num_int_units                    4 # Number of INT units (default=0)
-gpgpu_num_sfu_units                    4 # Number of SF units (default=1)
-gpgpu_num_tensor_core_units                    4 # Number of tensor_core units (default=1)
-gpgpu_num_rt_core_units                    1 # Number of rt core units (default=1)
-gpgpu_num_mem_units                    1 # Number if ldst units (default=1) WARNING: not hooked up to anything
-gpgpu_scheduler                      gto # Scheduler configuration: < lrr | gto | two_level_active > If two_level_active:<num_active_warps>:<inner_prioritization>:<outer_prioritization>For complete list of prioritization values see shader.h enum scheduler_prioritization_typeDefault: gto
-gpgpu_concurrent_kernel_sm                    0 # Support concurrent kernels on a SM (default = disabled)
-gpgpu_perfect_inst_const_cache                    1 # perfect inst and const cache mode, so all inst and const hits in the cache(default = disabled)
-gpgpu_inst_fetch_throughput                    4 # the number of fetched intruction per warp each cycle
-gpgpu_reg_file_port_throughput                    2 # the number ports of the register file
-specialized_unit_1         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_2         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_3         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_4         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_5         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_6         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_7         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-specialized_unit_8         0,4,4,4,4,BRA # specialized unit config {<enabled>,<num_units>:<latency>:<initiation>,<ID_OC_SPEC>:<OC_EX_SPEC>,<NAME>}
-gpgpu_perf_sim_memcpy                    1 # Fill the L2 cache on memcpy
-gpgpu_simple_dram_model                    0 # simple_dram_model with fixed latency and BW
-gpgpu_dram_scheduler                    1 # 0 = fifo, 1 = FR-FCFS (defaul)
-gpgpu_dram_partition_queues          64:64:64:64 # i2$:$2d:d2$:$2i
-l2_ideal                               0 # Use a ideal L2 cache that always hit
-gpgpu_cache:dl2     S:64:128:16,L:B:m:L:P,A:192:4,32:0,32 # unified banked L2 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>}
-gpgpu_cache:dl2_texture_only                    0 # L2 cache used for texture only
-gpgpu_n_mem                            4 # number of memory modules (e.g. memory controllers) in gpu
-gpgpu_n_sub_partition_per_mchannel                    1 # number of memory subpartition in each memory module
-gpgpu_n_mem_per_ctrlr                    1 # number of memory chips per memory controller
-gpgpu_memlatency_stat                   14 # track and display latency statistics 0x2 enables MC, 0x4 enables queue logs
-gpgpu_frfcfs_dram_sched_queue_size                   64 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_return_queue_size                  192 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_buswidth                    2 # default = 4 bytes (8 bytes per cycle at DDR)
-gpgpu_dram_burst_length                    8 # Burst length of each DRAM request (default = 4 data bus cycle)
-dram_data_command_freq_ratio                    2 # Frequency ratio between DRAM data bus and command bus (default = 2 times, i.e. DDR)
-gpgpu_dram_timing_opt nbk=16:CCD=4:RRD=10:RCD=20:RAS=50:RP=20:RC=62: CL=20:WL=8:CDLR=9:WR=20:nbkgrp=4:CCDL=4:RTPL=4 # DRAM timing parameters = {nbk:tCCD:tRRD:tRCD:tRAS:tRP:tRC:CL:WL:tCDLR:tWR:nbkgrp:tCCDL:tRTPL}
-gpgpu_l2_rop_latency                  160 # ROP queue latency (default 85)
-dram_latency                         100 # DRAM latency (default 30)
-dram_dual_bus_interface                    0 # dual_bus_interface (default = 0) 
-dram_bnk_indexing_policy                    0 # dram_bnk_indexing_policy (0 = normal indexing, 1 = Xoring with the higher bits) (Default = 0)
-dram_bnkgrp_indexing_policy                    1 # dram_bnkgrp_indexing_policy (0 = take higher bits, 1 = take lower bits) (Default = 0)
-dram_seperate_write_queue_enable                    0 # Seperate_Write_Queue_Enable
-dram_write_queue_size             32:28:16 # Write_Queue_Size
-dram_elimnate_rw_turnaround                    0 # elimnate_rw_turnaround i.e set tWTR and tRTW = 0
-icnt_flit_size                        40 # icnt_flit_size
-gpgpu_mem_addr_mapping dramid@8;00000000.00000000.00000000.00000000.0000RRRR.RRRRRRRR.RBBBCCCC.BCCSSSSS # mapping memory address to dram model {dramid@<start bit>;<memory address map>}
-gpgpu_mem_addr_test                    0 # run sweep test to check address mapping for aliased address
-gpgpu_mem_address_mask                    1 # 0 = old addressing mask, 1 = new addressing mask, 2 = new add. mask + flipped bank sel and chip sel bits
-gpgpu_memory_partition_indexing                    0 # 0 = no indexing, 1 = bitwise xoring, 2 = IPoly, 3 = custom indexing
-gpuwattch_xml_file         gpuwattch.xml # GPUWattch XML file
-power_simulation_enabled                    0 # Turn on power simulator (1=On, 0=Off)
-power_per_cycle_dump                    0 # Dump detailed power output each cycle
-power_trace_enabled                    1 # produce a file for the power trace (1=On, 0=Off)
-power_trace_zlevel                     6 # Compression level of the power trace output log (0=no comp, 9=highest)
-steady_power_levels_enabled                    1 # produce a file for the steady power levels (1=On, 0=Off)
-steady_state_definition                  8:4 # allowed deviation:number of samples
-gpgpu_intermittent_stats                    0 # print intermittent stats
-gpgpu_intermittent_stats_freq                10000 # intermittent stats frequency
-gpgpu_max_cycle                        0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_insn                         0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_cta                          0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_completed_cta                    0 # terminates gpu simulation early (0 = no limit)
-gpgpu_runtime_stat                   500 # display runtime statistics such as dram utilization {<freq>:<flag>}
-liveness_message_freq                    1 # Minimum number of seconds between simulation liveness messages (0 = always print)
-gpgpu_compute_capability_major                    7 # Major compute capability version number
-gpgpu_compute_capability_minor                    5 # Minor compute capability version number
-gpgpu_flush_l1_cache                    1 # Flush L1 cache at the end of each kernel call
-gpgpu_flush_l2_cache                    0 # Flush L2 cache at the end of each kernel call
-gpgpu_deadlock_detect                    1 # Stop the simulation at deadlock (1=on (default), 0=off)
-gpgpu_ptx_instruction_classification                    1 # if enabled will classify ptx instruction types per kernel (Max 255 kernels now)
-gpgpu_ptx_sim_mode                     1 # Select between Performance (default) or Functional simulation (1)
-gpgpu_clock_domains 1365.0:1365.0:1365.0:3500.0 # Clock Domain Frequencies in MhZ {<Core Clock>:<ICNT Clock>:<L2 Clock>:<DRAM Clock>}
-gpgpu_max_concurrent_kernel                    8 # maximum kernels that can run concurrently on GPU
-gpgpu_cflog_interval                    0 # Interval between each snapshot in control flow logger
-visualizer_enabled                     0 # Turn on visualizer output (1=On, 0=Off)
-visualizer_outputfile       regular_ship16 # Specifies the output log file for visualizer
-visualizer_zlevel                      6 # Compression level of the visualizer output log (0=no comp, 9=highest)
-gpgpu_stack_size_limit                 1024 # GPU thread stack size
-gpgpu_heap_size_limit              8388608 # GPU malloc heap size 
-gpgpu_runtime_sync_depth_limit                    2 # GPU device runtime synchronize depth
-gpgpu_runtime_pending_launch_count_limit                 2048 # GPU device runtime pending launch count
-trace_enabled                          0 # Turn on traces
-trace_components                    none # comma seperated list of traces to enable. Complete list found in trace_streams.tup. Default none
-trace_sampling_core                    0 # The core which is printed using CORE_DPRINTF. Default 0
-trace_sampling_memory_partition                   -1 # The memory partition which is printed using MEMPART_DPRINTF. Default -1 (i.e. all)
-enable_ptx_file_line_stats                    1 # Turn on PTX source line statistic profiling. (1 = On)
-ptx_line_stats_filename gpgpu_inst_stats.txt # Output file for PTX source line statistics.
-gpgpu_kernel_launch_latency                 5000 # Kernel launch latency in cycles. Default: 0
-gpgpu_cdp_enabled                      0 # Turn on CDP
-gpgpu_TB_launch_latency                    0 # thread block launch latency in cycles. Default: 0
-gpgpu_max_simulated_rt_kernels                    1 # Max simulated kernels, used to limit how many frames we render. Default: 0
Streaming cache with 4096 mshr
GPGPU-Sim: Ray Coherence Engine Settings:
	Enabled: No
	Max cycles: 100
	Max packets: 16
	Sorting hash: grid-spherical
	Bits: 3-2
DRAM Timing Options:
nbk                                    16 # number of banks
CCD                                     4 # column to column delay
RRD                                    10 # minimal delay between activation of rows in different banks
RCD                                    20 # row to column delay
RAS                                    50 # time needed to activate row
RP                                     20 # time needed to precharge (deactivate) row
RC                                     62 # row cycle time
CDLR                                    9 # switching from write to read (changes tWTR)
WR                                     20 # last data-in to row precharge
CL                                     20 # CAS latency
WL                                      8 # Write latency
nbkgrp                                  4 # number of bank groups
CCDL                                    4 # column to column delay between accesses to different bank groups
RTPL                                    4 # read to precharge delay between accesses to different bank groups
Total number of memory sub partition = 4
addr_dec_mask[CHIP]  = 0000000000000300 	high:10 low:8
addr_dec_mask[BK]    = 000000000001c080 	high:17 low:7
addr_dec_mask[ROW]   = 000000003ffe0000 	high:30 low:17
addr_dec_mask[COL]   = 0000000000003c7f 	high:14 low:0
addr_dec_mask[BURST] = 000000000000001f 	high:5 low:0
sub_partition_id_mask = 0000000000000000
GPGPU-Sim uArch: clock freqs: 1365000000.000000:1365000000.000000:1365000000.000000:3500000000.000000
GPGPU-Sim uArch: clock periods: 0.00000000073260073260:0.00000000073260073260:0.00000000073260073260:0.00000000028571428571
*** Initializing Memory Statistics ***
GPGPU-Sim uArch: performance model initialization complete.
gpgpusim: binding gpgpusim buffer 0xc0000000 (size 70442964) to vulkan buffer 0x153f8e0c3000
LVP: gpgpusim buffer size 70442964 allocated at 0xc0000000
RTV: Bind buffer memory for vkBuffer 0x563d0d461ec8
LVP: vkBuffer size 70442964 created at 0x563d147c3fa8
RTV: New vkBuffer created at 0x563d147c3fa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d258a6b40; llvmpipe_resource 0x563d258a6b40; pipe_memory_allocation 0x153f89d93000;
LVP: Binding lvp_buffer 0x563d258a6ac0: buffer->bo: 0x563d258a6b40; buffer->pmem: 0x153f89d93000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc432e000 (size 70442964) to vulkan buffer 0x153f89d93000
LVP: gpgpusim buffer size 70442964 allocated at 0xc432e000
RTV: Bind buffer memory for vkBuffer 0x563d147c3fa8
LVP: Finding mapped memory for mem 0x563d258a6d50: mem->pmem 0x153f89d93000 
LVP: Identified at 0x153f89d93000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Indices of size 20703720
LVP: vkBuffer size 20703720 created at 0x563d147c3fa8
RTV: New vkBuffer created at 0x563d147c3fa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d36560760; llvmpipe_resource 0x563d36560760; pipe_memory_allocation 0x563d36561000;
LVP: Binding lvp_buffer 0x563d258a6d50: buffer->bo: 0x563d36560760; buffer->pmem: 0x563d36561000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc865c000 (size 20703720) to vulkan buffer 0x563d36561000
LVP: gpgpusim buffer size 20703720 allocated at 0xc865c000
RTV: Bind buffer memory for vkBuffer 0x563d147c3fa8
LVP: vkBuffer size 20703720 created at 0x563d3655ed78
RTV: New vkBuffer created at 0x563d3655ed78
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c819ab0; llvmpipe_resource 0x563d3c819ab0; pipe_memory_allocation 0x563d3c81a000;
LVP: Binding lvp_buffer 0x563d36560630: buffer->bo: 0x563d3c819ab0; buffer->pmem: 0x563d3c81a000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xc9a1aa00 (size 20703720) to vulkan buffer 0x563d3c81a000
LVP: gpgpusim buffer size 20703720 allocated at 0xc9a1aa00
RTV: Bind buffer memory for vkBuffer 0x563d3655ed78
LVP: Finding mapped memory for mem 0x563d3c819cc0: mem->pmem 0x563d3c81a000 
LVP: Identified at 0x563d3c81a000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Materials of size 18432
LVP: vkBuffer size 18432 created at 0x563d3655ed78
RTV: New vkBuffer created at 0x563d3655ed78
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c81a000; llvmpipe_resource 0x563d3c81a000; pipe_memory_allocation 0x563d3c81b000;
LVP: Binding lvp_buffer 0x563d3c819cc0: buffer->bo: 0x563d3c81a000; buffer->pmem: 0x563d3c81b000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadd9400 (size 18432) to vulkan buffer 0x563d3c81b000
LVP: gpgpusim buffer size 18432 allocated at 0xcadd9400
RTV: Bind buffer memory for vkBuffer 0x563d3655ed78
LVP: vkBuffer size 18432 created at 0x563d42ad31d8
RTV: New vkBuffer created at 0x563d42ad31d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c830c10; llvmpipe_resource 0x563d3c830c10; pipe_memory_allocation 0x563d3c831000;
LVP: Binding lvp_buffer 0x563d42ad3300: buffer->bo: 0x563d3c830c10; buffer->pmem: 0x563d3c831000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadddc00 (size 18432) to vulkan buffer 0x563d3c831000
LVP: gpgpusim buffer size 18432 allocated at 0xcadddc00
RTV: Bind buffer memory for vkBuffer 0x563d42ad31d8
LVP: Finding mapped memory for mem 0x563d3c830e20: mem->pmem 0x563d3c831000 
LVP: Identified at 0x563d3c831000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Offsets of size 2560
LVP: vkBuffer size 2560 created at 0x563d42ad31d8
RTV: New vkBuffer created at 0x563d42ad31d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c831000; llvmpipe_resource 0x563d3c831000; pipe_memory_allocation 0x563d3c832000;
LVP: Binding lvp_buffer 0x563d3c830e20: buffer->bo: 0x563d3c831000; buffer->pmem: 0x563d3c832000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade2400 (size 2560) to vulkan buffer 0x563d3c832000
LVP: gpgpusim buffer size 2560 allocated at 0xcade2400
RTV: Bind buffer memory for vkBuffer 0x563d42ad31d8
LVP: vkBuffer size 2560 created at 0x563d3c8476d8
RTV: New vkBuffer created at 0x563d3c8476d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c834610; llvmpipe_resource 0x563d3c834610; pipe_memory_allocation 0x563d3c848000;
LVP: Binding lvp_buffer 0x563d3c847800: buffer->bo: 0x563d3c834610; buffer->pmem: 0x563d3c848000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade2e00 (size 2560) to vulkan buffer 0x563d3c848000
LVP: gpgpusim buffer size 2560 allocated at 0xcade2e00
RTV: Bind buffer memory for vkBuffer 0x563d3c8476d8
LVP: Finding mapped memory for mem 0x563d3c834820: mem->pmem 0x563d3c848000 
LVP: Identified at 0x563d3c848000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer AABBs of size 7680
LVP: vkBuffer size 7680 created at 0x563d3c8476d8
RTV: New vkBuffer created at 0x563d3c8476d8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c848000; llvmpipe_resource 0x563d3c848000; pipe_memory_allocation 0x563d3c84a000;
LVP: Binding lvp_buffer 0x563d3c834820: buffer->bo: 0x563d3c848000; buffer->pmem: 0x563d3c84a000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade3800 (size 7680) to vulkan buffer 0x563d3c84a000
LVP: gpgpusim buffer size 7680 allocated at 0xcade3800
RTV: Bind buffer memory for vkBuffer 0x563d3c8476d8
LVP: vkBuffer size 7680 created at 0x563d3c849c38
RTV: New vkBuffer created at 0x563d3c849c38
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c852d90; llvmpipe_resource 0x563d3c852d90; pipe_memory_allocation 0x563d3c854000;
LVP: Binding lvp_buffer 0x563d3c849d60: buffer->bo: 0x563d3c852d90; buffer->pmem: 0x563d3c854000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade5600 (size 7680) to vulkan buffer 0x563d3c854000
LVP: gpgpusim buffer size 7680 allocated at 0xcade5600
RTV: Bind buffer memory for vkBuffer 0x563d3c849c38
LVP: Finding mapped memory for mem 0x563d3c852fa0: mem->pmem 0x563d3c854000 
LVP: Identified at 0x563d3c854000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer Procedurals of size 5120
LVP: vkBuffer size 5120 created at 0x563d3c849c38
RTV: New vkBuffer created at 0x563d3c849c38
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c854000; llvmpipe_resource 0x563d3c854000; pipe_memory_allocation 0x563d3c85d000;
LVP: Binding lvp_buffer 0x563d3c852fa0: buffer->bo: 0x563d3c854000; buffer->pmem: 0x563d3c85d000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade7400 (size 5120) to vulkan buffer 0x563d3c85d000
LVP: gpgpusim buffer size 5120 allocated at 0xcade7400
RTV: Bind buffer memory for vkBuffer 0x563d3c849c38
LVP: vkBuffer size 5120 created at 0x563d3c85c6a8
RTV: New vkBuffer created at 0x563d3c85c6a8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c861090; llvmpipe_resource 0x563d3c861090; pipe_memory_allocation 0x563d3c862000;
LVP: Binding lvp_buffer 0x563d3c85c7d0: buffer->bo: 0x563d3c861090; buffer->pmem: 0x563d3c862000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade8800 (size 5120) to vulkan buffer 0x563d3c862000
LVP: gpgpusim buffer size 5120 allocated at 0xcade8800
RTV: Bind buffer memory for vkBuffer 0x563d3c85c6a8
LVP: Finding mapped memory for mem 0x563d3c8612a0: mem->pmem 0x563d3c862000 
LVP: Identified at 0x563d3c862000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer CubeAABBs of size 7680
LVP: vkBuffer size 7680 created at 0x563d3c85c6a8
RTV: New vkBuffer created at 0x563d3c85c6a8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c862000; llvmpipe_resource 0x563d3c862000; pipe_memory_allocation 0x563d3c868000;
LVP: Binding lvp_buffer 0x563d3c8612a0: buffer->bo: 0x563d3c862000; buffer->pmem: 0x563d3c868000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcade9c00 (size 7680) to vulkan buffer 0x563d3c868000
LVP: gpgpusim buffer size 7680 allocated at 0xcade9c00
RTV: Bind buffer memory for vkBuffer 0x563d3c85c6a8
LVP: vkBuffer size 7680 created at 0x563d3c867aa8
RTV: New vkBuffer created at 0x563d3c867aa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c870390; llvmpipe_resource 0x563d3c870390; pipe_memory_allocation 0x563d3c871000;
LVP: Binding lvp_buffer 0x563d3c867bd0: buffer->bo: 0x563d3c870390; buffer->pmem: 0x563d3c871000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadeba00 (size 7680) to vulkan buffer 0x563d3c871000
LVP: gpgpusim buffer size 7680 allocated at 0xcadeba00
RTV: Bind buffer memory for vkBuffer 0x563d3c867aa8
LVP: Finding mapped memory for mem 0x563d3c8705a0: mem->pmem 0x563d3c871000 
LVP: Identified at 0x563d3c871000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer ProceduralCubes of size 5120
LVP: vkBuffer size 5120 created at 0x563d3c867aa8
RTV: New vkBuffer created at 0x563d3c867aa8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c871000; llvmpipe_resource 0x563d3c871000; pipe_memory_allocation 0x563d3c87a000;
LVP: Binding lvp_buffer 0x563d3c8705a0: buffer->bo: 0x563d3c871000; buffer->pmem: 0x563d3c87a000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcaded800 (size 5120) to vulkan buffer 0x563d3c87a000
LVP: gpgpusim buffer size 5120 allocated at 0xcaded800
RTV: Bind buffer memory for vkBuffer 0x563d3c867aa8
LVP: vkBuffer size 5120 created at 0x563d3c879c58
RTV: New vkBuffer created at 0x563d3c879c58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c87e790; llvmpipe_resource 0x563d3c87e790; pipe_memory_allocation 0x563d3c87f000;
LVP: Binding lvp_buffer 0x563d3c879d80: buffer->bo: 0x563d3c87e790; buffer->pmem: 0x563d3c87f000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadeec00 (size 5120) to vulkan buffer 0x563d3c87f000
LVP: gpgpusim buffer size 5120 allocated at 0xcadeec00
RTV: Bind buffer memory for vkBuffer 0x563d3c879c58
LVP: Finding mapped memory for mem 0x563d3c87e9a0: mem->pmem 0x563d3c87f000 
LVP: Identified at 0x563d3c87f000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer CylinderAABBs of size 7680
LVP: vkBuffer size 7680 created at 0x563d3c879c58
RTV: New vkBuffer created at 0x563d3c879c58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c87e790; llvmpipe_resource 0x563d3c87e790; pipe_memory_allocation 0x563d3c885000;
LVP: Binding lvp_buffer 0x563d3c87e9a0: buffer->bo: 0x563d3c87e790; buffer->pmem: 0x563d3c885000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf0000 (size 7680) to vulkan buffer 0x563d3c885000
LVP: gpgpusim buffer size 7680 allocated at 0xcadf0000
RTV: Bind buffer memory for vkBuffer 0x563d3c879c58
LVP: vkBuffer size 7680 created at 0x563d3c884e58
RTV: New vkBuffer created at 0x563d3c884e58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c88d190; llvmpipe_resource 0x563d3c88d190; pipe_memory_allocation 0x563d3c88e000;
LVP: Binding lvp_buffer 0x563d3c884ef0: buffer->bo: 0x563d3c88d190; buffer->pmem: 0x563d3c88e000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf1e00 (size 7680) to vulkan buffer 0x563d3c88e000
LVP: gpgpusim buffer size 7680 allocated at 0xcadf1e00
RTV: Bind buffer memory for vkBuffer 0x563d3c884e58
LVP: Finding mapped memory for mem 0x563d3c88d3a0: mem->pmem 0x563d3c88e000 
LVP: Identified at 0x563d3c88e000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
RTV: Creating device buffer ProceduralCylinders of size 5120
LVP: vkBuffer size 5120 created at 0x563d3c884e58
RTV: New vkBuffer created at 0x563d3c884e58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c88d190; llvmpipe_resource 0x563d3c88d190; pipe_memory_allocation 0x563d3c897000;
LVP: Binding lvp_buffer 0x563d3c88d3a0: buffer->bo: 0x563d3c88d190; buffer->pmem: 0x563d3c897000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf3c00 (size 5120) to vulkan buffer 0x563d3c897000
LVP: gpgpusim buffer size 5120 allocated at 0xcadf3c00
RTV: Bind buffer memory for vkBuffer 0x563d3c884e58
LVP: vkBuffer size 5120 created at 0x563d3c896a58
RTV: New vkBuffer created at 0x563d3c896a58
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c89b110; llvmpipe_resource 0x563d3c89b110; pipe_memory_allocation 0x563d3c89c000;
LVP: Binding lvp_buffer 0x563d3c89b090: buffer->bo: 0x563d3c89b110; buffer->pmem: 0x563d3c89c000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf5000 (size 5120) to vulkan buffer 0x563d3c89c000
LVP: gpgpusim buffer size 5120 allocated at 0xcadf5000
RTV: Bind buffer memory for vkBuffer 0x563d3c896a58
LVP: Finding mapped memory for mem 0x563d3c89b320: mem->pmem 0x563d3c89c000 
LVP: Identified at 0x563d3c89c000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
LVP: vkBuffer size 4 created at 0x563d3c81afd8
RTV: New vkBuffer created at 0x563d3c81afd8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c89b110; llvmpipe_resource 0x563d3c89b110; pipe_memory_allocation 0x563d3c89c000;
LVP: Binding lvp_buffer 0x563d3c89b320: buffer->bo: 0x563d3c89b110; buffer->pmem: 0x563d3c89c000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf6400 (size 4) to vulkan buffer 0x563d3c89c000
LVP: gpgpusim buffer size 4 allocated at 0xcadf6400
RTV: Bind buffer memory for vkBuffer 0x563d3c81afd8
LVP: Finding mapped memory for mem 0x563d3c89b090: mem->pmem 0x563d3c89c000 
LVP: Identified at 0x563d3c89c000
LVP: Image created at 0x563d3c831fe8
RTV: Creating image at 0x563d3c89c020
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d3c89c0e0; llvmpipe_resource 0x563d3c89c0e0; pipe_memory_allocation 0x563d3c8a2000;
gpgpusim: binding gpgpusim buffer 0xcadf6500 (size 256) to vulkan buffer 0x563d3c8a2000
LVP: Image 0x563d3c89c020 bound to pmem 0x563d3c8a2000 using pointer 0xcadf6500
LVP: Creating image_view for image 0x563d3c89c020
RTV: Creating image view at 0x563d3c89c750
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER_TO_IMAGE2
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5ec0
RTV: Rounding size of BVH structure up to 0x5f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x90c0
RTV: Rounding size of BVH structure up to 0x9100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1214c0
RTV: Rounding size of BVH structure up to 0x121500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38cc0
RTV: Rounding size of BVH structure up to 0x38d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2eec0
RTV: Rounding size of BVH structure up to 0x2ef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c2c0
RTV: Rounding size of BVH structure up to 0x2c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2a3c0
RTV: Rounding size of BVH structure up to 0x2a400
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x68c0
RTV: Rounding size of BVH structure up to 0x6900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27dac0
RTV: Rounding size of BVH structure up to 0x27db00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9e0c0
RTV: Rounding size of BVH structure up to 0x9e100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x52c0
RTV: Rounding size of BVH structure up to 0x5300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17cc0
RTV: Rounding size of BVH structure up to 0x17d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf00c0
RTV: Rounding size of BVH structure up to 0xf0100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x33ec0
RTV: Rounding size of BVH structure up to 0x33f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5c0
RTV: Rounding size of BVH structure up to 0x600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf00c0
RTV: Rounding size of BVH structure up to 0xf0100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2d40
RTV: Rounding size of BVH structure up to 0x2e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x66ac0
RTV: Rounding size of BVH structure up to 0x66b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5bc0
RTV: Rounding size of BVH structure up to 0xf5c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19dcc0
RTV: Rounding size of BVH structure up to 0x19dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c0
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x31e40
RTV: Rounding size of BVH structure up to 0x31f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x740140
RTV: Rounding size of BVH structure up to 0x740200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1ec0
RTV: Rounding size of BVH structure up to 0x1f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x106c0
RTV: Rounding size of BVH structure up to 0x10700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1fc2c0
RTV: Rounding size of BVH structure up to 0x1fc300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xc12c0
RTV: Rounding size of BVH structure up to 0xc1300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10cd40
RTV: Rounding size of BVH structure up to 0x10ce00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x49dc0
RTV: Rounding size of BVH structure up to 0x49e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4bc0
RTV: Rounding size of BVH structure up to 0x4c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5bdc0
RTV: Rounding size of BVH structure up to 0x5be00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xea0c0
RTV: Rounding size of BVH structure up to 0xea100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5bdc0
RTV: Rounding size of BVH structure up to 0x5be00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fc40
RTV: Rounding size of BVH structure up to 0x19fd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x72c0
RTV: Rounding size of BVH structure up to 0x7300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x3c2c0
RTV: Rounding size of BVH structure up to 0x3c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xec0
RTV: Rounding size of BVH structure up to 0xf00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x716c0
RTV: Rounding size of BVH structure up to 0x71700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5cc0
RTV: Rounding size of BVH structure up to 0xf5d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c20c0
RTV: Rounding size of BVH structure up to 0x1c2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x34ac0
RTV: Rounding size of BVH structure up to 0x34b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x128c0
RTV: Rounding size of BVH structure up to 0x12900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x132c0
RTV: Rounding size of BVH structure up to 0x13300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19c9c0
RTV: Rounding size of BVH structure up to 0x19ca00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7562c0
RTV: Rounding size of BVH structure up to 0x756300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1350c0
RTV: Rounding size of BVH structure up to 0x135100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11ac0
RTV: Rounding size of BVH structure up to 0x11b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11ac0
RTV: Rounding size of BVH structure up to 0x11b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1eac0
RTV: Rounding size of BVH structure up to 0x1eb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x106c0
RTV: Rounding size of BVH structure up to 0x10700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c8c0
RTV: Rounding size of BVH structure up to 0x1c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x20c0
RTV: Rounding size of BVH structure up to 0x2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11ac0
RTV: Rounding size of BVH structure up to 0x11b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2dcc0
RTV: Rounding size of BVH structure up to 0x2dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x51df40
RTV: Rounding size of BVH structure up to 0x51e000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17cc0
RTV: Rounding size of BVH structure up to 0x17d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2158c0
RTV: Rounding size of BVH structure up to 0x215900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x51d8c0
RTV: Rounding size of BVH structure up to 0x51d900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10cd40
RTV: Rounding size of BVH structure up to 0x10ce00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xcec0
RTV: Rounding size of BVH structure up to 0xcf00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x118c0
RTV: Rounding size of BVH structure up to 0x11900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xefec0
RTV: Rounding size of BVH structure up to 0xeff00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1530c0
RTV: Rounding size of BVH structure up to 0x153100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1530c0
RTV: Rounding size of BVH structure up to 0x153100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17e80c0
RTV: Rounding size of BVH structure up to 0x17e8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb40c0
RTV: Rounding size of BVH structure up to 0xb4100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x751640
RTV: Rounding size of BVH structure up to 0x751700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x342c0
RTV: Rounding size of BVH structure up to 0x34300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x33fc0
RTV: Rounding size of BVH structure up to 0x34000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7562c0
RTV: Rounding size of BVH structure up to 0x756300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x677f40
RTV: Rounding size of BVH structure up to 0x678000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x834c0
RTV: Rounding size of BVH structure up to 0x83500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeac0
RTV: Rounding size of BVH structure up to 0xeb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x48cc0
RTV: Rounding size of BVH structure up to 0x48d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x8a2c0
RTV: Rounding size of BVH structure up to 0x8a300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x65c0
RTV: Rounding size of BVH structure up to 0x6600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x29b4c0
RTV: Rounding size of BVH structure up to 0x29b500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xa9bc0
RTV: Rounding size of BVH structure up to 0xa9c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fa40
RTV: Rounding size of BVH structure up to 0x19fb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c2c0
RTV: Rounding size of BVH structure up to 0x2c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xeeec0
RTV: Rounding size of BVH structure up to 0xeef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xcb340
RTV: Rounding size of BVH structure up to 0xcb400
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb40c0
RTV: Rounding size of BVH structure up to 0xb4100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x310cc0
RTV: Rounding size of BVH structure up to 0x310d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1350c0
RTV: Rounding size of BVH structure up to 0x135100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x520c0
RTV: Rounding size of BVH structure up to 0x52100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x48c0
RTV: Rounding size of BVH structure up to 0x4900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5c0
RTV: Rounding size of BVH structure up to 0x600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x32ec0
RTV: Rounding size of BVH structure up to 0x32f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x478c0
RTV: Rounding size of BVH structure up to 0x47900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x68c0
RTV: Rounding size of BVH structure up to 0x6900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5e9c0
RTV: Rounding size of BVH structure up to 0x5ea00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x31fc0
RTV: Rounding size of BVH structure up to 0x32000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x37c0
RTV: Rounding size of BVH structure up to 0x3800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x165c0
RTV: Rounding size of BVH structure up to 0x16600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5c0
RTV: Rounding size of BVH structure up to 0x600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x65c0
RTV: Rounding size of BVH structure up to 0x6600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x128c0
RTV: Rounding size of BVH structure up to 0x12900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x465c0
RTV: Rounding size of BVH structure up to 0x46600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x27ec0
RTV: Rounding size of BVH structure up to 0x27f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10ec0
RTV: Rounding size of BVH structure up to 0x10f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x66cc0
RTV: Rounding size of BVH structure up to 0x66d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xdcc0
RTV: Rounding size of BVH structure up to 0xdd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x52c0
RTV: Rounding size of BVH structure up to 0x5300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1178c0
RTV: Rounding size of BVH structure up to 0x117900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e0c0
RTV: Rounding size of BVH structure up to 0x7e100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x289c0
RTV: Rounding size of BVH structure up to 0x28a00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xe2ec0
RTV: Rounding size of BVH structure up to 0xe2f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5cc0
RTV: Rounding size of BVH structure up to 0xf5d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2eec0
RTV: Rounding size of BVH structure up to 0x2ef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x932c0
RTV: Rounding size of BVH structure up to 0x93300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xc6cc0
RTV: Rounding size of BVH structure up to 0xc6d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19c9c0
RTV: Rounding size of BVH structure up to 0x19ca00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2e5c0
RTV: Rounding size of BVH structure up to 0x2e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x6d0c0
RTV: Rounding size of BVH structure up to 0x6d100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9c8c0
RTV: Rounding size of BVH structure up to 0x9c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4bc0
RTV: Rounding size of BVH structure up to 0x4c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x68c0
RTV: Rounding size of BVH structure up to 0x6900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4c0
RTV: Rounding size of BVH structure up to 0x500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x717c0
RTV: Rounding size of BVH structure up to 0x71800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x179440
RTV: Rounding size of BVH structure up to 0x179500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9c8c0
RTV: Rounding size of BVH structure up to 0x9c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c0
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x256c0
RTV: Rounding size of BVH structure up to 0x25700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x111c0
RTV: Rounding size of BVH structure up to 0x11200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1f2c0
RTV: Rounding size of BVH structure up to 0x1f300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2eec0
RTV: Rounding size of BVH structure up to 0x2ef00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x10cd40
RTV: Rounding size of BVH structure up to 0x10ce00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c2c0
RTV: Rounding size of BVH structure up to 0x2c300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x171c0
RTV: Rounding size of BVH structure up to 0x17200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x20c0
RTV: Rounding size of BVH structure up to 0x2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19c9c0
RTV: Rounding size of BVH structure up to 0x19ca00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x36c0
RTV: Rounding size of BVH structure up to 0x3700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c8c0
RTV: Rounding size of BVH structure up to 0x1c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb2c0
RTV: Rounding size of BVH structure up to 0xb300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1bac0
RTV: Rounding size of BVH structure up to 0x1bb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xa9b6c0
RTV: Rounding size of BVH structure up to 0xa9b700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fa40
RTV: Rounding size of BVH structure up to 0x19fb00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x147c0
RTV: Rounding size of BVH structure up to 0x14800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x17dc0
RTV: Rounding size of BVH structure up to 0x17e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e0c0
RTV: Rounding size of BVH structure up to 0x7e100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf9c0
RTV: Rounding size of BVH structure up to 0xfa00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x33dc0
RTV: Rounding size of BVH structure up to 0x33e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x12cc0
RTV: Rounding size of BVH structure up to 0x12d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2d0a40
RTV: Rounding size of BVH structure up to 0x2d0b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9ac0
RTV: Rounding size of BVH structure up to 0x9b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xea0c0
RTV: Rounding size of BVH structure up to 0xea100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fc40
RTV: Rounding size of BVH structure up to 0x19fd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x120c0
RTV: Rounding size of BVH structure up to 0x12100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7e5c0
RTV: Rounding size of BVH structure up to 0x7e600
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4bc0
RTV: Rounding size of BVH structure up to 0x4c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x184c0
RTV: Rounding size of BVH structure up to 0x18500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x7401c0
RTV: Rounding size of BVH structure up to 0x740200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x417c0
RTV: Rounding size of BVH structure up to 0x41800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xcec0
RTV: Rounding size of BVH structure up to 0xcf00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x35440
RTV: Rounding size of BVH structure up to 0x35500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x870c0
RTV: Rounding size of BVH structure up to 0x87100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x677f40
RTV: Rounding size of BVH structure up to 0x678000
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x140
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xdcc0
RTV: Rounding size of BVH structure up to 0xdd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9c8c0
RTV: Rounding size of BVH structure up to 0x9c900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1b08c0
RTV: Rounding size of BVH structure up to 0x1b0900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2d40
RTV: Rounding size of BVH structure up to 0x2e00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf80c0
RTV: Rounding size of BVH structure up to 0xf8100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x70ac0
RTV: Rounding size of BVH structure up to 0x70b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2c6c0
RTV: Rounding size of BVH structure up to 0x2c700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1dcc0
RTV: Rounding size of BVH structure up to 0x1dd00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5ec0
RTV: Rounding size of BVH structure up to 0xf5f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1cac40
RTV: Rounding size of BVH structure up to 0x1cad00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf5bc0
RTV: Rounding size of BVH structure up to 0xf5c00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x52c0
RTV: Rounding size of BVH structure up to 0x5300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x2b0c0
RTV: Rounding size of BVH structure up to 0x2b100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x231c0
RTV: Rounding size of BVH structure up to 0x23200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9ac0
RTV: Rounding size of BVH structure up to 0x9b00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x320c0
RTV: Rounding size of BVH structure up to 0x32100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x102c0
RTV: Rounding size of BVH structure up to 0x10300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x6c0
RTV: Rounding size of BVH structure up to 0x700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x38c0
RTV: Rounding size of BVH structure up to 0x3900
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xb4c0
RTV: Rounding size of BVH structure up to 0xb500
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x9740
RTV: Rounding size of BVH structure up to 0x9800
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x20c0
RTV: Rounding size of BVH structure up to 0x2100
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5bdc0
RTV: Rounding size of BVH structure up to 0x5be00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5e9c0
RTV: Rounding size of BVH structure up to 0x5ea00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x5ec0
RTV: Rounding size of BVH structure up to 0x5f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x79cc0
RTV: Rounding size of BVH structure up to 0x79d00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x16c0
RTV: Rounding size of BVH structure up to 0x1700
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf2c0
RTV: Rounding size of BVH structure up to 0xf300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x73240
RTV: Rounding size of BVH structure up to 0x73300
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x4ec0
RTV: Rounding size of BVH structure up to 0x4f00
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x11c0
RTV: Rounding size of BVH structure up to 0x1200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x1c0
RTV: Rounding size of BVH structure up to 0x200
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0x19fd40
RTV: Rounding size of BVH structure up to 0x19fe00
RTV: Total accel structure size = 0x3900 + 0x1200 + 0x200 + 0x41800 + 0x12100 + 0x47900 + 0x5f00 + 0x7e600 + 0x9100 + 0x121500 + 0x38d00 + 0x2ef00 + 0x2c300 + 0x1dd00 + 0x2a400 + 0x12100 + 0x32100 + 0x6900 + 0x27db00 + 0x10300 + 0x9e100 + 0x10300 + 0x2c700 + 0xf300 + 0x5300 + 0x7e600 + 0x32100 + 0x17d00 + 0xf0100 + 0x1200 + 0x33f00 + 0x12100 + 0x600 + 0xf0100 + 0x73300 + 0x10300 + 0xeb00 + 0x2e00 + 0x19fe00 + 0x66b00 + 0xf5c00 + 0x19dd00 + 0x87100 + 0x32100 + 0x200 + 0x31f00 + 0x740200 + 0x32100 + 0x1dd00 + 0x7e600 + 0x41800 + 0xeb00 + 0x1f00 + 0x10700 + 0x3900 + 0x1fc300 + 0xf8100 + 0x10300 + 0xc1300 + 0x10ce00 + 0xb500 + 0x12100 + 0x49e00 + 0x4c00 + 0x10300 + 0x41800 + 0x12100 + 0x5be00 + 0xea100 + 0x5be00 + 0x19fd00 + 0x32100 + 0x7300 + 0x3c300 + 0xf00 + 0x73300 + 0x71700 + 0x32100 + 0xf5d00 + 0x1c2100 + 0x3900 + 0x3900 + 0x2c700 + 0xf8100 + 0x34b00 + 0x7e600 + 0x12900 + 0xeb00 + 0x13300 + 0x19ca00 + 0x32100 + 0x756300 + 0x135100 + 0x11b00 + 0x11b00 + 0x10300 + 0x32100 + 0x1eb00 + 0x10700 + 0x1c900 + 0x2100 + 0x200 + 0xeb00 + 0x11b00 + 0x2dd00 + 0x51e000 + 0x17d00 + 0x12100 + 0x215900 + 0x51d900 + 0x32100 + 0x1200 + 0x10ce00 + 0xf8100 + 0x73300 + 0x2c700 + 0x12100 + 0x87100 + 0xb500 + 0x19fe00 + 0xcf00 + 0x47900 + 0x3900 + 0xb500 + 0x11900 + 0xeff00 + 0x87100 + 0x1200 + 0x153100 + 0xf300 + 0x153100 + 0x27f00 + 0x3900 + 0x32100 + 0x27f00 + 0x1dd00 + 0x17e8100 + 0xb4100 + 0xf8100 + 0xf300 + 0x73300 + 0x200 + 0x3900 + 0x751700 + 0x34300 + 0x34000 + 0x756300 + 0x678000 + 0x83500 + 0xf300 + 0xeb00 + 0x48d00 + 0x8a300 + 0x200 + 0x32100 + 0x1200 + 0x6600 + 0x29b500 + 0x27f00 + 0x32100 + 0x1200 + 0x200 + 0xa9c00 + 0x19fb00 + 0x2c300 + 0xeef00 + 0xcb400 + 0xb4100 + 0x10300 + 0x310d00 + 0x32100 + 0x135100 + 0x52100 + 0xf8100 + 0x200 + 0x4900 + 0x600 + 0x47900 + 0x32f00 + 0x47900 + 0x6900 + 0x5ea00 + 0x19fe00 + 0x32100 + 0x32000 + 0x3800 + 0x16600 + 0x600 + 0x10300 + 0x6600 + 0x12900 + 0x46600 + 0x27f00 + 0x12100 + 0x10f00 + 0x12100 + 0x19fe00 + 0xb500 + 0x66d00 + 0xdd00 + 0x3900 + 0x5300 + 0x117900 + 0x7e100 + 0x1200 + 0x3900 + 0x1dd00 + 0x28a00 + 0x12100 + 0xe2f00 + 0xf5d00 + 0x2ef00 + 0x87100 + 0x7e600 + 0x93300 + 0xf8100 + 0x1dd00 + 0xc6d00 + 0x19ca00 + 0x87100 + 0x2e600 + 0x6d100 + 0x9c900 + 0x4c00 + 0x6900 + 0xf8100 + 0x7e600 + 0x500 + 0x71800 + 0x179500 + 0x200 + 0x9c900 + 0x200 + 0x200 + 0x3900 + 0x200 + 0x73300 + 0xb500 + 0x25700 + 0x10300 + 0x11200 + 0x87100 + 0x1f300 + 0x2ef00 + 0x1200 + 0x10ce00 + 0x2c300 + 0x7e600 + 0x17200 + 0x2100 + 0x73300 + 0x19ca00 + 0x3700 + 0x1c900 + 0xb300 + 0x1bb00 + 0xa9b700 + 0x19fb00 + 0x14800 + 0x17e00 + 0x1200 + 0x73300 + 0x7e100 + 0xfa00 + 0x33e00 + 0x12d00 + 0x2d0b00 + 0x9b00 + 0xea100 + 0x19fd00 + 0x12100 + 0x7e600 + 0x4c00 + 0x18500 + 0x740200 + 0xb500 + 0x41800 + 0x1dd00 + 0xcf00 + 0x35500 + 0x87100 + 0x678000 + 0x200 + 0xdd00 + 0x9c900 + 0x1b0900 + 0x32100 + 0x2e00 + 0xf8100 + 0x70b00 + 0x2c700 + 0x1dd00 + 0xf5f00 + 0xf300 + 0x10300 + 0x1cad00 + 0xf5c00 + 0x5300 + 0x2b100 + 0x23200 + 0x9b00 + 0x32100 + 0x10300 + 0x700 + 0x3900 + 0xb500 + 0xf300 + 0x9800 + 0x2100 + 0x5be00 + 0x5ea00 + 0x5f00 + 0x79d00 + 0x1700 + 0xf300 + 0x73300 + 0x4f00 + 0x1200 + 0x200 + 0x19fe00 + ... = 0xd2b1a00
LVP: vkBuffer size 220928512 created at 0x563d3c89c968
RTV: New vkBuffer created at 0x563d3c89c968
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d118fa300; llvmpipe_resource 0x563d118fa300; pipe_memory_allocation 0x153f80e10000;
LVP: Binding lvp_buffer 0x563d3c89b090: buffer->bo: 0x563d118fa300; buffer->pmem: 0x153f80e10000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xcadf6600 (size 220928512) to vulkan buffer 0x153f80e10000
LVP: gpgpusim buffer size 220928512 allocated at 0xcadf6600
RTV: Bind buffer memory for vkBuffer 0x563d3c89c968
LVP: vkBuffer size 117351040 created at 0x563d3c89b2f8
RTV: New vkBuffer created at 0x563d3c89b2f8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d7626b570; llvmpipe_resource 0x563d7626b570; pipe_memory_allocation 0x153f95015000;
LVP: Binding lvp_buffer 0x563d3c89ca70: buffer->bo: 0x563d7626b570; buffer->pmem: 0x153f95015000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xd80a8000 (size 117351040) to vulkan buffer 0x153f95015000
LVP: gpgpusim buffer size 117351040 allocated at 0xd80a8000
RTV: Bind buffer memory for vkBuffer 0x563d3c89b2f8
RTV: Created buffer for 0xd2b1a00 size BLAS at 0x563d3c89b090
RTV: Creating bottom level acceleration structure 0...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x0 = 0x153f80e10000 allocated to accel structure 0x563d10ac4ec0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80e10000 to 0xcadf6600
RTV: Building BLAS into 0x563d10ac4ec0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922159c0
Compressed Node: i	exp: (0, 1, 2)	origin: (8.010547, 4.235130, 10.611778)
Children:
	0x563d92215a28: (74, 135, 11), (142, 172, 130)
	0x563d92216340: (23, 0, 0), (125, 155, 44)
	0x563d92216c98: (0, 7, 86), (110, 172, 130)
	0x563d922173c0: (8, 30, 0), (77, 62, 118)
	0x563d92217570: (39, 30, 59), (96, 121, 65)
	0x563d92217840: (41, 94, 6), (109, 118, 125)
EMBREE: Set dst_map 0x153f80e10000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x0 for accel 0x563d10ac4ec0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80e10000
EMBREE: Pack root 0x563d922159c0 to root_map 0x153f80e10040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 1...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3900 = 0x153f80e13900 allocated to accel structure 0x563d10ac4d70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80e13900 to 0xcadf9f00
RTV: Building BLAS into 0x563d10ac4d70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92215e80
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.055093, 9.206492, -36.706772)
Children:
	0x563d92215ee8: (4, 149, 0), (230, 237, 141)
	0x563d92216080: (0, 159, 102), (232, 253, 233)
	0x563d92216218: (12, 0, 60), (123, 177, 227)
	0x563d922163c0: (95, 0, 20), (214, 160, 160)
	0x563d92216468: (95, 0, 60), (214, 177, 227)
	0x563d92216500: (12, 0, 21), (103, 167, 128)
EMBREE: Set dst_map 0x153f80e13900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3900 for accel 0x563d10ac4d70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80e13900
EMBREE: Pack root 0x563d92215e80 to root_map 0x153f80e13940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 2...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x4b00 = 0x153f80e14b00 allocated to accel structure 0x563d0e1c95a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80e14b00 to 0xcadfb100
RTV: Building BLAS into 0x563d0e1c95a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f80e14b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x4b00 for accel 0x563d0e1c95a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80e14b00
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f80e14b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 3...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x4d00 = 0x153f80e14d00 allocated to accel structure 0x563d0e1c9600
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80e14d00 to 0xcadfb300
RTV: Building BLAS into 0x563d0e1c9600
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (0, -1, -1)	origin: (-0.243381, 11.502707, 8.720557)
Children:
	0x563d92218ee8: (133, 0, 29), (227, 217, 186)
	0x563d92231160: (0, 13, 0), (41, 229, 161)
	0x563d9223b840: (34, 105, 73), (174, 229, 144)
	0x563d9223c640: (31, 73, 75), (183, 124, 155)
	0x563d9223caf0: (31, 0, 0), (202, 87, 155)
	0x563d9223cf18: (36, 73, 3), (197, 223, 89)
EMBREE: Set dst_map 0x153f80e14d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x4d00 for accel 0x563d0e1c9600
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80e14d00
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f80e14d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 4...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x46500 = 0x153f80e56500 allocated to accel structure 0x563d10b73090
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80e56500 to 0xcae3cb00
RTV: Building BLAS into 0x563d10b73090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221e300
Compressed Node: i	exp: (-2, -2, -1)	origin: (-36.088058, 1.849942, 33.997559)
Children:
	0x563d9221e368: (0, 0, 116), (156, 78, 181)
	0x563d9221b9a8: (0, 0, 53), (156, 37, 117)
	0x563d9221d568: (36, 77, 129), (119, 137, 234)
	0x563d92227dc0: (36, 77, 57), (119, 128, 134)
	0x563d92229618: (42, 35, 66), (113, 78, 117)
	0x563d9222a378: (38, 95, 0), (117, 137, 63)
EMBREE: Set dst_map 0x153f80e56500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x46500 for accel 0x563d10b73090
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80e56500
EMBREE: Pack root 0x563d9221e300 to root_map 0x153f80e56540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 5...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x58600 = 0x153f80e68600 allocated to accel structure 0x563d92215950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80e68600 to 0xcae4ec00
RTV: Building BLAS into 0x563d92215950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (0, 2, 1)	origin: (-0.849864, 9.674242, -12.342413)
Children:
	0x563d9221a4e8: (0, 14, 73), (207, 127, 150)
	0x563d92238dd8: (7, 105, 0), (200, 146, 87)
	0x563d9223de30: (42, 0, 35), (165, 24, 98)
	0x563d9223fc18: (7, 76, 57), (200, 123, 87)
	0x563d922405d0: (59, 0, 5), (148, 146, 94)
	0x563d92240c98: (10, 43, 71), (197, 78, 84)
EMBREE: Set dst_map 0x153f80e68600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x58600 for accel 0x563d92215950
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80e68600
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f80e68640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 6...
RTV: Creating acceleration struction of size 0x5f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9ff00 = 0x153f80eaff00 allocated to accel structure 0x563d922159b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80eaff00 to 0xcae96500
RTV: Building BLAS into 0x563d922159b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 188 triangles added; total: 188
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221e300
Compressed Node: i	exp: (1, 3, 1)	origin: (-8.963638, 0.429549, 10.909657)
Children:
	0x563d9221e368: (0, 73, 0), (78, 133, 77)
	0x563d9221af18: (160, 0, 158), (167, 1, 165)
	0x563d9221b240: (74, 0, 72), (167, 75, 165)
	0x563d9221b368: (74, 0, 69), (167, 75, 161)
	0x563d9221b418: (70, 0, 73), (162, 75, 165)
	0x563d9221b4c8: (70, 0, 69), (164, 74, 160)
EMBREE: Set dst_map 0x153f80eaff00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9ff00 for accel 0x563d922159b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80eaff00
EMBREE: Pack root 0x563d9221e300 to root_map 0x153f80eaff40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 7...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa5e00 = 0x153f80eb5e00 allocated to accel structure 0x563d92215a50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80eb5e00 to 0xcae9c400
RTV: Building BLAS into 0x563d92215a50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (3, 2, 1)	origin: (-7.380075, -0.110149, -9.382076)
Children:
	0x563d9221a4e8: (59, 137, 0), (210, 170, 248)
	0x563d922392d0: (0, 137, 4), (108, 170, 223)
	0x563d92248390: (88, 1, 189), (210, 157, 248)
	0x563d9224e528: (0, 13, 171), (109, 149, 230)
	0x563d92251e38: (138, 14, 2), (206, 143, 219)
	0x563d92254348: (0, 0, 4), (69, 160, 44)
EMBREE: Set dst_map 0x153f80eb5e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa5e00 for accel 0x563d92215a50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80eb5e00
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f80eb5e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 8...
RTV: Creating acceleration struction of size 0x9100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x124400 = 0x153f80f34400 allocated to accel structure 0x563d92215af0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80f34400 to 0xcaf1aa00
RTV: Building BLAS into 0x563d92215af0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 288 triangles added; total: 288
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221e300
Compressed Node: i	exp: (-3, 0, -4)	origin: (-4.791358, 12.466628, -16.529924)
Children:
	0x563d9221e368: (8, 159, 0), (233, 221, 51)
	0x563d9221a528: (0, 2, 32), (22, 175, 133)
	0x563d9221b780: (208, 3, 31), (233, 175, 133)
	0x563d9221c798: (0, 0, 95), (222, 39, 135)
	0x563d9221cf58: (10, 8, 24), (226, 175, 123)
	0x563d9221d338: (7, 98, 24), (222, 175, 83)
EMBREE: Set dst_map 0x153f80f34400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x124400 for accel 0x563d92215af0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80f34400
EMBREE: Pack root 0x563d9221e300 to root_map 0x153f80f34440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 9...
RTV: Creating acceleration struction of size 0x121500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x121500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x12d500 = 0x153f80f3d500 allocated to accel structure 0x563d92215d20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f80f3d500 to 0xcaf23b00
RTV: Building BLAS into 0x563d92215d20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 9256 triangles added; total: 9256
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (3, -1, -3)	origin: (3.590457, 10.925159, -37.199673)
Children:
	0x563d92226be8: (0, 39, 0), (48, 167, 145)
	0x563d92241988: (135, 39, 0), (161, 165, 145)
	0x563d92257658: (51, 39, 0), (78, 167, 145)
	0x563d9226a688: (112, 0, 0), (135, 125, 145)
	0x563d9227bfc0: (164, 39, 0), (191, 167, 145)
	0x563d9228d948: (79, 0, 0), (109, 165, 145)
EMBREE: Set dst_map 0x153f80f3d500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x12d500 for accel 0x563d92215d20
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f80f3d500
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f80f3d540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 10...
RTV: Creating acceleration struction of size 0x38d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x38d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x24ea00 = 0x153f8105ea00 allocated to accel structure 0x563d92214a90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8105ea00 to 0xcb045000
RTV: Building BLAS into 0x563d92214a90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1816 triangles added; total: 1816
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (1, -1, 2)	origin: (-5.180636, 11.394192, 7.661726)
Children:
	0x563d92218ee8: (0, 0, 0), (73, 88, 198)
	0x563d92229ea8: (113, 103, 0), (199, 236, 103)
	0x563d9222de68: (32, 16, 0), (169, 211, 103)
	0x563d92231698: (95, 131, 77), (153, 234, 197)
	0x563d92234ca0: (114, 141, 8), (199, 209, 209)
	0x563d92237200: (10, 13, 102), (150, 209, 198)
EMBREE: Set dst_map 0x153f8105ea00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x24ea00 for accel 0x563d92214a90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8105ea00
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f8105ea40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 11...
RTV: Creating acceleration struction of size 0x2ef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2ef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x287700 = 0x153f81097700 allocated to accel structure 0x563d92214af0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81097700 to 0xcb07dd00
RTV: Building BLAS into 0x563d92214af0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1500 triangles added; total: 1500
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (-1, 2, -2)	origin: (54.096577, 8.849975, -12.354340)
Children:
	0x563d92218ee8: (25, 179, 0), (206, 203, 165)
	0x563d9222e840: (0, 138, 0), (131, 184, 119)
	0x563d922344f8: (95, 0, 35), (146, 9, 165)
	0x563d92235f48: (62, 73, 82), (97, 97, 99)
	0x563d92236a68: (32, 80, 73), (132, 157, 108)
	0x563d92237448: (39, 4, 73), (125, 188, 108)
EMBREE: Set dst_map 0x153f81097700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x287700 for accel 0x563d92214af0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81097700
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f81097740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 12...
RTV: Creating acceleration struction of size 0x2c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2b6600 = 0x153f810c6600 allocated to accel structure 0x563d9221e830
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f810c6600 to 0xcb0acc00
RTV: Building BLAS into 0x563d9221e830
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1412 triangles added; total: 1412
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (1, 0, 1)	origin: (-9.722721, 0.738900, -7.940585)
Children:
	0x563d92218ee8: (72, 42, 32), (151, 203, 135)
	0x563d92228bc8: (130, 84, 67), (169, 208, 135)
	0x563d9222d4d0: (0, 0, 0), (39, 123, 64)
	0x563d922315c0: (25, 41, 0), (45, 115, 12)
	0x563d92233118: (54, 41, 79), (87, 132, 103)
	0x563d92234b08: (7, 2, 4), (93, 166, 97)
EMBREE: Set dst_map 0x153f810c6600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2b6600 for accel 0x563d9221e830
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f810c6600
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f810c6640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 13...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2e2900 = 0x153f810f2900 allocated to accel structure 0x563d9221e8d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f810f2900 to 0xcb0d8f00
RTV: Building BLAS into 0x563d9221e8d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (1, -2, 1)	origin: (-5.219146, 9.667202, -17.833858)
Children:
	0x563d92218ee8: (0, 0, 117), (188, 203, 181)
	0x563d92229570: (0, 16, 69), (127, 187, 119)
	0x563d9222ce00: (10, 0, 0), (105, 203, 84)
	0x563d9222ff30: (23, 0, 0), (188, 19, 144)
	0x563d922300e0: (23, 184, 0), (188, 203, 144)
	0x563d92230358: (25, 14, 0), (188, 189, 142)
EMBREE: Set dst_map 0x153f810f2900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2e2900 for accel 0x563d9221e8d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f810f2900
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f810f2940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 14...
RTV: Creating acceleration struction of size 0x2a400
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2a400) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x300600 = 0x153f81110600 allocated to accel structure 0x563d9221e970
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81110600 to 0xcb0f6c00
RTV: Building BLAS into 0x563d9221e970
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1350 triangles added; total: 1350
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (3, 2, 3)	origin: (-1.108457, 4.464162, 6.675488)
Children:
	0x563d92218ee8: (94, 0, 177), (209, 218, 194)
	0x563d92227dc8: (0, 0, 171), (96, 214, 193)
	0x563d9222c318: (169, 0, 23), (224, 219, 50)
	0x563d9222ec70: (18, 2, 0), (85, 213, 19)
	0x563d92231188: (83, 1, 7), (132, 216, 25)
	0x563d92233068: (128, 1, 14), (174, 218, 34)
EMBREE: Set dst_map 0x153f81110600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x300600 for accel 0x563d9221e970
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81110600
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f81110640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 15...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x32aa00 = 0x153f8113aa00 allocated to accel structure 0x563d92214bd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8113aa00 to 0xcb121000
RTV: Building BLAS into 0x563d92214bd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (-1, -2, -2)	origin: (-3.173368, 2.408471, -8.044994)
Children:
	0x563d92218ee8: (53, 0, 0), (117, 94, 156)
	0x563d9221bd10: (116, 0, 0), (181, 45, 156)
	0x563d9221d740: (129, 93, 36), (234, 165, 119)
	0x563d92227e88: (57, 93, 36), (134, 154, 119)
	0x563d92229780: (116, 42, 42), (168, 94, 113)
	0x563d9222a4d8: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x153f8113aa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x32aa00 for accel 0x563d92214bd0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8113aa00
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f8113aa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 16...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x33cb00 = 0x153f8114cb00 allocated to accel structure 0x563d92214c70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8114cb00 to 0xcb133100
RTV: Building BLAS into 0x563d92214c70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (-1, 1, -1)	origin: (1.451318, 11.780621, -12.389039)
Children:
	0x563d92218ee8: (0, 1, 166), (118, 252, 252)
	0x563d9222b828: (19, 0, 0), (128, 253, 24)
	0x563d92233640: (0, 1, 21), (146, 93, 177)
	0x563d922353d8: (0, 155, 21), (146, 252, 177)
	0x563d92237320: (0, 66, 69), (144, 182, 252)
	0x563d92238b40: (0, 4, 106), (119, 251, 177)
EMBREE: Set dst_map 0x153f8114cb00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x33cb00 for accel 0x563d92214c70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8114cb00
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f8114cb40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 17...
RTV: Creating acceleration struction of size 0x6900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x36ec00 = 0x153f8117ec00 allocated to accel structure 0x563d92214d40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8117ec00 to 0xcb165200
RTV: Building BLAS into 0x563d92214d40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 208 triangles added; total: 208
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92218e80
Compressed Node: i	exp: (1, 2, 3)	origin: (16.024378, 6.279655, -18.017330)
Children:
	0x563d92218ee8: (55, 72, 33), (196, 143, 119)
	0x563d92219aa8: (0, 0, 0), (199, 31, 160)
	0x563d9221b000: (0, 19, 35), (63, 83, 159)
	0x563d9221bc50: (51, 22, 117), (189, 73, 160)
	0x563d9221c050: (62, 25, 35), (196, 83, 39)
	0x563d9221c1e8: (184, 22, 36), (196, 113, 160)
EMBREE: Set dst_map 0x153f8117ec00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x36ec00 for accel 0x563d92214d40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8117ec00
EMBREE: Pack root 0x563d92218e80 to root_map 0x153f8117ec40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 18...
RTV: Creating acceleration struction of size 0x27db00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27db00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x375500 = 0x153f81185500 allocated to accel structure 0x563d92214de0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81185500 to 0xcb16bb00
RTV: Building BLAS into 0x563d92214de0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 20404 triangles added; total: 20404
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (0, 1, 1)	origin: (-37.068924, 1.845875, 32.289604)
Children:
	0x563d92226be8: (117, 101, 0), (206, 154, 57)
	0x563d9226f8a8: (98, 61, 18), (216, 105, 89)
	0x563d922acd90: (117, 2, 13), (229, 65, 60)
	0x563d922d9038: (120, 0, 56), (197, 65, 108)
	0x563d922f8550: (58, 13, 44), (127, 65, 109)
	0x563d92312c80: (0, 0, 49), (126, 16, 134)
EMBREE: Set dst_map 0x153f81185500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x375500 for accel 0x563d92214de0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81185500
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f81185540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 19...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x5f3000 = 0x153f81403000 allocated to accel structure 0x563d92214e80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81403000 to 0xcb3e9600
RTV: Building BLAS into 0x563d92214e80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221e300
Compressed Node: i	exp: (2, 0, -1)	origin: (-0.827619, 7.815415, 12.430019)
Children:
	0x563d9221e368: (141, 102, 104), (200, 166, 237)
	0x563d9221bfc0: (3, 175, 5), (95, 205, 130)
	0x563d9221d518: (61, 0, 26), (127, 105, 202)
	0x563d922279f0: (79, 137, 41), (117, 220, 208)
	0x563d92228928: (49, 96, 28), (143, 152, 192)
	0x563d922297e8: (0, 101, 0), (113, 181, 154)
EMBREE: Set dst_map 0x153f81403000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x5f3000 for accel 0x563d92214e80
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81403000
EMBREE: Pack root 0x563d9221e300 to root_map 0x153f81403040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 20...
RTV: Creating acceleration struction of size 0x9e100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9e100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x603300 = 0x153f81413300 allocated to accel structure 0x563d92214f20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81413300 to 0xcb3f9900
RTV: Building BLAS into 0x563d92214f20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5056 triangles added; total: 5056
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (2, -1, -3)	origin: (7.399164, 10.398026, -37.199673)
Children:
	0x563d9221a4e8: (148, 39, 0), (192, 165, 145)
	0x563d92237d98: (38, 39, 0), (96, 125, 145)
	0x563d92247a78: (120, 39, 0), (141, 165, 145)
	0x563d92251ab0: (97, 39, 0), (113, 140, 145)
	0x563d9225b3e0: (0, 39, 0), (9, 167, 145)
	0x563d92261358: (10, 0, 0), (40, 125, 145)
EMBREE: Set dst_map 0x153f81413300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x603300 for accel 0x563d92214f20
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81413300
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f81413340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 21...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6a1400 = 0x153f814b1400 allocated to accel structure 0x563d92219600
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f814b1400 to 0xcb497a00
RTV: Building BLAS into 0x563d92219600
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92219740
Compressed Node: i	exp: (2, 0, -1)	origin: (2.440237, 7.815415, 12.771802)
Children:
	0x563d922197a8: (141, 102, 104), (200, 166, 237)
	0x563d9221bfc0: (3, 175, 5), (95, 205, 130)
	0x563d9221d518: (61, 0, 26), (127, 105, 202)
	0x563d922279f0: (79, 137, 41), (117, 220, 208)
	0x563d92228928: (49, 96, 28), (143, 152, 192)
	0x563d922297e8: (0, 101, 0), (113, 181, 154)
EMBREE: Set dst_map 0x153f814b1400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6a1400 for accel 0x563d92219600
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f814b1400
EMBREE: Pack root 0x563d92219740 to root_map 0x153f814b1440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 22...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6b1700 = 0x153f814c1700 allocated to accel structure 0x563d92219660
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f814c1700 to 0xcb4a7d00
RTV: Building BLAS into 0x563d92219660
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (-1, 1, 0)	origin: (-0.959308, 12.346039, -12.458676)
Children:
	0x563d9221a4e8: (0, 137, 0), (243, 192, 121)
	0x563d9222af98: (64, 0, 36), (175, 160, 112)
	0x563d92231b70: (81, 0, 0), (156, 192, 112)
	0x563d92233be0: (7, 89, 51), (235, 150, 141)
	0x563d922353d8: (96, 44, 20), (154, 192, 91)
	0x563d92236028: (7, 92, 50), (235, 143, 75)
EMBREE: Set dst_map 0x153f814c1700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6b1700 for accel 0x563d92219660
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f814c1700
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f814c1740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 23...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6dde00 = 0x153f814ede00 allocated to accel structure 0x563d922196c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f814ede00 to 0xcb4d4400
RTV: Building BLAS into 0x563d922196c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (3, 0, 0)	origin: (0.346729, 3.566069, 11.974279)
Children:
	0x563d9221a4e8: (32, 70, 21), (93, 185, 110)
	0x563d9221c7d8: (91, 81, 71), (130, 135, 138)
	0x563d922271e0: (0, 100, 0), (18, 182, 39)
	0x563d922284e0: (40, 0, 25), (82, 79, 109)
	0x563d92229480: (11, 152, 14), (62, 178, 73)
	0x563d92229c98: (0, 90, 0), (74, 128, 87)
EMBREE: Set dst_map 0x153f814ede00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6dde00 for accel 0x563d922196c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f814ede00
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f814ede40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 24...
RTV: Creating acceleration struction of size 0x5300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6ed100 = 0x153f814fd100 allocated to accel structure 0x563d922197a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f814fd100 to 0xcb4e3700
RTV: Building BLAS into 0x563d922197a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 164 triangles added; total: 164
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (2, 2, 2)	origin: (5.409300, 4.902136, 10.968852)
Children:
	0x563d9221a4e8: (184, 137, 21), (226, 188, 130)
	0x563d9221b4a0: (0, 144, 0), (22, 209, 110)
	0x563d9221bfc0: (9, 161, 0), (226, 199, 75)
	0x563d9221c648: (2, 0, 2), (18, 193, 97)
	0x563d9221cc30: (3, 164, 52), (221, 205, 130)
	0x563d9221cdf0: (10, 175, 74), (203, 209, 102)
EMBREE: Set dst_map 0x153f814fd100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6ed100 for accel 0x563d922197a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f814fd100
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f814fd140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 25...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6f2400 = 0x153f81502400 allocated to accel structure 0x563d92219840
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81502400 to 0xcb4e8a00
RTV: Building BLAS into 0x563d92219840
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (3, 2, 2)	origin: (-43.629181, -0.817494, 30.011848)
Children:
	0x563d9221a4e8: (0, 136, 4), (150, 177, 131)
	0x563d9223a6b0: (101, 140, 20), (210, 177, 129)
	0x563d92249340: (0, 10, 0), (121, 165, 52)
	0x563d9224ebe0: (100, 21, 11), (209, 157, 44)
	0x563d92251cd8: (3, 14, 49), (71, 144, 128)
	0x563d92253a38: (140, 0, 97), (209, 160, 129)
EMBREE: Set dst_map 0x153f81502400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6f2400 for accel 0x563d92219840
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81502400
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f81502440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 26...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x770a00 = 0x153f81580a00 allocated to accel structure 0x563d922198e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81580a00 to 0xcb567000
RTV: Building BLAS into 0x563d922198e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (-1, 2, 0)	origin: (-8.517673, 8.804159, -12.773970)
Children:
	0x563d9221a4e8: (20, 0, 57), (149, 89, 224)
	0x563d9222d2b8: (2, 88, 0), (95, 131, 119)
	0x563d922310f0: (0, 42, 9), (116, 130, 156)
	0x563d922338d0: (11, 3, 70), (112, 131, 224)
	0x563d92236578: (2, 1, 11), (88, 127, 182)
	0x563d922376b0: (68, 1, 9), (149, 127, 180)
EMBREE: Set dst_map 0x153f81580a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x770a00 for accel 0x563d922198e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81580a00
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f81580a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 27...
RTV: Creating acceleration struction of size 0x17d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7a2b00 = 0x153f815b2b00 allocated to accel structure 0x563d92219980
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f815b2b00 to 0xcb599100
RTV: Building BLAS into 0x563d92219980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 760 triangles added; total: 760
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (3, 2, 2)	origin: (-3.343199, 0.997585, 7.693523)
Children:
	0x563d9221a4e8: (0, 158, 0), (65, 193, 120)
	0x563d92227200: (118, 165, 22), (131, 209, 132)
	0x563d922296c8: (26, 0, 5), (39, 172, 112)
	0x563d9222b000: (118, 0, 25), (131, 192, 127)
	0x563d9222c840: (20, 161, 2), (127, 199, 76)
	0x563d9222d5c0: (17, 165, 53), (124, 209, 132)
EMBREE: Set dst_map 0x153f815b2b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7a2b00 for accel 0x563d92219980
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f815b2b00
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f815b2b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 28...
RTV: Creating acceleration struction of size 0xf0100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf0100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7ba800 = 0x153f815ca800 allocated to accel structure 0x563d92219a20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f815ca800 to 0xcb5b0e00
RTV: Building BLAS into 0x563d92219a20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7680 triangles added; total: 7680
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a480
Compressed Node: i	exp: (4, 3, -1)	origin: (12.738438, 11.250254, -12.383741)
Children:
	0x563d9221a4e8: (0, 17, 98), (143, 29, 156)
	0x563d92258bd8: (141, 0, 85), (188, 29, 150)
	0x563d92269340: (70, 32, 0), (143, 44, 30)
	0x563d92272ff0: (0, 35, 2), (71, 48, 33)
	0x563d9227a3f8: (142, 41, 7), (164, 68, 49)
	0x563d9227d6c8: (163, 66, 27), (173, 130, 96)
EMBREE: Set dst_map 0x153f815ca800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7ba800 for accel 0x563d92219a20
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f815ca800
EMBREE: Pack root 0x563d9221a480 to root_map 0x153f815ca840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 29...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8aa900 = 0x153f816ba900 allocated to accel structure 0x563d92219ac0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f816ba900 to 0xcb6a0f00
RTV: Building BLAS into 0x563d92219ac0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a940
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.272674, 9.279652, -36.719334)
Children:
	0x563d9221a9a8: (4, 149, 0), (230, 237, 141)
	0x563d9221ab40: (0, 159, 102), (232, 253, 233)
	0x563d9221acd8: (12, 0, 60), (123, 177, 227)
	0x563d9221ae80: (95, 0, 20), (214, 160, 160)
	0x563d9221af28: (95, 0, 60), (214, 177, 227)
	0x563d9221afc0: (12, 0, 21), (103, 167, 128)
EMBREE: Set dst_map 0x153f816ba900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8aa900 for accel 0x563d92219ac0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f816ba900
EMBREE: Pack root 0x563d9221a940 to root_map 0x153f816ba940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 30...
RTV: Creating acceleration struction of size 0x33f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x33f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8abb00 = 0x153f816bbb00 allocated to accel structure 0x563d9221dde0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f816bbb00 to 0xcb6a2100
RTV: Building BLAS into 0x563d9221dde0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1660 triangles added; total: 1660
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a940
Compressed Node: i	exp: (3, 3, 2)	origin: (0.259548, 8.825325, 8.485312)
Children:
	0x563d9221a9a8: (0, 92, 96), (184, 133, 201)
	0x563d9222bc48: (3, 105, 0), (188, 133, 105)
	0x563d92231810: (83, 5, 130), (163, 116, 197)
	0x563d922340a0: (1, 0, 98), (46, 122, 200)
	0x563d92236340: (10, 0, 0), (21, 123, 67)
	0x563d922377b8: (131, 5, 31), (168, 121, 99)
EMBREE: Set dst_map 0x153f816bbb00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8abb00 for accel 0x563d9221dde0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f816bbb00
EMBREE: Pack root 0x563d9221a940 to root_map 0x153f816bbb40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 31...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8dfa00 = 0x153f816efa00 allocated to accel structure 0x563d9221de40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f816efa00 to 0xcb6d6000
RTV: Building BLAS into 0x563d9221de40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a940
Compressed Node: i	exp: (-1, -2, -2)	origin: (-39.126564, 1.853830, 30.364429)
Children:
	0x563d9221a9a8: (116, 0, 0), (181, 94, 156)
	0x563d9221cff8: (53, 0, 0), (117, 45, 156)
	0x563d92227ac0: (129, 93, 36), (234, 165, 119)
	0x563d922291c8: (57, 93, 36), (134, 154, 119)
	0x563d9222ab40: (66, 42, 42), (117, 94, 113)
	0x563d9222b800: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x153f816efa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8dfa00 for accel 0x563d9221de40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f816efa00
EMBREE: Pack root 0x563d9221a940 to root_map 0x153f816efa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 32...
RTV: Creating acceleration struction of size 0x600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8f1b00 = 0x153f81701b00 allocated to accel structure 0x563d9221e470
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81701b00 to 0xcb6e8100
RTV: Building BLAS into 0x563d9221e470
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10 triangles added; total: 10
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a940
Compressed Node: i	exp: (0, 0, 0)	origin: (16.400106, 6.445608, -22.557928)
Children:
	0x563d9221a9a8: (0, 2, 0), (169, 3, 158)
	0x563d9221aa28: (0, 2, 59), (48, 211, 158)
	0x563d9221aaa8: (59, 0, 93), (160, 213, 142)
	0x563d9221ab28: (123, 2, 0), (171, 211, 98)
	0x563d9221aba8: (0, 210, 0), (171, 211, 98)
	0x563d9221abb4: (0, 210, 59), (171, 211, 158)
EMBREE: Set dst_map 0x153f81701b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8f1b00 for accel 0x563d9221e470
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81701b00
EMBREE: Pack root 0x563d9221a940 to root_map 0x153f81701b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 33...
RTV: Creating acceleration struction of size 0xf0100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf0100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8f2100 = 0x153f81702100 allocated to accel structure 0x563d9221e510
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81702100 to 0xcb6e8700
RTV: Building BLAS into 0x563d9221e510
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7680 triangles added; total: 7680
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a940
Compressed Node: i	exp: (4, 3, -1)	origin: (-12.116438, 8.885265, -12.485441)
Children:
	0x563d9221a9a8: (0, 17, 106), (143, 29, 161)
	0x563d92258ea0: (141, 0, 106), (188, 29, 154)
	0x563d922699d0: (70, 31, 0), (143, 44, 22)
	0x563d92273588: (0, 35, 0), (71, 47, 22)
	0x563d9227a900: (142, 40, 0), (164, 68, 23)
	0x563d9227dc00: (163, 66, 0), (173, 130, 23)
EMBREE: Set dst_map 0x153f81702100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8f2100 for accel 0x563d9221e510
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81702100
EMBREE: Pack root 0x563d9221a940 to root_map 0x153f81702140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 34...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9e2200 = 0x153f817f2200 allocated to accel structure 0x563d9221e5b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f817f2200 to 0xcb7d8800
RTV: Building BLAS into 0x563d9221e5b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a940
Compressed Node: i	exp: (1, -1, 1)	origin: (-4.803950, 10.203736, 9.443628)
Children:
	0x563d9221a9a8: (0, 39, 116), (150, 181, 143)
	0x563d92230c80: (117, 0, 1), (159, 213, 32)
	0x563d9223d0e8: (117, 0, 105), (160, 213, 141)
	0x563d92247f48: (1, 38, 0), (151, 181, 21)
	0x563d92251eb0: (1, 124, 9), (107, 158, 129)
	0x563d92252b88: (134, 158, 10), (145, 176, 128)
EMBREE: Set dst_map 0x153f817f2200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9e2200 for accel 0x563d9221e5b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f817f2200
EMBREE: Pack root 0x563d9221a940 to root_map 0x153f817f2240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 35...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa55500 = 0x153f81865500 allocated to accel structure 0x563d9221e650
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81865500 to 0xcb84bb00
RTV: Building BLAS into 0x563d9221e650
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a940
Compressed Node: i	exp: (2, -1, 0)	origin: (-3.475703, 8.710422, 11.037120)
Children:
	0x563d9221a9a8: (0, 31, 18), (51, 110, 90)
	0x563d9221c940: (91, 46, 23), (170, 96, 79)
	0x563d92226e98: (61, 0, 101), (117, 141, 195)
	0x563d922283a8: (72, 0, 0), (105, 141, 83)
	0x563d92229480: (49, 23, 52), (129, 118, 125)
	0x563d9222a368: (74, 32, 65), (172, 109, 138)
EMBREE: Set dst_map 0x153f81865500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa55500 for accel 0x563d9221e650
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81865500
EMBREE: Pack root 0x563d9221a940 to root_map 0x153f81865540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 36...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa65800 = 0x153f81875800 allocated to accel structure 0x563d9221e6f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81875800 to 0xcb85be00
RTV: Building BLAS into 0x563d9221e6f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221a980
Compressed Node: i	exp: (2, -2, -1)	origin: (2.535697, 7.337254, 12.785810)
Children:
	0x563d9221a9e8: (0, 0, 0), (68, 205, 65)
	0x563d9221d118: (93, 66, 77), (177, 214, 156)
	0x563d92228960: (60, 63, 50), (107, 120, 98)
	0x563d9222a240: (46, 99, 38), (152, 151, 135)
	0x563d9222a490: (23, 101, 19), (152, 212, 136)
	0x563d9222a538: (45, 99, 37), (152, 212, 136)
EMBREE: Set dst_map 0x153f81875800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa65800 for accel 0x563d9221e6f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81875800
EMBREE: Pack root 0x563d9221a980 to root_map 0x153f81875840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 37...
RTV: Creating acceleration struction of size 0x2e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa74300 = 0x153f81884300 allocated to accel structure 0x563d9221e790
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81884300 to 0xcb86a900
RTV: Building BLAS into 0x563d9221e790
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 89 triangles added; total: 89
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221ae40
Compressed Node: i	exp: (-2, 2, 1)	origin: (-0.595620, 4.244136, 7.096583)
Children:
	0x563d9221aea8: (0, 0, 123), (70, 231, 185)
	0x563d9221b908: (67, 0, 0), (173, 231, 10)
	0x563d9221c248: (66, 0, 6), (168, 33, 128)
	0x563d9221c2e0: (68, 199, 9), (166, 231, 125)
	0x563d9221c378: (66, 32, 9), (166, 200, 128)
	0x563d9221c384: (66, 32, 6), (168, 200, 128)
EMBREE: Set dst_map 0x153f81884300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa74300 for accel 0x563d9221e790
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81884300
EMBREE: Pack root 0x563d9221ae40 to root_map 0x153f81884340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 38...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa77100 = 0x153f81887100 allocated to accel structure 0x563d9221a410
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81887100 to 0xcb86d700
RTV: Building BLAS into 0x563d9221a410
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (3, 2, 2)	origin: (7.596109, 11.063460, -14.798249)
Children:
	0x563d92226be8: (0, 158, 166), (171, 237, 221)
	0x563d92251fc8: (150, 28, 39), (171, 195, 186)
	0x563d92276580: (69, 0, 175), (199, 49, 226)
	0x563d92293708: (69, 22, 0), (77, 220, 190)
	0x563d922aa788: (62, 28, 172), (170, 190, 203)
	0x563d922bf2b8: (70, 24, 134), (147, 237, 193)
EMBREE: Set dst_map 0x153f81887100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa77100 for accel 0x563d9221a410
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81887100
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f81887140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 39...
RTV: Creating acceleration struction of size 0x66b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x66b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc16f00 = 0x153f81a26f00 allocated to accel structure 0x563d9221a4b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81a26f00 to 0xcba0d500
RTV: Building BLAS into 0x563d9221a4b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3284 triangles added; total: 3284
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221ae40
Compressed Node: i	exp: (1, 1, 0)	origin: (-8.840171, 5.702009, 10.485927)
Children:
	0x563d9221aea8: (48, 12, 7), (101, 51, 230)
	0x563d92233f70: (63, 29, 84), (98, 77, 181)
	0x563d9223f9f0: (79, 39, 79), (94, 159, 92)
	0x563d92248b90: (72, 0, 0), (149, 16, 238)
	0x563d9224b138: (0, 0, 14), (36, 16, 212)
	0x563d9224c960: (31, 0, 0), (77, 16, 238)
EMBREE: Set dst_map 0x153f81a26f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc16f00 for accel 0x563d9221a4b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81a26f00
EMBREE: Pack root 0x563d9221ae40 to root_map 0x153f81a26f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 40...
RTV: Creating acceleration struction of size 0xf5c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc7da00 = 0x153f81a8da00 allocated to accel structure 0x563d9221a550
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81a8da00 to 0xcba74000
RTV: Building BLAS into 0x563d9221a550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7862 triangles added; total: 7862
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (3, 4, 2)	origin: (22.316761, 17.342377, -21.698561)
Children:
	0x563d92226be8: (0, 123, 77), (110, 153, 103)
	0x563d92244320: (141, 119, 42), (202, 153, 138)
	0x563d9225d700: (80, 0, 0), (155, 30, 181)
	0x563d9226cd48: (107, 22, 66), (152, 126, 115)
	0x563d922798e8: (101, 111, 65), (145, 155, 116)
	0x563d92284eb8: (47, 0, 0), (88, 23, 181)
EMBREE: Set dst_map 0x153f81a8da00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc7da00 for accel 0x563d9221a550
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81a8da00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f81a8da40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 41...
RTV: Creating acceleration struction of size 0x19dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd73600 = 0x153f81b83600 allocated to accel structure 0x563d9221a5f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81b83600 to 0xcbb69c00
RTV: Building BLAS into 0x563d9221a5f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13240 triangles added; total: 13240
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (6, 4, 5)	origin: (-13.083219, -0.527287, -37.032532)
Children:
	0x563d92226be8: (109, 32, 61), (138, 114, 101)
	0x563d92260c90: (109, 0, 97), (118, 45, 156)
	0x563d9228b8f0: (109, 33, 87), (118, 110, 199)
	0x563d9229f570: (109, 36, 0), (118, 110, 79)
	0x563d922b3298: (132, 123, 100), (135, 176, 164)
	0x563d922bfc00: (0, 182, 192), (45, 190, 197)
EMBREE: Set dst_map 0x153f81b83600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd73600 for accel 0x563d9221a5f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81b83600
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f81b83640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 42...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xf11300 = 0x153f81d21300 allocated to accel structure 0x563d9221a690
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81d21300 to 0xcbd07900
RTV: Building BLAS into 0x563d9221a690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (0, 2, 0)	origin: (-2.631046, 5.037108, -11.584500)
Children:
	0x563d9221b1a8: (6, 37, 67), (159, 74, 118)
	0x563d92237fd8: (107, 68, 25), (185, 125, 91)
	0x563d92242608: (6, 113, 16), (148, 149, 75)
	0x563d9224cb78: (16, 144, 0), (137, 172, 30)
	0x563d92254b10: (0, 68, 49), (120, 115, 99)
	0x563d9225ae28: (26, 0, 104), (148, 49, 156)
EMBREE: Set dst_map 0x153f81d21300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xf11300 for accel 0x563d9221a690
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81d21300
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f81d21340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 43...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xf98400 = 0x153f81da8400 allocated to accel structure 0x563d9221a910
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81da8400 to 0xcbd8ea00
RTV: Building BLAS into 0x563d9221a910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231a80
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.158100, 10.110193, -12.113097)
Children:
	0x563d92231ae8: (0, 21, 154), (158, 131, 242)
	0x563d9222bb50: (0, 32, 0), (159, 115, 28)
	0x563d922353a8: (3, 0, 13), (155, 136, 75)
	0x563d92237618: (100, 13, 34), (158, 152, 242)
	0x563d92239160: (0, 11, 34), (61, 152, 242)
	0x563d9223acb0: (0, 11, 95), (157, 131, 177)
EMBREE: Set dst_map 0x153f81da8400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xf98400 for accel 0x563d9221a910
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81da8400
EMBREE: Pack root 0x563d92231a80 to root_map 0x153f81da8440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 44...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xfca500 = 0x153f81dda500 allocated to accel structure 0x563d9221a9b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81dda500 to 0xcbdc0b00
RTV: Building BLAS into 0x563d9221a9b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2 triangles added; total: 2
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231a80
Compressed Node: i	exp: (2, 1, -1)	origin: (7.916481, 1.700224, 11.928228)
Children:
	0x563d92231ae8: (0, 0, 0), (226, 197, 189)
	0x563d92231af4: (1, 0, 2), (227, 197, 192)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
EMBREE: Set dst_map 0x153f81dda500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xfca500 for accel 0x563d9221a9b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81dda500
EMBREE: Pack root 0x563d92231a80 to root_map 0x153f81dda540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 45...
RTV: Creating acceleration struction of size 0x31f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x31f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xfca700 = 0x153f81dda700 allocated to accel structure 0x563d9221aa50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81dda700 to 0xcbdc0d00
RTV: Building BLAS into 0x563d9221aa50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1595 triangles added; total: 1595
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231a80
Compressed Node: i	exp: (-1, 2, 0)	origin: (21.460676, 11.166733, -12.634105)
Children:
	0x563d92231ae8: (17, 0, 72), (149, 132, 202)
	0x563d9222ddf0: (2, 94, 0), (95, 132, 108)
	0x563d922339a0: (0, 38, 9), (116, 131, 144)
	0x563d922362f8: (20, 1, 50), (140, 86, 140)
	0x563d922380c0: (2, 1, 11), (107, 128, 160)
	0x563d922392d8: (68, 1, 9), (149, 129, 158)
EMBREE: Set dst_map 0x153f81dda700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xfca700 for accel 0x563d9221aa50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81dda700
EMBREE: Pack root 0x563d92231a80 to root_map 0x153f81dda740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 46...
RTV: Creating acceleration struction of size 0x740200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x740200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xffc600 = 0x153f81e0c600 allocated to accel structure 0x563d9221aaf0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f81e0c600 to 0xcbdf2c00
RTV: Building BLAS into 0x563d9221aaf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 59393 triangles added; total: 59393
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 2, 0)	origin: (-3.119444, 4.339679, 8.924344)
Children:
	0x563d92232be8: (33, 93, 0), (79, 124, 240)
	0x563d922cc2a0: (110, 0, 83), (216, 53, 224)
	0x563d9235baf0: (87, 50, 57), (162, 92, 226)
	0x563d923e6e68: (74, 89, 59), (148, 124, 225)
	0x563d9245e638: (0, 122, 75), (50, 160, 228)
	0x563d924b4350: (46, 121, 18), (109, 148, 232)
EMBREE: Set dst_map 0x153f81e0c600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xffc600 for accel 0x563d9221aaf0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f81e0c600
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f81e0c640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 47...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x173c800 = 0x153f8254c800 allocated to accel structure 0x563d9221ab90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8254c800 to 0xcc532e00
RTV: Building BLAS into 0x563d9221ab90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231a80
Compressed Node: i	exp: (-1, 2, 0)	origin: (-2.495448, 12.783228, -12.574805)
Children:
	0x563d92231ae8: (0, 0, 0), (133, 128, 101)
	0x563d9222cb58: (2, 0, 86), (109, 37, 195)
	0x563d92233458: (0, 5, 93), (132, 88, 189)
	0x563d92235cd0: (4, 68, 83), (102, 128, 133)
	0x563d92237a18: (0, 4, 52), (109, 128, 180)
	0x563d92239710: (0, 36, 62), (132, 128, 157)
EMBREE: Set dst_map 0x153f8254c800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x173c800 for accel 0x563d9221ab90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8254c800
EMBREE: Pack root 0x563d92231a80 to root_map 0x153f8254c840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 48...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x176e900 = 0x153f8257e900 allocated to accel structure 0x563d9221ac30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8257e900 to 0xcc564f00
RTV: Building BLAS into 0x563d9221ac30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231a80
Compressed Node: i	exp: (1, -2, 1)	origin: (-2.804010, 16.622112, -17.938791)
Children:
	0x563d92231ae8: (0, 0, 116), (190, 199, 185)
	0x563d9222a370: (0, 15, 68), (129, 183, 123)
	0x563d9222dd00: (12, 0, 0), (109, 199, 88)
	0x563d92232bb0: (29, 0, 0), (190, 18, 141)
	0x563d92232d60: (29, 180, 0), (190, 199, 141)
	0x563d92232f10: (31, 14, 0), (190, 184, 139)
EMBREE: Set dst_map 0x153f8257e900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x176e900 for accel 0x563d9221ac30
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8257e900
EMBREE: Pack root 0x563d92231a80 to root_map 0x153f8257e940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 49...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x178c600 = 0x153f8259c600 allocated to accel structure 0x563d9221acd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8259c600 to 0xcc582c00
RTV: Building BLAS into 0x563d9221acd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (4, 2, 2)	origin: (35.448078, -0.024958, -5.141583)
Children:
	0x563d9221b1a8: (37, 171, 0), (131, 211, 154)
	0x563d9223c680: (0, 171, 2), (67, 211, 139)
	0x563d9224b6f8: (55, 1, 117), (131, 196, 154)
	0x563d92251968: (0, 17, 106), (68, 185, 143)
	0x563d922550f8: (86, 18, 1), (129, 178, 137)
	0x563d92257640: (0, 0, 2), (43, 198, 27)
EMBREE: Set dst_map 0x153f8259c600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x178c600 for accel 0x563d9221acd0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8259c600
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f8259c640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 50...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x180ac00 = 0x153f8261ac00 allocated to accel structure 0x563d9221ad70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8261ac00 to 0xcc601200
RTV: Building BLAS into 0x563d9221ad70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (1, 2, 1)	origin: (6.576361, 7.094147, 12.644880)
Children:
	0x563d9221b1a8: (14, 108, 0), (244, 156, 136)
	0x563d922334e8: (0, 0, 0), (245, 28, 136)
	0x563d9223cc20: (0, 23, 0), (105, 121, 127)
	0x563d9223f080: (60, 23, 0), (245, 139, 73)
	0x563d9223f888: (48, 23, 60), (134, 129, 131)
	0x563d92240278: (132, 23, 72), (245, 139, 136)
EMBREE: Set dst_map 0x153f8261ac00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x180ac00 for accel 0x563d9221ad70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8261ac00
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f8261ac40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 51...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x184c400 = 0x153f8265c400 allocated to accel structure 0x563d92231550
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8265c400 to 0xcc642a00
RTV: Building BLAS into 0x563d92231550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231f80
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.864779, 4.124220, 11.270550)
Children:
	0x563d92231fe8: (0, 16, 0), (119, 136, 108)
	0x563d92227128: (118, 0, 99), (225, 90, 196)
	0x563d922299c0: (109, 28, 91), (143, 56, 128)
	0x563d9222a3f8: (57, 50, 48), (193, 90, 170)
	0x563d9222a6d8: (30, 64, 25), (193, 129, 170)
	0x563d9222a768: (30, 89, 25), (193, 129, 170)
EMBREE: Set dst_map 0x153f8265c400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x184c400 for accel 0x563d92231550
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8265c400
EMBREE: Pack root 0x563d92231f80 to root_map 0x153f8265c440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 52...
RTV: Creating acceleration struction of size 0x1f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x185af00 = 0x153f8266af00 allocated to accel structure 0x563d922315f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8266af00 to 0xcc651500
RTV: Building BLAS into 0x563d922315f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 60 triangles added; total: 60
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231f80
Compressed Node: i	exp: (0, -1, -3)	origin: (8.353141, 8.353414, -36.038494)
Children:
	0x563d92231fe8: (73, 64, 0), (120, 140, 229)
	0x563d92232298: (158, 0, 0), (207, 58, 229)
	0x563d922325d0: (0, 110, 0), (78, 140, 229)
	0x563d9221b1d8: (125, 32, 0), (164, 82, 229)
	0x563d9221b3f8: (0, 9, 0), (58, 112, 229)
	0x563d9221b6b0: (53, 9, 0), (58, 33, 229)
EMBREE: Set dst_map 0x153f8266af00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x185af00 for accel 0x563d922315f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8266af00
EMBREE: Pack root 0x563d92231f80 to root_map 0x153f8266af40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 53...
RTV: Creating acceleration struction of size 0x10700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x185ce00 = 0x153f8266ce00 allocated to accel structure 0x563d92231690
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8266ce00 to 0xcc653400
RTV: Building BLAS into 0x563d92231690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 524 triangles added; total: 524
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231f80
Compressed Node: i	exp: (3, 1, 2)	origin: (0.851345, 14.397640, -13.164979)
Children:
	0x563d92231fe8: (0, 116, 0), (219, 146, 18)
	0x563d9221cf08: (103, 0, 99), (219, 81, 134)
	0x563d92228108: (0, 0, 99), (104, 81, 134)
	0x563d9222a240: (124, 58, 12), (219, 139, 104)
	0x563d9222a7f0: (0, 59, 12), (73, 139, 104)
	0x563d9222ad40: (72, 59, 12), (125, 139, 104)
EMBREE: Set dst_map 0x153f8266ce00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x185ce00 for accel 0x563d92231690
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8266ce00
EMBREE: Pack root 0x563d92231f80 to root_map 0x153f8266ce40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 54...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x186d500 = 0x153f8267d500 allocated to accel structure 0x563d92231730
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8267d500 to 0xcc663b00
RTV: Building BLAS into 0x563d92231730
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231f80
Compressed Node: i	exp: (0, 1, 1)	origin: (-3.086811, 4.384608, 9.481003)
Children:
	0x563d92231fe8: (49, 0, 45), (153, 152, 123)
	0x563d92232600: (0, 7, 172), (111, 170, 250)
	0x563d9221b600: (26, 133, 16), (67, 158, 123)
	0x563d9221bb80: (69, 0, 0), (153, 61, 235)
	0x563d9221bf98: (0, 96, 118), (54, 170, 251)
	0x563d9221c400: (33, 93, 9), (104, 119, 245)
EMBREE: Set dst_map 0x153f8267d500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x186d500 for accel 0x563d92231730
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8267d500
EMBREE: Pack root 0x563d92231f80 to root_map 0x153f8267d540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 55...
RTV: Creating acceleration struction of size 0x1fc300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1fc300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1870e00 = 0x153f82680e00 allocated to accel structure 0x563d922317d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82680e00 to 0xcc667400
RTV: Building BLAS into 0x563d922317d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 16260 triangles added; total: 16260
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (4, 4, 3)	origin: (-2.883379, 1.947104, 6.898950)
Children:
	0x563d92226be8: (54, 32, 168), (150, 65, 212)
	0x563d9226d0c0: (0, 0, 141), (56, 63, 188)
	0x563d9229c640: (7, 0, 0), (55, 61, 26)
	0x563d922bd1c8: (22, 59, 163), (106, 104, 198)
	0x563d922d9ca0: (54, 35, 2), (158, 60, 55)
	0x563d922f5d10: (37, 129, 115), (123, 177, 155)
EMBREE: Set dst_map 0x153f82680e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1870e00 for accel 0x563d922317d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82680e00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f82680e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 56...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1a6d100 = 0x153f8287d100 allocated to accel structure 0x563d92231870
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8287d100 to 0xcc863700
RTV: Building BLAS into 0x563d92231870
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (4, 1, -2)	origin: (-14.647772, 11.266913, -13.569875)
Children:
	0x563d92226be8: (103, 0, 0), (152, 157, 177)
	0x563d92241ca8: (151, 0, 0), (195, 157, 177)
	0x563d92258660: (0, 0, 0), (31, 157, 177)
	0x563d92267700: (30, 0, 0), (55, 157, 177)
	0x563d92276828: (84, 0, 0), (104, 157, 177)
	0x563d92283758: (54, 0, 0), (85, 157, 177)
EMBREE: Set dst_map 0x153f8287d100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1a6d100 for accel 0x563d92231870
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8287d100
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f8287d140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 57...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1b65200 = 0x153f82975200 allocated to accel structure 0x563d92231910
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82975200 to 0xcc95b800
RTV: Building BLAS into 0x563d92231910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92231fc0
Compressed Node: i	exp: (-1, 2, -2)	origin: (0.264613, 11.384340, 10.979573)
Children:
	0x563d92232028: (0, 137, 0), (71, 185, 140)
	0x563d9221d1f0: (56, 126, 25), (105, 187, 127)
	0x563d92227e70: (103, 133, 24), (187, 161, 165)
	0x563d92229300: (64, 103, 41), (103, 127, 118)
	0x563d9222a6c0: (81, 0, 43), (120, 23, 114)
	0x563d9222ae50: (82, 22, 69), (104, 104, 89)
EMBREE: Set dst_map 0x153f82975200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1b65200 for accel 0x563d92231910
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82975200
EMBREE: Pack root 0x563d92231fc0 to root_map 0x153f82975240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 58...
RTV: Creating acceleration struction of size 0xc1300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xc1300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1b75500 = 0x153f82985500 allocated to accel structure 0x563d922319b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82985500 to 0xcc96bb00
RTV: Building BLAS into 0x563d922319b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 6180 triangles added; total: 6180
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (0, 0, 6)	origin: (13.252769, 10.962109, -44.660690)
Children:
	0x563d9221b1a8: (0, 0, 63), (240, 242, 86)
	0x563d922373c0: (0, 0, 42), (240, 242, 70)
	0x563d92244858: (98, 0, 0), (240, 139, 43)
	0x563d92251298: (98, 0, 85), (240, 139, 128)
	0x563d9225dbe0: (0, 112, 0), (144, 242, 43)
	0x563d922694b0: (0, 112, 85), (144, 242, 128)
EMBREE: Set dst_map 0x153f82985500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1b75500 for accel 0x563d922319b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82985500
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82985540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 59...
RTV: Creating acceleration struction of size 0x10ce00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10ce00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1c36800 = 0x153f82a46800 allocated to accel structure 0x563d92231a50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82a46800 to 0xcca2ce00
RTV: Building BLAS into 0x563d92231a50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8601 triangles added; total: 8601
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (1, 3, -1)	origin: (1.421457, 10.135881, -12.350501)
Children:
	0x563d92226be8: (40, 0, 0), (177, 44, 88)
	0x563d92244978: (0, 53, 0), (40, 128, 124)
	0x563d9225f5b0: (23, 40, 6), (104, 56, 81)
	0x563d92276be8: (34, 52, 0), (115, 69, 164)
	0x563d92286c90: (33, 111, 0), (94, 133, 171)
	0x563d922914d0: (33, 60, 0), (116, 113, 171)
EMBREE: Set dst_map 0x153f82a46800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1c36800 for accel 0x563d92231a50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82a46800
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f82a46840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 60...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1d43600 = 0x153f82b53600 allocated to accel structure 0x563d92231af0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82b53600 to 0xccb39c00
RTV: Building BLAS into 0x563d92231af0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232480
Compressed Node: i	exp: (0, 1, 3)	origin: (3.447297, 7.570610, 7.736798)
Children:
	0x563d922324e8: (0, 0, 136), (84, 139, 159)
	0x563d9221c380: (105, 0, 0), (195, 138, 24)
	0x563d9221d878: (46, 0, 79), (133, 182, 111)
	0x563d92227530: (70, 0, 50), (152, 182, 81)
	0x563d92228150: (87, 0, 22), (171, 164, 54)
	0x563d92228a50: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x153f82b53600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1d43600 for accel 0x563d92231af0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82b53600
EMBREE: Pack root 0x563d92232480 to root_map 0x153f82b53640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 61...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1d4eb00 = 0x153f82b5eb00 allocated to accel structure 0x563d92231b90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82b5eb00 to 0xccb45100
RTV: Building BLAS into 0x563d92231b90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232480
Compressed Node: i	exp: (-1, -2, -2)	origin: (-7.220401, 2.408471, -8.044994)
Children:
	0x563d922324e8: (116, 0, 0), (181, 94, 156)
	0x563d9221d310: (53, 0, 0), (117, 45, 156)
	0x563d92227e40: (129, 93, 36), (234, 165, 119)
	0x563d92229548: (57, 93, 36), (134, 154, 119)
	0x563d9222ae40: (66, 42, 42), (117, 94, 113)
	0x563d9222bb98: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x153f82b5eb00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1d4eb00 for accel 0x563d92231b90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82b5eb00
EMBREE: Pack root 0x563d92232480 to root_map 0x153f82b5eb40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 62...
RTV: Creating acceleration struction of size 0x49e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x49e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1d60c00 = 0x153f82b70c00 allocated to accel structure 0x563d92231c30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82b70c00 to 0xccb57200
RTV: Building BLAS into 0x563d92231c30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2362 triangles added; total: 2362
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (1, 2, 1)	origin: (19.477793, 6.357833, -21.624523)
Children:
	0x563d9221b1a8: (0, 180, 0), (110, 221, 139)
	0x563d9222fd88: (64, 99, 20), (109, 121, 109)
	0x563d9223b190: (75, 117, 17), (113, 192, 109)
	0x563d9223fe38: (11, 0, 4), (129, 96, 136)
	0x563d92243440: (1, 75, 16), (113, 192, 137)
	0x563d922442c0: (22, 75, 1), (106, 192, 28)
EMBREE: Set dst_map 0x153f82b70c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1d60c00 for accel 0x563d92231c30
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82b70c00
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82b70c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 63...
RTV: Creating acceleration struction of size 0x4c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1daaa00 = 0x153f82bbaa00 allocated to accel structure 0x563d92231cd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82bbaa00 to 0xccba1000
RTV: Building BLAS into 0x563d92231cd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 150 triangles added; total: 150
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232480
Compressed Node: i	exp: (0, 0, 3)	origin: (3.784298, 12.444323, 8.060608)
Children:
	0x563d922324e8: (0, 0, 118), (75, 80, 138)
	0x563d9221b600: (90, 3, 0), (167, 83, 21)
	0x563d9221bd70: (41, 62, 69), (116, 177, 96)
	0x563d9221c400: (62, 63, 44), (141, 177, 70)
	0x563d9221c8c0: (23, 0, 93), (97, 138, 120)
	0x563d9221cb78: (75, 3, 19), (148, 139, 47)
EMBREE: Set dst_map 0x153f82bbaa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1daaa00 for accel 0x563d92231cd0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82bbaa00
EMBREE: Pack root 0x563d92232480 to root_map 0x153f82bbaa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 64...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1daf600 = 0x153f82bbf600 allocated to accel structure 0x563d92231d70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82bbf600 to 0xccba5c00
RTV: Building BLAS into 0x563d92231d70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232480
Compressed Node: i	exp: (0, 2, -1)	origin: (5.045875, 7.966352, 11.716251)
Children:
	0x563d922324e8: (13, 3, 41), (72, 80, 91)
	0x563d9221cd88: (44, 119, 37), (98, 169, 116)
	0x563d92227e50: (103, 52, 23), (185, 107, 162)
	0x563d922290f0: (0, 91, 0), (104, 98, 138)
	0x563d92229e40: (57, 42, 31), (104, 120, 124)
	0x563d9222a7d8: (63, 0, 40), (101, 95, 115)
EMBREE: Set dst_map 0x153f82bbf600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1daf600 for accel 0x563d92231d70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82bbf600
EMBREE: Pack root 0x563d92232480 to root_map 0x153f82bbf640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 65...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1dbf900 = 0x153f82bcf900 allocated to accel structure 0x563d92231e10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82bcf900 to 0xccbb5f00
RTV: Building BLAS into 0x563d92231e10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (0, -1, -1)	origin: (-1.112061, 11.539174, 8.637441)
Children:
	0x563d9221b1a8: (133, 0, 29), (227, 217, 186)
	0x563d92235298: (0, 13, 0), (41, 229, 161)
	0x563d9223eea8: (34, 105, 73), (174, 229, 144)
	0x563d9223fc78: (31, 73, 75), (183, 124, 155)
	0x563d922401b0: (31, 0, 0), (202, 87, 155)
	0x563d922405d8: (36, 73, 3), (197, 223, 89)
EMBREE: Set dst_map 0x153f82bcf900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1dbf900 for accel 0x563d92231e10
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82bcf900
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82bcf940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 66...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1e01100 = 0x153f82c11100 allocated to accel structure 0x563d92231eb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82c11100 to 0xccbf7700
RTV: Building BLAS into 0x563d92231eb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (-1, -2, -2)	origin: (-19.422804, 1.852425, 31.847788)
Children:
	0x563d9221b1a8: (116, 0, 0), (181, 94, 156)
	0x563d9221d7f8: (53, 0, 0), (117, 45, 156)
	0x563d922283c0: (129, 93, 36), (234, 165, 119)
	0x563d92229ac8: (57, 93, 36), (134, 154, 119)
	0x563d9222b480: (66, 42, 42), (117, 94, 113)
	0x563d9222c100: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x153f82c11100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1e01100 for accel 0x563d92231eb0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82c11100
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82c11140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 67...
RTV: Creating acceleration struction of size 0x5be00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5be00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1e13200 = 0x153f82c23200 allocated to accel structure 0x563d92231f50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82c23200 to 0xccc09800
RTV: Building BLAS into 0x563d92231f50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2938 triangles added; total: 2938
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (1, 2, 1)	origin: (4.908996, 6.631266, -37.091202)
Children:
	0x563d9221b1a8: (118, 76, 6), (173, 164, 144)
	0x563d92234c28: (115, 0, 0), (173, 77, 150)
	0x563d9223f2f8: (0, 0, 88), (119, 77, 150)
	0x563d92243de8: (0, 119, 6), (119, 164, 141)
	0x563d92247b80: (0, 76, 6), (119, 120, 141)
	0x563d9224b118: (0, 0, 6), (119, 77, 89)
EMBREE: Set dst_map 0x153f82c23200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1e13200 for accel 0x563d92231f50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82c23200
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82c23240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 68...
RTV: Creating acceleration struction of size 0xea100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xea100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1e6f000 = 0x153f82c7f000 allocated to accel structure 0x563d92232950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82c7f000 to 0xccc65600
RTV: Building BLAS into 0x563d92232950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7488 triangles added; total: 7488
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (-1, 2, 1)	origin: (-9.263616, 3.989027, 9.825960)
Children:
	0x563d92226be8: (0, 98, 180), (230, 132, 232)
	0x563d9225af68: (88, 49, 194), (207, 104, 227)
	0x563d92273b58: (5, 76, 174), (105, 105, 209)
	0x563d9227e100: (84, 35, 107), (180, 95, 177)
	0x563d92283c10: (103, 0, 0), (211, 15, 60)
	0x563d922866d0: (171, 13, 58), (212, 37, 110)
EMBREE: Set dst_map 0x153f82c7f000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1e6f000 for accel 0x563d92232950
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82c7f000
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f82c7f040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 69...
RTV: Creating acceleration struction of size 0x5be00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5be00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1f59100 = 0x153f82d69100 allocated to accel structure 0x563d922329f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82d69100 to 0xccd4f700
RTV: Building BLAS into 0x563d922329f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2938 triangles added; total: 2938
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (1, 2, 1)	origin: (1.706173, 6.631266, -37.091202)
Children:
	0x563d9221b1a8: (118, 76, 6), (173, 164, 144)
	0x563d92234c28: (115, 0, 0), (173, 77, 150)
	0x563d9223f408: (0, 0, 88), (119, 77, 150)
	0x563d92243f08: (0, 119, 6), (119, 164, 141)
	0x563d92247b18: (0, 76, 6), (119, 120, 141)
	0x563d9224b118: (0, 0, 6), (119, 77, 89)
EMBREE: Set dst_map 0x153f82d69100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1f59100 for accel 0x563d922329f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82d69100
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82d69140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 70...
RTV: Creating acceleration struction of size 0x19fd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x1fb4f00 = 0x153f82dc4f00 allocated to accel structure 0x563d92232a90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82dc4f00 to 0xccdab500
RTV: Building BLAS into 0x563d92232a90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13303 triangles added; total: 13303
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (4, 3, 3)	origin: (-2.373855, 10.397636, -16.130598)
Children:
	0x563d92226be8: (0, 3, 104), (142, 43, 157)
	0x563d9225aa58: (125, 27, 18), (141, 129, 129)
	0x563d9227b618: (57, 0, 0), (165, 40, 32)
	0x563d92299be0: (57, 24, 14), (64, 156, 145)
	0x563d922b0b88: (52, 16, 18), (141, 37, 125)
	0x563d922c6a28: (58, 27, 16), (122, 63, 157)
EMBREE: Set dst_map 0x153f82dc4f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x1fb4f00 for accel 0x563d92232a90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82dc4f00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f82dc4f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 71...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2154c00 = 0x153f82f64c00 allocated to accel structure 0x563d92231ff0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82f64c00 to 0xccf4b200
RTV: Building BLAS into 0x563d92231ff0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (-1, 2, 0)	origin: (-5.868323, 8.804159, -12.773970)
Children:
	0x563d9221b1a8: (20, 0, 57), (149, 89, 224)
	0x563d9222db30: (2, 88, 0), (95, 131, 119)
	0x563d92233b90: (0, 38, 9), (116, 130, 156)
	0x563d92236240: (11, 3, 70), (112, 131, 224)
	0x563d92238e28: (2, 1, 11), (88, 127, 182)
	0x563d92239eb0: (68, 1, 9), (149, 127, 180)
EMBREE: Set dst_map 0x153f82f64c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2154c00 for accel 0x563d92231ff0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82f64c00
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82f64c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 72...
RTV: Creating acceleration struction of size 0x7300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2186d00 = 0x153f82f96d00 allocated to accel structure 0x563d92232090
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82f96d00 to 0xccf7d300
RTV: Building BLAS into 0x563d92232090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 228 triangles added; total: 228
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (-2, 1, 0)	origin: (1.840123, 12.003685, -12.052712)
Children:
	0x563d9221b1a8: (1, 183, 198), (187, 202, 231)
	0x563d9221bdb0: (1, 96, 189), (187, 115, 211)
	0x563d9221c9f0: (1, 1, 119), (187, 20, 139)
	0x563d9221d658: (0, 0, 0), (54, 22, 120)
	0x563d92226dc8: (0, 94, 60), (54, 116, 190)
	0x563d92227480: (0, 181, 1), (54, 204, 199)
EMBREE: Set dst_map 0x153f82f96d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2186d00 for accel 0x563d92232090
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82f96d00
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82f96d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 73...
RTV: Creating acceleration struction of size 0x3c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x218e000 = 0x153f82f9e000 allocated to accel structure 0x563d92232130
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82f9e000 to 0xccf84600
RTV: Building BLAS into 0x563d92232130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1924 triangles added; total: 1924
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (2, 1, 0)	origin: (-2.707118, 7.464298, -11.480023)
Children:
	0x563d9221b1a8: (0, 169, 0), (223, 237, 243)
	0x563d922362a0: (6, 0, 0), (223, 71, 207)
	0x563d9223b8a0: (0, 40, 0), (45, 237, 215)
	0x563d9223d338: (173, 40, 0), (223, 223, 215)
	0x563d9223ec30: (22, 40, 146), (208, 223, 207)
	0x563d9223f508: (6, 51, 40), (223, 237, 43)
EMBREE: Set dst_map 0x153f82f9e000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x218e000 for accel 0x563d92232130
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82f9e000
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82f9e040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 74...
RTV: Creating acceleration struction of size 0xf00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x21ca300 = 0x153f82fda300 allocated to accel structure 0x563d922321d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82fda300 to 0xccfc0900
RTV: Building BLAS into 0x563d922321d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 28 triangles added; total: 28
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (7, 6, 5)	origin: (-39.224510, -12.349403, 24.363781)
Children:
	0x563d9221b1a8: (0, 115, 0), (76, 222, 133)
	0x563d9221b428: (75, 115, 0), (144, 222, 133)
	0x563d9221b6b0: (75, 0, 0), (144, 144, 133)
	0x563d9221b748: (75, 0, 0), (76, 116, 133)
	0x563d9221b7c8: (75, 0, 0), (144, 0, 133)
	0x563d9221b848: (143, 0, 0), (144, 144, 133)
EMBREE: Set dst_map 0x153f82fda300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x21ca300 for accel 0x563d922321d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82fda300
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82fda340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 75...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x21cb200 = 0x153f82fdb200 allocated to accel structure 0x563d92232270
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f82fdb200 to 0xccfc1800
RTV: Building BLAS into 0x563d92232270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b140
Compressed Node: i	exp: (0, 1, 1)	origin: (-4.135934, 10.595240, 7.950121)
Children:
	0x563d9221b1a8: (0, 103, 132), (104, 163, 184)
	0x563d92235300: (85, 102, 0), (190, 163, 42)
	0x563d92240fd0: (25, 0, 149), (122, 148, 190)
	0x563d9224bb38: (110, 1, 8), (207, 127, 38)
	0x563d922550f8: (24, 95, 13), (132, 142, 161)
	0x563d92255d28: (104, 2, 23), (193, 29, 173)
EMBREE: Set dst_map 0x153f82fdb200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x21cb200 for accel 0x563d92232270
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f82fdb200
EMBREE: Pack root 0x563d9221b140 to root_map 0x153f82fdb240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 76...
RTV: Creating acceleration struction of size 0x71700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x71700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x223e500 = 0x153f8304e500 allocated to accel structure 0x563d92232310
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8304e500 to 0xcd034b00
RTV: Building BLAS into 0x563d92232310
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3628 triangles added; total: 3628
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b180
Compressed Node: i	exp: (2, 1, 0)	origin: (2.149565, 2.670417, 11.644086)
Children:
	0x563d9221b1e8: (81, 4, 56), (233, 93, 132)
	0x563d92235208: (5, 0, 0), (90, 92, 79)
	0x563d9223f610: (0, 71, 7), (116, 181, 119)
	0x563d92247cd8: (90, 71, 65), (225, 171, 167)
	0x563d9224c9a0: (174, 141, 87), (235, 179, 179)
	0x563d9224f888: (4, 134, 41), (234, 180, 179)
EMBREE: Set dst_map 0x153f8304e500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x223e500 for accel 0x563d92232310
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8304e500
EMBREE: Pack root 0x563d9221b180 to root_map 0x153f8304e540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 77...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x22afc00 = 0x153f830bfc00 allocated to accel structure 0x563d922323b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f830bfc00 to 0xcd0a6200
RTV: Building BLAS into 0x563d922323b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b640
Compressed Node: i	exp: (0, 2, -1)	origin: (21.349056, 15.365964, 8.574313)
Children:
	0x563d9221b6a8: (0, 0, 24), (50, 180, 149)
	0x563d9222cef0: (122, 0, 42), (138, 181, 137)
	0x563d92236400: (94, 4, 18), (130, 176, 174)
	0x563d92238548: (0, 0, 0), (119, 70, 161)
	0x563d9223a050: (0, 114, 0), (119, 180, 158)
	0x563d9223bc30: (36, 1, 24), (84, 178, 161)
EMBREE: Set dst_map 0x153f830bfc00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x22afc00 for accel 0x563d922323b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f830bfc00
EMBREE: Pack root 0x563d9221b640 to root_map 0x153f830bfc40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 78...
RTV: Creating acceleration struction of size 0xf5d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x22e1d00 = 0x153f830f1d00 allocated to accel structure 0x563d92232450
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f830f1d00 to 0xcd0d8300
RTV: Building BLAS into 0x563d92232450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7864 triangles added; total: 7864
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (3, 4, 2)	origin: (22.490477, 17.035229, 2.839839)
Children:
	0x563d92226be8: (0, 123, 77), (110, 153, 103)
	0x563d92244320: (141, 119, 42), (202, 153, 138)
	0x563d9225d798: (80, 0, 0), (155, 30, 181)
	0x563d9226cdf8: (107, 22, 66), (152, 126, 115)
	0x563d922798e8: (101, 111, 65), (145, 155, 116)
	0x563d92284d38: (47, 0, 0), (88, 23, 181)
EMBREE: Set dst_map 0x153f830f1d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x22e1d00 for accel 0x563d92232450
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f830f1d00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f830f1d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 79...
RTV: Creating acceleration struction of size 0x1c2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1c2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x23d7a00 = 0x153f831e7a00 allocated to accel structure 0x563d922324f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f831e7a00 to 0xcd1ce000
RTV: Building BLAS into 0x563d922324f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 14400 triangles added; total: 14400
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (5, 3, 0)	origin: (-12.116438, 8.797215, -12.485441)
Children:
	0x563d92226be8: (0, 19, 0), (68, 50, 81)
	0x563d9226c060: (66, 0, 0), (101, 61, 158)
	0x563d9228a808: (143, 94, 68), (175, 149, 80)
	0x563d922a04c0: (131, 70, 67), (200, 99, 80)
	0x563d922b5698: (97, 59, 63), (132, 115, 136)
	0x563d922c9e78: (79, 54, 0), (99, 148, 143)
EMBREE: Set dst_map 0x153f831e7a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x23d7a00 for accel 0x563d922324f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f831e7a00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f831e7a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 80...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2599b00 = 0x153f833a9b00 allocated to accel structure 0x563d92232590
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f833a9b00 to 0xcd390100
RTV: Building BLAS into 0x563d92232590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b640
Compressed Node: i	exp: (0, 1, 1)	origin: (8.178738, 4.236791, 8.695652)
Children:
	0x563d9221b6a8: (0, 0, 127), (105, 155, 206)
	0x563d9221bca0: (43, 7, 1), (155, 173, 78)
	0x563d9221c2b0: (87, 135, 128), (130, 160, 235)
	0x563d9221c780: (0, 0, 16), (85, 63, 251)
	0x563d9221cbb0: (99, 98, 0), (156, 173, 133)
	0x563d9221d008: (48, 94, 6), (121, 121, 241)
EMBREE: Set dst_map 0x153f833a9b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2599b00 for accel 0x563d92232590
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f833a9b00
EMBREE: Pack root 0x563d9221b640 to root_map 0x153f833a9b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 81...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x259d400 = 0x153f833ad400 allocated to accel structure 0x563d92232630
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f833ad400 to 0xcd393a00
RTV: Building BLAS into 0x563d92232630
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b640
Compressed Node: i	exp: (2, 1, -1)	origin: (-3.086398, 4.325600, 11.264421)
Children:
	0x563d9221b6a8: (0, 141, 0), (139, 177, 143)
	0x563d9221c000: (1, 8, 0), (49, 177, 65)
	0x563d9221c620: (101, 0, 84), (151, 158, 139)
	0x563d9221cd40: (76, 33, 80), (80, 125, 90)
	0x563d9221cfc0: (11, 33, 5), (151, 125, 139)
	0x563d9221d2d8: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x153f833ad400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x259d400 for accel 0x563d92232630
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f833ad400
EMBREE: Pack root 0x563d9221b640 to root_map 0x153f833ad440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 82...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x25a0d00 = 0x153f833b0d00 allocated to accel structure 0x563d922326d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f833b0d00 to 0xcd397300
RTV: Building BLAS into 0x563d922326d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b640
Compressed Node: i	exp: (0, 2, 0)	origin: (14.390169, 11.837451, -12.367093)
Children:
	0x563d9221b6a8: (0, 93, 0), (173, 139, 85)
	0x563d9222a190: (46, 0, 52), (125, 86, 101)
	0x563d9222fb00: (57, 0, 0), (112, 139, 85)
	0x563d922357a8: (0, 65, 46), (173, 112, 164)
	0x563d92237a48: (59, 0, 43), (105, 110, 85)
	0x563d92238450: (5, 0, 35), (168, 132, 85)
EMBREE: Set dst_map 0x153f833b0d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x25a0d00 for accel 0x563d922326d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f833b0d00
EMBREE: Pack root 0x563d9221b640 to root_map 0x153f833b0d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 83...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x25cd400 = 0x153f833dd400 allocated to accel structure 0x563d92232770
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f833dd400 to 0xcd3c3a00
RTV: Building BLAS into 0x563d92232770
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (4, 1, -2)	origin: (-59.264351, 1.850430, 39.631039)
Children:
	0x563d92226be8: (54, 0, 0), (104, 157, 177)
	0x563d92241aa8: (151, 0, 0), (195, 157, 177)
	0x563d922584f8: (0, 0, 0), (31, 157, 177)
	0x563d92267680: (30, 0, 0), (55, 157, 177)
	0x563d922766a8: (132, 0, 0), (152, 157, 177)
	0x563d922835f8: (103, 0, 0), (133, 157, 177)
EMBREE: Set dst_map 0x153f833dd400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x25cd400 for accel 0x563d92232770
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f833dd400
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f833dd440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 84...
RTV: Creating acceleration struction of size 0x34b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x34b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x26c5500 = 0x153f834d5500 allocated to accel structure 0x563d92232810
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f834d5500 to 0xcd4bbb00
RTV: Building BLAS into 0x563d92232810
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1684 triangles added; total: 1684
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221b680
Compressed Node: i	exp: (2, 3, 1)	origin: (-9.672963, 1.807338, 9.921342)
Children:
	0x563d9221b6e8: (0, 100, 15), (65, 133, 207)
	0x563d9222e0a8: (7, 0, 0), (24, 123, 189)
	0x563d92234340: (110, 100, 34), (232, 123, 239)
	0x563d92237b00: (23, 104, 20), (215, 127, 128)
	0x563d92239298: (14, 107, 108), (209, 133, 222)
	0x563d9223aad0: (155, 0, 56), (208, 115, 228)
EMBREE: Set dst_map 0x153f834d5500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x26c5500 for accel 0x563d92232810
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f834d5500
EMBREE: Pack root 0x563d9221b680 to root_map 0x153f834d5540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 85...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x26fa000 = 0x153f8350a000 allocated to accel structure 0x563d922328b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8350a000 to 0xcd4f0600
RTV: Building BLAS into 0x563d922328b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221bb40
Compressed Node: i	exp: (1, 2, 3)	origin: (-37.716389, -0.699337, 30.470280)
Children:
	0x563d9221bba8: (0, 137, 59), (248, 170, 210)
	0x563d9223c710: (24, 137, 0), (243, 170, 108)
	0x563d9224b610: (0, 1, 88), (55, 157, 210)
	0x563d922518b8: (17, 13, 0), (77, 149, 109)
	0x563d92255090: (28, 14, 107), (245, 143, 206)
	0x563d92257788: (204, 0, 0), (243, 160, 69)
EMBREE: Set dst_map 0x153f8350a000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x26fa000 for accel 0x563d922328b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8350a000
EMBREE: Pack root 0x563d9221bb40 to root_map 0x153f8350a040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 86...
RTV: Creating acceleration struction of size 0x12900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2778600 = 0x153f83588600 allocated to accel structure 0x563d9221b130
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f83588600 to 0xcd56ec00
RTV: Building BLAS into 0x563d9221b130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 592 triangles added; total: 592
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221bb40
Compressed Node: i	exp: (6, 2, 1)	origin: (-32.833427, -0.816855, -9.926823)
Children:
	0x563d9221bba8: (127, 0, 0), (134, 242, 185)
	0x563d9222abc0: (0, 191, 42), (131, 208, 142)
	0x563d9222cc08: (0, 33, 42), (33, 208, 142)
	0x563d9222d140: (65, 27, 42), (98, 198, 142)
	0x563d9222d580: (32, 33, 42), (66, 198, 142)
	0x563d9222d980: (97, 27, 42), (131, 198, 142)
EMBREE: Set dst_map 0x153f83588600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2778600 for accel 0x563d9221b130
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f83588600
EMBREE: Pack root 0x563d9221bb40 to root_map 0x153f83588640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 87...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x278af00 = 0x153f8359af00 allocated to accel structure 0x563d9221b1d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8359af00 to 0xcd581500
RTV: Building BLAS into 0x563d9221b1d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221bb40
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.486534, 4.133213, 7.654080)
Children:
	0x563d9221bba8: (0, 16, 0), (119, 136, 108)
	0x563d92228368: (118, 0, 99), (225, 90, 196)
	0x563d9222ac00: (109, 28, 91), (143, 56, 128)
	0x563d9222b638: (57, 50, 48), (193, 90, 170)
	0x563d9222b918: (30, 64, 25), (193, 129, 170)
	0x563d9222b9a8: (30, 89, 25), (193, 129, 170)
EMBREE: Set dst_map 0x153f8359af00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x278af00 for accel 0x563d9221b1d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8359af00
EMBREE: Pack root 0x563d9221bb40 to root_map 0x153f8359af40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 88...
RTV: Creating acceleration struction of size 0x13300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x13300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2799a00 = 0x153f835a9a00 allocated to accel structure 0x563d9221b270
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f835a9a00 to 0xcd590000
RTV: Building BLAS into 0x563d9221b270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 612 triangles added; total: 612
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221bb40
Compressed Node: i	exp: (0, 2, -1)	origin: (-1.482858, 5.879318, 11.624033)
Children:
	0x563d9221bba8: (0, 47, 0), (97, 89, 163)
	0x563d92227ba8: (142, 67, 83), (217, 126, 146)
	0x563d92229bb0: (102, 0, 50), (168, 38, 150)
	0x563d9222b5a8: (98, 53, 25), (227, 59, 197)
	0x563d9222c4a8: (99, 37, 42), (157, 97, 158)
	0x563d9222cea0: (106, 56, 54), (153, 129, 147)
EMBREE: Set dst_map 0x153f835a9a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2799a00 for accel 0x563d9221b270
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f835a9a00
EMBREE: Pack root 0x563d9221bb40 to root_map 0x153f835a9a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 89...
RTV: Creating acceleration struction of size 0x19ca00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19ca00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x27acd00 = 0x153f835bcd00 allocated to accel structure 0x563d9221b310
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f835bcd00 to 0xcd5a3300
RTV: Building BLAS into 0x563d9221b310
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13202 triangles added; total: 13202
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (1, 1, 1)	origin: (4.223882, 9.111272, 11.143844)
Children:
	0x563d92226be8: (0, 133, 13), (79, 240, 127)
	0x563d92254908: (71, 134, 20), (159, 241, 136)
	0x563d9227db30: (84, 70, 9), (153, 142, 145)
	0x563d92293f70: (3, 68, 6), (91, 144, 135)
	0x563d922a9a38: (69, 3, 9), (149, 81, 122)
	0x563d922bd688: (5, 0, 0), (77, 81, 122)
EMBREE: Set dst_map 0x153f835bcd00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x27acd00 for accel 0x563d9221b310
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f835bcd00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f835bcd40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 90...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x2949700 = 0x153f83759700 allocated to accel structure 0x563d9221b3b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f83759700 to 0xcd73fd00
RTV: Building BLAS into 0x563d9221b3b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221bb40
Compressed Node: i	exp: (2, -2, -1)	origin: (9.318943, 15.344007, -12.966626)
Children:
	0x563d9221bba8: (0, 1, 125), (131, 163, 189)
	0x563d9222d598: (0, 24, 0), (132, 174, 17)
	0x563d92236fc8: (0, 0, 16), (51, 198, 133)
	0x563d92238ac0: (83, 0, 16), (131, 198, 133)
	0x563d9223a560: (36, 0, 52), (97, 198, 189)
	0x563d9223bc98: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x153f83759700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x2949700 for accel 0x563d9221b3b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f83759700
EMBREE: Pack root 0x563d9221bb40 to root_map 0x153f83759740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 91...
RTV: Creating acceleration struction of size 0x756300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x756300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x297b800 = 0x153f8378b800 allocated to accel structure 0x563d9221b450
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8378b800 to 0xcd771e00
RTV: Building BLAS into 0x563d9221b450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 60100 triangles added; total: 60100
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (0, 2, 1)	origin: (-8.227261, 2.309378, 5.877237)
Children:
	0x563d92232be8: (0, 47, 90), (124, 95, 161)
	0x563d922f5e58: (8, 117, 0), (171, 132, 124)
	0x563d9237f790: (7, 93, 84), (173, 120, 153)
	0x563d923eb198: (7, 96, 15), (207, 120, 92)
	0x563d92455668: (10, 0, 93), (83, 49, 176)
	0x563d924be128: (60, 130, 0), (168, 150, 88)
EMBREE: Set dst_map 0x153f8378b800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x297b800 for accel 0x563d9221b450
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8378b800
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8378b840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 92...
RTV: Creating acceleration struction of size 0x135100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x135100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x30d1b00 = 0x153f83ee1b00 allocated to accel structure 0x563d9221b4f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f83ee1b00 to 0xcdec8100
RTV: Building BLAS into 0x563d9221b4f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 9888 triangles added; total: 9888
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (5, 4, 2)	origin: (-10.921741, 1.872068, 9.483254)
Children:
	0x563d92226be8: (0, 39, 63), (19, 88, 81)
	0x563d9225de40: (127, 56, 122), (152, 145, 254)
	0x563d92275028: (30, 108, 89), (77, 161, 125)
	0x563d9228baa0: (75, 144, 106), (157, 166, 142)
	0x563d922a1498: (13, 80, 0), (62, 115, 94)
	0x563d922a6318: (13, 0, 75), (79, 101, 183)
EMBREE: Set dst_map 0x153f83ee1b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x30d1b00 for accel 0x563d9221b4f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f83ee1b00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f83ee1b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 93...
RTV: Creating acceleration struction of size 0x11b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3206c00 = 0x153f84016c00 allocated to accel structure 0x563d9221b590
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84016c00 to 0xcdffd200
RTV: Building BLAS into 0x563d9221b590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 564 triangles added; total: 564
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c040
Compressed Node: i	exp: (4, 3, 3)	origin: (15.672951, 6.165153, -34.006649)
Children:
	0x563d9221c0a8: (0, 125, 0), (156, 160, 185)
	0x563d9222b528: (8, 0, 10), (34, 126, 180)
	0x563d9222c518: (29, 0, 171), (150, 126, 180)
	0x563d9222d120: (145, 0, 10), (150, 126, 180)
	0x563d9222d248: (8, 0, 10), (150, 126, 19)
	0x563d9222d2f0: (12, 0, 18), (146, 0, 172)
EMBREE: Set dst_map 0x153f84016c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3206c00 for accel 0x563d9221b590
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84016c00
EMBREE: Pack root 0x563d9221c040 to root_map 0x153f84016c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 94...
RTV: Creating acceleration struction of size 0x11b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3218700 = 0x153f84028700 allocated to accel structure 0x563d9221b630
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84028700 to 0xce00ed00
RTV: Building BLAS into 0x563d9221b630
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 564 triangles added; total: 564
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c040
Compressed Node: i	exp: (3, 2, 3)	origin: (-0.436692, 6.434074, -38.176567)
Children:
	0x563d9221c0a8: (0, 193, 0), (241, 247, 143)
	0x563d9222b5f0: (189, 0, 8), (228, 194, 139)
	0x563d9222c4b0: (10, 0, 132), (196, 194, 139)
	0x563d9222d040: (10, 0, 8), (222, 50, 139)
	0x563d9222d200: (10, 49, 8), (11, 194, 139)
	0x563d9222d280: (10, 49, 8), (228, 194, 15)
EMBREE: Set dst_map 0x153f84028700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3218700 for accel 0x563d9221b630
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84028700
EMBREE: Pack root 0x563d9221c040 to root_map 0x153f84028740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 95...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x322a200 = 0x153f8403a200 allocated to accel structure 0x563d9221b6d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8403a200 to 0xce020800
RTV: Building BLAS into 0x563d9221b6d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c040
Compressed Node: i	exp: (-1, 3, -2)	origin: (-9.313361, 2.398311, 10.580568)
Children:
	0x563d9221c0a8: (0, 106, 0), (68, 143, 135)
	0x563d922279f0: (54, 97, 24), (102, 145, 123)
	0x563d92229a48: (99, 103, 23), (181, 124, 159)
	0x563d9222ac58: (69, 79, 52), (94, 98, 101)
	0x563d9222bb80: (80, 0, 39), (119, 18, 108)
	0x563d9222c408: (80, 17, 64), (102, 80, 85)
EMBREE: Set dst_map 0x153f8403a200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x322a200 for accel 0x563d9221b6d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8403a200
EMBREE: Pack root 0x563d9221c040 to root_map 0x153f8403a240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 96...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x323a500 = 0x153f8404a500 allocated to accel structure 0x563d9221b770
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8404a500 to 0xce030b00
RTV: Building BLAS into 0x563d9221b770
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c040
Compressed Node: i	exp: (-1, 2, 0)	origin: (18.986553, 11.166733, -12.634105)
Children:
	0x563d9221c0a8: (17, 0, 72), (149, 132, 202)
	0x563d9222fd30: (2, 94, 0), (95, 132, 108)
	0x563d92235890: (0, 38, 9), (116, 131, 144)
	0x563d922381c8: (20, 1, 50), (140, 86, 140)
	0x563d92239fc0: (2, 1, 11), (107, 128, 160)
	0x563d9223b160: (68, 1, 9), (149, 129, 158)
EMBREE: Set dst_map 0x153f8404a500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x323a500 for accel 0x563d9221b770
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8404a500
EMBREE: Pack root 0x563d9221c040 to root_map 0x153f8404a540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 97...
RTV: Creating acceleration struction of size 0x1eb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1eb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x326c600 = 0x153f8407c600 allocated to accel structure 0x563d9221b810
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8407c600 to 0xce062c00
RTV: Building BLAS into 0x563d9221b810
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 980 triangles added; total: 980
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c040
Compressed Node: i	exp: (2, 2, 1)	origin: (-2.781190, 12.822519, -12.525083)
Children:
	0x563d9221c0a8: (16, 126, 0), (93, 166, 134)
	0x563d9222c4e0: (14, 102, 0), (76, 132, 126)
	0x563d9222f5c0: (31, 0, 29), (62, 109, 125)
	0x563d92230248: (77, 135, 43), (204, 156, 134)
	0x563d92233018: (0, 0, 0), (32, 119, 88)
	0x563d92233e90: (65, 153, 0), (204, 166, 61)
EMBREE: Set dst_map 0x153f8407c600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x326c600 for accel 0x563d9221b810
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8407c600
EMBREE: Pack root 0x563d9221c040 to root_map 0x153f8407c640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 98...
RTV: Creating acceleration struction of size 0x10700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x328b100 = 0x153f8409b100 allocated to accel structure 0x563d9221b8b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8409b100 to 0xce081700
RTV: Building BLAS into 0x563d9221b8b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 524 triangles added; total: 524
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c040
Compressed Node: i	exp: (3, 1, 2)	origin: (9.135196, 14.397640, -13.164979)
Children:
	0x563d9221c0a8: (0, 116, 0), (219, 146, 18)
	0x563d922276c8: (103, 0, 99), (219, 81, 134)
	0x563d922297c8: (0, 0, 99), (104, 81, 134)
	0x563d9222b900: (124, 58, 12), (219, 139, 104)
	0x563d9222beb0: (0, 59, 12), (73, 139, 104)
	0x563d9222c440: (72, 59, 12), (125, 139, 104)
EMBREE: Set dst_map 0x153f8409b100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x328b100 for accel 0x563d9221b8b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8409b100
EMBREE: Pack root 0x563d9221c040 to root_map 0x153f8409b140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 99...
RTV: Creating acceleration struction of size 0x1c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x329b800 = 0x153f840ab800 allocated to accel structure 0x563d9221b950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f840ab800 to 0xce091e00
RTV: Building BLAS into 0x563d9221b950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 912 triangles added; total: 912
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c040
Compressed Node: i	exp: (1, 4, 1)	origin: (-2.933839, 11.743355, -17.588285)
Children:
	0x563d9221c0a8: (13, 37, 26), (129, 69, 143)
	0x563d9222a880: (0, 109, 0), (145, 138, 155)
	0x563d9222c2d8: (14, 67, 25), (129, 80, 140)
	0x563d9222df08: (1, 15, 23), (128, 38, 139)
	0x563d9222f8a8: (0, 0, 9), (145, 21, 155)
	0x563d92232c28: (1, 79, 22), (130, 114, 141)
EMBREE: Set dst_map 0x153f840ab800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x329b800 for accel 0x563d9221b950
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f840ab800
EMBREE: Pack root 0x563d9221c040 to root_map 0x153f840ab840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 100...
RTV: Creating acceleration struction of size 0x2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x32b8100 = 0x153f840c8100 allocated to accel structure 0x563d9221b9f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f840c8100 to 0xce0ae700
RTV: Building BLAS into 0x563d9221b9f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 64 triangles added; total: 64
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c080
Compressed Node: i	exp: (-2, 1, 0)	origin: (-1.189075, 6.400959, 11.226490)
Children:
	0x563d9221c0e8: (60, 166, 0), (146, 195, 91)
	0x563d9221c700: (0, 0, 191), (66, 198, 235)
	0x563d9221cd38: (15, 108, 58), (122, 176, 198)
	0x563d9221ce58: (15, 108, 57), (74, 176, 197)
	0x563d9221ced8: (15, 141, 89), (108, 176, 196)
	0x563d9221cf58: (15, 108, 89), (108, 176, 198)
EMBREE: Set dst_map 0x153f840c8100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x32b8100 for accel 0x563d9221b9f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f840c8100
EMBREE: Pack root 0x563d9221c080 to root_map 0x153f840c8140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 101...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x32ba200 = 0x153f840ca200 allocated to accel structure 0x563d9221ba90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f840ca200 to 0xce0b0800
RTV: Building BLAS into 0x563d9221ba90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f840ca200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x32ba200 for accel 0x563d9221ba90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f840ca200
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f840ca240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 102...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x32ba400 = 0x153f840ca400 allocated to accel structure 0x563d9221bb30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f840ca400 to 0xce0b0a00
RTV: Building BLAS into 0x563d9221bb30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c540
Compressed Node: i	exp: (2, -2, -1)	origin: (-0.990029, 7.341716, 12.417068)
Children:
	0x563d9221c5a8: (0, 0, 0), (89, 204, 83)
	0x563d92227a90: (122, 41, 102), (233, 190, 204)
	0x563d9222a4c0: (79, 51, 66), (141, 107, 127)
	0x563d9222bc60: (60, 93, 50), (200, 128, 176)
	0x563d9222bfd8: (30, 98, 26), (200, 201, 176)
	0x563d9222c080: (59, 93, 50), (200, 190, 176)
EMBREE: Set dst_map 0x153f840ca400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x32ba400 for accel 0x563d9221bb30
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f840ca400
EMBREE: Pack root 0x563d9221c540 to root_map 0x153f840ca440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 103...
RTV: Creating acceleration struction of size 0x11b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x32c8f00 = 0x153f840d8f00 allocated to accel structure 0x563d9221bbd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f840d8f00 to 0xce0bf500
RTV: Building BLAS into 0x563d9221bbd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 564 triangles added; total: 564
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c540
Compressed Node: i	exp: (3, 3, 4)	origin: (54.247669, 8.040722, -14.172159)
Children:
	0x563d9221c5a8: (0, 125, 0), (185, 160, 156)
	0x563d9222b9d8: (4, 0, 8), (175, 126, 34)
	0x563d9222ca30: (4, 0, 29), (13, 126, 150)
	0x563d9222d648: (4, 0, 145), (175, 126, 150)
	0x563d9222d770: (166, 0, 8), (175, 126, 150)
	0x563d9222d818: (12, 0, 12), (167, 0, 146)
EMBREE: Set dst_map 0x153f840d8f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x32c8f00 for accel 0x563d9221bbd0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f840d8f00
EMBREE: Pack root 0x563d9221c540 to root_map 0x153f840d8f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 104...
RTV: Creating acceleration struction of size 0x2dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x32daa00 = 0x153f840eaa00 allocated to accel structure 0x563d9221bc70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f840eaa00 to 0xce0d1000
RTV: Building BLAS into 0x563d9221bc70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1464 triangles added; total: 1464
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c540
Compressed Node: i	exp: (-1, 0, -1)	origin: (-3.531724, 7.310989, 11.716481)
Children:
	0x563d9221c5a8: (15, 62, 2), (191, 99, 187)
	0x563d9222abb0: (84, 0, 0), (198, 67, 192)
	0x563d9222fff0: (15, 0, 1), (97, 68, 192)
	0x563d92236948: (0, 97, 30), (79, 130, 166)
	0x563d92239b40: (47, 97, 19), (179, 130, 172)
	0x563d9223aea8: (97, 79, 90), (114, 186, 98)
EMBREE: Set dst_map 0x153f840eaa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x32daa00 for accel 0x563d9221bc70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f840eaa00
EMBREE: Pack root 0x563d9221c540 to root_map 0x153f840eaa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 105...
RTV: Creating acceleration struction of size 0x51e000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x51e000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3308700 = 0x153f84118700 allocated to accel structure 0x563d9221bd10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84118700 to 0xce0fed00
RTV: Building BLAS into 0x563d9221bd10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 41917 triangles added; total: 41917
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 2, 0)	origin: (7.207290, 6.589542, -36.233871)
Children:
	0x563d92232be8: (0, 100, 3), (117, 141, 206)
	0x563d922e9910: (2, 138, 8), (107, 189, 196)
	0x563d92369e50: (11, 77, 21), (108, 103, 228)
	0x563d923b0d28: (20, 53, 66), (111, 81, 198)
	0x563d923e5118: (37, 0, 0), (74, 56, 161)
	0x563d92414c38: (81, 2, 102), (143, 56, 211)
EMBREE: Set dst_map 0x153f84118700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3308700 for accel 0x563d9221bd10
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84118700
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f84118740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 106...
RTV: Creating acceleration struction of size 0x17d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3826700 = 0x153f84636700 allocated to accel structure 0x563d9221bdb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84636700 to 0xce61cd00
RTV: Building BLAS into 0x563d9221bdb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 760 triangles added; total: 760
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c540
Compressed Node: i	exp: (2, 2, 2)	origin: (-3.374784, 0.992830, 9.606323)
Children:
	0x563d9221c5a8: (0, 157, 0), (130, 193, 120)
	0x563d922295d0: (223, 165, 24), (248, 209, 135)
	0x563d9222ba68: (45, 0, 5), (63, 172, 113)
	0x563d9222d248: (229, 0, 30), (248, 192, 132)
	0x563d9222eb80: (23, 161, 59), (237, 198, 135)
	0x563d9222f928: (28, 165, 4), (242, 209, 81)
EMBREE: Set dst_map 0x153f84636700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3826700 for accel 0x563d9221bdb0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84636700
EMBREE: Pack root 0x563d9221c540 to root_map 0x153f84636740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 107...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x383e400 = 0x153f8464e400 allocated to accel structure 0x563d9221be50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8464e400 to 0xce634a00
RTV: Building BLAS into 0x563d9221be50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221c540
Compressed Node: i	exp: (-1, -2, -2)	origin: (-19.312681, 1.869383, 30.662657)
Children:
	0x563d9221c5a8: (116, 0, 0), (181, 94, 156)
	0x563d92227b78: (53, 0, 0), (117, 45, 156)
	0x563d92229600: (129, 93, 36), (234, 165, 119)
	0x563d9222ad08: (57, 93, 36), (134, 154, 119)
	0x563d9222c6c0: (66, 42, 42), (117, 94, 113)
	0x563d9222d340: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x153f8464e400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x383e400 for accel 0x563d9221be50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8464e400
EMBREE: Pack root 0x563d9221c540 to root_map 0x153f8464e440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 108...
RTV: Creating acceleration struction of size 0x215900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x215900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3850500 = 0x153f84660500 allocated to accel structure 0x563d9221bef0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84660500 to 0xce646b00
RTV: Building BLAS into 0x563d9221bef0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 17072 triangles added; total: 17072
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (1, 1, 1)	origin: (0.883116, 8.461058, 11.599824)
Children:
	0x563d92226be8: (38, 100, 18), (129, 252, 135)
	0x563d92269730: (0, 0, 0), (117, 109, 114)
	0x563d922923d0: (120, 176, 49), (220, 253, 145)
	0x563d922b4c38: (121, 101, 30), (216, 183, 143)
	0x563d922d0fc0: (112, 3, 7), (240, 110, 67)
	0x563d922ebc68: (109, 4, 61), (240, 108, 127)
EMBREE: Set dst_map 0x153f84660500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3850500 for accel 0x563d9221bef0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84660500
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f84660540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 109...
RTV: Creating acceleration struction of size 0x51d900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x51d900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3a65e00 = 0x153f84875e00 allocated to accel structure 0x563d9221bf90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84875e00 to 0xce85c400
RTV: Building BLAS into 0x563d9221bf90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 41904 triangles added; total: 41904
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (0, 2, 0)	origin: (20.820814, 6.448864, -26.455326)
Children:
	0x563d92232be8: (71, 84, 0), (224, 123, 214)
	0x563d922ecbc8: (46, 45, 3), (198, 87, 198)
	0x563d9235b628: (82, 120, 20), (237, 144, 220)
	0x563d923b39f0: (83, 141, 45), (202, 169, 185)
	0x563d923ea2c0: (119, 0, 74), (246, 47, 167)
	0x563d924171c8: (0, 2, 110), (115, 47, 191)
EMBREE: Set dst_map 0x153f84875e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3a65e00 for accel 0x563d9221bf90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84875e00
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f84875e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 110...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3f83700 = 0x153f84d93700 allocated to accel structure 0x563d9221c030
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84d93700 to 0xced79d00
RTV: Building BLAS into 0x563d9221c030
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221ca40
Compressed Node: i	exp: (-1, 1, -1)	origin: (9.612096, 11.780621, -12.389039)
Children:
	0x563d9221caa8: (0, 1, 166), (118, 252, 252)
	0x563d9222e950: (19, 0, 0), (128, 253, 24)
	0x563d92238318: (0, 1, 21), (146, 93, 177)
	0x563d9223a168: (0, 155, 21), (146, 252, 177)
	0x563d9223c000: (0, 66, 69), (144, 182, 252)
	0x563d9223d718: (0, 4, 106), (119, 251, 177)
EMBREE: Set dst_map 0x153f84d93700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3f83700 for accel 0x563d9221c030
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84d93700
EMBREE: Pack root 0x563d9221ca40 to root_map 0x153f84d93740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 111...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3fb5800 = 0x153f84dc5800 allocated to accel structure 0x563d9221c0d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84dc5800 to 0xcedabe00
RTV: Building BLAS into 0x563d9221c0d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221ca40
Compressed Node: i	exp: (-2, -1, -2)	origin: (5.791840, 9.204057, -36.732346)
Children:
	0x563d9221caa8: (4, 79, 14), (230, 136, 130)
	0x563d9221cc40: (0, 72, 103), (234, 121, 247)
	0x563d9221cdd8: (90, 0, 0), (214, 97, 164)
	0x563d9221cfc0: (11, 0, 0), (112, 97, 169)
	0x563d9221d070: (11, 0, 103), (126, 90, 215)
	0x563d9221d100: (111, 0, 93), (213, 80, 215)
EMBREE: Set dst_map 0x153f84dc5800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3fb5800 for accel 0x563d9221c0d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84dc5800
EMBREE: Pack root 0x563d9221ca40 to root_map 0x153f84dc5840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 112...
RTV: Creating acceleration struction of size 0x10ce00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10ce00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x3fb6a00 = 0x153f84dc6a00 allocated to accel structure 0x563d9221c170
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84dc6a00 to 0xcedad000
RTV: Building BLAS into 0x563d9221c170
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8601 triangles added; total: 8601
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (1, 2, -1)	origin: (-2.881139, 6.236017, -11.539380)
Children:
	0x563d92226be8: (31, 0, 0), (138, 69, 69)
	0x563d92244978: (0, 83, 0), (31, 200, 96)
	0x563d9225f5b0: (18, 63, 4), (81, 88, 63)
	0x563d92276be8: (27, 81, 0), (89, 107, 128)
	0x563d92286cf8: (26, 172, 0), (73, 206, 133)
	0x563d92291550: (25, 93, 0), (91, 176, 133)
EMBREE: Set dst_map 0x153f84dc6a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x3fb6a00 for accel 0x563d9221c170
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84dc6a00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f84dc6a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 113...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x40c3800 = 0x153f84ed3800 allocated to accel structure 0x563d9221c210
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84ed3800 to 0xceeb9e00
RTV: Building BLAS into 0x563d9221c210
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (4, 1, -2)	origin: (-37.519714, 1.323576, 41.951893)
Children:
	0x563d92226be8: (43, 0, 0), (92, 157, 177)
	0x563d92241b28: (0, 0, 0), (44, 157, 177)
	0x563d922584f8: (163, 0, 0), (195, 157, 177)
	0x563d92267580: (139, 0, 0), (164, 157, 177)
	0x563d92276728: (91, 0, 0), (110, 157, 177)
	0x563d922836a8: (109, 0, 0), (140, 157, 177)
EMBREE: Set dst_map 0x153f84ed3800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x40c3800 for accel 0x563d9221c210
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84ed3800
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f84ed3840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 114...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x41bb900 = 0x153f84fcb900 allocated to accel structure 0x563d9221c2b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f84fcb900 to 0xcefb1f00
RTV: Building BLAS into 0x563d9221c2b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (1, -1, 1)	origin: (-4.753209, 10.206945, 7.938685)
Children:
	0x563d92226be8: (90, 0, 129), (161, 213, 169)
	0x563d92237a18: (0, 65, 114), (123, 174, 161)
	0x563d922422c8: (142, 0, 28), (185, 213, 59)
	0x563d9224c550: (29, 72, 0), (126, 173, 38)
	0x563d92254378: (86, 38, 16), (176, 194, 153)
	0x563d92258540: (4, 124, 5), (52, 134, 122)
EMBREE: Set dst_map 0x153f84fcb900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x41bb900 for accel 0x563d9221c2b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f84fcb900
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f84fcb940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 115...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x422ec00 = 0x153f8503ec00 allocated to accel structure 0x563d9221c350
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8503ec00 to 0xcf025200
RTV: Building BLAS into 0x563d9221c350
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221ca40
Compressed Node: i	exp: (0, 0, 2)	origin: (21.395897, 15.975274, 4.290071)
Children:
	0x563d9221caa8: (114, 65, 0), (151, 127, 158)
	0x563d9222dc48: (0, 0, 22), (120, 197, 42)
	0x563d92234538: (112, 0, 0), (149, 197, 52)
	0x563d92237198: (78, 58, 86), (115, 136, 100)
	0x563d92239118: (6, 6, 82), (113, 191, 87)
	0x563d9223b000: (5, 6, 41), (109, 191, 83)
EMBREE: Set dst_map 0x153f8503ec00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x422ec00 for accel 0x563d9221c350
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8503ec00
EMBREE: Pack root 0x563d9221ca40 to root_map 0x153f8503ec40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 116...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x425b300 = 0x153f8506b300 allocated to accel structure 0x563d9221c3f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8506b300 to 0xcf051900
RTV: Building BLAS into 0x563d9221c3f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221ca80
Compressed Node: i	exp: (-1, -2, -2)	origin: (-41.130722, 1.853830, 30.364429)
Children:
	0x563d9221cae8: (116, 0, 0), (181, 94, 156)
	0x563d92228478: (53, 0, 0), (117, 45, 156)
	0x563d92229f40: (129, 93, 36), (234, 165, 119)
	0x563d9222b648: (57, 93, 36), (134, 154, 119)
	0x563d9222cfc0: (66, 42, 42), (117, 94, 113)
	0x563d9222dc80: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x153f8506b300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x425b300 for accel 0x563d9221c3f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8506b300
EMBREE: Pack root 0x563d9221ca80 to root_map 0x153f8506b340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 117...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x426d400 = 0x153f8507d400 allocated to accel structure 0x563d9221c490
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8507d400 to 0xcf063a00
RTV: Building BLAS into 0x563d9221c490
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (0, 2, -2)	origin: (4.246224, 9.934937, 12.673444)
Children:
	0x563d92226be8: (5, 32, 0), (127, 63, 135)
	0x563d922387b0: (90, 57, 6), (155, 105, 124)
	0x563d92242f40: (6, 96, 5), (124, 126, 123)
	0x563d9224d0f8: (15, 122, 7), (115, 146, 83)
	0x563d92254fd8: (0, 57, 34), (100, 97, 123)
	0x563d9225b048: (21, 0, 80), (123, 41, 151)
EMBREE: Set dst_map 0x153f8507d400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x426d400 for accel 0x563d9221c490
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8507d400
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f8507d440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 118...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x42f4500 = 0x153f85104500 allocated to accel structure 0x563d9221c530
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85104500 to 0xcf0eab00
RTV: Building BLAS into 0x563d9221c530
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221cf40
Compressed Node: i	exp: (0, 1, 2)	origin: (0.303388, 11.811528, 7.874757)
Children:
	0x563d9221cfa8: (0, 0, 213), (80, 140, 249)
	0x563d92227958: (81, 3, 0), (166, 141, 38)
	0x563d92228e48: (37, 1, 125), (119, 183, 173)
	0x563d922299c8: (56, 2, 79), (133, 183, 127)
	0x563d9222a5b0: (68, 2, 35), (146, 167, 84)
	0x563d9222ad38: (21, 0, 168), (108, 166, 217)
EMBREE: Set dst_map 0x153f85104500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x42f4500 for accel 0x563d9221c530
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85104500
EMBREE: Pack root 0x563d9221cf40 to root_map 0x153f85104540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 119...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x42ffa00 = 0x153f8510fa00 allocated to accel structure 0x563d9221c5d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8510fa00 to 0xcf0f6000
RTV: Building BLAS into 0x563d9221c5d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (3, 2, 2)	origin: (-3.078175, 0.420881, -10.811305)
Children:
	0x563d92226be8: (0, 138, 0), (135, 179, 61)
	0x563d9225eeb0: (119, 30, 32), (135, 147, 160)
	0x563d92283430: (54, 138, 144), (157, 179, 182)
	0x563d9229e920: (54, 0, 30), (62, 151, 165)
	0x563d922b5bd8: (49, 135, 36), (134, 160, 160)
	0x563d922cae98: (55, 106, 32), (102, 147, 163)
EMBREE: Set dst_map 0x153f8510fa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x42ffa00 for accel 0x563d9221c5d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8510fa00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f8510fa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 120...
RTV: Creating acceleration struction of size 0xcf00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xcf00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x449f800 = 0x153f852af800 allocated to accel structure 0x563d9221c670
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f852af800 to 0xcf295e00
RTV: Building BLAS into 0x563d9221c670
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 412 triangles added; total: 412
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221cf40
Compressed Node: i	exp: (-3, 2, 2)	origin: (54.495090, 9.250996, -12.128033)
Children:
	0x563d9221cfa8: (0, 61, 12), (6, 147, 46)
	0x563d922286c0: (205, 53, 171), (213, 79, 244)
	0x563d9222a0e8: (209, 28, 146), (219, 53, 216)
	0x563d9222ad50: (211, 20, 84), (219, 50, 123)
	0x563d9222b5b0: (211, 100, 200), (212, 125, 231)
	0x563d9222bb10: (211, 0, 0), (212, 21, 15)
EMBREE: Set dst_map 0x153f852af800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x449f800 for accel 0x563d9221c670
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f852af800
EMBREE: Pack root 0x563d9221cf40 to root_map 0x153f852af840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 121...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x44ac700 = 0x153f852bc700 allocated to accel structure 0x563d9221c710
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f852bc700 to 0xcf2a2d00
RTV: Building BLAS into 0x563d9221c710
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (1, 2, 0)	origin: (20.962700, 14.932918, 5.869254)
Children:
	0x563d92226be8: (0, 33, 8), (78, 139, 228)
	0x563d9223a9d0: (67, 0, 0), (94, 165, 134)
	0x563d9223e040: (67, 14, 117), (94, 152, 236)
	0x563d92241000: (79, 0, 48), (149, 23, 188)
	0x563d92242d08: (79, 143, 48), (149, 165, 188)
	0x563d922448c8: (90, 0, 68), (139, 165, 168)
EMBREE: Set dst_map 0x153f852bc700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x44ac700 for accel 0x563d9221c710
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f852bc700
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f852bc740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 122...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x44f4000 = 0x153f85304000 allocated to accel structure 0x563d922148b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85304000 to 0xcf2ea600
RTV: Building BLAS into 0x563d922148b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221cf40
Compressed Node: i	exp: (2, 1, -1)	origin: (6.095877, 4.145544, 8.560542)
Children:
	0x563d9221cfa8: (0, 0, 0), (87, 165, 77)
	0x563d92226d30: (83, 8, 52), (175, 177, 163)
	0x563d92227648: (7, 97, 7), (169, 125, 161)
	0x563d922279d8: (81, 33, 59), (87, 125, 71)
	0x563d92227c58: (0, 36, 0), (161, 63, 154)
	0x563d92227e70: (83, 141, 52), (87, 165, 77)
EMBREE: Set dst_map 0x153f85304000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x44f4000 for accel 0x563d922148b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85304000
EMBREE: Pack root 0x563d9221cf40 to root_map 0x153f85304040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 123...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x44f7900 = 0x153f85307900 allocated to accel structure 0x563d922147c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85307900 to 0xcf2edf00
RTV: Building BLAS into 0x563d922147c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221cf40
Compressed Node: i	exp: (0, 1, 3)	origin: (-1.054618, 7.570610, 7.265945)
Children:
	0x563d9221cfa8: (0, 0, 136), (84, 139, 159)
	0x563d92227940: (105, 0, 0), (195, 138, 24)
	0x563d92228e38: (46, 0, 79), (133, 182, 111)
	0x563d922299b0: (70, 0, 50), (152, 182, 81)
	0x563d9222a5d0: (87, 0, 22), (171, 164, 54)
	0x563d9222aed0: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x153f85307900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x44f7900 for accel 0x563d922147c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85307900
EMBREE: Pack root 0x563d9221cf40 to root_map 0x153f85307940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 124...
RTV: Creating acceleration struction of size 0x11900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x4502e00 = 0x153f85312e00 allocated to accel structure 0x563d9221c8f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85312e00 to 0xcf2f9400
RTV: Building BLAS into 0x563d9221c8f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 560 triangles added; total: 560
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221cf80
Compressed Node: i	exp: (3, 1, 2)	origin: (-0.439978, 8.442059, 8.481987)
Children:
	0x563d9221cfe8: (98, 0, 164), (184, 217, 177)
	0x563d92227f70: (105, 1, 22), (190, 218, 62)
	0x563d92229b08: (7, 0, 0), (67, 244, 22)
	0x563d9222ae50: (0, 0, 146), (59, 243, 166)
	0x563d9222c2f0: (65, 1, 12), (108, 245, 31)
	0x563d9222d040: (57, 0, 157), (100, 244, 174)
EMBREE: Set dst_map 0x153f85312e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x4502e00 for accel 0x563d9221c8f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85312e00
EMBREE: Pack root 0x563d9221cf80 to root_map 0x153f85312e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 125...
RTV: Creating acceleration struction of size 0xeff00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeff00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x4514700 = 0x153f85324700 allocated to accel structure 0x563d9221c990
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85324700 to 0xcf30ad00
RTV: Building BLAS into 0x563d9221c990
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7676 triangles added; total: 7676
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (2, 2, 1)	origin: (20.502178, 9.074520, -30.894236)
Children:
	0x563d92226be8: (77, 0, 54), (142, 90, 128)
	0x563d92247d08: (127, 33, 58), (219, 83, 177)
	0x563d9225e3d8: (130, 0, 61), (191, 42, 168)
	0x563d922702d0: (47, 23, 39), (100, 104, 139)
	0x563d9227ca08: (0, 94, 50), (56, 142, 146)
	0x563d92285eb0: (10, 30, 0), (60, 99, 104)
EMBREE: Set dst_map 0x153f85324700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x4514700 for accel 0x563d9221c990
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85324700
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f85324740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 126...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x4604600 = 0x153f85414600 allocated to accel structure 0x563d9221ca30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85414600 to 0xcf3fac00
RTV: Building BLAS into 0x563d9221ca30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (0, 2, -2)	origin: (1.429830, 10.237099, -12.290397)
Children:
	0x563d92226be8: (10, 156, 64), (184, 218, 203)
	0x563d92236420: (13, 0, 41), (184, 64, 220)
	0x563d92241e00: (117, 61, 26), (230, 126, 180)
	0x563d9224ba58: (0, 58, 39), (130, 120, 230)
	0x563d922545b0: (132, 117, 0), (216, 163, 160)
	0x563d9225b408: (7, 116, 61), (142, 170, 235)
EMBREE: Set dst_map 0x153f85414600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x4604600 for accel 0x563d9221ca30
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85414600
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f85414640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 127...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x468b700 = 0x153f8549b700 allocated to accel structure 0x563d9221cad0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8549b700 to 0xcf481d00
RTV: Building BLAS into 0x563d9221cad0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221d440
Compressed Node: i	exp: (-2, -1, -2)	origin: (5.057471, 9.260567, -36.701096)
Children:
	0x563d9221d4a8: (4, 79, 14), (230, 136, 130)
	0x563d9221d640: (0, 72, 103), (234, 121, 247)
	0x563d9221d7d8: (90, 0, 0), (214, 97, 164)
	0x563d92226c40: (11, 0, 0), (112, 97, 169)
	0x563d92226cf0: (11, 0, 103), (126, 90, 215)
	0x563d92226d80: (111, 0, 93), (213, 80, 215)
EMBREE: Set dst_map 0x153f8549b700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x468b700 for accel 0x563d9221cad0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8549b700
EMBREE: Pack root 0x563d9221d440 to root_map 0x153f8549b740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 128...
RTV: Creating acceleration struction of size 0x153100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x153100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x468c900 = 0x153f8549c900 allocated to accel structure 0x563d9221cb70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8549c900 to 0xcf482f00
RTV: Building BLAS into 0x563d9221cb70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10848 triangles added; total: 10848
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (5, 4, 2)	origin: (-9.422773, 1.499443, 9.338799)
Children:
	0x563d92226be8: (0, 5, 41), (29, 38, 149)
	0x563d92267940: (118, 18, 154), (152, 40, 248)
	0x563d9227c3b0: (73, 1, 216), (119, 38, 241)
	0x563d9228ca40: (79, 132, 115), (117, 154, 165)
	0x563d9229c658: (43, 0, 175), (74, 18, 220)
	0x563d922a9ea8: (27, 3, 0), (44, 21, 178)
EMBREE: Set dst_map 0x153f8549c900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x468c900 for accel 0x563d9221cb70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8549c900
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f8549c940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 129...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x47dfa00 = 0x153f855efa00 allocated to accel structure 0x563d9221cc10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f855efa00 to 0xcf5d6000
RTV: Building BLAS into 0x563d9221cc10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221d440
Compressed Node: i	exp: (0, 1, -1)	origin: (-9.605950, 2.347748, 10.494856)
Children:
	0x563d9221d4a8: (128, 120, 78), (195, 224, 134)
	0x563d92228788: (93, 0, 49), (152, 67, 138)
	0x563d9222a0e0: (0, 85, 0), (100, 159, 153)
	0x563d9222b528: (89, 95, 26), (204, 105, 179)
	0x563d9222c258: (90, 66, 41), (142, 172, 144)
	0x563d9222cb40: (96, 99, 52), (138, 229, 135)
EMBREE: Set dst_map 0x153f855efa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x47dfa00 for accel 0x563d9221cc10
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f855efa00
EMBREE: Pack root 0x563d9221d440 to root_map 0x153f855efa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 130...
RTV: Creating acceleration struction of size 0x153100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x153100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x47eed00 = 0x153f855fed00 allocated to accel structure 0x563d9221ccb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f855fed00 to 0xcf5e5300
RTV: Building BLAS into 0x563d9221ccb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10848 triangles added; total: 10848
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (5, 4, 2)	origin: (-9.050831, 1.514136, 6.564975)
Children:
	0x563d92226be8: (0, 6, 0), (29, 38, 95)
	0x563d922665b8: (119, 18, 73), (152, 40, 197)
	0x563d9227a1e8: (75, 1, 14), (120, 38, 83)
	0x563d9228abf0: (79, 132, 123), (116, 154, 145)
	0x563d9229a7b8: (35, 0, 1), (76, 20, 17)
	0x563d922aa220: (27, 5, 7), (36, 21, 166)
EMBREE: Set dst_map 0x153f855fed00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x47eed00 for accel 0x563d9221ccb0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f855fed00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f855fed40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 131...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x4941e00 = 0x153f85751e00 allocated to accel structure 0x563d9221cd50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85751e00 to 0xcf738400
RTV: Building BLAS into 0x563d9221cd50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (-1, 1, 0)	origin: (-3.023636, 6.550070, 6.757456)
Children:
	0x563d92226be8: (0, 30, 0), (246, 69, 129)
	0x563d9222d608: (0, 64, 1), (237, 104, 126)
	0x563d92235cc0: (7, 0, 3), (222, 33, 125)
	0x563d922396d8: (17, 102, 13), (213, 130, 116)
	0x563d92239fa8: (35, 82, 23), (186, 192, 102)
	0x563d9223a5e0: (35, 128, 23), (186, 134, 76)
EMBREE: Set dst_map 0x153f85751e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x4941e00 for accel 0x563d9221cd50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85751e00
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f85751e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 132...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x4969d00 = 0x153f85779d00 allocated to accel structure 0x563d9221cdf0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f85779d00 to 0xcf760300
RTV: Building BLAS into 0x563d9221cdf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9221d480
Compressed Node: i	exp: (2, 1, -1)	origin: (-2.700863, 4.334765, 7.578253)
Children:
	0x563d9221d4e8: (0, 141, 0), (139, 177, 143)
	0x563d92227080: (1, 8, 0), (49, 177, 65)
	0x563d92227698: (101, 0, 84), (151, 158, 139)
	0x563d92227dc0: (76, 33, 80), (80, 125, 90)
	0x563d92228040: (11, 33, 5), (151, 125, 139)
	0x563d92228358: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x153f85779d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x4969d00 for accel 0x563d9221cdf0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f85779d00
EMBREE: Pack root 0x563d9221d480 to root_map 0x153f85779d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 133...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x496d600 = 0x153f8577d600 allocated to accel structure 0x563d9221ce90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8577d600 to 0xcf763c00
RTV: Building BLAS into 0x563d9221ce90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (2, -2, -1)	origin: (5.497696, 15.344007, -12.966626)
Children:
	0x563d92226be8: (0, 1, 125), (131, 163, 189)
	0x563d9222f558: (0, 24, 0), (132, 174, 17)
	0x563d92238f88: (0, 0, 16), (51, 198, 133)
	0x563d9223aa40: (83, 0, 16), (131, 198, 133)
	0x563d9223c520: (36, 0, 52), (97, 198, 189)
	0x563d9223dc18: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x153f8577d600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x496d600 for accel 0x563d9221ce90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8577d600
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f8577d640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 134...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x499f700 = 0x153f857af700 allocated to accel structure 0x563d9221cf30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f857af700 to 0xcf795d00
RTV: Building BLAS into 0x563d9221cf30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (-1, 1, 0)	origin: (8.412616, 5.488227, 13.064262)
Children:
	0x563d92226be8: (0, 29, 0), (246, 69, 129)
	0x563d9222e6d8: (0, 64, 1), (239, 103, 126)
	0x563d92236790: (13, 0, 12), (209, 31, 115)
	0x563d922392d8: (30, 102, 13), (225, 129, 117)
	0x563d92239b98: (48, 82, 24), (200, 192, 103)
	0x563d9223a080: (48, 128, 24), (200, 134, 77)
EMBREE: Set dst_map 0x153f857af700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x499f700 for accel 0x563d9221cf30
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f857af700
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f857af740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 135...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x49c7600 = 0x153f857d7600 allocated to accel structure 0x563d9221d930
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f857d7600 to 0xcf7bdc00
RTV: Building BLAS into 0x563d9221d930
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92226b80
Compressed Node: i	exp: (1, -2, 0)	origin: (-5.383837, 19.168715, -17.276011)
Children:
	0x563d92226be8: (12, 0, 165), (144, 179, 253)
	0x563d9222d798: (0, 0, 0), (71, 179, 166)
	0x563d92234af0: (69, 14, 123), (91, 165, 170)
	0x563d92235d38: (0, 0, 0), (144, 17, 251)
	0x563d92235ee8: (0, 162, 0), (144, 179, 251)
	0x563d92236218: (0, 13, 0), (144, 166, 249)
EMBREE: Set dst_map 0x153f857d7600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x49c7600 for accel 0x563d9221d930
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f857d7600
EMBREE: Pack root 0x563d92226b80 to root_map 0x153f857d7640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 136...
RTV: Creating acceleration struction of size 0x17e8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17e8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x49e5300 = 0x153f857f5300 allocated to accel structure 0x563d9221d9d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f857f5300 to 0xcf7db900
RTV: Building BLAS into 0x563d9221d9d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 195840 triangles added; total: 195840
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (5, 4, 3)	origin: (-9.594675, 0.917178, 7.437652)
Children:
	0x563d92232be8: (92, 10, 172), (135, 29, 217)
	0x563d924f07d0: (0, 15, 0), (18, 29, 137)
	0x563d927367f8: (54, 0, 158), (91, 14, 186)
	0x563d92936290: (51, 139, 121), (82, 151, 145)
	0x563d92a64f78: (28, 6, 132), (51, 18, 166)
	0x563d92b85a60: (76, 65, 155), (85, 71, 169)
EMBREE: Set dst_map 0x153f857f5300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x49e5300 for accel 0x563d9221d9d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f857f5300
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f857f5340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 137...
RTV: Creating acceleration struction of size 0xb4100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb4100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x61cd400 = 0x153f86fdd400 allocated to accel structure 0x563d9221da70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f86fdd400 to 0xd0fc3a00
RTV: Building BLAS into 0x563d9221da70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5760 triangles added; total: 5760
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922271c0
Compressed Node: i	exp: (3, 2, 1)	origin: (-0.816571, 9.498903, 9.960917)
Children:
	0x563d92227228: (110, 141, 166), (166, 191, 218)
	0x563d9223c7b8: (164, 0, 183), (177, 159, 221)
	0x563d92248a58: (61, 151, 145), (112, 196, 201)
	0x563d92255300: (28, 151, 105), (63, 199, 180)
	0x563d922608f0: (0, 204, 0), (14, 223, 121)
	0x563d92269c40: (12, 191, 86), (38, 223, 143)
EMBREE: Set dst_map 0x153f86fdd400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x61cd400 for accel 0x563d9221da70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f86fdd400
EMBREE: Pack root 0x563d922271c0 to root_map 0x153f86fdd440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 138...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6281500 = 0x153f87091500 allocated to accel structure 0x563d92231160
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f87091500 to 0xd1077b00
RTV: Building BLAS into 0x563d92231160
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922271c0
Compressed Node: i	exp: (4, 1, -2)	origin: (-1.272687, 17.325241, -18.597860)
Children:
	0x563d92227228: (54, 0, 0), (104, 157, 177)
	0x563d92241ca8: (151, 0, 0), (195, 157, 177)
	0x563d92258660: (0, 0, 0), (31, 157, 177)
	0x563d92267800: (30, 0, 0), (55, 157, 177)
	0x563d92276990: (132, 0, 0), (152, 157, 177)
	0x563d922838b8: (103, 0, 0), (133, 157, 177)
EMBREE: Set dst_map 0x153f87091500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6281500 for accel 0x563d92231160
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f87091500
EMBREE: Pack root 0x563d922271c0 to root_map 0x153f87091540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 139...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6379600 = 0x153f87189600 allocated to accel structure 0x563d9221db10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f87189600 to 0xd116fc00
RTV: Building BLAS into 0x563d9221db10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922271c0
Compressed Node: i	exp: (1, 0, -1)	origin: (7.680769, 6.855777, 13.044589)
Children:
	0x563d92227228: (62, 0, 9), (179, 105, 136)
	0x563d92228a80: (176, 58, 63), (250, 103, 155)
	0x563d9222a068: (0, 106, 0), (38, 176, 57)
	0x563d9222b230: (100, 96, 21), (149, 158, 142)
	0x563d9222c280: (0, 77, 0), (142, 169, 102)
	0x563d9222cfb0: (62, 75, 16), (210, 121, 134)
EMBREE: Set dst_map 0x153f87189600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6379600 for accel 0x563d9221db10
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f87189600
EMBREE: Pack root 0x563d922271c0 to root_map 0x153f87189640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 140...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6388900 = 0x153f87198900 allocated to accel structure 0x563d9221dbb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f87198900 to 0xd117ef00
RTV: Building BLAS into 0x563d9221dbb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922271c0
Compressed Node: i	exp: (1, -1, 0)	origin: (-5.820128, 11.619901, 10.244545)
Children:
	0x563d92227228: (163, 0, 34), (230, 214, 242)
	0x563d9223f658: (0, 64, 168), (140, 167, 219)
	0x563d92247e60: (81, 36, 185), (208, 193, 238)
	0x563d9224d390: (12, 65, 5), (147, 167, 52)
	0x563d922514d0: (3, 74, 0), (55, 142, 181)
	0x563d92255160: (91, 35, 22), (219, 179, 193)
EMBREE: Set dst_map 0x153f87198900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6388900 for accel 0x563d9221dbb0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f87198900
EMBREE: Pack root 0x563d922271c0 to root_map 0x153f87198940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 141...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x63fbc00 = 0x153f8720bc00 allocated to accel structure 0x563d9221d2b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8720bc00 to 0xd11f2200
RTV: Building BLAS into 0x563d9221d2b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f8720bc00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x63fbc00 for accel 0x563d9221d2b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8720bc00
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f8720bc40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 142...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x63fbe00 = 0x153f8720be00 allocated to accel structure 0x563d9221d350
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8720be00 to 0xd11f2400
RTV: Building BLAS into 0x563d9221d350
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227680
Compressed Node: i	exp: (2, 1, -1)	origin: (-3.381325, 9.132265, 7.753721)
Children:
	0x563d922276e8: (0, 141, 0), (139, 177, 143)
	0x563d92228000: (1, 8, 0), (49, 177, 65)
	0x563d92228660: (101, 0, 84), (151, 158, 139)
	0x563d92228d40: (76, 33, 80), (80, 125, 90)
	0x563d92228fc0: (11, 33, 5), (151, 125, 139)
	0x563d922292d8: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x153f8720be00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x63fbe00 for accel 0x563d9221d350
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8720be00
EMBREE: Pack root 0x563d92227680 to root_map 0x153f8720be40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 143...
RTV: Creating acceleration struction of size 0x751700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x751700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x63ff700 = 0x153f8720f700 allocated to accel structure 0x563d9221d430
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8720f700 to 0xd11f5d00
RTV: Building BLAS into 0x563d9221d430
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 59947 triangles added; total: 59947
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 2, 1)	origin: (-37.682285, 1.790902, 30.317593)
Children:
	0x563d92232be8: (107, 95, 33), (195, 172, 153)
	0x563d92309b60: (21, 68, 11), (211, 98, 149)
	0x563d923a73e8: (0, 94, 25), (113, 132, 160)
	0x563d9242b248: (15, 129, 27), (116, 180, 154)
	0x563d9249db58: (41, 0, 68), (145, 72, 133)
	0x563d924dfbb0: (41, 0, 0), (99, 72, 74)
EMBREE: Set dst_map 0x153f8720f700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x63ff700 for accel 0x563d9221d430
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8720f700
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8720f740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 144...
RTV: Creating acceleration struction of size 0x34300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x34300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6b50e00 = 0x153f87960e00 allocated to accel structure 0x563d9221c7b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f87960e00 to 0xd1947400
RTV: Building BLAS into 0x563d9221c7b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1668 triangles added; total: 1668
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227680
Compressed Node: i	exp: (3, 2, 3)	origin: (0.397539, 0.607900, 7.545499)
Children:
	0x563d922276e8: (104, 31, 15), (194, 220, 79)
	0x563d9222c9f8: (103, 35, 78), (188, 220, 141)
	0x563d922338a0: (0, 0, 66), (24, 220, 125)
	0x563d92236598: (6, 1, 0), (24, 220, 64)
	0x563d92238f58: (23, 0, 115), (105, 220, 132)
	0x563d9223b538: (23, 0, 4), (106, 220, 23)
EMBREE: Set dst_map 0x153f87960e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6b50e00 for accel 0x563d9221c7b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f87960e00
EMBREE: Pack root 0x563d92227680 to root_map 0x153f87960e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 145...
RTV: Creating acceleration struction of size 0x34000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x34000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6b85100 = 0x153f87995100 allocated to accel structure 0x563d9221d540
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f87995100 to 0xd197b700
RTV: Building BLAS into 0x563d9221d540
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1662 triangles added; total: 1662
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227680
Compressed Node: i	exp: (0, 1, -1)	origin: (25.886511, 18.166216, -19.839668)
Children:
	0x563d922276e8: (33, 93, 119), (116, 140, 184)
	0x563d9222ffa0: (3, 42, 6), (141, 95, 142)
	0x563d92235600: (37, 0, 31), (67, 46, 87)
	0x563d92239120: (3, 93, 14), (140, 118, 133)
	0x563d9223bf60: (0, 153, 0), (144, 157, 115)
	0x563d9223d9f0: (3, 94, 6), (141, 154, 133)
EMBREE: Set dst_map 0x153f87995100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6b85100 for accel 0x563d9221d540
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f87995100
EMBREE: Pack root 0x563d92227680 to root_map 0x153f87995140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 146...
RTV: Creating acceleration struction of size 0x756300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x756300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x6bb9100 = 0x153f879c9100 allocated to accel structure 0x563d9221d5e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f879c9100 to 0xd19af700
RTV: Building BLAS into 0x563d9221d5e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 60100 triangles added; total: 60100
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 2, 0)	origin: (-9.069944, 2.357372, 10.744848)
Children:
	0x563d92232be8: (0, 107, 1), (88, 136, 137)
	0x563d922ce860: (125, 71, 21), (191, 108, 154)
	0x563d92367d68: (120, 38, 23), (220, 75, 145)
	0x563d923dc3b8: (85, 105, 0), (155, 134, 173)
	0x563d9244f778: (34, 76, 22), (131, 108, 181)
	0x563d924c1138: (131, 0, 27), (248, 41, 142)
EMBREE: Set dst_map 0x153f879c9100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x6bb9100 for accel 0x563d9221d5e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f879c9100
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f879c9140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 147...
RTV: Creating acceleration struction of size 0x678000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x678000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x730f400 = 0x153f8811f400 allocated to accel structure 0x563d9221d680
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8811f400 to 0xd2105a00
RTV: Building BLAS into 0x563d9221d680
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 52989 triangles added; total: 52989
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 2, 0)	origin: (-3.086168, 4.461805, 9.877907)
Children:
	0x563d92232be8: (16, 112, 7), (101, 156, 198)
	0x563d922fa428: (73, 46, 0), (139, 90, 203)
	0x563d92399fc0: (67, 87, 0), (130, 115, 199)
	0x563d924203b0: (0, 91, 45), (71, 115, 199)
	0x563d924573d0: (106, 0, 118), (168, 48, 176)
	0x563d9248e8a8: (57, 0, 36), (113, 48, 89)
EMBREE: Set dst_map 0x153f8811f400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x730f400 for accel 0x563d9221d680
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8811f400
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8811f440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 148...
RTV: Creating acceleration struction of size 0x83500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x83500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7987400 = 0x153f88797400 allocated to accel structure 0x563d9221d720
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88797400 to 0xd277da00
RTV: Building BLAS into 0x563d9221d720
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4200 triangles added; total: 4200
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227680
Compressed Node: i	exp: (3, 3, 1)	origin: (-3.140154, 4.427189, 11.265611)
Children:
	0x563d922276e8: (101, 5, 142), (130, 34, 180)
	0x563d92234518: (0, 157, 0), (35, 193, 52)
	0x563d9223eb98: (138, 0, 150), (175, 36, 203)
	0x563d92248898: (91, 157, 19), (121, 194, 96)
	0x563d9224fff0: (70, 161, 12), (95, 190, 64)
	0x563d92256e08: (55, 162, 1), (73, 190, 34)
EMBREE: Set dst_map 0x153f88797400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7987400 for accel 0x563d9221d720
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88797400
EMBREE: Pack root 0x563d92227680 to root_map 0x153f88797440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 149...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7a0a900 = 0x153f8881a900 allocated to accel structure 0x563d9221d7c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8881a900 to 0xd2800f00
RTV: Building BLAS into 0x563d9221d7c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922276c0
Compressed Node: i	exp: (0, 2, -1)	origin: (5.397581, 4.307834, 12.845096)
Children:
	0x563d92227728: (18, 4, 43), (75, 109, 92)
	0x563d92229480: (33, 163, 36), (94, 231, 116)
	0x563d9222aeb8: (0, 125, 0), (185, 146, 162)
	0x563d9222bed0: (101, 71, 24), (188, 146, 162)
	0x563d9222cee0: (56, 57, 32), (111, 164, 125)
	0x563d9222d8f0: (47, 0, 42), (114, 130, 116)
EMBREE: Set dst_map 0x153f8881a900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7a0a900 for accel 0x563d9221d7c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8881a900
EMBREE: Pack root 0x563d922276c0 to root_map 0x153f8881a940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 150...
RTV: Creating acceleration struction of size 0xeb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7a19c00 = 0x153f88829c00 allocated to accel structure 0x563d9221d860
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88829c00 to 0xd2810200
RTV: Building BLAS into 0x563d9221d860
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 468 triangles added; total: 468
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227b80
Compressed Node: i	exp: (3, -1, 0)	origin: (-1.170100, 7.350015, 12.461865)
Children:
	0x563d92227be8: (0, 0, 0), (83, 190, 77)
	0x563d9222a150: (114, 14, 95), (217, 155, 189)
	0x563d9222cac0: (74, 37, 62), (135, 87, 121)
	0x563d9222e528: (56, 78, 47), (186, 97, 164)
	0x563d9222e680: (28, 86, 24), (186, 184, 164)
	0x563d9222e728: (55, 80, 46), (186, 155, 164)
EMBREE: Set dst_map 0x153f88829c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7a19c00 for accel 0x563d9221d860
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88829c00
EMBREE: Pack root 0x563d92227b80 to root_map 0x153f88829c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 151...
RTV: Creating acceleration struction of size 0x48d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x48d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7a28700 = 0x153f88838700 allocated to accel structure 0x563d92227150
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88838700 to 0xd281ed00
RTV: Building BLAS into 0x563d92227150
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2328 triangles added; total: 2328
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227b80
Compressed Node: i	exp: (3, 0, -2)	origin: (3.603456, 11.352874, -37.240856)
Children:
	0x563d92227be8: (52, 0, 0), (91, 138, 157)
	0x563d92235e38: (93, 1, 0), (134, 136, 157)
	0x563d9223bb70: (142, 1, 0), (154, 136, 157)
	0x563d92241228: (154, 1, 0), (186, 137, 157)
	0x563d92246d20: (27, 1, 0), (44, 136, 157)
	0x563d92247bc8: (0, 1, 0), (28, 136, 157)
EMBREE: Set dst_map 0x153f88838700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7a28700 for accel 0x563d92227150
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88838700
EMBREE: Pack root 0x563d92227b80 to root_map 0x153f88838740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 152...
RTV: Creating acceleration struction of size 0x8a300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x8a300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7a71400 = 0x153f88881400 allocated to accel structure 0x563d92214280
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88881400 to 0xd2867a00
RTV: Building BLAS into 0x563d92214280
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4420 triangles added; total: 4420
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227b80
Compressed Node: i	exp: (3, 1, 2)	origin: (-11.532341, 0.086767, -8.058805)
Children:
	0x563d92227be8: (126, 0, 21), (163, 179, 163)
	0x563d922389d0: (0, 8, 7), (30, 180, 79)
	0x563d92246640: (74, 105, 0), (134, 199, 143)
	0x563d92252c10: (13, 0, 0), (76, 173, 132)
	0x563d922592b8: (63, 12, 96), (145, 121, 163)
	0x563d9225d780: (66, 0, 9), (151, 123, 132)
EMBREE: Set dst_map 0x153f88881400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7a71400 for accel 0x563d92214280
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88881400
EMBREE: Pack root 0x563d92227b80 to root_map 0x153f88881440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 153...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7afb700 = 0x153f8890b700 allocated to accel structure 0x563d92227260
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8890b700 to 0xd28f1d00
RTV: Building BLAS into 0x563d92227260
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f8890b700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7afb700 for accel 0x563d92227260
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8890b700
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f8890b740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 154...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7afb900 = 0x153f8890b900 allocated to accel structure 0x563d92227300
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8890b900 to 0xd28f1f00
RTV: Building BLAS into 0x563d92227300
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227b80
Compressed Node: i	exp: (1, -1, -1)	origin: (-2.103683, 6.913056, -11.368189)
Children:
	0x563d92227be8: (0, 0, 166), (251, 118, 252)
	0x563d92230298: (0, 19, 0), (253, 128, 24)
	0x563d92239608: (0, 0, 21), (97, 146, 177)
	0x563d9223b380: (159, 0, 21), (251, 146, 177)
	0x563d9223d1f0: (71, 0, 69), (186, 144, 252)
	0x563d9223ed40: (1, 0, 106), (249, 119, 177)
EMBREE: Set dst_map 0x153f8890b900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7afb900 for accel 0x563d92227300
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8890b900
EMBREE: Pack root 0x563d92227b80 to root_map 0x153f8890b940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 155...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7b2da00 = 0x153f8893da00 allocated to accel structure 0x563d922273a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8893da00 to 0xd2924000
RTV: Building BLAS into 0x563d922273a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227b80
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.259277, 9.186163, -36.680801)
Children:
	0x563d92227be8: (0, 153, 0), (122, 230, 230)
	0x563d92227d80: (108, 153, 0), (230, 229, 236)
	0x563d92227f18: (15, 0, 92), (122, 154, 217)
	0x563d92228048: (108, 0, 11), (216, 154, 137)
	0x563d922280f0: (110, 0, 30), (216, 154, 217)
	0x563d92228188: (15, 0, 12), (121, 154, 199)
EMBREE: Set dst_map 0x153f8893da00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7b2da00 for accel 0x563d922273a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8893da00
EMBREE: Pack root 0x563d92227b80 to root_map 0x153f8893da40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 156...
RTV: Creating acceleration struction of size 0x6600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7b2ec00 = 0x153f8893ec00 allocated to accel structure 0x563d92227440
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8893ec00 to 0xd2925200
RTV: Building BLAS into 0x563d92227440
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 202 triangles added; total: 202
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227b80
Compressed Node: i	exp: (1, 1, 0)	origin: (-0.670915, 10.066412, 10.462246)
Children:
	0x563d92227be8: (91, 0, 40), (174, 109, 115)
	0x563d92228940: (0, 7, 0), (44, 114, 83)
	0x563d92229240: (39, 4, 25), (96, 112, 93)
	0x563d92229b80: (95, 105, 66), (175, 197, 170)
	0x563d92229f18: (4, 111, 43), (46, 202, 137)
	0x563d9222a298: (44, 108, 51), (98, 200, 148)
EMBREE: Set dst_map 0x153f8893ec00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7b2ec00 for accel 0x563d92227440
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8893ec00
EMBREE: Pack root 0x563d92227b80 to root_map 0x153f8893ec40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 157...
RTV: Creating acceleration struction of size 0x29b500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x29b500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7b35200 = 0x153f88945200 allocated to accel structure 0x563d922274e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88945200 to 0xd292b800
RTV: Building BLAS into 0x563d922274e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 21352 triangles added; total: 21352
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92227bc0
Compressed Node: i	exp: (5, 4, 2)	origin: (-2.196763, 6.851079, -13.386913)
Children:
	0x563d92227c28: (0, 118, 0), (164, 147, 109)
	0x563d92276718: (0, 0, 12), (31, 139, 156)
	0x563d922ab1c0: (0, 103, 32), (164, 114, 79)
	0x563d922dda50: (145, 1, 12), (165, 139, 183)
	0x563d92300600: (0, 68, 62), (147, 93, 99)
	0x563d923121f8: (66, 68, 33), (129, 114, 83)
EMBREE: Set dst_map 0x153f88945200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7b35200 for accel 0x563d922274e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88945200
EMBREE: Pack root 0x563d92227bc0 to root_map 0x153f88945240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 158...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7dd0700 = 0x153f88be0700 allocated to accel structure 0x563d92227580
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88be0700 to 0xd2bc6d00
RTV: Building BLAS into 0x563d92227580
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228080
Compressed Node: i	exp: (-1, 1, 0)	origin: (8.641598, 5.787920, 7.975622)
Children:
	0x563d922280e8: (0, 30, 0), (246, 69, 129)
	0x563d9222eb08: (0, 64, 1), (237, 104, 126)
	0x563d92237640: (7, 0, 3), (222, 33, 125)
	0x563d9223b098: (17, 102, 13), (213, 130, 116)
	0x563d9223b928: (35, 82, 23), (186, 192, 102)
	0x563d9223bfa0: (35, 128, 23), (186, 134, 76)
EMBREE: Set dst_map 0x153f88be0700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7dd0700 for accel 0x563d92227580
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88be0700
EMBREE: Pack root 0x563d92228080 to root_map 0x153f88be0740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 159...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7df8600 = 0x153f88c08600 allocated to accel structure 0x563d92214370
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88c08600 to 0xd2beec00
RTV: Building BLAS into 0x563d92214370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228080
Compressed Node: i	exp: (0, 2, -1)	origin: (21.349056, 15.365964, 5.132863)
Children:
	0x563d922280e8: (0, 0, 24), (50, 180, 149)
	0x563d92230418: (122, 0, 42), (138, 181, 137)
	0x563d922397d8: (94, 4, 18), (130, 176, 174)
	0x563d9223b9b0: (0, 0, 0), (119, 70, 161)
	0x563d9223d490: (0, 114, 0), (119, 180, 158)
	0x563d9223f060: (36, 1, 24), (84, 178, 161)
EMBREE: Set dst_map 0x153f88c08600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7df8600 for accel 0x563d92214370
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88c08600
EMBREE: Pack root 0x563d92228080 to root_map 0x153f88c08640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 160...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7e2a700 = 0x153f88c3a700 allocated to accel structure 0x563d922276c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88c3a700 to 0xd2c20d00
RTV: Building BLAS into 0x563d922276c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228080
Compressed Node: i	exp: (-1, -1, -1)	origin: (5.948792, 9.235549, -36.778606)
Children:
	0x563d922280e8: (0, 38, 23), (67, 124, 113)
	0x563d92228218: (66, 40, 31), (147, 109, 143)
	0x563d92228340: (64, 0, 35), (147, 88, 143)
	0x563d922283f0: (28, 5, 35), (117, 106, 143)
	0x563d92228528: (53, 38, 0), (103, 99, 42)
	0x563d922285c0: (57, 105, 31), (94, 138, 113)
EMBREE: Set dst_map 0x153f88c3a700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7e2a700 for accel 0x563d922276c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88c3a700
EMBREE: Pack root 0x563d92228080 to root_map 0x153f88c3a740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 161...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7e2b900 = 0x153f88c3b900 allocated to accel structure 0x563d92227760
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88c3b900 to 0xd2c21f00
RTV: Building BLAS into 0x563d92227760
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f88c3b900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7e2b900 for accel 0x563d92227760
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88c3b900
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f88c3b940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 162...
RTV: Creating acceleration struction of size 0xa9c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xa9c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7e2bb00 = 0x153f88c3bb00 allocated to accel structure 0x563d92227800
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88c3bb00 to 0xd2c22100
RTV: Building BLAS into 0x563d92227800
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5430 triangles added; total: 5430
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228080
Compressed Node: i	exp: (7, 6, 7)	origin: (-32.516800, -9.981682, -65.075577)
Children:
	0x563d922280e8: (34, 77, 48), (88, 143, 107)
	0x563d92244b10: (68, 8, 0), (113, 111, 116)
	0x563d92258660: (0, 8, 48), (113, 95, 116)
	0x563d92264480: (105, 8, 0), (122, 111, 199)
	0x563d9226c468: (109, 26, 57), (153, 134, 199)
	0x563d9226e4a8: (172, 0, 63), (175, 72, 141)
EMBREE: Set dst_map 0x153f88c3bb00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7e2bb00 for accel 0x563d92227800
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88c3bb00
EMBREE: Pack root 0x563d92228080 to root_map 0x153f88c3bb40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 163...
RTV: Creating acceleration struction of size 0x19fb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x7ed5700 = 0x153f88ce5700 allocated to accel structure 0x563d922278a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88ce5700 to 0xd2ccbd00
RTV: Building BLAS into 0x563d922278a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13299 triangles added; total: 13299
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228080
Compressed Node: i	exp: (3, 2, 2)	origin: (-36.325069, -0.621233, 28.271132)
Children:
	0x563d922280e8: (0, 138, 0), (135, 179, 61)
	0x563d9225f190: (119, 30, 32), (135, 147, 160)
	0x563d92283648: (54, 138, 144), (157, 179, 182)
	0x563d9229ee30: (54, 0, 30), (62, 151, 165)
	0x563d922b61d8: (49, 135, 36), (134, 160, 160)
	0x563d922cb030: (55, 106, 32), (102, 147, 163)
EMBREE: Set dst_map 0x153f88ce5700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x7ed5700 for accel 0x563d922278a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88ce5700
EMBREE: Pack root 0x563d92228080 to root_map 0x153f88ce5740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 164...
RTV: Creating acceleration struction of size 0x2c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8075200 = 0x153f88e85200 allocated to accel structure 0x563d92227940
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88e85200 to 0xd2e6b800
RTV: Building BLAS into 0x563d92227940
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1412 triangles added; total: 1412
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228080
Compressed Node: i	exp: (1, 0, 1)	origin: (2.076681, 8.226901, 11.937919)
Children:
	0x563d922280e8: (76, 0, 6), (166, 125, 135)
	0x563d9222cbd8: (0, 0, 54), (82, 250, 130)
	0x563d92233260: (4, 0, 0), (82, 245, 63)
	0x563d92236168: (77, 114, 6), (166, 141, 30)
	0x563d922389e8: (76, 109, 12), (166, 246, 137)
	0x563d9223a4f8: (76, 210, 55), (161, 250, 86)
EMBREE: Set dst_map 0x153f88e85200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8075200 for accel 0x563d92227940
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88e85200
EMBREE: Pack root 0x563d92228080 to root_map 0x153f88e85240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 165...
RTV: Creating acceleration struction of size 0xeef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xeef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x80a1500 = 0x153f88eb1500 allocated to accel structure 0x563d922279e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88eb1500 to 0xd2e97b00
RTV: Building BLAS into 0x563d922279e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7644 triangles added; total: 7644
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922280c0
Compressed Node: i	exp: (1, 2, 0)	origin: (-4.158373, 11.370051, -17.481403)
Children:
	0x563d92228128: (0, 80, 40), (158, 122, 189)
	0x563d92248200: (0, 110, 50), (158, 201, 121)
	0x563d922635b0: (5, 112, 115), (155, 188, 205)
	0x563d9227d060: (57, 142, 0), (111, 177, 59)
	0x563d92285430: (1, 65, 56), (155, 98, 187)
	0x563d9228a538: (0, 0, 67), (157, 88, 187)
EMBREE: Set dst_map 0x153f88eb1500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x80a1500 for accel 0x563d922279e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88eb1500
EMBREE: Pack root 0x563d922280c0 to root_map 0x153f88eb1540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 166...
RTV: Creating acceleration struction of size 0xcb400
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xcb400) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8190400 = 0x153f88fa0400 allocated to accel structure 0x563d92227a80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f88fa0400 to 0xd2f86a00
RTV: Building BLAS into 0x563d92227a80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 6501 triangles added; total: 6501
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228580
Compressed Node: i	exp: (3, 2, 3)	origin: (-4.412127, 8.879470, 7.436929)
Children:
	0x563d922285e8: (0, 98, 0), (44, 246, 123)
	0x563d92246ac8: (14, 96, 63), (187, 245, 133)
	0x563d92257360: (27, 0, 11), (61, 101, 116)
	0x563d92264fc0: (27, 95, 0), (182, 245, 77)
	0x563d922721d0: (170, 2, 27), (228, 99, 132)
	0x563d92278a48: (42, 0, 11), (223, 100, 132)
EMBREE: Set dst_map 0x153f88fa0400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8190400 for accel 0x563d92227a80
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f88fa0400
EMBREE: Pack root 0x563d92228580 to root_map 0x153f88fa0440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 167...
RTV: Creating acceleration struction of size 0xb4100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb4100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x825b800 = 0x153f8906b800 allocated to accel structure 0x563d92227b50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8906b800 to 0xd3051e00
RTV: Building BLAS into 0x563d92227b50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5760 triangles added; total: 5760
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228580
Compressed Node: i	exp: (2, 3, 1)	origin: (5.685976, 2.594982, 11.887847)
Children:
	0x563d922285e8: (65, 121, 129), (152, 156, 190)
	0x563d92241e70: (1, 121, 64), (70, 145, 181)
	0x563d922515f8: (22, 39, 2), (61, 63, 59)
	0x563d9225b720: (0, 0, 0), (28, 52, 53)
	0x563d922650b0: (1, 61, 8), (61, 76, 115)
	0x563d9226d978: (1, 75, 63), (27, 124, 115)
EMBREE: Set dst_map 0x153f8906b800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x825b800 for accel 0x563d92227b50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8906b800
EMBREE: Pack root 0x563d92228580 to root_map 0x153f8906b840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 168...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x830f900 = 0x153f8911f900 allocated to accel structure 0x563d92227bf0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8911f900 to 0xd3105f00
RTV: Building BLAS into 0x563d92227bf0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228580
Compressed Node: i	exp: (-1, 2, -2)	origin: (-1.785295, 12.415592, 10.119463)
Children:
	0x563d922285e8: (133, 2, 28), (214, 56, 188)
	0x563d9222af48: (93, 0, 42), (149, 69, 159)
	0x563d9222ca00: (0, 29, 0), (95, 61, 160)
	0x563d9222dc40: (97, 68, 54), (141, 96, 140)
	0x563d9222f060: (83, 187, 59), (127, 214, 140)
	0x563d9222f8b0: (101, 95, 87), (122, 188, 110)
EMBREE: Set dst_map 0x153f8911f900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x830f900 for accel 0x563d92227bf0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8911f900
EMBREE: Pack root 0x563d92228580 to root_map 0x153f8911f940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 169...
RTV: Creating acceleration struction of size 0x310d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x310d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x831fc00 = 0x153f8912fc00 allocated to accel structure 0x563d92214700
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8912fc00 to 0xd3116200
RTV: Building BLAS into 0x563d92214700
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 25112 triangles added; total: 25112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 1, 0)	origin: (-1.970806, 17.213131, -18.970644)
Children:
	0x563d92232be8: (8, 183, 17), (102, 242, 162)
	0x563d92332aa8: (2, 0, 0), (189, 39, 195)
	0x563d9234a038: (2, 113, 0), (201, 185, 48)
	0x563d9235b028: (0, 112, 33), (218, 184, 212)
	0x563d92367a58: (72, 15, 36), (208, 131, 217)
	0x563d923726a8: (2, 15, 16), (75, 148, 189)
EMBREE: Set dst_map 0x153f8912fc00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x831fc00 for accel 0x563d92214700
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8912fc00
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8912fc40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 170...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8630900 = 0x153f89440900 allocated to accel structure 0x563d92227d00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89440900 to 0xd3426f00
RTV: Building BLAS into 0x563d92227d00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228580
Compressed Node: i	exp: (2, -2, -1)	origin: (1.035907, 15.344007, -12.966626)
Children:
	0x563d922285e8: (0, 1, 125), (131, 163, 189)
	0x563d92232c18: (0, 24, 0), (132, 174, 17)
	0x563d9223a488: (0, 0, 16), (51, 198, 133)
	0x563d9223bf80: (83, 0, 16), (131, 198, 133)
	0x563d9223da20: (36, 0, 52), (97, 198, 189)
	0x563d9223f158: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x153f89440900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8630900 for accel 0x563d92227d00
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89440900
EMBREE: Pack root 0x563d92228580 to root_map 0x153f89440940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 171...
RTV: Creating acceleration struction of size 0x135100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x135100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8662a00 = 0x153f89472a00 allocated to accel structure 0x563d92214610
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89472a00 to 0xd3459000
RTV: Building BLAS into 0x563d92214610
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 9888 triangles added; total: 9888
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228580
Compressed Node: i	exp: (5, 4, 2)	origin: (-10.539998, 1.884147, 6.808161)
Children:
	0x563d922285e8: (0, 39, 0), (19, 88, 18)
	0x563d9225d8c8: (129, 56, 57), (153, 145, 197)
	0x563d92275780: (35, 116, 31), (76, 161, 72)
	0x563d9228bf40: (75, 144, 70), (154, 166, 215)
	0x563d922a18a0: (13, 80, 12), (59, 119, 167)
	0x563d922a7e88: (13, 0, 0), (80, 101, 18)
EMBREE: Set dst_map 0x153f89472a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8662a00 for accel 0x563d92214610
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89472a00
EMBREE: Pack root 0x563d92228580 to root_map 0x153f89472a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 172...
RTV: Creating acceleration struction of size 0x52100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x52100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8797b00 = 0x153f895a7b00 allocated to accel structure 0x563d92227e40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f895a7b00 to 0xd358e100
RTV: Building BLAS into 0x563d92227e40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2624 triangles added; total: 2624
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228580
Compressed Node: i	exp: (3, 2, 3)	origin: (-0.023113, 1.430584, 6.620296)
Children:
	0x563d922285e8: (0, 171, 132), (187, 229, 223)
	0x563d92234bb8: (7, 175, 48), (195, 230, 152)
	0x563d9223e500: (15, 171, 2), (200, 206, 68)
	0x563d92243120: (19, 0, 0), (200, 174, 32)
	0x563d92246718: (103, 45, 207), (179, 173, 242)
	0x563d92249cc8: (0, 0, 192), (108, 173, 241)
EMBREE: Set dst_map 0x153f895a7b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8797b00 for accel 0x563d92227e40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f895a7b00
EMBREE: Pack root 0x563d92228580 to root_map 0x153f895a7b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 173...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x87e9c00 = 0x153f895f9c00 allocated to accel structure 0x563d92227ee0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f895f9c00 to 0xd35e0200
RTV: Building BLAS into 0x563d92227ee0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922285c0
Compressed Node: i	exp: (-2, 1, 4)	origin: (22.340450, 16.814526, -18.057705)
Children:
	0x563d92228628: (0, 0, 91), (177, 157, 140)
	0x563d92244c68: (0, 0, 0), (177, 157, 44)
	0x563d9225b310: (0, 0, 163), (177, 157, 195)
	0x563d9226a338: (0, 0, 139), (177, 157, 164)
	0x563d92279440: (0, 0, 43), (177, 157, 62)
	0x563d92286258: (0, 0, 61), (177, 157, 92)
EMBREE: Set dst_map 0x153f895f9c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x87e9c00 for accel 0x563d92227ee0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f895f9c00
EMBREE: Pack root 0x563d922285c0 to root_map 0x153f895f9c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 174...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x88e1d00 = 0x153f896f1d00 allocated to accel structure 0x563d92227f80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f896f1d00 to 0xd36d8300
RTV: Building BLAS into 0x563d92227f80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f896f1d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x88e1d00 for accel 0x563d92227f80
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f896f1d00
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f896f1d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 175...
RTV: Creating acceleration struction of size 0x4900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x88e1f00 = 0x153f896f1f00 allocated to accel structure 0x563d92228050
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f896f1f00 to 0xd36d8500
RTV: Building BLAS into 0x563d92228050
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 144 triangles added; total: 144
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228a80
Compressed Node: i	exp: (1, 2, 0)	origin: (14.859822, 5.603785, -23.893583)
Children:
	0x563d92228ae8: (0, 0, 0), (111, 26, 150)
	0x563d92229418: (108, 0, 66), (132, 141, 150)
	0x563d92229fa0: (0, 24, 0), (134, 144, 38)
	0x563d9222a3c0: (0, 24, 3), (133, 144, 41)
	0x563d9222a608: (1, 24, 0), (135, 144, 38)
	0x563d9222a8a0: (1, 24, 2), (135, 144, 41)
EMBREE: Set dst_map 0x153f896f1f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x88e1f00 for accel 0x563d92228050
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f896f1f00
EMBREE: Pack root 0x563d92228a80 to root_map 0x153f896f1f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 176...
RTV: Creating acceleration struction of size 0x600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x88e6800 = 0x153f896f6800 allocated to accel structure 0x563d922280f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f896f6800 to 0xd36dce00
RTV: Building BLAS into 0x563d922280f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10 triangles added; total: 10
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228a80
Compressed Node: i	exp: (0, -1, 0)	origin: (16.490942, 6.457016, -23.218424)
Children:
	0x563d92228ae8: (1, 0, 2), (138, 219, 4)
	0x563d92228b68: (0, 2, 209), (138, 223, 211)
	0x563d92228be8: (0, 0, 2), (2, 219, 211)
	0x563d92228c68: (137, 1, 2), (139, 221, 211)
	0x563d92228ce8: (17, 199, 0), (129, 203, 213)
	0x563d92228cf4: (18, 201, 0), (129, 205, 213)
EMBREE: Set dst_map 0x153f896f6800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x88e6800 for accel 0x563d922280f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f896f6800
EMBREE: Pack root 0x563d92228a80 to root_map 0x153f896f6840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 177...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x88e6e00 = 0x153f896f6e00 allocated to accel structure 0x563d92228190
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f896f6e00 to 0xd36dd400
RTV: Building BLAS into 0x563d92228190
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228a80
Compressed Node: i	exp: (0, 2, 1)	origin: (14.926736, 11.642426, -12.324431)
Children:
	0x563d92228ae8: (7, 29, 62), (200, 122, 131)
	0x563d9223df20: (0, 0, 0), (207, 42, 67)
	0x563d92242f78: (7, 109, 0), (200, 145, 69)
	0x563d92246fe0: (59, 0, 8), (148, 145, 53)
	0x563d92247700: (7, 40, 53), (20, 120, 69)
	0x563d92247d10: (187, 40, 53), (200, 120, 69)
EMBREE: Set dst_map 0x153f896f6e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x88e6e00 for accel 0x563d92228190
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f896f6e00
EMBREE: Pack root 0x563d92228a80 to root_map 0x153f896f6e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 178...
RTV: Creating acceleration struction of size 0x32f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x892e700 = 0x153f8973e700 allocated to accel structure 0x563d92228230
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8973e700 to 0xd3724d00
RTV: Building BLAS into 0x563d92228230
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1628 triangles added; total: 1628
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228a80
Compressed Node: i	exp: (3, 3, 3)	origin: (-0.967658, 4.291109, 6.680929)
Children:
	0x563d92228ae8: (131, 23, 57), (198, 109, 184)
	0x563d9222e760: (0, 0, 96), (32, 111, 176)
	0x563d922337d8: (30, 0, 164), (134, 111, 185)
	0x563d92236930: (11, 1, 3), (40, 112, 92)
	0x563d92239600: (37, 0, 11), (132, 111, 31)
	0x563d9223c0a8: (131, 20, 0), (200, 243, 61)
EMBREE: Set dst_map 0x153f8973e700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x892e700 for accel 0x563d92228230
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8973e700
EMBREE: Pack root 0x563d92228a80 to root_map 0x153f8973e740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 179...
RTV: Creating acceleration struction of size 0x47900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x47900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8961600 = 0x153f89771600 allocated to accel structure 0x563d922282d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89771600 to 0xd3757c00
RTV: Building BLAS into 0x563d922282d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2288 triangles added; total: 2288
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228a80
Compressed Node: i	exp: (0, 2, 1)	origin: (6.198376, 11.642426, -12.324431)
Children:
	0x563d92228ae8: (7, 29, 62), (200, 122, 131)
	0x563d9223df20: (0, 0, 0), (207, 42, 67)
	0x563d92242f78: (7, 109, 0), (200, 145, 69)
	0x563d92246fe0: (59, 0, 8), (148, 145, 53)
	0x563d92247700: (7, 40, 53), (20, 120, 69)
	0x563d92247d10: (187, 40, 53), (200, 120, 69)
EMBREE: Set dst_map 0x153f89771600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8961600 for accel 0x563d922282d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89771600
EMBREE: Pack root 0x563d92228a80 to root_map 0x153f89771640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 180...
RTV: Creating acceleration struction of size 0x6900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x89a8f00 = 0x153f897b8f00 allocated to accel structure 0x563d92228370
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f897b8f00 to 0xd379f500
RTV: Building BLAS into 0x563d92228370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 208 triangles added; total: 208
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228a80
Compressed Node: i	exp: (2, 1, 1)	origin: (22.757118, 6.483803, -28.712318)
Children:
	0x563d92228ae8: (49, 87, 42), (156, 173, 146)
	0x563d92229840: (146, 0, 0), (196, 37, 124)
	0x563d9222a008: (62, 29, 9), (149, 99, 63)
	0x563d9222a780: (0, 23, 61), (67, 99, 157)
	0x563d9222ade8: (0, 0, 0), (195, 31, 157)
	0x563d9222b278: (4, 27, 42), (153, 137, 157)
EMBREE: Set dst_map 0x153f897b8f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x89a8f00 for accel 0x563d92228370
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f897b8f00
EMBREE: Pack root 0x563d92228a80 to root_map 0x153f897b8f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 181...
RTV: Creating acceleration struction of size 0x5ea00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5ea00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x89af800 = 0x153f897bf800 allocated to accel structure 0x563d92228410
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f897bf800 to 0xd37a5e00
RTV: Building BLAS into 0x563d92228410
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3026 triangles added; total: 3026
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228ac0
Compressed Node: i	exp: (0, 2, 0)	origin: (0.966728, 12.519979, 9.978691)
Children:
	0x563d92228b28: (0, 41, 50), (193, 60, 189)
	0x563d9223e3f0: (30, 105, 48), (172, 137, 191)
	0x563d92248cc0: (5, 0, 0), (156, 43, 105)
	0x563d9224c400: (29, 59, 45), (176, 108, 192)
	0x563d9224f198: (29, 5, 70), (167, 43, 175)
	0x563d92251950: (25, 59, 41), (180, 73, 196)
EMBREE: Set dst_map 0x153f897bf800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x89af800 for accel 0x563d92228410
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f897bf800
EMBREE: Pack root 0x563d92228ac0 to root_map 0x153f897bf840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 182...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8a0e200 = 0x153f8981e200 allocated to accel structure 0x563d922284b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8981e200 to 0xd3804800
RTV: Building BLAS into 0x563d922284b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228f80
Compressed Node: i	exp: (2, 2, 3)	origin: (-2.758100, 1.003291, 6.734889)
Children:
	0x563d92228fe8: (130, 181, 0), (187, 234, 157)
	0x563d92255a08: (0, 178, 57), (50, 234, 177)
	0x563d92279100: (17, 40, 134), (141, 193, 158)
	0x563d9229cc68: (31, 0, 57), (161, 197, 72)
	0x563d922b4b68: (18, 181, 52), (155, 210, 158)
	0x563d922ca760: (22, 139, 65), (158, 193, 120)
EMBREE: Set dst_map 0x153f8981e200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8a0e200 for accel 0x563d922284b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8981e200
EMBREE: Pack root 0x563d92228f80 to root_map 0x153f8981e240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 183...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8bae000 = 0x153f899be000 allocated to accel structure 0x563d92228550
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f899be000 to 0xd39a4600
RTV: Building BLAS into 0x563d92228550
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228f80
Compressed Node: i	exp: (-1, 2, 0)	origin: (-3.394199, 8.804159, -12.773970)
Children:
	0x563d92228fe8: (11, 0, 70), (149, 131, 224)
	0x563d92236560: (2, 88, 0), (95, 131, 119)
	0x563d9223a170: (0, 32, 9), (116, 130, 157)
	0x563d9223cc60: (2, 1, 11), (84, 127, 182)
	0x563d9223da88: (45, 1, 57), (140, 85, 155)
	0x563d9223e590: (68, 1, 9), (149, 127, 180)
EMBREE: Set dst_map 0x153f899be000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8bae000 for accel 0x563d92228550
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f899be000
EMBREE: Pack root 0x563d92228f80 to root_map 0x153f899be040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 184...
RTV: Creating acceleration struction of size 0x32000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8be0100 = 0x153f899f0100 allocated to accel structure 0x563d922285f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f899f0100 to 0xd39d6700
RTV: Building BLAS into 0x563d922285f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1598 triangles added; total: 1598
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228f80
Compressed Node: i	exp: (-1, 2, 0)	origin: (16.337204, 11.166733, -12.634105)
Children:
	0x563d92228fe8: (17, 0, 72), (149, 132, 202)
	0x563d92235430: (2, 94, 0), (95, 132, 108)
	0x563d92238e20: (0, 38, 9), (116, 131, 144)
	0x563d9223b778: (20, 1, 50), (140, 86, 140)
	0x563d9223d540: (2, 1, 11), (107, 128, 160)
	0x563d9223e758: (68, 1, 9), (149, 129, 158)
EMBREE: Set dst_map 0x153f899f0100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8be0100 for accel 0x563d922285f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f899f0100
EMBREE: Pack root 0x563d92228f80 to root_map 0x153f899f0140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 185...
RTV: Creating acceleration struction of size 0x3800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c12100 = 0x153f89a22100 allocated to accel structure 0x563d92228690
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89a22100 to 0xd3a08700
RTV: Building BLAS into 0x563d92228690
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 110 triangles added; total: 110
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228f80
Compressed Node: i	exp: (7, 7, 7)	origin: (-75.062286, -12.349403, -65.584579)
Children:
	0x563d92228fe8: (86, 55, 91), (100, 86, 172)
	0x563d92229e58: (86, 52, 79), (100, 86, 92)
	0x563d9222a488: (0, 95, 40), (186, 108, 57)
	0x563d9222a8c0: (41, 0, 113), (75, 144, 147)
	0x563d9222acc0: (21, 72, 0), (35, 78, 168)
	0x563d9222b018: (0, 0, 146), (35, 144, 168)
EMBREE: Set dst_map 0x153f89a22100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c12100 for accel 0x563d92228690
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89a22100
EMBREE: Pack root 0x563d92228f80 to root_map 0x153f89a22140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 186...
RTV: Creating acceleration struction of size 0x16600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x16600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c15900 = 0x153f89a25900 allocated to accel structure 0x563d92228730
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89a25900 to 0xd3a0bf00
RTV: Building BLAS into 0x563d92228730
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 714 triangles added; total: 714
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228f80
Compressed Node: i	exp: (2, 0, 1)	origin: (7.881705, 13.553783, -13.811920)
Children:
	0x563d92228fe8: (0, 7, 0), (27, 108, 121)
	0x563d9222bf70: (0, 24, 119), (42, 110, 180)
	0x563d9222eb00: (40, 0, 137), (50, 135, 210)
	0x563d92230b78: (101, 16, 142), (135, 119, 202)
	0x563d92234058: (97, 0, 147), (107, 135, 220)
	0x563d92234ac8: (44, 0, 139), (107, 135, 220)
EMBREE: Set dst_map 0x153f89a25900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c15900 for accel 0x563d92228730
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89a25900
EMBREE: Pack root 0x563d92228f80 to root_map 0x153f89a25940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 187...
RTV: Creating acceleration struction of size 0x600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c2bf00 = 0x153f89a3bf00 allocated to accel structure 0x563d922287d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89a3bf00 to 0xd3a22500
RTV: Building BLAS into 0x563d922287d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 10 triangles added; total: 10
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228f80
Compressed Node: i	exp: (1, 0, 0)	origin: (14.672216, 5.226297, -23.901310)
Children:
	0x563d92228fe8: (0, 69, 0), (21, 212, 179)
	0x563d92229068: (123, 0, 10), (145, 141, 186)
	0x563d922290e8: (0, 11, 170), (143, 212, 189)
	0x563d92229168: (1, 0, 0), (145, 200, 19)
	0x563d922291e8: (0, 9, 17), (129, 92, 156)
	0x563d922291f4: (0, 9, 28), (129, 92, 166)
EMBREE: Set dst_map 0x153f89a3bf00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c2bf00 for accel 0x563d922287d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89a3bf00
EMBREE: Pack root 0x563d92228f80 to root_map 0x153f89a3bf40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 188...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c2c500 = 0x153f89a3c500 allocated to accel structure 0x563d92228870
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89a3c500 to 0xd3a22b00
RTV: Building BLAS into 0x563d92228870
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228f80
Compressed Node: i	exp: (2, -1, 0)	origin: (-3.088338, 8.719844, 7.258079)
Children:
	0x563d92228fe8: (0, 31, 69), (50, 110, 126)
	0x563d9222b130: (88, 45, 144), (167, 95, 210)
	0x563d9222c780: (64, 0, 0), (120, 141, 92)
	0x563d9222da70: (49, 20, 75), (129, 120, 144)
	0x563d9222eca8: (70, 0, 114), (120, 141, 191)
	0x563d9222fd00: (74, 32, 91), (172, 109, 156)
EMBREE: Set dst_map 0x153f89a3c500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c2c500 for accel 0x563d92228870
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89a3c500
EMBREE: Pack root 0x563d92228f80 to root_map 0x153f89a3c540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 189...
RTV: Creating acceleration struction of size 0x6600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c3c800 = 0x153f89a4c800 allocated to accel structure 0x563d92228910
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89a4c800 to 0xd3a32e00
RTV: Building BLAS into 0x563d92228910
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 202 triangles added; total: 202
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92228fc0
Compressed Node: i	exp: (1, 2, 0)	origin: (-2.106196, 9.615215, 10.534891)
Children:
	0x563d92229028: (91, 0, 38), (175, 71, 105)
	0x563d92229d80: (0, 4, 0), (45, 75, 72)
	0x563d9222a698: (39, 2, 22), (97, 73, 82)
	0x563d9222afd8: (96, 68, 54), (177, 128, 149)
	0x563d9222b540: (5, 72, 30), (48, 131, 116)
	0x563d9222b8c0: (45, 70, 38), (100, 130, 127)
EMBREE: Set dst_map 0x153f89a4c800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c3c800 for accel 0x563d92228910
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89a4c800
EMBREE: Pack root 0x563d92228fc0 to root_map 0x153f89a4c840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 190...
RTV: Creating acceleration struction of size 0x12900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c42e00 = 0x153f89a52e00 allocated to accel structure 0x563d922289b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89a52e00 to 0xd3a39400
RTV: Building BLAS into 0x563d922289b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 592 triangles added; total: 592
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229480
Compressed Node: i	exp: (6, 2, 1)	origin: (-66.080322, -1.858969, 29.155613)
Children:
	0x563d922294e8: (127, 0, 0), (134, 242, 185)
	0x563d9222f4c0: (0, 191, 42), (131, 208, 142)
	0x563d92233108: (0, 33, 42), (33, 208, 142)
	0x563d92233640: (65, 27, 42), (98, 198, 142)
	0x563d92233a40: (32, 33, 42), (66, 198, 142)
	0x563d92233e40: (97, 27, 42), (131, 198, 142)
EMBREE: Set dst_map 0x153f89a52e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c42e00 for accel 0x563d922289b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89a52e00
EMBREE: Pack root 0x563d92229480 to root_map 0x153f89a52e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 191...
RTV: Creating acceleration struction of size 0x46600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x46600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c55700 = 0x153f89a65700 allocated to accel structure 0x563d92228a50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89a65700 to 0xd3a4bd00
RTV: Building BLAS into 0x563d92228a50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2250 triangles added; total: 2250
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229480
Compressed Node: i	exp: (2, 2, 1)	origin: (-2.354312, 12.702306, -12.187840)
Children:
	0x563d922294e8: (0, 7, 6), (51, 147, 128)
	0x563d9223c998: (115, 7, 0), (171, 147, 122)
	0x563d922425c0: (20, 0, 0), (145, 40, 122)
	0x563d922450a8: (35, 105, 0), (145, 147, 123)
	0x563d92247700: (45, 37, 120), (128, 115, 123)
	0x563d92247f18: (20, 7, 25), (124, 147, 81)
EMBREE: Set dst_map 0x153f89a65700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c55700 for accel 0x563d92228a50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89a65700
EMBREE: Pack root 0x563d92229480 to root_map 0x153f89a65740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 192...
RTV: Creating acceleration struction of size 0x27f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x27f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8c9bd00 = 0x153f89aabd00 allocated to accel structure 0x563d922145b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89aabd00 to 0xd3a92300
RTV: Building BLAS into 0x563d922145b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1276 triangles added; total: 1276
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229480
Compressed Node: i	exp: (-1, 1, 0)	origin: (4.331082, 10.505860, 12.711842)
Children:
	0x563d922294e8: (0, 29, 0), (246, 69, 129)
	0x563d92232f18: (0, 64, 1), (239, 103, 126)
	0x563d92239250: (13, 0, 12), (209, 31, 115)
	0x563d9223bdd8: (30, 102, 13), (225, 129, 117)
	0x563d9223c658: (48, 82, 24), (200, 192, 103)
	0x563d9223cb40: (48, 128, 24), (200, 134, 77)
EMBREE: Set dst_map 0x153f89aabd00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8c9bd00 for accel 0x563d922145b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89aabd00
EMBREE: Pack root 0x563d92229480 to root_map 0x153f89aabd40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 193...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8cc3c00 = 0x153f89ad3c00 allocated to accel structure 0x563d92228b60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89ad3c00 to 0xd3aba200
RTV: Building BLAS into 0x563d92228b60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229480
Compressed Node: i	exp: (-1, -2, -2)	origin: (-21.800064, 1.884045, 30.662657)
Children:
	0x563d922294e8: (116, 0, 0), (181, 94, 156)
	0x563d9222bb38: (53, 0, 0), (117, 45, 156)
	0x563d9222d5c0: (129, 93, 36), (234, 165, 119)
	0x563d9222ed08: (57, 93, 36), (134, 154, 119)
	0x563d92230680: (66, 42, 42), (117, 94, 113)
	0x563d92232f00: (0, 115, 38), (63, 165, 117)
EMBREE: Set dst_map 0x153f89ad3c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8cc3c00 for accel 0x563d92228b60
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89ad3c00
EMBREE: Pack root 0x563d92229480 to root_map 0x153f89ad3c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 194...
RTV: Creating acceleration struction of size 0x10f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8cd5d00 = 0x153f89ae5d00 allocated to accel structure 0x563d92228c00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89ae5d00 to 0xd3acc300
RTV: Building BLAS into 0x563d92228c00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 540 triangles added; total: 540
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229480
Compressed Node: i	exp: (-1, -1, 0)	origin: (15.360582, 13.309366, -12.876720)
Children:
	0x563d922294e8: (0, 23, 67), (199, 210, 127)
	0x563d9222b2b0: (0, 73, 113), (199, 191, 158)
	0x563d9222cc80: (20, 166, 0), (179, 227, 79)
	0x563d9222e0e0: (20, 0, 19), (179, 61, 80)
	0x563d9222ed60: (0, 22, 5), (177, 203, 88)
	0x563d9222fad8: (164, 57, 55), (199, 192, 84)
EMBREE: Set dst_map 0x153f89ae5d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8cd5d00 for accel 0x563d92228c00
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89ae5d00
EMBREE: Pack root 0x563d92229480 to root_map 0x153f89ae5d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 195...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8ce6c00 = 0x153f89af6c00 allocated to accel structure 0x563d92228ca0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89af6c00 to 0xd3add200
RTV: Building BLAS into 0x563d92228ca0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229480
Compressed Node: i	exp: (-2, -2, -1)	origin: (-22.491514, 1.604704, 33.421196)
Children:
	0x563d922294e8: (39, 42, 66), (117, 94, 168)
	0x563d9222b930: (37, 93, 0), (123, 165, 118)
	0x563d9222d558: (0, 0, 52), (156, 45, 119)
	0x563d9222efc0: (0, 0, 114), (156, 45, 181)
	0x563d92230980: (33, 93, 104), (119, 154, 177)
	0x563d92233be0: (33, 115, 170), (112, 165, 234)
EMBREE: Set dst_map 0x153f89af6c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8ce6c00 for accel 0x563d92228ca0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89af6c00
EMBREE: Pack root 0x563d92229480 to root_map 0x153f89af6c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 196...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8cf8d00 = 0x153f89b08d00 allocated to accel structure 0x563d92228d40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89b08d00 to 0xd3aef300
RTV: Building BLAS into 0x563d92228d40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229480
Compressed Node: i	exp: (2, 3, 2)	origin: (-2.899752, 10.265494, -15.166895)
Children:
	0x563d922294e8: (0, 0, 166), (76, 171, 221)
	0x563d92258980: (40, 150, 39), (202, 171, 186)
	0x563d9227d188: (182, 69, 175), (230, 199, 226)
	0x563d92298720: (16, 69, 0), (208, 77, 190)
	0x563d922afa00: (46, 62, 172), (203, 170, 203)
	0x563d922c4f20: (0, 70, 134), (206, 147, 193)
EMBREE: Set dst_map 0x153f89b08d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8cf8d00 for accel 0x563d92228d40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89b08d00
EMBREE: Pack root 0x563d92229480 to root_map 0x153f89b08d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 197...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8e98b00 = 0x153f89ca8b00 allocated to accel structure 0x563d92228de0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89ca8b00 to 0xd3c8f100
RTV: Building BLAS into 0x563d92228de0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922294c0
Compressed Node: i	exp: (0, 1, 3)	origin: (1.826628, 7.570610, 7.567293)
Children:
	0x563d92229528: (0, 0, 136), (84, 139, 159)
	0x563d9222ab80: (105, 0, 0), (195, 138, 24)
	0x563d9222c078: (46, 0, 79), (133, 182, 111)
	0x563d9222cc30: (70, 0, 50), (152, 182, 81)
	0x563d9222d810: (87, 0, 22), (171, 164, 54)
	0x563d9222e150: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x153f89ca8b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8e98b00 for accel 0x563d92228de0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89ca8b00
EMBREE: Pack root 0x563d922294c0 to root_map 0x153f89ca8b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 198...
RTV: Creating acceleration struction of size 0x66d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x66d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8ea4000 = 0x153f89cb4000 allocated to accel structure 0x563d92228e80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89cb4000 to 0xd3c9a600
RTV: Building BLAS into 0x563d92228e80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3288 triangles added; total: 3288
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229980
Compressed Node: i	exp: (1, 2, 1)	origin: (-2.232414, 13.358172, 9.420550)
Children:
	0x563d922299e8: (71, 13, 2), (110, 52, 135)
	0x563d9223aad8: (83, 30, 43), (112, 79, 102)
	0x563d92248820: (90, 40, 40), (101, 163, 46)
	0x563d9224fd88: (0, 0, 0), (80, 16, 137)
	0x563d92252120: (138, 0, 13), (174, 16, 120)
	0x563d922536e8: (77, 0, 0), (143, 16, 137)
EMBREE: Set dst_map 0x153f89cb4000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8ea4000 for accel 0x563d92228e80
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89cb4000
EMBREE: Pack root 0x563d92229980 to root_map 0x153f89cb4040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 199...
RTV: Creating acceleration struction of size 0xdd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xdd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8f0ad00 = 0x153f89d1ad00 allocated to accel structure 0x563d92228f50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89d1ad00 to 0xd3d01300
RTV: Building BLAS into 0x563d92228f50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 440 triangles added; total: 440
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229980
Compressed Node: i	exp: (-1, 0, -1)	origin: (15.951700, 9.290928, -11.916551)
Children:
	0x563d922299e8: (0, 0, 43), (218, 26, 128)
	0x563d9222bf98: (0, 153, 0), (218, 175, 80)
	0x563d9222de00: (73, 18, 23), (218, 89, 136)
	0x563d9222f5a0: (0, 18, 23), (82, 89, 128)
	0x563d9222fef0: (73, 82, 0), (218, 161, 102)
	0x563d92230480: (0, 82, 0), (74, 161, 102)
EMBREE: Set dst_map 0x153f89d1ad00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8f0ad00 for accel 0x563d92228f50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89d1ad00
EMBREE: Pack root 0x563d92229980 to root_map 0x153f89d1ad40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 200...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8f18a00 = 0x153f89d28a00 allocated to accel structure 0x563d92228ff0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89d28a00 to 0xd3d0f000
RTV: Building BLAS into 0x563d92228ff0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229980
Compressed Node: i	exp: (0, 1, 2)	origin: (-2.865270, 4.386269, 7.498233)
Children:
	0x563d922299e8: (0, 133, 0), (66, 171, 118)
	0x563d9222a300: (32, 7, 0), (139, 171, 44)
	0x563d9222a960: (16, 0, 86), (115, 152, 130)
	0x563d9222b040: (63, 31, 11), (130, 62, 130)
	0x563d9222b1f0: (45, 31, 65), (101, 119, 70)
	0x563d9222b4f0: (32, 93, 5), (98, 117, 123)
EMBREE: Set dst_map 0x153f89d28a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8f18a00 for accel 0x563d92228ff0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89d28a00
EMBREE: Pack root 0x563d92229980 to root_map 0x153f89d28a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 201...
RTV: Creating acceleration struction of size 0x5300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8f1c300 = 0x153f89d2c300 allocated to accel structure 0x563d92229090
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89d2c300 to 0xd3d12900
RTV: Building BLAS into 0x563d92229090
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 164 triangles added; total: 164
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229980
Compressed Node: i	exp: (2, 2, 2)	origin: (5.700936, 4.909880, 7.697218)
Children:
	0x563d922299e8: (184, 137, 19), (229, 188, 130)
	0x563d9222a9a0: (0, 144, 0), (23, 209, 110)
	0x563d9222b540: (6, 161, 56), (224, 199, 130)
	0x563d9222bac8: (0, 0, 12), (25, 193, 107)
	0x563d9222c0b0: (18, 175, 28), (211, 209, 56)
	0x563d9222c2c8: (12, 164, 0), (229, 205, 79)
EMBREE: Set dst_map 0x153f89d2c300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8f1c300 for accel 0x563d92229090
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89d2c300
EMBREE: Pack root 0x563d92229980 to root_map 0x153f89d2c340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 202...
RTV: Creating acceleration struction of size 0x117900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x117900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x8f21600 = 0x153f89d31600 allocated to accel structure 0x563d92229130
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89d31600 to 0xd3d17c00
RTV: Building BLAS into 0x563d92229130
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8944 triangles added; total: 8944
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229980
Compressed Node: i	exp: (5, 4, 3)	origin: (-9.561315, 1.874641, 6.150032)
Children:
	0x563d922299e8: (39, 124, 27), (109, 181, 203)
	0x563d92252fe0: (87, 76, 21), (145, 126, 244)
	0x563d9226b340: (0, 0, 0), (54, 63, 190)
	0x563d9227f2c8: (47, 77, 11), (93, 129, 222)
	0x563d9228f280: (66, 33, 11), (125, 79, 238)
	0x563d922955f0: (117, 6, 205), (143, 15, 243)
EMBREE: Set dst_map 0x153f89d31600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x8f21600 for accel 0x563d92229130
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89d31600
EMBREE: Pack root 0x563d92229980 to root_map 0x153f89d31640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 203...
RTV: Creating acceleration struction of size 0x7e100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9038f00 = 0x153f89e48f00 allocated to accel structure 0x563d922291d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89e48f00 to 0xd3e2f500
RTV: Building BLAS into 0x563d922291d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4032 triangles added; total: 4032
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229980
Compressed Node: i	exp: (0, -1, -1)	origin: (-23.236256, 1.289402, 33.545475)
Children:
	0x563d922299e8: (179, 186, 0), (237, 237, 120)
	0x563d92241ab8: (132, 159, 39), (186, 219, 139)
	0x563d92250158: (0, 0, 207), (69, 72, 251)
	0x563d92256480: (113, 112, 55), (139, 185, 153)
	0x563d9225a8c8: (32, 23, 158), (103, 143, 218)
	0x563d9225f0e0: (93, 78, 40), (121, 166, 181)
EMBREE: Set dst_map 0x153f89e48f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9038f00 for accel 0x563d922291d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89e48f00
EMBREE: Pack root 0x563d92229980 to root_map 0x153f89e48f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 204...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x90b7000 = 0x153f89ec7000 allocated to accel structure 0x563d92229270
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89ec7000 to 0xd3ead600
RTV: Building BLAS into 0x563d92229270
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229980
Compressed Node: i	exp: (-1, -2, -1)	origin: (5.483811, 9.170691, -36.772522)
Children:
	0x563d922299e8: (0, 26, 0), (63, 201, 110)
	0x563d92229bf8: (38, 2, 33), (124, 154, 132)
	0x563d92229e00: (67, 0, 33), (147, 140, 132)
	0x563d92229eb0: (51, 101, 33), (147, 154, 131)
	0x563d92229f58: (6, 0, 25), (68, 34, 110)
	0x563d92229ff0: (49, 19, 13), (81, 168, 109)
EMBREE: Set dst_map 0x153f89ec7000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x90b7000 for accel 0x563d92229270
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89ec7000
EMBREE: Pack root 0x563d92229980 to root_map 0x153f89ec7040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 205...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x90b8200 = 0x153f89ec8200 allocated to accel structure 0x563d92214460
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89ec8200 to 0xd3eae800
RTV: Building BLAS into 0x563d92214460
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922299c0
Compressed Node: i	exp: (2, 1, -1)	origin: (5.710342, 4.136377, 12.246711)
Children:
	0x563d92229a28: (0, 0, 0), (87, 165, 77)
	0x563d9222a470: (83, 8, 52), (175, 177, 163)
	0x563d9222adc8: (7, 97, 7), (169, 125, 161)
	0x563d9222b118: (81, 33, 59), (87, 125, 71)
	0x563d9222b398: (0, 36, 0), (161, 63, 154)
	0x563d9222b5b0: (83, 141, 52), (87, 165, 77)
EMBREE: Set dst_map 0x153f89ec8200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x90b8200 for accel 0x563d92214460
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89ec8200
EMBREE: Pack root 0x563d922299c0 to root_map 0x153f89ec8240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 206...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x90bbb00 = 0x153f89ecbb00 allocated to accel structure 0x563d92229380
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89ecbb00 to 0xd3eb2100
RTV: Building BLAS into 0x563d92229380
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229e80
Compressed Node: i	exp: (1, -2, 1)	origin: (-2.862139, 14.335108, -17.811722)
Children:
	0x563d92229ee8: (0, 0, 114), (183, 199, 177)
	0x563d92230a30: (0, 15, 68), (124, 183, 116)
	0x563d92236000: (10, 0, 0), (103, 199, 82)
	0x563d92239170: (22, 0, 0), (183, 18, 141)
	0x563d92239320: (22, 180, 0), (183, 199, 141)
	0x563d92239558: (24, 14, 0), (183, 184, 139)
EMBREE: Set dst_map 0x153f89ecbb00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x90bbb00 for accel 0x563d92229380
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89ecbb00
EMBREE: Pack root 0x563d92229e80 to root_map 0x153f89ecbb40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 207...
RTV: Creating acceleration struction of size 0x28a00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x28a00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x90d9800 = 0x153f89ee9800 allocated to accel structure 0x563d92229450
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89ee9800 to 0xd3ecfe00
RTV: Building BLAS into 0x563d92229450
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1298 triangles added; total: 1298
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229e80
Compressed Node: i	exp: (1, 1, 0)	origin: (-1.474149, 12.293422, 9.688374)
Children:
	0x563d92229ee8: (111, 70, 24), (210, 133, 207)
	0x563d9222f808: (16, 70, 15), (157, 128, 185)
	0x563d92235db8: (0, 0, 73), (115, 86, 197)
	0x563d922387d8: (0, 18, 0), (168, 95, 102)
	0x563d9223abb8: (108, 63, 26), (208, 87, 204)
	0x563d9223bf30: (112, 18, 24), (210, 104, 207)
EMBREE: Set dst_map 0x153f89ee9800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x90d9800 for accel 0x563d92229450
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89ee9800
EMBREE: Pack root 0x563d92229e80 to root_map 0x153f89ee9840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 208...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9102200 = 0x153f89f12200 allocated to accel structure 0x563d922294f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89f12200 to 0xd3ef8800
RTV: Building BLAS into 0x563d922294f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229e80
Compressed Node: i	exp: (-2, -2, -1)	origin: (-36.088058, 1.849942, 35.964832)
Children:
	0x563d92229ee8: (0, 0, 116), (156, 78, 181)
	0x563d9222c5e8: (0, 0, 53), (156, 37, 117)
	0x563d9222e1a8: (36, 77, 129), (119, 137, 234)
	0x563d9222f9c0: (36, 77, 57), (119, 128, 134)
	0x563d92232d18: (42, 35, 66), (113, 78, 117)
	0x563d92233a78: (38, 95, 0), (117, 137, 63)
EMBREE: Set dst_map 0x153f89f12200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9102200 for accel 0x563d922294f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89f12200
EMBREE: Pack root 0x563d92229e80 to root_map 0x153f89f12240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 209...
RTV: Creating acceleration struction of size 0xe2f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xe2f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9114300 = 0x153f89f24300 allocated to accel structure 0x563d92229590
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f89f24300 to 0xd3f0a900
RTV: Building BLAS into 0x563d92229590
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7260 triangles added; total: 7260
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229e80
Compressed Node: i	exp: (1, -1, -4)	origin: (8.498722, 7.708747, -36.005699)
Children:
	0x563d92229ee8: (96, 0, 0), (159, 109, 189)
	0x563d922428a0: (0, 143, 0), (86, 226, 189)
	0x563d92256b68: (143, 143, 0), (181, 199, 189)
	0x563d92268ef0: (95, 143, 0), (145, 227, 189)
	0x563d92278848: (0, 26, 0), (46, 108, 189)
	0x563d92281d30: (41, 26, 0), (96, 82, 189)
EMBREE: Set dst_map 0x153f89f24300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9114300 for accel 0x563d92229590
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f89f24300
EMBREE: Pack root 0x563d92229e80 to root_map 0x153f89f24340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 210...
RTV: Creating acceleration struction of size 0xf5d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x91f7200 = 0x153f8a007200 allocated to accel structure 0x563d92214670
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a007200 to 0xd3fed800
RTV: Building BLAS into 0x563d92214670
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7864 triangles added; total: 7864
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229e80
Compressed Node: i	exp: (3, 4, 2)	origin: (22.316761, 18.422203, -31.914839)
Children:
	0x563d92229ee8: (0, 123, 77), (110, 153, 103)
	0x563d92247520: (141, 119, 42), (202, 153, 138)
	0x563d92260998: (80, 0, 0), (155, 30, 181)
	0x563d9226fff8: (107, 22, 66), (152, 126, 115)
	0x563d9227cae8: (101, 111, 65), (145, 155, 116)
	0x563d922880b8: (47, 0, 0), (88, 23, 181)
EMBREE: Set dst_map 0x153f8a007200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x91f7200 for accel 0x563d92214670
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a007200
EMBREE: Pack root 0x563d92229e80 to root_map 0x153f8a007240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 211...
RTV: Creating acceleration struction of size 0x2ef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2ef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x92ecf00 = 0x153f8a0fcf00 allocated to accel structure 0x563d922296a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a0fcf00 to 0xd40e3500
RTV: Building BLAS into 0x563d922296a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1500 triangles added; total: 1500
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229e80
Compressed Node: i	exp: (-2, 2, -1)	origin: (17.490768, 6.974405, -28.485332)
Children:
	0x563d92229ee8: (0, 179, 0), (165, 203, 181)
	0x563d92237960: (0, 138, 74), (119, 184, 206)
	0x563d9223d588: (35, 0, 60), (165, 9, 111)
	0x563d9223efd8: (82, 73, 109), (99, 97, 143)
	0x563d9223fb10: (73, 80, 74), (108, 157, 174)
	0x563d92240518: (73, 4, 81), (108, 188, 167)
EMBREE: Set dst_map 0x153f8a0fcf00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x92ecf00 for accel 0x563d922296a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a0fcf00
EMBREE: Pack root 0x563d92229e80 to root_map 0x153f8a0fcf40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 212...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x931be00 = 0x153f8a12be00 allocated to accel structure 0x563d92229740
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a12be00 to 0xd4112400
RTV: Building BLAS into 0x563d92229740
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229e80
Compressed Node: i	exp: (0, 2, -2)	origin: (7.926847, 7.198858, 13.478070)
Children:
	0x563d92229ee8: (9, 29, 0), (208, 58, 222)
	0x563d9223c040: (148, 52, 8), (253, 96, 202)
	0x563d922467f8: (9, 87, 7), (203, 115, 200)
	0x563d922504d0: (25, 111, 10), (188, 133, 134)
	0x563d92258690: (0, 52, 55), (164, 89, 200)
	0x563d9225e748: (36, 0, 131), (201, 38, 248)
EMBREE: Set dst_map 0x153f8a12be00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x931be00 for accel 0x563d92229740
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a12be00
EMBREE: Pack root 0x563d92229e80 to root_map 0x153f8a12be40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 213...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x93a2f00 = 0x153f8a1b2f00 allocated to accel structure 0x563d922297e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a1b2f00 to 0xd4199500
RTV: Building BLAS into 0x563d922297e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92229ec0
Compressed Node: i	exp: (4, 2, 2)	origin: (26.464798, 0.213536, -7.565168)
Children:
	0x563d92229f28: (44, 0, 206), (157, 186, 254)
	0x563d92241298: (0, 18, 205), (81, 182, 254)
	0x563d92250140: (66, 0, 2), (157, 41, 235)
	0x563d922563b0: (0, 13, 20), (81, 58, 223)
	0x563d92259a98: (80, 21, 21), (155, 184, 214)
	0x563d9225c2e8: (0, 152, 0), (52, 182, 239)
EMBREE: Set dst_map 0x153f8a1b2f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x93a2f00 for accel 0x563d922297e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a1b2f00
EMBREE: Pack root 0x563d92229ec0 to root_map 0x153f8a1b2f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 214...
RTV: Creating acceleration struction of size 0x93300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x93300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9421500 = 0x153f8a231500 allocated to accel structure 0x563d92229880
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a231500 to 0xd4217b00
RTV: Building BLAS into 0x563d92229880
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4708 triangles added; total: 4708
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a380
Compressed Node: i	exp: (2, 1, 3)	origin: (-25.760456, 0.048927, 30.983614)
Children:
	0x563d9222a3e8: (0, 0, 119), (152, 173, 160)
	0x563d9223e458: (106, 34, 0), (188, 208, 30)
	0x563d9224dcb8: (41, 16, 9), (188, 188, 85)
	0x563d9225af10: (121, 14, 77), (180, 166, 130)
	0x563d922630d0: (26, 0, 54), (150, 147, 143)
	0x563d92265408: (0, 29, 67), (68, 165, 135)
EMBREE: Set dst_map 0x153f8a231500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9421500 for accel 0x563d92229880
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a231500
EMBREE: Pack root 0x563d9222a380 to root_map 0x153f8a231540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 215...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x94b4800 = 0x153f8a2c4800 allocated to accel structure 0x563d92229950
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a2c4800 to 0xd42aae00
RTV: Building BLAS into 0x563d92229950
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a380
Compressed Node: i	exp: (-2, 1, 4)	origin: (22.340450, 16.814526, 5.970603)
Children:
	0x563d9222a3e8: (0, 0, 91), (177, 157, 140)
	0x563d92244c68: (0, 0, 0), (177, 157, 44)
	0x563d9225b410: (0, 0, 163), (177, 157, 195)
	0x563d9226a438: (0, 0, 139), (177, 157, 164)
	0x563d922795c0: (0, 0, 43), (177, 157, 62)
	0x563d922863c0: (0, 0, 61), (177, 157, 92)
EMBREE: Set dst_map 0x153f8a2c4800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x94b4800 for accel 0x563d92229950
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a2c4800
EMBREE: Pack root 0x563d9222a380 to root_map 0x153f8a2c4840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 216...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x95ac900 = 0x153f8a3bc900 allocated to accel structure 0x563d922299f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a3bc900 to 0xd43a2f00
RTV: Building BLAS into 0x563d922299f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a380
Compressed Node: i	exp: (1, -2, 1)	origin: (-5.207281, 13.367034, -17.811722)
Children:
	0x563d9222a3e8: (0, 0, 114), (183, 199, 177)
	0x563d92232e30: (0, 15, 68), (124, 183, 116)
	0x563d922366c0: (10, 0, 0), (103, 199, 82)
	0x563d922397f0: (22, 0, 0), (183, 18, 141)
	0x563d922399a0: (22, 180, 0), (183, 199, 141)
	0x563d92239c18: (24, 14, 0), (183, 184, 139)
EMBREE: Set dst_map 0x153f8a3bc900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x95ac900 for accel 0x563d922299f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a3bc900
EMBREE: Pack root 0x563d9222a380 to root_map 0x153f8a3bc940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 217...
RTV: Creating acceleration struction of size 0xc6d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xc6d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x95ca600 = 0x153f8a3da600 allocated to accel structure 0x563d92229a90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a3da600 to 0xd43c0c00
RTV: Building BLAS into 0x563d92229a90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 6360 triangles added; total: 6360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a380
Compressed Node: i	exp: (3, 3, 3)	origin: (16.276091, 4.565444, -35.748840)
Children:
	0x563d9222a3e8: (0, 0, 0), (33, 86, 48)
	0x563d9224d180: (204, 96, 197), (254, 157, 245)
	0x563d92264a30: (0, 61, 210), (35, 86, 238)
	0x563d9226dd20: (173, 63, 227), (227, 100, 245)
	0x563d92276c58: (0, 62, 44), (11, 86, 211)
	0x563d9227f118: (33, 61, 227), (175, 86, 238)
EMBREE: Set dst_map 0x153f8a3da600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x95ca600 for accel 0x563d92229a90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a3da600
EMBREE: Pack root 0x563d9222a380 to root_map 0x153f8a3da640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 218...
RTV: Creating acceleration struction of size 0x19ca00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19ca00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9691300 = 0x153f8a4a1300 allocated to accel structure 0x563d92229b30
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a4a1300 to 0xd4487900
RTV: Building BLAS into 0x563d92229b30
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13202 triangles added; total: 13202
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a380
Compressed Node: i	exp: (0, 1, 1)	origin: (-0.346594, 8.193298, 11.544205)
Children:
	0x563d9222a3e8: (19, 94, 11), (206, 193, 70)
	0x563d9225bf80: (15, 95, 62), (195, 174, 137)
	0x563d922895c0: (29, 0, 61), (208, 66, 115)
	0x563d9229dc00: (0, 60, 60), (201, 102, 129)
	0x563d922b0630: (148, 13, 2), (209, 101, 67)
	0x563d922c0490: (12, 6, 0), (163, 102, 68)
EMBREE: Set dst_map 0x153f8a4a1300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9691300 for accel 0x563d92229b30
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a4a1300
EMBREE: Pack root 0x563d9222a380 to root_map 0x153f8a4a1340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 219...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x982dd00 = 0x153f8a63dd00 allocated to accel structure 0x563d92229bd0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a63dd00 to 0xd4624300
RTV: Building BLAS into 0x563d92229bd0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a380
Compressed Node: i	exp: (0, 2, -2)	origin: (-3.867062, 9.658595, 7.764648)
Children:
	0x563d9222a3e8: (5, 32, 0), (127, 63, 135)
	0x563d9223bef0: (90, 57, 6), (155, 105, 124)
	0x563d92246640: (6, 96, 5), (124, 126, 123)
	0x563d92250838: (15, 122, 7), (115, 146, 83)
	0x563d92258718: (0, 57, 34), (100, 97, 123)
	0x563d9225e788: (21, 0, 80), (123, 41, 151)
EMBREE: Set dst_map 0x153f8a63dd00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x982dd00 for accel 0x563d92229bd0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a63dd00
EMBREE: Pack root 0x563d9222a380 to root_map 0x153f8a63dd40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 220...
RTV: Creating acceleration struction of size 0x2e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x98b4e00 = 0x153f8a6c4e00 allocated to accel structure 0x563d92229c70
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a6c4e00 to 0xd46ab400
RTV: Building BLAS into 0x563d92229c70
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1482 triangles added; total: 1482
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a380
Compressed Node: i	exp: (1, 1, -1)	origin: (-0.279341, 12.254339, -12.400287)
Children:
	0x563d9222a3e8: (0, 65, 4), (62, 179, 134)
	0x563d92236018: (61, 65, 0), (210, 91, 185)
	0x563d92239b20: (65, 0, 0), (210, 75, 175)
	0x563d9223bdc0: (60, 149, 0), (210, 184, 175)
	0x563d9223de60: (69, 90, 0), (210, 151, 174)
	0x563d9223e930: (61, 65, 0), (70, 151, 174)
EMBREE: Set dst_map 0x153f8a6c4e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x98b4e00 for accel 0x563d92229c70
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a6c4e00
EMBREE: Pack root 0x563d9222a380 to root_map 0x153f8a6c4e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 221...
RTV: Creating acceleration struction of size 0x6d100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6d100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x98e3400 = 0x153f8a6f3400 allocated to accel structure 0x563d92229d10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a6f3400 to 0xd46d9a00
RTV: Building BLAS into 0x563d92229d10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3488 triangles added; total: 3488
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a3c0
Compressed Node: i	exp: (1, -2, -4)	origin: (8.489514, 8.748555, -36.005699)
Children:
	0x563d9222a428: (143, 52, 0), (169, 215, 189)
	0x563d9223a560: (59, 52, 0), (75, 205, 189)
	0x563d92243da8: (33, 52, 0), (49, 205, 189)
	0x563d9224d568: (85, 0, 0), (120, 163, 189)
	0x563d922533c8: (129, 54, 0), (142, 215, 189)
	0x563d92257370: (0, 54, 0), (31, 215, 189)
EMBREE: Set dst_map 0x153f8a6f3400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x98e3400 for accel 0x563d92229d10
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a6f3400
EMBREE: Pack root 0x563d9222a3c0 to root_map 0x153f8a6f3440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 222...
RTV: Creating acceleration struction of size 0x9c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9950500 = 0x153f8a760500 allocated to accel structure 0x563d92229db0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a760500 to 0xd4746b00
RTV: Building BLAS into 0x563d92229db0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5008 triangles added; total: 5008
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a880
Compressed Node: i	exp: (2, 3, 0)	origin: (-2.326804, 9.831835, -14.277299)
Children:
	0x563d9222a8e8: (11, 73, 44), (169, 88, 233)
	0x563d9223df70: (0, 110, 2), (132, 138, 242)
	0x563d9224ce10: (21, 75, 40), (157, 117, 176)
	0x563d922584a8: (0, 137, 166), (132, 166, 242)
	0x563d922637b8: (25, 0, 77), (99, 80, 139)
	0x563d92269968: (9, 137, 0), (121, 166, 183)
EMBREE: Set dst_map 0x153f8a760500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9950500 for accel 0x563d92229db0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a760500
EMBREE: Pack root 0x563d9222a880 to root_map 0x153f8a760540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 223...
RTV: Creating acceleration struction of size 0x4c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x99ece00 = 0x153f8a7fce00 allocated to accel structure 0x563d92229e50
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a7fce00 to 0xd47e3400
RTV: Building BLAS into 0x563d92229e50
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 150 triangles added; total: 150
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a880
Compressed Node: i	exp: (0, 0, 3)	origin: (-1.819691, 12.444323, 7.474490)
Children:
	0x563d9222a8e8: (0, 0, 118), (75, 80, 138)
	0x563d9222b180: (90, 3, 0), (167, 83, 21)
	0x563d9222b930: (41, 62, 69), (116, 177, 96)
	0x563d9222bfc0: (62, 63, 44), (141, 177, 70)
	0x563d9222c440: (23, 0, 93), (97, 138, 120)
	0x563d9222c6f8: (75, 3, 19), (148, 139, 47)
EMBREE: Set dst_map 0x153f8a7fce00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x99ece00 for accel 0x563d92229e50
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a7fce00
EMBREE: Pack root 0x563d9222a880 to root_map 0x153f8a7fce40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 224...
RTV: Creating acceleration struction of size 0x6900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x6900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x99f1a00 = 0x153f8a801a00 allocated to accel structure 0x563d92229ef0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a801a00 to 0xd47e8000
RTV: Building BLAS into 0x563d92229ef0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 208 triangles added; total: 208
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a880
Compressed Node: i	exp: (1, 2, 3)	origin: (15.328965, 2.184776, -23.724066)
Children:
	0x563d9222a8e8: (0, 0, 0), (174, 31, 159)
	0x563d9222b640: (3, 108, 33), (124, 143, 119)
	0x563d9222c198: (116, 24, 35), (171, 81, 107)
	0x563d9222c920: (0, 19, 103), (118, 113, 159)
	0x563d9222cfe0: (10, 25, 35), (124, 110, 38)
	0x563d9222d2a8: (0, 19, 35), (126, 113, 157)
EMBREE: Set dst_map 0x153f8a801a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x99f1a00 for accel 0x563d92229ef0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a801a00
EMBREE: Pack root 0x563d9222a880 to root_map 0x153f8a801a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 225...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x99f8300 = 0x153f8a808300 allocated to accel structure 0x563d92229f90
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a808300 to 0xd47ee900
RTV: Building BLAS into 0x563d92229f90
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a880
Compressed Node: i	exp: (4, 1, -2)	origin: (11.972989, 17.325241, -18.597860)
Children:
	0x563d9222a8e8: (43, 0, 0), (92, 157, 177)
	0x563d92244de8: (0, 0, 0), (44, 157, 177)
	0x563d9225b5f8: (163, 0, 0), (195, 157, 177)
	0x563d9226a720: (139, 0, 0), (164, 157, 177)
	0x563d922798a8: (91, 0, 0), (110, 157, 177)
	0x563d92286928: (109, 0, 0), (140, 157, 177)
EMBREE: Set dst_map 0x153f8a808300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x99f8300 for accel 0x563d92229f90
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a808300
EMBREE: Pack root 0x563d9222a880 to root_map 0x153f8a808340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 226...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9af0400 = 0x153f8a900400 allocated to accel structure 0x563d9222a030
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a900400 to 0xd48e6a00
RTV: Building BLAS into 0x563d9222a030
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a880
Compressed Node: i	exp: (3, 2, 2)	origin: (-14.601471, 0.081569, -11.330329)
Children:
	0x563d9222a8e8: (72, 0, 165), (252, 149, 204)
	0x563d92241510: (0, 14, 165), (130, 146, 204)
	0x563d92250550: (106, 0, 1), (252, 33, 189)
	0x563d92256810: (0, 10, 16), (131, 46, 179)
	0x563d92259f78: (129, 17, 17), (248, 148, 172)
	0x563d9225c710: (0, 122, 0), (83, 146, 192)
EMBREE: Set dst_map 0x153f8a900400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9af0400 for accel 0x563d9222a030
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a900400
EMBREE: Pack root 0x563d9222a880 to root_map 0x153f8a900440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 227...
RTV: Creating acceleration struction of size 0x500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9b6ea00 = 0x153f8a97ea00 allocated to accel structure 0x563d9222a0d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a97ea00 to 0xd4965000
RTV: Building BLAS into 0x563d9222a0d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8 triangles added; total: 8
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a880
Compressed Node: i	exp: (0, 1, 2)	origin: (-3.987334, 10.643942, 8.020087)
Children:
	0x563d9222a8e8: (0, 94, 93), (33, 146, 170)
	0x563d9222a968: (54, 95, 0), (135, 97, 74)
	0x563d9222a9e8: (54, 1, 0), (135, 96, 78)
	0x563d9222a9f4: (32, 0, 93), (93, 95, 170)
	0x563d9222aa00: (112, 1, 0), (193, 96, 78)
	0x563d9222aa0c: (32, 0, 93), (93, 95, 170)
EMBREE: Set dst_map 0x153f8a97ea00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9b6ea00 for accel 0x563d9222a0d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a97ea00
EMBREE: Pack root 0x563d9222a880 to root_map 0x153f8a97ea40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 228...
RTV: Creating acceleration struction of size 0x71800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x71800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9b6ef00 = 0x153f8a97ef00 allocated to accel structure 0x563d9222a170
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a97ef00 to 0xd4965500
RTV: Building BLAS into 0x563d9222a170
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3630 triangles added; total: 3630
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a880
Compressed Node: i	exp: (0, 1, 2)	origin: (-1.122880, 6.635889, 8.146039)
Children:
	0x563d9222a8e8: (1, 2, 67), (70, 91, 195)
	0x563d9223b6a0: (49, 0, 3), (106, 92, 75)
	0x563d92246198: (41, 73, 0), (147, 184, 97)
	0x563d9224e668: (1, 73, 75), (74, 173, 189)
	0x563d92252e60: (0, 139, 160), (75, 182, 198)
	0x563d922559e8: (0, 135, 4), (116, 184, 198)
EMBREE: Set dst_map 0x153f8a97ef00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9b6ef00 for accel 0x563d9222a170
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a97ef00
EMBREE: Pack root 0x563d9222a880 to root_map 0x153f8a97ef40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 229...
RTV: Creating acceleration struction of size 0x179500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x179500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9be0700 = 0x153f8a9f0700 allocated to accel structure 0x563d9222a210
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8a9f0700 to 0xd49d6d00
RTV: Building BLAS into 0x563d9222a210
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 12071 triangles added; total: 12071
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222a900
Compressed Node: i	exp: (0, 1, -1)	origin: (26.585169, 18.396545, -19.784279)
Children:
	0x563d9222a968: (17, 45, 87), (116, 106, 182)
	0x563d922bbfd8: (0, 59, 82), (142, 130, 108)
	0x563d922c7ec0: (0, 49, 0), (143, 62, 109)
	0x563d922cab28: (1, 0, 0), (142, 55, 97)
	0x563d922cb780: (0, 59, 0), (73, 130, 107)
	0x563d922cc0c8: (66, 59, 5), (144, 129, 110)
EMBREE: Set dst_map 0x153f8a9f0700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9be0700 for accel 0x563d9222a210
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8a9f0700
EMBREE: Pack root 0x563d9222a900 to root_map 0x153f8a9f0740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 230...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9d59c00 = 0x153f8ab69c00 allocated to accel structure 0x563d9222a2b0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ab69c00 to 0xd4b50200
RTV: Building BLAS into 0x563d9222a2b0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f8ab69c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9d59c00 for accel 0x563d9222a2b0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ab69c00
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f8ab69c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 231...
RTV: Creating acceleration struction of size 0x9c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9d59e00 = 0x153f8ab69e00 allocated to accel structure 0x563d92214980
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ab69e00 to 0xd4b50400
RTV: Building BLAS into 0x563d92214980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5008 triangles added; total: 5008
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222ae00
Compressed Node: i	exp: (3, 1, 0)	origin: (5.604448, 12.334397, -12.544121)
Children:
	0x563d9222ae68: (58, 13, 24), (85, 199, 137)
	0x563d9223e878: (87, 0, 1), (101, 156, 143)
	0x563d9224cd28: (118, 0, 0), (131, 156, 143)
	0x563d92258548: (0, 29, 45), (64, 120, 82)
	0x563d92260e80: (78, 31, 24), (93, 185, 104)
	0x563d92269178: (100, 0, 1), (128, 154, 126)
EMBREE: Set dst_map 0x153f8ab69e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9d59e00 for accel 0x563d92214980
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ab69e00
EMBREE: Pack root 0x563d9222ae00 to root_map 0x153f8ab69e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 232...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9df6700 = 0x153f8ac06700 allocated to accel structure 0x563d9221df10
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ac06700 to 0xd4becd00
RTV: Building BLAS into 0x563d9221df10
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2 triangles added; total: 2
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222ae00
Compressed Node: i	exp: (2, 1, -1)	origin: (4.299718, 4.936269, 12.262161)
Children:
	0x563d9222ae68: (0, 0, 0), (236, 209, 195)
	0x563d9222ae74: (0, 11, 0), (236, 220, 195)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
EMBREE: Set dst_map 0x153f8ac06700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9df6700 for accel 0x563d9221df10
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ac06700
EMBREE: Pack root 0x563d9222ae00 to root_map 0x153f8ac06740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 233...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9df6900 = 0x153f8ac06900 allocated to accel structure 0x563d9221dfb0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ac06900 to 0xd4becf00
RTV: Building BLAS into 0x563d9221dfb0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f8ac06900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9df6900 for accel 0x563d9221dfb0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ac06900
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f8ac06940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 234...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9df6b00 = 0x153f8ac06b00 allocated to accel structure 0x563d9221e050
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ac06b00 to 0xd4bed100
RTV: Building BLAS into 0x563d9221e050
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222ae00
Compressed Node: i	exp: (3, 1, -1)	origin: (-1.708755, 9.124278, 11.177106)
Children:
	0x563d9222ae68: (66, 0, 123), (132, 165, 233)
	0x563d9222b908: (0, 8, 0), (69, 177, 148)
	0x563d9222c208: (66, 33, 128), (71, 125, 140)
	0x563d9222c558: (4, 97, 2), (126, 125, 224)
	0x563d9222c7d8: (10, 36, 12), (132, 63, 233)
	0x563d9222ca30: (66, 141, 123), (69, 165, 148)
EMBREE: Set dst_map 0x153f8ac06b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9df6b00 for accel 0x563d9221e050
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ac06b00
EMBREE: Pack root 0x563d9222ae00 to root_map 0x153f8ac06b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 235...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9dfa400 = 0x153f8ac0a400 allocated to accel structure 0x563d9221e0f0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ac0a400 to 0xd4bf0a00
RTV: Building BLAS into 0x563d9221e0f0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f8ac0a400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9dfa400 for accel 0x563d9221e0f0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ac0a400
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f8ac0a440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 236...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9dfa600 = 0x153f8ac0a600 allocated to accel structure 0x563d9221e190
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ac0a600 to 0xd4bf0c00
RTV: Building BLAS into 0x563d9221e190
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222ae00
Compressed Node: i	exp: (-1, 1, 1)	origin: (-4.127613, 10.587974, 9.321798)
Children:
	0x563d9222ae68: (0, 55, 137), (208, 160, 186)
	0x563d9223c2e0: (0, 57, 1), (208, 160, 42)
	0x563d92249e90: (91, 0, 157), (246, 96, 184)
	0x563d92252050: (92, 1, 0), (246, 97, 27)
	0x563d92259580: (41, 94, 13), (112, 140, 166)
	0x563d9225a188: (101, 2, 12), (221, 97, 167)
EMBREE: Set dst_map 0x153f8ac0a600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9dfa600 for accel 0x563d9221e190
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ac0a600
EMBREE: Pack root 0x563d9222ae00 to root_map 0x153f8ac0a640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 237...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9e6d900 = 0x153f8ac7d900 allocated to accel structure 0x563d9221e230
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ac7d900 to 0xd4c63f00
RTV: Building BLAS into 0x563d9221e230
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222ae00
Compressed Node: i	exp: (0, 1, 2)	origin: (5.418979, 11.811528, 8.409794)
Children:
	0x563d9222ae68: (0, 0, 213), (80, 140, 249)
	0x563d9222c4d8: (81, 3, 0), (166, 141, 38)
	0x563d9222d9c8: (37, 1, 125), (119, 183, 173)
	0x563d9222e588: (56, 2, 79), (133, 183, 127)
	0x563d9222f170: (68, 2, 35), (146, 167, 84)
	0x563d9222f8f8: (21, 0, 168), (108, 166, 217)
EMBREE: Set dst_map 0x153f8ac7d900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9e6d900 for accel 0x563d9221e230
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ac7d900
EMBREE: Pack root 0x563d9222ae00 to root_map 0x153f8ac7d940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 238...
RTV: Creating acceleration struction of size 0x25700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x25700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9e78e00 = 0x153f8ac88e00 allocated to accel structure 0x563d9221e2d0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ac88e00 to 0xd4c6f400
RTV: Building BLAS into 0x563d9221e2d0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1196 triangles added; total: 1196
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222ae40
Compressed Node: i	exp: (4, 2, 3)	origin: (-8.309184, 1.005681, 7.100734)
Children:
	0x563d9222aea8: (84, 73, 133), (96, 99, 161)
	0x563d9222f208: (84, 0, 132), (97, 75, 162)
	0x563d92233cf0: (0, 87, 0), (5, 113, 12)
	0x563d92236f30: (110, 215, 123), (116, 241, 136)
	0x563d9223a118: (130, 3, 115), (140, 47, 136)
	0x563d9223d270: (108, 23, 74), (119, 75, 100)
EMBREE: Set dst_map 0x153f8ac88e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9e78e00 for accel 0x563d9221e2d0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ac88e00
EMBREE: Pack root 0x563d9222ae40 to root_map 0x153f8ac88e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 239...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9e9e500 = 0x153f8acae500 allocated to accel structure 0x563d9221e370
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8acae500 to 0xd4c94b00
RTV: Building BLAS into 0x563d9221e370
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b300
Compressed Node: i	exp: (2, 0, -1)	origin: (-3.913178, 12.207678, 10.197012)
Children:
	0x563d9222b368: (121, 88, 89), (172, 143, 204)
	0x563d9222d330: (3, 149, 4), (81, 175, 111)
	0x563d9222e858: (53, 0, 22), (109, 90, 173)
	0x563d9222fcb0: (68, 117, 35), (100, 189, 179)
	0x563d92230c28: (42, 82, 24), (123, 131, 165)
	0x563d922337b8: (0, 86, 0), (97, 154, 132)
EMBREE: Set dst_map 0x153f8acae500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9e9e500 for accel 0x563d9221e370
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8acae500
EMBREE: Pack root 0x563d9222b300 to root_map 0x153f8acae540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 240...
RTV: Creating acceleration struction of size 0x11200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x11200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9eae800 = 0x153f8acbe800 allocated to accel structure 0x563d9222a8e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8acbe800 to 0xd4ca4e00
RTV: Building BLAS into 0x563d9222a8e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 546 triangles added; total: 546
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b300
Compressed Node: i	exp: (2, 2, 2)	origin: (6.303524, 2.725335, 9.622405)
Children:
	0x563d9222b368: (78, 2, 6), (128, 164, 90)
	0x563d9222e0c0: (66, 47, 52), (123, 163, 170)
	0x563d92230100: (0, 105, 0), (88, 164, 168)
	0x563d92233720: (67, 0, 117), (117, 114, 172)
	0x563d92234cb0: (70, 0, 39), (127, 114, 153)
	0x563d922359d8: (1, 1, 0), (22, 115, 163)
EMBREE: Set dst_map 0x153f8acbe800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9eae800 for accel 0x563d9222a8e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8acbe800
EMBREE: Pack root 0x563d9222b300 to root_map 0x153f8acbe840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 241...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9ebfa00 = 0x153f8accfa00 allocated to accel structure 0x563d9222a980
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8accfa00 to 0xd4cb6000
RTV: Building BLAS into 0x563d9222a980
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b300
Compressed Node: i	exp: (1, 2, -1)	origin: (-2.260903, 10.620396, -12.138606)
Children:
	0x563d9222b368: (5, 94, 39), (55, 176, 148)
	0x563d9223ade0: (9, 0, 6), (128, 51, 105)
	0x563d92245af0: (68, 47, 8), (132, 102, 106)
	0x563d9224f608: (0, 47, 6), (73, 96, 139)
	0x563d92258830: (63, 91, 0), (132, 133, 92)
	0x563d92260410: (46, 126, 31), (128, 176, 87)
EMBREE: Set dst_map 0x153f8accfa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9ebfa00 for accel 0x563d9222a980
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8accfa00
EMBREE: Pack root 0x563d9222b300 to root_map 0x153f8accfa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 242...
RTV: Creating acceleration struction of size 0x1f300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1f300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9f46b00 = 0x153f8ad56b00 allocated to accel structure 0x563d9222aa20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ad56b00 to 0xd4d3d100
RTV: Building BLAS into 0x563d9222aa20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 996 triangles added; total: 996
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b300
Compressed Node: i	exp: (5, 1, 3)	origin: (-17.941387, 2.315001, -14.300489)
Children:
	0x563d9222b368: (69, 153, 138), (76, 206, 167)
	0x563d9222f608: (0, 182, 0), (3, 233, 13)
	0x563d922345c0: (82, 0, 119), (88, 90, 142)
	0x563d92237858: (69, 0, 137), (76, 23, 168)
	0x563d922392f8: (69, 22, 137), (76, 155, 168)
	0x563d9223a6d8: (127, 10, 190), (131, 68, 205)
EMBREE: Set dst_map 0x153f8ad56b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9f46b00 for accel 0x563d9222aa20
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ad56b00
EMBREE: Pack root 0x563d9222b300 to root_map 0x153f8ad56b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 243...
RTV: Creating acceleration struction of size 0x2ef00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2ef00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9f65e00 = 0x153f8ad75e00 allocated to accel structure 0x563d9222aac0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ad75e00 to 0xd4d5c400
RTV: Building BLAS into 0x563d9222aac0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1500 triangles added; total: 1500
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b300
Compressed Node: i	exp: (-2, 2, -1)	origin: (19.544535, 6.974405, -28.485332)
Children:
	0x563d9222b368: (0, 179, 0), (165, 203, 181)
	0x563d92238da0: (0, 138, 74), (119, 184, 206)
	0x563d9223e9c8: (35, 0, 60), (165, 9, 111)
	0x563d92240418: (82, 73, 109), (99, 97, 143)
	0x563d92240f50: (73, 80, 74), (108, 157, 174)
	0x563d92241918: (73, 4, 81), (108, 188, 167)
EMBREE: Set dst_map 0x153f8ad75e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9f65e00 for accel 0x563d9222aac0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ad75e00
EMBREE: Pack root 0x563d9222b300 to root_map 0x153f8ad75e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 244...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9f94d00 = 0x153f8ada4d00 allocated to accel structure 0x563d9222ab60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ada4d00 to 0xd4d8b300
RTV: Building BLAS into 0x563d9222ab60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b300
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.273173, 9.260780, -36.705456)
Children:
	0x563d9222b368: (4, 149, 0), (230, 237, 141)
	0x563d9222b500: (0, 159, 102), (232, 253, 233)
	0x563d9222b698: (12, 0, 60), (123, 177, 227)
	0x563d9222b840: (95, 0, 20), (214, 160, 160)
	0x563d9222b8e8: (95, 0, 60), (214, 177, 227)
	0x563d9222b980: (12, 0, 21), (103, 167, 128)
EMBREE: Set dst_map 0x153f8ada4d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9f94d00 for accel 0x563d9222ab60
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ada4d00
EMBREE: Pack root 0x563d9222b300 to root_map 0x153f8ada4d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 245...
RTV: Creating acceleration struction of size 0x10ce00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10ce00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0x9f95f00 = 0x153f8ada5f00 allocated to accel structure 0x563d9222ac00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ada5f00 to 0xd4d8c500
RTV: Building BLAS into 0x563d9222ac00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 8601 triangles added; total: 8601
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b300
Compressed Node: i	exp: (1, 2, -1)	origin: (9.841119, 11.013651, -12.352594)
Children:
	0x563d9222b368: (41, 0, 0), (182, 80, 91)
	0x563d9224c048: (0, 97, 0), (41, 233, 127)
	0x563d92266b60: (23, 74, 6), (106, 102, 83)
	0x563d9227e000: (35, 94, 0), (118, 125, 168)
	0x563d9228dfb0: (34, 201, 0), (97, 241, 175)
	0x563d92298890: (34, 109, 0), (119, 205, 175)
EMBREE: Set dst_map 0x153f8ada5f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0x9f95f00 for accel 0x563d9222ac00
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ada5f00
EMBREE: Pack root 0x563d9222b300 to root_map 0x153f8ada5f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 246...
RTV: Creating acceleration struction of size 0x2c300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa0a2d00 = 0x153f8aeb2d00 allocated to accel structure 0x563d9222aca0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8aeb2d00 to 0xd4e99300
RTV: Building BLAS into 0x563d9222aca0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1412 triangles added; total: 1412
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b340
Compressed Node: i	exp: (1, -1, 0)	origin: (-3.541925, 12.793354, 9.697191)
Children:
	0x563d9222b3a8: (0, 0, 0), (27, 234, 164)
	0x563d92233540: (189, 0, 37), (230, 234, 204)
	0x563d92238fa0: (94, 0, 17), (120, 234, 185)
	0x563d9223c498: (111, 0, 21), (136, 234, 186)
	0x563d9223edb0: (18, 0, 2), (103, 234, 179)
	0x563d9223fbb0: (127, 0, 24), (199, 234, 199)
EMBREE: Set dst_map 0x153f8aeb2d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa0a2d00 for accel 0x563d9222aca0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8aeb2d00
EMBREE: Pack root 0x563d9222b340 to root_map 0x153f8aeb2d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 247...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa0cf000 = 0x153f8aedf000 allocated to accel structure 0x563d9222ad40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8aedf000 to 0xd4ec5600
RTV: Building BLAS into 0x563d9222ad40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b800
Compressed Node: i	exp: (3, 2, 2)	origin: (-22.344193, -0.752789, 30.040060)
Children:
	0x563d9222b868: (0, 134, 0), (150, 175, 168)
	0x563d922444e0: (102, 135, 17), (210, 172, 165)
	0x563d922533c8: (0, 5, 0), (122, 162, 37)
	0x563d92258e78: (101, 16, 12), (210, 152, 52)
	0x563d9225c028: (3, 17, 19), (102, 148, 166)
	0x563d9225dc68: (140, 0, 137), (210, 160, 165)
EMBREE: Set dst_map 0x153f8aedf000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa0cf000 for accel 0x563d9222ad40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8aedf000
EMBREE: Pack root 0x563d9222b800 to root_map 0x153f8aedf040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 248...
RTV: Creating acceleration struction of size 0x17200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa14d600 = 0x153f8af5d600 allocated to accel structure 0x563d9222ade0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8af5d600 to 0xd4f43c00
RTV: Building BLAS into 0x563d9222ade0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 738 triangles added; total: 738
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b800
Compressed Node: i	exp: (1, 2, 0)	origin: (4.644968, 5.080795, 12.467103)
Children:
	0x563d9222b868: (1, 0, 0), (82, 49, 212)
	0x563d9222ed28: (81, 117, 40), (198, 157, 219)
	0x563d922336c0: (4, 105, 42), (102, 126, 231)
	0x563d92235390: (0, 33, 61), (72, 63, 247)
	0x563d922368f0: (7, 113, 40), (100, 154, 227)
	0x563d92237550: (2, 58, 54), (73, 110, 241)
EMBREE: Set dst_map 0x153f8af5d600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa14d600 for accel 0x563d9222ade0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8af5d600
EMBREE: Pack root 0x563d9222b800 to root_map 0x153f8af5d640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 249...
RTV: Creating acceleration struction of size 0x2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa164800 = 0x153f8af74800 allocated to accel structure 0x563d9222ae80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8af74800 to 0xd4f5ae00
RTV: Building BLAS into 0x563d9222ae80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 64 triangles added; total: 64
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b800
Compressed Node: i	exp: (1, 1, -2)	origin: (-2.027656, 6.292613, 12.012939)
Children:
	0x563d9222b868: (0, 180, 0), (50, 212, 93)
	0x563d9222be40: (104, 0, 87), (128, 216, 155)
	0x563d9222c4b8: (31, 118, 25), (108, 192, 140)
	0x563d9222c5d8: (48, 154, 40), (107, 192, 140)
	0x563d9222c658: (48, 118, 40), (108, 192, 140)
	0x563d9222c6d8: (31, 118, 78), (108, 192, 140)
EMBREE: Set dst_map 0x153f8af74800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa164800 for accel 0x563d9222ae80
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8af74800
EMBREE: Pack root 0x563d9222b800 to root_map 0x153f8af74840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 250...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa166900 = 0x153f8af76900 allocated to accel structure 0x563d9222af20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8af76900 to 0xd4f5cf00
RTV: Building BLAS into 0x563d9222af20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b800
Compressed Node: i	exp: (1, -1, 1)	origin: (-5.117647, 11.549422, 7.903739)
Children:
	0x563d9222b868: (88, 0, 129), (163, 211, 168)
	0x563d9223c3c0: (85, 9, 16), (186, 220, 70)
	0x563d92249f28: (0, 14, 114), (122, 158, 161)
	0x563d92253a10: (28, 23, 0), (124, 141, 38)
	0x563d9225adb0: (100, 117, 37), (167, 180, 153)
	0x563d9225b778: (4, 40, 5), (51, 71, 122)
EMBREE: Set dst_map 0x153f8af76900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa166900 for accel 0x563d9222af20
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8af76900
EMBREE: Pack root 0x563d9222b800 to root_map 0x153f8af76940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 251...
RTV: Creating acceleration struction of size 0x19ca00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19ca00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa1d9c00 = 0x153f8afe9c00 allocated to accel structure 0x563d9222afc0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8afe9c00 to 0xd4fd0200
RTV: Building BLAS into 0x563d9222afc0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13202 triangles added; total: 13202
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b800
Compressed Node: i	exp: (1, 1, 1)	origin: (-3.419993, 12.390795, 8.529709)
Children:
	0x563d9222b868: (0, 32, 75), (110, 141, 157)
	0x563d92259a38: (6, 12, 0), (112, 135, 83)
	0x563d92281b90: (102, 0, 3), (177, 138, 84)
	0x563d9229ade8: (155, 25, 79), (241, 136, 166)
	0x563d922aee80: (100, 32, 78), (164, 144, 160)
	0x563d922c1108: (168, 0, 18), (243, 122, 85)
EMBREE: Set dst_map 0x153f8afe9c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa1d9c00 for accel 0x563d9222afc0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8afe9c00
EMBREE: Pack root 0x563d9222b800 to root_map 0x153f8afe9c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 252...
RTV: Creating acceleration struction of size 0x3700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa376600 = 0x153f8b186600 allocated to accel structure 0x563d9222b060
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8b186600 to 0xd516cc00
RTV: Building BLAS into 0x563d9222b060
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 108 triangles added; total: 108
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b800
Compressed Node: i	exp: (3, -4, 5)	origin: (23.498951, 11.443055, -36.783321)
Children:
	0x563d9222b868: (92, 0, 113), (166, 243, 176)
	0x563d9222bec8: (0, 0, 113), (73, 243, 176)
	0x563d9222c5c0: (0, 0, 0), (73, 243, 53)
	0x563d9222c8a0: (92, 0, 0), (166, 243, 53)
	0x563d9222cc08: (92, 0, 61), (166, 243, 114)
	0x563d9222cdd0: (0, 0, 61), (73, 243, 114)
EMBREE: Set dst_map 0x153f8b186600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa376600 for accel 0x563d9222b060
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8b186600
EMBREE: Pack root 0x563d9222b800 to root_map 0x153f8b186640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 253...
RTV: Creating acceleration struction of size 0x1c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa379d00 = 0x153f8b189d00 allocated to accel structure 0x563d9222b100
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8b189d00 to 0xd5170300
RTV: Building BLAS into 0x563d9222b100
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 912 triangles added; total: 912
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b800
Compressed Node: i	exp: (1, 4, 1)	origin: (-5.246115, 10.775280, -17.473186)
Children:
	0x563d9222b868: (12, 37, 12), (125, 69, 125)
	0x563d92232c80: (13, 67, 13), (126, 91, 126)
	0x563d92234fb0: (15, 15, 1), (134, 38, 125)
	0x563d92236908: (0, 110, 0), (150, 138, 141)
	0x563d922383c8: (0, 0, 0), (141, 21, 141)
	0x563d92239a00: (5, 89, 1), (134, 114, 128)
EMBREE: Set dst_map 0x153f8b189d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa379d00 for accel 0x563d9222b100
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8b189d00
EMBREE: Pack root 0x563d9222b800 to root_map 0x153f8b189d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 254...
RTV: Creating acceleration struction of size 0xb300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa396600 = 0x153f8b1a6600 allocated to accel structure 0x563d9222b1a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8b1a6600 to 0xd518cc00
RTV: Building BLAS into 0x563d9222b1a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 356 triangles added; total: 356
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222b840
Compressed Node: i	exp: (1, 1, 2)	origin: (0.156691, 8.216054, 11.857161)
Children:
	0x563d9222b8a8: (96, 0, 70), (135, 189, 87)
	0x563d9222e058: (0, 192, 19), (106, 203, 81)
	0x563d9222ebb0: (116, 181, 62), (183, 197, 143)
	0x563d9222f5e0: (42, 161, 81), (141, 196, 133)
	0x563d92230140: (74, 194, 0), (160, 207, 66)
	0x563d92230a80: (70, 181, 29), (150, 203, 143)
EMBREE: Set dst_map 0x153f8b1a6600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa396600 for accel 0x563d9222b1a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8b1a6600
EMBREE: Pack root 0x563d9222b840 to root_map 0x153f8b1a6640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 255...
RTV: Creating acceleration struction of size 0x1bb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1bb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa3a1900 = 0x153f8b1b1900 allocated to accel structure 0x563d9222b240
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8b1b1900 to 0xd5197f00
RTV: Building BLAS into 0x563d9222b240
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 884 triangles added; total: 884
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222bd00
Compressed Node: i	exp: (0, 1, 0)	origin: (-5.439686, 11.417029, -18.067680)
Children:
	0x563d9222bd68: (0, 140, 0), (172, 173, 140)
	0x563d92230810: (7, 0, 7), (165, 17, 132)
	0x563d922368f0: (7, 0, 3), (30, 72, 112)
	0x563d92237dd0: (10, 0, 7), (168, 72, 132)
	0x563d92238b60: (100, 71, 16), (169, 141, 135)
	0x563d922396d8: (3, 71, 4), (129, 141, 132)
EMBREE: Set dst_map 0x153f8b1b1900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa3a1900 for accel 0x563d9222b240
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8b1b1900
EMBREE: Pack root 0x563d9222bd00 to root_map 0x153f8b1b1940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 256...
RTV: Creating acceleration struction of size 0xa9b700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xa9b700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xa3bd400 = 0x153f8b1cd400 allocated to accel structure 0x563d9222b2e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8b1cd400 to 0xd51b3a00
RTV: Building BLAS into 0x563d9222b2e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 86892 triangles added; total: 86892
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (8, 5, 2)	origin: (-45.867931, 4.708693, -36.289917)
Children:
	0x563d92232be8: (0, 157, 0), (153, 168, 220)
	0x563d925e2600: (0, 142, 0), (77, 159, 220)
	0x563d92611d90: (76, 142, 0), (153, 159, 220)
	0x563d9263e380: (94, 0, 47), (135, 143, 172)
	0x563d92641458: (18, 0, 47), (21, 143, 172)
	0x563d92642ed0: (56, 0, 47), (59, 143, 172)
EMBREE: Set dst_map 0x153f8b1cd400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xa3bd400 for accel 0x563d9222b2e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8b1cd400
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8b1cd440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 257...
RTV: Creating acceleration struction of size 0x19fb00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fb00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xae58b00 = 0x153f8bc68b00 allocated to accel structure 0x563d9222b380
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8bc68b00 to 0xd5c4f100
RTV: Building BLAS into 0x563d9222b380
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13299 triangles added; total: 13299
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222bd00
Compressed Node: i	exp: (2, 2, 3)	origin: (4.525590, 9.124219, 7.516879)
Children:
	0x563d9222bd68: (130, 181, 0), (187, 234, 157)
	0x563d92255fa0: (17, 40, 134), (141, 193, 158)
	0x563d9227a3f0: (0, 178, 57), (42, 234, 177)
	0x563d92298050: (18, 181, 52), (155, 210, 158)
	0x563d922b4378: (31, 0, 57), (161, 197, 72)
	0x563d922cc1c0: (22, 139, 65), (158, 193, 120)
EMBREE: Set dst_map 0x153f8bc68b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xae58b00 for accel 0x563d9222b380
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8bc68b00
EMBREE: Pack root 0x563d9222bd00 to root_map 0x153f8bc68b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 258...
RTV: Creating acceleration struction of size 0x14800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x14800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xaff8600 = 0x153f8be08600 allocated to accel structure 0x563d9222b420
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8be08600 to 0xd5deec00
RTV: Building BLAS into 0x563d9222b420
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 654 triangles added; total: 654
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222bd00
Compressed Node: i	exp: (4, 1, 0)	origin: (-2.270751, 11.420103, 10.938107)
Children:
	0x563d9222bd68: (0, 0, 49), (47, 57, 102)
	0x563d9222e3e8: (42, 81, 0), (75, 134, 62)
	0x563d92230480: (98, 52, 93), (134, 94, 160)
	0x563d922348c0: (68, 76, 44), (102, 95, 106)
	0x563d922363a0: (74, 74, 54), (121, 118, 139)
	0x563d92236688: (90, 73, 80), (98, 87, 100)
EMBREE: Set dst_map 0x153f8be08600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xaff8600 for accel 0x563d9222b420
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8be08600
EMBREE: Pack root 0x563d9222bd00 to root_map 0x153f8be08640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 259...
RTV: Creating acceleration struction of size 0x17e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x17e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb00ce00 = 0x153f8be1ce00 allocated to accel structure 0x563d9222b4c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8be1ce00 to 0xd5e03400
RTV: Building BLAS into 0x563d9222b4c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 762 triangles added; total: 762
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222bd00
Compressed Node: i	exp: (2, 1, 3)	origin: (-3.494741, 7.858299, 6.887116)
Children:
	0x563d9222bd68: (0, 0, 76), (83, 108, 166)
	0x563d9222f6a8: (16, 1, 0), (82, 105, 80)
	0x563d922333d8: (64, 93, 62), (178, 143, 130)
	0x563d92234b48: (63, 35, 3), (126, 123, 66)
	0x563d92235958: (75, 52, 116), (167, 130, 170)
	0x563d92236940: (111, 61, 6), (191, 140, 69)
EMBREE: Set dst_map 0x153f8be1ce00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb00ce00 for accel 0x563d9222b4c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8be1ce00
EMBREE: Pack root 0x563d9222bd00 to root_map 0x153f8be1ce40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 260...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb024c00 = 0x153f8be34c00 allocated to accel structure 0x563d9222b560
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8be34c00 to 0xd5e1b200
RTV: Building BLAS into 0x563d9222b560
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222bd00
Compressed Node: i	exp: (-1, -1, -1)	origin: (7.464836, 7.833672, -35.554607)
Children:
	0x563d9222bd68: (7, 86, 0), (138, 158, 72)
	0x563d9222bf00: (8, 86, 59), (151, 154, 133)
	0x563d9222c098: (0, 0, 8), (97, 112, 111)
	0x563d9222c1c8: (0, 5, 68), (89, 112, 122)
	0x563d9222c278: (30, 0, 9), (127, 105, 60)
	0x563d9222c310: (65, 0, 59), (127, 94, 122)
EMBREE: Set dst_map 0x153f8be34c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb024c00 for accel 0x563d9222b560
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8be34c00
EMBREE: Pack root 0x563d9222bd00 to root_map 0x153f8be34c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 261...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb025e00 = 0x153f8be35e00 allocated to accel structure 0x563d9222b600
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8be35e00 to 0xd5e1c400
RTV: Building BLAS into 0x563d9222b600
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222bd00
Compressed Node: i	exp: (1, -1, 1)	origin: (-5.169504, 11.546965, 9.408619)
Children:
	0x563d9222bd68: (103, 7, 105), (161, 218, 143)
	0x563d9223b2d0: (102, 0, 0), (161, 211, 128)
	0x563d92246f48: (0, 20, 116), (125, 173, 142)
	0x563d922525b0: (1, 13, 0), (126, 166, 21)
	0x563d9225b738: (96, 117, 19), (105, 138, 117)
	0x563d9225bdf8: (2, 40, 9), (29, 69, 129)
EMBREE: Set dst_map 0x153f8be35e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb025e00 for accel 0x563d9222b600
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8be35e00
EMBREE: Pack root 0x563d9222bd00 to root_map 0x153f8be35e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 262...
RTV: Creating acceleration struction of size 0x7e100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb099100 = 0x153f8bea9100 allocated to accel structure 0x563d9222b6a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8bea9100 to 0xd5e8f700
RTV: Building BLAS into 0x563d9222b6a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4032 triangles added; total: 4032
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222bd40
Compressed Node: i	exp: (0, 0, 0)	origin: (-9.339753, 1.534454, -8.534206)
Children:
	0x563d9222bda8: (0, 196, 0), (74, 226, 78)
	0x563d92245870: (0, 136, 50), (107, 202, 104)
	0x563d9224f378: (123, 0, 159), (219, 36, 202)
	0x563d92256280: (15, 31, 81), (54, 150, 141)
	0x563d9225cd90: (49, 49, 98), (166, 150, 145)
	0x563d92260be8: (91, 29, 134), (200, 79, 167)
EMBREE: Set dst_map 0x153f8bea9100 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb099100 for accel 0x563d9222b6a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8bea9100
EMBREE: Pack root 0x563d9222bd40 to root_map 0x153f8bea9140
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 263...
RTV: Creating acceleration struction of size 0xfa00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xfa00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb117200 = 0x153f8bf27200 allocated to accel structure 0x563d9222b740
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8bf27200 to 0xd5f0d800
RTV: Building BLAS into 0x563d9222b740
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 498 triangles added; total: 498
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c200
Compressed Node: i	exp: (3, 0, 0)	origin: (-3.619017, 11.300145, 10.630883)
Children:
	0x563d9222c268: (99, 6, 62), (135, 141, 136)
	0x563d9222dea8: (0, 0, 0), (21, 128, 76)
	0x563d9222f4f0: (60, 12, 57), (88, 142, 124)
	0x563d92230900: (41, 8, 40), (63, 138, 108)
	0x563d92233850: (18, 3, 20), (43, 134, 94)
	0x563d92234330: (82, 11, 69), (102, 142, 130)
EMBREE: Set dst_map 0x153f8bf27200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb117200 for accel 0x563d9222b740
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8bf27200
EMBREE: Pack root 0x563d9222c200 to root_map 0x153f8bf27240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 264...
RTV: Creating acceleration struction of size 0x33e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x33e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb126c00 = 0x153f8bf36c00 allocated to accel structure 0x563d9222b7e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8bf36c00 to 0xd5f1d200
RTV: Building BLAS into 0x563d9222b7e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1658 triangles added; total: 1658
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c200
Compressed Node: i	exp: (3, 2, 1)	origin: (1.644779, 11.712138, -12.329121)
Children:
	0x563d9222c268: (4, 117, 33), (143, 152, 163)
	0x563d9223a838: (4, 0, 0), (143, 42, 145)
	0x563d9223ebd0: (0, 23, 0), (24, 152, 148)
	0x563d92241050: (115, 23, 0), (143, 137, 148)
	0x563d92242e18: (17, 26, 101), (130, 137, 146)
	0x563d92243368: (4, 33, 32), (143, 152, 35)
EMBREE: Set dst_map 0x153f8bf36c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb126c00 for accel 0x563d9222b7e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8bf36c00
EMBREE: Pack root 0x563d9222c200 to root_map 0x153f8bf36c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 265...
RTV: Creating acceleration struction of size 0x12d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb15aa00 = 0x153f8bf6aa00 allocated to accel structure 0x563d9222b880
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8bf6aa00 to 0xd5f51000
RTV: Building BLAS into 0x563d9222b880
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 600 triangles added; total: 600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c200
Compressed Node: i	exp: (1, 2, -1)	origin: (7.048969, 7.432625, 13.076319)
Children:
	0x563d9222c268: (191, 105, 100), (226, 195, 159)
	0x563d9222e200: (176, 0, 71), (208, 58, 164)
	0x563d92230090: (125, 73, 17), (178, 138, 180)
	0x563d92233798: (172, 57, 61), (200, 199, 170)
	0x563d922349a8: (172, 84, 45), (234, 91, 208)
	0x563d922357a8: (0, 104, 0), (106, 148, 126)
EMBREE: Set dst_map 0x153f8bf6aa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb15aa00 for accel 0x563d9222b880
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8bf6aa00
EMBREE: Pack root 0x563d9222c200 to root_map 0x153f8bf6aa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 266...
RTV: Creating acceleration struction of size 0x2d0b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2d0b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb16d700 = 0x153f8bf7d700 allocated to accel structure 0x563d9222b920
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8bf7d700 to 0xd5f63d00
RTV: Building BLAS into 0x563d9222b920
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 23059 triangles added; total: 23059
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (5, 4, 3)	origin: (-10.953329, 0.096075, 6.392771)
Children:
	0x563d92232be8: (0, 1, 0), (61, 69, 187)
	0x563d922b2778: (99, 138, 65), (151, 228, 178)
	0x563d922f8a70: (89, 1, 21), (168, 70, 223)
	0x563d92317620: (80, 62, 18), (159, 131, 223)
	0x563d9232ea90: (56, 0, 6), (113, 68, 214)
	0x563d92341280: (60, 63, 17), (91, 130, 196)
EMBREE: Set dst_map 0x153f8bf7d700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb16d700 for accel 0x563d9222b920
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8bf7d700
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8bf7d740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 267...
RTV: Creating acceleration struction of size 0x9b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb43e200 = 0x153f8c24e200 allocated to accel structure 0x563d9222b9c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c24e200 to 0xd6234800
RTV: Building BLAS into 0x563d9222b9c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 308 triangles added; total: 308
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c200
Compressed Node: i	exp: (-2, -1, -3)	origin: (-6.568102, 2.372104, -7.927681)
Children:
	0x563d9222c268: (0, 60, 65), (94, 140, 176)
	0x563d9222da50: (20, 41, 0), (155, 59, 228)
	0x563d9222eff0: (68, 60, 84), (167, 99, 202)
	0x563d9222f968: (74, 98, 121), (167, 140, 205)
	0x563d92230338: (48, 0, 34), (130, 42, 177)
	0x563d92230910: (43, 57, 51), (130, 71, 182)
EMBREE: Set dst_map 0x153f8c24e200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb43e200 for accel 0x563d9222b9c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c24e200
EMBREE: Pack root 0x563d9222c200 to root_map 0x153f8c24e240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 268...
RTV: Creating acceleration struction of size 0xea100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xea100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb447d00 = 0x153f8c257d00 allocated to accel structure 0x563d9222ba60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c257d00 to 0xd623e300
RTV: Building BLAS into 0x563d9222ba60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7488 triangles added; total: 7488
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c200
Compressed Node: i	exp: (1, 2, 1)	origin: (-36.818554, 1.280748, 29.779825)
Children:
	0x563d9222c268: (77, 64, 124), (98, 132, 193)
	0x563d9226e860: (16, 71, 124), (81, 113, 157)
	0x563d92278850: (0, 108, 104), (19, 132, 134)
	0x563d922833d0: (96, 49, 84), (154, 107, 131)
	0x563d92289610: (191, 0, 0), (223, 22, 43)
	0x563d9228cc88: (151, 21, 41), (194, 51, 87)
EMBREE: Set dst_map 0x153f8c257d00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb447d00 for accel 0x563d9222ba60
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c257d00
EMBREE: Pack root 0x563d9222c200 to root_map 0x153f8c257d40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 269...
RTV: Creating acceleration struction of size 0x19fd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb531e00 = 0x153f8c341e00 allocated to accel structure 0x563d9222bb00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c341e00 to 0xd6328400
RTV: Building BLAS into 0x563d9222bb00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13303 triangles added; total: 13303
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (3, 2, 1)	origin: (-10.702374, 2.045481, 9.758567)
Children:
	0x563d92232be8: (0, 0, 120), (109, 41, 212)
	0x563d922693a8: (96, 28, 44), (111, 133, 184)
	0x563d9228a088: (42, 0, 0), (130, 42, 51)
	0x563d922a9418: (43, 25, 13), (55, 161, 161)
	0x563d922c0de0: (40, 16, 19), (112, 39, 179)
	0x563d922d1b68: (48, 32, 16), (86, 65, 169)
EMBREE: Set dst_map 0x153f8c341e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb531e00 for accel 0x563d9222bb00
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c341e00
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8c341e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 270...
RTV: Creating acceleration struction of size 0x12100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x12100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb6d1b00 = 0x153f8c4e1b00 allocated to accel structure 0x563d9222bba0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c4e1b00 to 0xd64c8100
RTV: Building BLAS into 0x563d9222bba0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 576 triangles added; total: 576
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c240
Compressed Node: i	exp: (-1, -2, -2)	origin: (-9.397340, 2.276504, -8.512968)
Children:
	0x563d9222c2a8: (64, 42, 35), (163, 105, 136)
	0x563d9222eb58: (51, 0, 0), (124, 45, 169)
	0x563d92230500: (104, 0, 10), (177, 45, 172)
	0x563d92233c40: (113, 103, 46), (228, 165, 158)
	0x563d922351b0: (54, 103, 22), (130, 154, 133)
	0x563d92236400: (0, 115, 13), (65, 165, 98)
EMBREE: Set dst_map 0x153f8c4e1b00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb6d1b00 for accel 0x563d9222bba0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c4e1b00
EMBREE: Pack root 0x563d9222c240 to root_map 0x153f8c4e1b40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 271...
RTV: Creating acceleration struction of size 0x7e600
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x7e600) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb6e3c00 = 0x153f8c4f3c00 allocated to accel structure 0x563d9222bc40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c4f3c00 to 0xd64da200
RTV: Building BLAS into 0x563d9222bc40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4042 triangles added; total: 4042
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c700
Compressed Node: i	exp: (2, 2, 3)	origin: (-22.674906, -0.613132, 30.307766)
Children:
	0x563d9222c768: (0, 5, 0), (30, 155, 210)
	0x563d92250bd0: (13, 0, 0), (169, 35, 148)
	0x563d92258130: (9, 11, 124), (170, 153, 210)
	0x563d9225c780: (25, 9, 3), (153, 155, 13)
	0x563d9225e5c8: (26, 24, 3), (58, 145, 150)
	0x563d9225f058: (29, 122, 60), (155, 146, 71)
EMBREE: Set dst_map 0x153f8c4f3c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb6e3c00 for accel 0x563d9222bc40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c4f3c00
EMBREE: Pack root 0x563d9222c700 to root_map 0x153f8c4f3c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 272...
RTV: Creating acceleration struction of size 0x4c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb762200 = 0x153f8c572200 allocated to accel structure 0x563d9222bce0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c572200 to 0xd6558800
RTV: Building BLAS into 0x563d9222bce0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 150 triangles added; total: 150
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c700
Compressed Node: i	exp: (0, 0, 3)	origin: (1.979121, 12.444323, 7.871805)
Children:
	0x563d9222c768: (0, 0, 118), (75, 80, 138)
	0x563d9222d040: (90, 3, 0), (167, 83, 21)
	0x563d9222d7b0: (41, 62, 69), (116, 177, 96)
	0x563d9222de40: (62, 63, 44), (141, 177, 70)
	0x563d9222e300: (23, 0, 93), (97, 138, 120)
	0x563d9222e5b8: (75, 3, 19), (148, 139, 47)
EMBREE: Set dst_map 0x153f8c572200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb762200 for accel 0x563d9222bce0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c572200
EMBREE: Pack root 0x563d9222c700 to root_map 0x153f8c572240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 273...
RTV: Creating acceleration struction of size 0x18500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x18500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb766e00 = 0x153f8c576e00 allocated to accel structure 0x563d9222bd80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c576e00 to 0xd655d400
RTV: Building BLAS into 0x563d9222bd80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 776 triangles added; total: 776
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c700
Compressed Node: i	exp: (2, 1, 0)	origin: (-2.591937, 10.415362, 8.203151)
Children:
	0x563d9222c768: (98, 163, 67), (191, 201, 242)
	0x563d922334e0: (0, 160, 0), (122, 207, 196)
	0x563d92236398: (92, 51, 46), (170, 166, 193)
	0x563d92236f88: (0, 0, 7), (78, 53, 173)
	0x563d92237828: (60, 0, 35), (192, 52, 238)
	0x563d92238398: (34, 51, 13), (121, 168, 165)
EMBREE: Set dst_map 0x153f8c576e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb766e00 for accel 0x563d9222bd80
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c576e00
EMBREE: Pack root 0x563d9222c700 to root_map 0x153f8c576e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 274...
RTV: Creating acceleration struction of size 0x740200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x740200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xb77f300 = 0x153f8c58f300 allocated to accel structure 0x563d9222be20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8c58f300 to 0xd6575900
RTV: Building BLAS into 0x563d9222be20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 59394 triangles added; total: 59394
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (0, 2, 1)	origin: (7.247412, 4.344875, 11.008569)
Children:
	0x563d92232be8: (44, 25, 81), (213, 73, 148)
	0x563d922d08a8: (44, 71, 90), (213, 106, 167)
	0x563d9235c750: (0, 80, 163), (240, 107, 204)
	0x563d923def98: (75, 0, 0), (220, 44, 86)
	0x563d92454ff8: (15, 103, 128), (230, 138, 196)
	0x563d924c1a40: (83, 105, 191), (208, 143, 239)
EMBREE: Set dst_map 0x153f8c58f300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xb77f300 for accel 0x563d9222be20
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8c58f300
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8c58f340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 275...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xbebf500 = 0x153f8cccf500 allocated to accel structure 0x563d9222bec0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8cccf500 to 0xd6cb5b00
RTV: Building BLAS into 0x563d9222bec0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c700
Compressed Node: i	exp: (0, 1, 3)	origin: (0.197880, 7.570610, 7.396943)
Children:
	0x563d9222c768: (0, 0, 136), (84, 139, 159)
	0x563d9222ddc0: (105, 0, 0), (195, 138, 24)
	0x563d9222f2b8: (46, 0, 79), (133, 182, 111)
	0x563d9222fe70: (70, 0, 50), (152, 182, 81)
	0x563d92230a90: (87, 0, 22), (171, 164, 54)
	0x563d92232f10: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x153f8cccf500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xbebf500 for accel 0x563d9222bec0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8cccf500
EMBREE: Pack root 0x563d9222c700 to root_map 0x153f8cccf540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 276...
RTV: Creating acceleration struction of size 0x41800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x41800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xbecaa00 = 0x153f8ccdaa00 allocated to accel structure 0x563d9222bf60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ccdaa00 to 0xd6cc1000
RTV: Building BLAS into 0x563d9222bf60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2094 triangles added; total: 2094
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c700
Compressed Node: i	exp: (2, 1, 0)	origin: (4.009951, 9.049192, 11.244306)
Children:
	0x563d9222c768: (95, 0, 34), (143, 138, 182)
	0x563d9223bc88: (0, 0, 0), (26, 139, 143)
	0x563d92245930: (81, 61, 34), (115, 139, 180)
	0x563d92247218: (21, 63, 0), (111, 139, 143)
	0x563d92247f78: (19, 0, 60), (127, 75, 182)
	0x563d92248580: (21, 0, 0), (127, 109, 105)
EMBREE: Set dst_map 0x153f8ccdaa00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xbecaa00 for accel 0x563d9222bf60
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ccdaa00
EMBREE: Pack root 0x563d9222c700 to root_map 0x153f8ccdaa40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 277...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xbf0c200 = 0x153f8cd1c200 allocated to accel structure 0x563d922142e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8cd1c200 to 0xd6d02800
RTV: Building BLAS into 0x563d922142e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c700
Compressed Node: i	exp: (1, -2, 1)	origin: (-5.149152, 15.654038, -17.938791)
Children:
	0x563d9222c768: (0, 0, 116), (190, 199, 185)
	0x563d92234ff0: (0, 15, 68), (129, 183, 123)
	0x563d92238980: (12, 0, 0), (109, 199, 88)
	0x563d9223bc30: (29, 0, 0), (190, 18, 141)
	0x563d9223bde0: (29, 180, 0), (190, 199, 141)
	0x563d9223bf90: (31, 14, 0), (190, 184, 139)
EMBREE: Set dst_map 0x153f8cd1c200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xbf0c200 for accel 0x563d922142e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8cd1c200
EMBREE: Pack root 0x563d9222c700 to root_map 0x153f8cd1c240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 278...
RTV: Creating acceleration struction of size 0xcf00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xcf00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xbf29f00 = 0x153f8cd39f00 allocated to accel structure 0x563d9222c0a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8cd39f00 to 0xd6d20500
RTV: Building BLAS into 0x563d9222c0a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 412 triangles added; total: 412
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222c740
Compressed Node: i	exp: (2, 2, -3)	origin: (17.717075, 7.375426, -28.588303)
Children:
	0x563d9222c7a8: (12, 61, 213), (46, 147, 219)
	0x563d9222ebc0: (171, 53, 6), (244, 79, 13)
	0x563d922305a8: (146, 28, 0), (216, 53, 9)
	0x563d92232d90: (84, 20, 0), (123, 50, 7)
	0x563d922335f0: (200, 100, 6), (231, 125, 7)
	0x563d92233b50: (0, 0, 6), (15, 21, 7)
EMBREE: Set dst_map 0x153f8cd39f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xbf29f00 for accel 0x563d9222c0a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8cd39f00
EMBREE: Pack root 0x563d9222c740 to root_map 0x153f8cd39f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 279...
RTV: Creating acceleration struction of size 0x35500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x35500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xbf36e00 = 0x153f8cd46e00 allocated to accel structure 0x563d9222c140
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8cd46e00 to 0xd6d2d400
RTV: Building BLAS into 0x563d9222c140
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1703 triangles added; total: 1703
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222cc00
Compressed Node: i	exp: (3, 2, 1)	origin: (9.987664, 11.653848, -12.186610)
Children:
	0x563d9222cc68: (0, 114, 0), (148, 157, 184)
	0x563d9223db48: (4, 0, 0), (148, 45, 155)
	0x563d92240e68: (0, 30, 0), (30, 157, 156)
	0x563d92242a00: (113, 30, 0), (148, 141, 156)
	0x563d92244118: (18, 35, 104), (134, 141, 184)
	0x563d92244760: (4, 34, 33), (148, 157, 36)
EMBREE: Set dst_map 0x153f8cd46e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xbf36e00 for accel 0x563d9222c140
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8cd46e00
EMBREE: Pack root 0x563d9222cc00 to root_map 0x153f8cd46e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 280...
RTV: Creating acceleration struction of size 0x87100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x87100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xbf6c300 = 0x153f8cd7c300 allocated to accel structure 0x563d9222c1e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8cd7c300 to 0xd6d62900
RTV: Building BLAS into 0x563d9222c1e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 4320 triangles added; total: 4320
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222cc00
Compressed Node: i	exp: (0, 2, 0)	origin: (-0.191739, 11.520787, -12.485670)
Children:
	0x563d9222cc68: (4, 104, 17), (133, 195, 118)
	0x563d9223dcb0: (108, 104, 77), (239, 195, 223)
	0x563d92248778: (110, 52, 120), (223, 113, 224)
	0x563d92252c98: (0, 46, 0), (100, 106, 67)
	0x563d9225b338: (110, 0, 73), (208, 55, 218)
	0x563d92260b60: (37, 0, 44), (123, 80, 137)
EMBREE: Set dst_map 0x153f8cd7c300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xbf6c300 for accel 0x563d9222c1e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8cd7c300
EMBREE: Pack root 0x563d9222cc00 to root_map 0x153f8cd7c340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 281...
RTV: Creating acceleration struction of size 0x678000
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x678000) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xbff3400 = 0x153f8ce03400 allocated to accel structure 0x563d9222c280
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ce03400 to 0xd6de9a00
RTV: Building BLAS into 0x563d9222c280
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 52989 triangles added; total: 52989
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 2, 0)	origin: (15.791794, 6.397914, -24.225891)
Children:
	0x563d92232be8: (56, 104, 3), (111, 145, 198)
	0x563d922c3b80: (66, 37, 24), (147, 77, 169)
	0x563d9233c6b0: (0, 74, 122), (134, 107, 203)
	0x563d923ae5d8: (68, 74, 0), (152, 107, 132)
	0x563d9241f4f0: (35, 0, 39), (167, 39, 176)
	0x563d92476070: (16, 113, 50), (60, 150, 154)
EMBREE: Set dst_map 0x153f8ce03400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xbff3400 for accel 0x563d9222c280
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ce03400
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8ce03440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 282...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc66b400 = 0x153f8d47b400 allocated to accel structure 0x563d9222c320
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d47b400 to 0xd7461a00
RTV: Building BLAS into 0x563d9222c320
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 0 triangles added; total: 0
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Set dst_map 0x153f8d47b400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc66b400 for accel 0x563d9222c320
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d47b400
EMBREE: Pack root 0x7ffe1afb16b0 to root_map 0x153f8d47b440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 283...
RTV: Creating acceleration struction of size 0xdd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xdd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc66b600 = 0x153f8d47b600 allocated to accel structure 0x563d9222c3c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d47b600 to 0xd7461c00
RTV: Building BLAS into 0x563d9222c3c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 440 triangles added; total: 440
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222cc00
Compressed Node: i	exp: (-1, 0, -1)	origin: (-0.645671, 9.290928, -11.916551)
Children:
	0x563d9222cc68: (0, 0, 43), (218, 26, 128)
	0x563d9222f218: (0, 153, 0), (218, 175, 80)
	0x563d92232b80: (73, 18, 23), (218, 89, 136)
	0x563d92234360: (0, 18, 23), (82, 89, 128)
	0x563d92234cb0: (73, 82, 0), (218, 161, 102)
	0x563d92235200: (0, 82, 0), (74, 161, 102)
EMBREE: Set dst_map 0x153f8d47b600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc66b600 for accel 0x563d9222c3c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d47b600
EMBREE: Pack root 0x563d9222cc00 to root_map 0x153f8d47b640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 284...
RTV: Creating acceleration struction of size 0x9c900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9c900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc679300 = 0x153f8d489300 allocated to accel structure 0x563d9222c460
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d489300 to 0xd746f900
RTV: Building BLAS into 0x563d9222c460
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 5008 triangles added; total: 5008
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222cc00
Compressed Node: i	exp: (0, 1, 3)	origin: (21.290339, 15.475586, 4.789949)
Children:
	0x563d9222cc68: (6, 15, 67), (135, 226, 96)
	0x563d92240900: (0, 0, 99), (161, 177, 115)
	0x563d9224e6c8: (69, 34, 0), (111, 136, 72)
	0x563d92257028: (0, 0, 139), (43, 177, 149)
	0x563d9225f628: (44, 35, 89), (135, 211, 106)
	0x563d922679b8: (37, 0, 114), (163, 177, 149)
EMBREE: Set dst_map 0x153f8d489300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc679300 for accel 0x563d9222c460
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d489300
EMBREE: Pack root 0x563d9222cc00 to root_map 0x153f8d489340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 285...
RTV: Creating acceleration struction of size 0x1b0900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1b0900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc715c00 = 0x153f8d525c00 allocated to accel structure 0x563d9222c500
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d525c00 to 0xd750c200
RTV: Building BLAS into 0x563d9222c500
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13840 triangles added; total: 13840
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (5, 2, 3)	origin: (-9.587969, 0.476419, 7.620272)
Children:
	0x563d92232be8: (113, 55, 166), (141, 145, 189)
	0x563d92257e10: (25, 15, 126), (62, 96, 164)
	0x563d92278960: (91, 0, 171), (115, 157, 212)
	0x563d922955e8: (0, 69, 94), (18, 135, 131)
	0x563d922b0818: (69, 1, 160), (93, 92, 180)
	0x563d922ca820: (5, 61, 0), (20, 142, 16)
EMBREE: Set dst_map 0x153f8d525c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc715c00 for accel 0x563d9222c500
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d525c00
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8d525c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 286...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc8c6500 = 0x153f8d6d6500 allocated to accel structure 0x563d9222c5a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d6d6500 to 0xd76bcb00
RTV: Building BLAS into 0x563d9222c5a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222cc40
Compressed Node: i	exp: (2, -2, -1)	origin: (13.673057, 15.344007, -12.966626)
Children:
	0x563d9222cca8: (0, 1, 125), (131, 163, 189)
	0x563d92237618: (0, 24, 0), (132, 174, 17)
	0x563d9223ee88: (0, 0, 16), (51, 198, 133)
	0x563d92240980: (83, 0, 16), (131, 198, 133)
	0x563d92242420: (36, 0, 52), (97, 198, 189)
	0x563d92243b58: (0, 1, 80), (130, 163, 133)
EMBREE: Set dst_map 0x153f8d6d6500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc8c6500 for accel 0x563d9222c5a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d6d6500
EMBREE: Pack root 0x563d9222cc40 to root_map 0x153f8d6d6540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 287...
RTV: Creating acceleration struction of size 0x2e00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2e00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc8f8600 = 0x153f8d708600 allocated to accel structure 0x563d9222c640
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d708600 to 0xd76eec00
RTV: Building BLAS into 0x563d9222c640
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 89 triangles added; total: 89
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d100
Compressed Node: i	exp: (-2, 2, 1)	origin: (-1.081052, 4.311310, 10.744438)
Children:
	0x563d9222d168: (150, 0, 0), (251, 231, 61)
	0x563d9222dc08: (0, 0, 173), (105, 231, 183)
	0x563d9222e508: (104, 0, 59), (201, 32, 176)
	0x563d9222e5a0: (102, 197, 56), (204, 231, 178)
	0x563d9222e638: (102, 31, 56), (204, 198, 178)
	0x563d9222e644: (104, 30, 56), (204, 198, 176)
EMBREE: Set dst_map 0x153f8d708600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc8f8600 for accel 0x563d9222c640
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d708600
EMBREE: Pack root 0x563d9222d100 to root_map 0x153f8d708640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 288...
RTV: Creating acceleration struction of size 0xf8100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf8100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc8fb400 = 0x153f8d70b400 allocated to accel structure 0x563d9222c6e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d70b400 to 0xd76f1a00
RTV: Building BLAS into 0x563d9222c6e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7936 triangles added; total: 7936
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d100
Compressed Node: i	exp: (-2, 1, 4)	origin: (22.340450, 16.814526, -6.085238)
Children:
	0x563d9222d168: (0, 0, 43), (177, 157, 92)
	0x563d92247ee8: (0, 0, 0), (177, 157, 44)
	0x563d9225e5d0: (0, 0, 163), (177, 157, 195)
	0x563d9226d638: (0, 0, 139), (177, 157, 164)
	0x563d9227c740: (0, 0, 91), (177, 157, 110)
	0x563d922895c0: (0, 0, 109), (177, 157, 140)
EMBREE: Set dst_map 0x153f8d70b400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc8fb400 for accel 0x563d9222c6e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d70b400
EMBREE: Pack root 0x563d9222d100 to root_map 0x153f8d70b440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 289...
RTV: Creating acceleration struction of size 0x70b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x70b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xc9f3500 = 0x153f8d803500 allocated to accel structure 0x563d9222c780
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d803500 to 0xd77e9b00
RTV: Building BLAS into 0x563d9222c780
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3604 triangles added; total: 3604
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d100
Compressed Node: i	exp: (2, 0, 1)	origin: (-4.515021, 10.961652, 11.372982)
Children:
	0x563d9222d168: (60, 7, 107), (172, 116, 205)
	0x563d9223dce8: (3, 0, 107), (68, 111, 207)
	0x563d92248818: (0, 151, 0), (174, 210, 62)
	0x563d92250180: (2, 65, 83), (167, 116, 122)
	0x563d92256560: (0, 65, 25), (162, 196, 123)
	0x563d92258d70: (85, 65, 10), (167, 196, 122)
EMBREE: Set dst_map 0x153f8d803500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xc9f3500 for accel 0x563d9222c780
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d803500
EMBREE: Pack root 0x563d9222d100 to root_map 0x153f8d803540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 290...
RTV: Creating acceleration struction of size 0x2c700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2c700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xca64000 = 0x153f8d874000 allocated to accel structure 0x563d9222c820
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d874000 to 0xd785a600
RTV: Building BLAS into 0x563d9222c820
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1420 triangles added; total: 1420
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d100
Compressed Node: i	exp: (0, 2, 0)	origin: (6.956445, 11.629395, -12.367093)
Children:
	0x563d9222d168: (0, 93, 0), (173, 139, 85)
	0x563d92234cd8: (46, 0, 52), (125, 86, 101)
	0x563d9223a450: (57, 0, 0), (112, 139, 85)
	0x563d9223e640: (0, 65, 46), (173, 112, 164)
	0x563d92240880: (59, 0, 43), (105, 110, 85)
	0x563d922413a0: (5, 0, 35), (168, 132, 85)
EMBREE: Set dst_map 0x153f8d874000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xca64000 for accel 0x563d9222c820
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d874000
EMBREE: Pack root 0x563d9222d100 to root_map 0x153f8d874040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 291...
RTV: Creating acceleration struction of size 0x1dd00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1dd00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xca90700 = 0x153f8d8a0700 allocated to accel structure 0x563d9222c8c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d8a0700 to 0xd7886d00
RTV: Building BLAS into 0x563d9222c8c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 952 triangles added; total: 952
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d100
Compressed Node: i	exp: (1, -2, 0)	origin: (-3.038695, 20.136789, -17.276011)
Children:
	0x563d9222d168: (12, 0, 165), (144, 179, 253)
	0x563d92235c98: (0, 0, 0), (71, 179, 166)
	0x563d9223b3f0: (69, 14, 123), (91, 165, 170)
	0x563d9223c638: (0, 0, 0), (144, 17, 251)
	0x563d9223c7e8: (0, 162, 0), (144, 179, 251)
	0x563d9223cb18: (0, 13, 0), (144, 166, 249)
EMBREE: Set dst_map 0x153f8d8a0700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xca90700 for accel 0x563d9222c8c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d8a0700
EMBREE: Pack root 0x563d9222d100 to root_map 0x153f8d8a0740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 292...
RTV: Creating acceleration struction of size 0xf5f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcaae400 = 0x153f8d8be400 allocated to accel structure 0x563d9222c960
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d8be400 to 0xd78a4a00
RTV: Building BLAS into 0x563d9222c960
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7868 triangles added; total: 7868
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d100
Compressed Node: i	exp: (3, 3, 2)	origin: (-48.644955, 1.799493, 35.795444)
Children:
	0x563d9222d168: (83, 207, 55), (155, 249, 76)
	0x563d92249958: (0, 193, 28), (47, 249, 101)
	0x563d92263400: (36, 0, 0), (94, 49, 137)
	0x563d92271c98: (42, 180, 44), (88, 253, 86)
	0x563d9227e290: (37, 36, 44), (74, 204, 87)
	0x563d9228aa98: (88, 0, 0), (118, 37, 137)
EMBREE: Set dst_map 0x153f8d8be400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcaae400 for accel 0x563d9222c960
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d8be400
EMBREE: Pack root 0x563d9222d100 to root_map 0x153f8d8be440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 293...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcba4300 = 0x153f8d9b4300 allocated to accel structure 0x563d9222ca00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d9b4300 to 0xd799a900
RTV: Building BLAS into 0x563d9222ca00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d100
Compressed Node: i	exp: (2, 0, -1)	origin: (-2.852748, 3.701350, 11.244201)
Children:
	0x563d9222d168: (49, 59, 32), (142, 141, 169)
	0x563d9222f130: (141, 55, 109), (200, 98, 212)
	0x563d92230c40: (61, 0, 39), (126, 68, 167)
	0x563d92233a68: (0, 90, 0), (28, 153, 60)
	0x563d92234cd0: (18, 118, 21), (95, 147, 112)
	0x563d92235580: (0, 69, 0), (113, 111, 133)
EMBREE: Set dst_map 0x153f8d9b4300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcba4300 for accel 0x563d9222ca00
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d9b4300
EMBREE: Pack root 0x563d9222d100 to root_map 0x153f8d9b4340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 294...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcbb3600 = 0x153f8d9c3600 allocated to accel structure 0x563d9222caa0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d9c3600 to 0xd79a9c00
RTV: Building BLAS into 0x563d9222caa0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d140
Compressed Node: i	exp: (-1, 3, -2)	origin: (-8.932772, 2.407359, 6.941681)
Children:
	0x563d9222d1a8: (0, 106, 0), (68, 143, 135)
	0x563d9222faf0: (54, 97, 24), (102, 145, 123)
	0x563d92233608: (99, 103, 23), (181, 124, 159)
	0x563d92234818: (69, 79, 52), (94, 98, 101)
	0x563d92235740: (80, 0, 39), (119, 18, 108)
	0x563d92235f88: (80, 17, 64), (102, 80, 85)
EMBREE: Set dst_map 0x153f8d9c3600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcbb3600 for accel 0x563d9222caa0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d9c3600
EMBREE: Pack root 0x563d9222d140 to root_map 0x153f8d9c3640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 295...
RTV: Creating acceleration struction of size 0x1cad00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1cad00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcbc3900 = 0x153f8d9d3900 allocated to accel structure 0x563d9222cb40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8d9d3900 to 0xd79b9f00
RTV: Building BLAS into 0x563d9222cb40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 14679 triangles added; total: 14679
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (1, 1, 0)	origin: (3.300101, 7.723739, 11.729010)
Children:
	0x563d92232be8: (0, 115, 11), (126, 224, 202)
	0x563d92262ad0: (117, 110, 16), (242, 227, 206)
	0x563d92289478: (1, 47, 14), (125, 123, 202)
	0x563d922ac6f0: (115, 44, 12), (240, 118, 205)
	0x563d922c8898: (117, 0, 6), (240, 51, 148)
	0x563d922da290: (40, 0, 0), (126, 52, 128)
EMBREE: Set dst_map 0x153f8d9d3900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcbc3900 for accel 0x563d9222cb40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8d9d3900
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8d9d3940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 296...
RTV: Creating acceleration struction of size 0xf5c00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf5c00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcd8e600 = 0x153f8db9e600 allocated to accel structure 0x563d9222cbe0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8db9e600 to 0xd7b84c00
RTV: Building BLAS into 0x563d9222cbe0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 7862 triangles added; total: 7862
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d600
Compressed Node: i	exp: (4, 4, 2)	origin: (20.988741, 10.159668, -37.957588)
Children:
	0x563d9222d668: (0, 163, 102), (73, 201, 135)
	0x563d9224a720: (93, 157, 55), (134, 201, 182)
	0x563d92263b98: (52, 0, 0), (103, 40, 239)
	0x563d922731f8: (70, 30, 88), (100, 166, 151)
	0x563d9227fce8: (66, 146, 86), (96, 204, 153)
	0x563d9228b2b8: (31, 0, 0), (58, 30, 239)
EMBREE: Set dst_map 0x153f8db9e600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcd8e600 for accel 0x563d9222cbe0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8db9e600
EMBREE: Pack root 0x563d9222d600 to root_map 0x153f8db9e640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 297...
RTV: Creating acceleration struction of size 0x5300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xce84200 = 0x153f8dc94200 allocated to accel structure 0x563d9222cc80
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dc94200 to 0xd7c7a800
RTV: Building BLAS into 0x563d9222cc80
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 164 triangles added; total: 164
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d600
Compressed Node: i	exp: (2, 2, 2)	origin: (5.357996, 9.414164, 9.335013)
Children:
	0x563d9222d668: (184, 137, 21), (226, 188, 130)
	0x563d9222e620: (0, 144, 0), (22, 209, 110)
	0x563d9222f180: (9, 161, 0), (226, 199, 75)
	0x563d9222f7c8: (2, 0, 2), (18, 193, 97)
	0x563d9222fdb0: (3, 164, 52), (221, 205, 130)
	0x563d9222ff70: (10, 175, 74), (203, 209, 102)
EMBREE: Set dst_map 0x153f8dc94200 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xce84200 for accel 0x563d9222cc80
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dc94200
EMBREE: Pack root 0x563d9222d600 to root_map 0x153f8dc94240
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 298...
RTV: Creating acceleration struction of size 0x2b100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2b100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xce89500 = 0x153f8dc99500 allocated to accel structure 0x563d9222cd20
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dc99500 to 0xd7c7fb00
RTV: Building BLAS into 0x563d9222cd20
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1376 triangles added; total: 1376
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d600
Compressed Node: i	exp: (1, 1, 0)	origin: (6.599520, 7.407006, 12.691500)
Children:
	0x563d9222d668: (0, 155, 0), (219, 186, 247)
	0x563d92236760: (8, 0, 0), (219, 45, 247)
	0x563d9223a0a0: (0, 0, 0), (57, 45, 221)
	0x563d9223d4b8: (5, 44, 8), (60, 157, 218)
	0x563d9223f598: (162, 44, 32), (213, 157, 239)
	0x563d9223f978: (45, 44, 8), (174, 157, 239)
EMBREE: Set dst_map 0x153f8dc99500 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xce89500 for accel 0x563d9222cd20
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dc99500
EMBREE: Pack root 0x563d9222d600 to root_map 0x153f8dc99540
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 299...
RTV: Creating acceleration struction of size 0x23200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x23200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xceb4600 = 0x153f8dcc4600 allocated to accel structure 0x563d9222cdc0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dcc4600 to 0xd7caac00
RTV: Building BLAS into 0x563d9222cdc0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1122 triangles added; total: 1122
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d600
Compressed Node: i	exp: (1, 1, -1)	origin: (6.584379, 12.482409, -12.832388)
Children:
	0x563d9222d668: (0, 0, 0), (25, 163, 144)
	0x563d92238588: (158, 0, 0), (163, 149, 144)
	0x563d9223c318: (96, 0, 103), (160, 139, 140)
	0x563d9223d760: (23, 0, 103), (97, 139, 131)
	0x563d9223dd00: (22, 0, 0), (161, 148, 96)
	0x563d9223deb0: (22, 141, 0), (161, 149, 144)
EMBREE: Set dst_map 0x153f8dcc4600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xceb4600 for accel 0x563d9222cdc0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dcc4600
EMBREE: Pack root 0x563d9222d600 to root_map 0x153f8dcc4640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 300...
RTV: Creating acceleration struction of size 0x9b00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9b00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xced7800 = 0x153f8dce7800 allocated to accel structure 0x563d9222ce60
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dce7800 to 0xd7ccde00
RTV: Building BLAS into 0x563d9222ce60
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 308 triangles added; total: 308
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d600
Compressed Node: i	exp: (-2, -1, -3)	origin: (-8.695513, 2.184258, -8.676951)
Children:
	0x563d9222d668: (0, 61, 70), (167, 101, 209)
	0x563d9222ed70: (17, 40, 0), (152, 60, 229)
	0x563d922303c0: (0, 100, 74), (88, 140, 187)
	0x563d92230d68: (76, 97, 132), (167, 140, 214)
	0x563d92233178: (45, 0, 29), (125, 43, 176)
	0x563d92233750: (41, 58, 53), (128, 72, 184)
EMBREE: Set dst_map 0x153f8dce7800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xced7800 for accel 0x563d9222ce60
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dce7800
EMBREE: Pack root 0x563d9222d600 to root_map 0x153f8dce7840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 301...
RTV: Creating acceleration struction of size 0x32100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x32100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcee1300 = 0x153f8dcf1300 allocated to accel structure 0x563d9222cf00
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dcf1300 to 0xd7cd7900
RTV: Building BLAS into 0x563d9222cf00
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 1600 triangles added; total: 1600
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d600
Compressed Node: i	exp: (2, -1, -1)	origin: (-2.158100, 11.431160, -12.269962)
Children:
	0x563d9222d668: (0, 21, 154), (158, 131, 242)
	0x563d922379d8: (0, 32, 0), (159, 115, 28)
	0x563d9223f1a8: (3, 0, 13), (155, 136, 75)
	0x563d92241428: (100, 13, 34), (158, 152, 242)
	0x563d92242fa0: (0, 11, 34), (61, 152, 242)
	0x563d92244b30: (0, 11, 95), (157, 131, 177)
EMBREE: Set dst_map 0x153f8dcf1300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcee1300 for accel 0x563d9222cf00
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dcf1300
EMBREE: Pack root 0x563d9222d600 to root_map 0x153f8dcf1340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 302...
RTV: Creating acceleration struction of size 0x10300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x10300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf13400 = 0x153f8dd23400 allocated to accel structure 0x563d9222cfa0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd23400 to 0xd7d09a00
RTV: Building BLAS into 0x563d9222cfa0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 516 triangles added; total: 516
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222d640
Compressed Node: i	exp: (0, 2, -1)	origin: (7.406953, 5.801770, 13.042561)
Children:
	0x563d9222d6a8: (16, 3, 48), (84, 94, 107)
	0x563d9222f708: (52, 140, 43), (115, 199, 136)
	0x563d922330d0: (121, 61, 28), (217, 125, 190)
	0x563d92234370: (0, 108, 0), (122, 115, 162)
	0x563d92235080: (67, 49, 37), (122, 141, 146)
	0x563d92235a58: (74, 0, 47), (118, 112, 135)
EMBREE: Set dst_map 0x153f8dd23400 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf13400 for accel 0x563d9222cfa0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd23400
EMBREE: Pack root 0x563d9222d640 to root_map 0x153f8dd23440
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 303...
RTV: Creating acceleration struction of size 0x700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf23700 = 0x153f8dd33700 allocated to accel structure 0x563d9222d040
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd33700 to 0xd7d19d00
RTV: Building BLAS into 0x563d9222d040
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 12 triangles added; total: 12
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db00
Compressed Node: i	exp: (2, 2, 2)	origin: (8.580025, 16.407619, -40.954586)
Children:
	0x563d9222db68: (0, 0, 0), (0, 128, 128)
	0x563d9222dbe8: (0, 0, 0), (128, 0, 128)
	0x563d9222dc68: (128, 0, 0), (128, 128, 128)
	0x563d9222dce8: (0, 0, 0), (128, 128, 0)
	0x563d9222dd68: (0, 128, 0), (128, 128, 128)
	0x563d9222dde8: (0, 0, 128), (128, 128, 128)
EMBREE: Set dst_map 0x153f8dd33700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf23700 for accel 0x563d9222d040
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd33700
EMBREE: Pack root 0x563d9222db00 to root_map 0x153f8dd33740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 304...
RTV: Creating acceleration struction of size 0x3900
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x3900) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf23e00 = 0x153f8dd33e00 allocated to accel structure 0x563d9222d0e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd33e00 to 0xd7d1a400
RTV: Building BLAS into 0x563d9222d0e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 112 triangles added; total: 112
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db00
Compressed Node: i	exp: (2, 1, -1)	origin: (-3.717296, 9.124278, 10.965999)
Children:
	0x563d9222db68: (0, 141, 0), (139, 177, 143)
	0x563d9222e4c0: (1, 8, 0), (49, 177, 65)
	0x563d9222eae0: (101, 0, 84), (151, 158, 139)
	0x563d9222f1c0: (76, 33, 80), (80, 125, 90)
	0x563d9222f440: (11, 33, 5), (151, 125, 139)
	0x563d9222f798: (5, 97, 0), (144, 120, 134)
EMBREE: Set dst_map 0x153f8dd33e00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf23e00 for accel 0x563d9222d0e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd33e00
EMBREE: Pack root 0x563d9222db00 to root_map 0x153f8dd33e40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 305...
RTV: Creating acceleration struction of size 0xb500
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xb500) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf27700 = 0x153f8dd37700 allocated to accel structure 0x563d9222d180
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd37700 to 0xd7d1dd00
RTV: Building BLAS into 0x563d9222d180
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 360 triangles added; total: 360
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db00
Compressed Node: i	exp: (0, 1, 3)	origin: (5.016853, 7.570610, 7.900957)
Children:
	0x563d9222db68: (0, 0, 136), (84, 139, 159)
	0x563d9222f1c0: (105, 0, 0), (195, 138, 24)
	0x563d922306b8: (46, 0, 79), (133, 182, 111)
	0x563d92232c30: (70, 0, 50), (152, 182, 81)
	0x563d92233850: (87, 0, 22), (171, 164, 54)
	0x563d92234150: (25, 0, 107), (117, 165, 139)
EMBREE: Set dst_map 0x153f8dd37700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf27700 for accel 0x563d9222d180
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd37700
EMBREE: Pack root 0x563d9222db00 to root_map 0x153f8dd37740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 306...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf32c00 = 0x153f8dd42c00 allocated to accel structure 0x563d9222d220
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd42c00 to 0xd7d29200
RTV: Building BLAS into 0x563d9222d220
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db00
Compressed Node: i	exp: (2, 0, -1)	origin: (5.517954, 7.154109, 12.522789)
Children:
	0x563d9222db68: (49, 59, 32), (142, 141, 169)
	0x563d9222fb30: (141, 55, 109), (200, 98, 212)
	0x563d92233040: (61, 0, 39), (126, 68, 167)
	0x563d922343a8: (0, 90, 0), (28, 153, 60)
	0x563d92235610: (18, 118, 21), (95, 147, 112)
	0x563d92235e80: (0, 69, 0), (113, 111, 133)
EMBREE: Set dst_map 0x153f8dd42c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf32c00 for accel 0x563d9222d220
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd42c00
EMBREE: Pack root 0x563d9222db00 to root_map 0x153f8dd42c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 307...
RTV: Creating acceleration struction of size 0x9800
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x9800) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf41f00 = 0x153f8dd51f00 allocated to accel structure 0x563d9222d2c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd51f00 to 0xd7d38500
RTV: Building BLAS into 0x563d9222d2c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 301 triangles added; total: 301
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db00
Compressed Node: i	exp: (3, 2, 0)	origin: (0.227102, 1.191952, 11.359343)
Children:
	0x563d9222db68: (0, 0, 0), (43, 183, 90)
	0x563d9222f730: (179, 17, 120), (210, 194, 195)
	0x563d92232c30: (29, 93, 29), (182, 176, 147)
	0x563d92233810: (31, 158, 30), (182, 194, 164)
	0x563d92233b78: (31, 76, 29), (182, 104, 163)
	0x563d92233ed8: (31, 0, 57), (183, 78, 178)
EMBREE: Set dst_map 0x153f8dd51f00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf41f00 for accel 0x563d9222d2c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd51f00
EMBREE: Pack root 0x563d9222db00 to root_map 0x153f8dd51f40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 308...
RTV: Creating acceleration struction of size 0x2100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x2100) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf4b700 = 0x153f8dd5b700 allocated to accel structure 0x563d9222d360
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd5b700 to 0xd7d41d00
RTV: Building BLAS into 0x563d9222d360
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 64 triangles added; total: 64
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db00
Compressed Node: i	exp: (1, 1, -2)	origin: (-1.515202, 6.304796, 7.113275)
Children:
	0x563d9222db68: (0, 180, 0), (50, 212, 93)
	0x563d9222e140: (104, 0, 87), (128, 216, 155)
	0x563d9222e7b8: (31, 118, 25), (108, 192, 140)
	0x563d9222e8d8: (48, 154, 40), (107, 192, 140)
	0x563d9222e958: (48, 118, 40), (108, 192, 140)
	0x563d9222e9d8: (31, 118, 78), (108, 192, 140)
EMBREE: Set dst_map 0x153f8dd5b700 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf4b700 for accel 0x563d9222d360
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd5b700
EMBREE: Pack root 0x563d9222db00 to root_map 0x153f8dd5b740
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 309...
RTV: Creating acceleration struction of size 0x5be00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5be00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcf4d800 = 0x153f8dd5d800 allocated to accel structure 0x563d9222d400
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dd5d800 to 0xd7d43e00
RTV: Building BLAS into 0x563d9222d400
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2938 triangles added; total: 2938
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db00
Compressed Node: i	exp: (1, 2, 1)	origin: (3.346312, 6.631266, -37.091202)
Children:
	0x563d9222db68: (118, 76, 6), (173, 164, 144)
	0x563d9223e4a8: (115, 0, 0), (173, 77, 150)
	0x563d92248b78: (0, 0, 88), (119, 77, 150)
	0x563d9224d668: (0, 119, 6), (119, 164, 141)
	0x563d92251230: (0, 76, 6), (119, 120, 141)
	0x563d92254818: (0, 0, 6), (119, 77, 89)
EMBREE: Set dst_map 0x153f8dd5d800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcf4d800 for accel 0x563d9222d400
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dd5d800
EMBREE: Pack root 0x563d9222db00 to root_map 0x153f8dd5d840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 310...
RTV: Creating acceleration struction of size 0x5ea00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5ea00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xcfa9600 = 0x153f8ddb9600 allocated to accel structure 0x563d9222d4a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8ddb9600 to 0xd7d9fc00
RTV: Building BLAS into 0x563d9222d4a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3026 triangles added; total: 3026
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222db40
Compressed Node: i	exp: (0, 2, 0)	origin: (7.118742, 8.095128, 11.887055)
Children:
	0x563d9222dba8: (8, 42, 0), (156, 60, 180)
	0x563d92243718: (9, 105, 16), (152, 138, 158)
	0x563d9224e428: (0, 0, 23), (129, 44, 191)
	0x563d92253918: (1, 72, 8), (156, 73, 163)
	0x563d92255120: (6, 95, 13), (152, 97, 159)
	0x563d922567d0: (8, 59, 15), (150, 108, 157)
EMBREE: Set dst_map 0x153f8ddb9600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xcfa9600 for accel 0x563d9222d4a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8ddb9600
EMBREE: Pack root 0x563d9222db40 to root_map 0x153f8ddb9640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 311...
RTV: Creating acceleration struction of size 0x5f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x5f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd008000 = 0x153f8de18000 allocated to accel structure 0x563d9222d540
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8de18000 to 0xd7dfe600
RTV: Building BLAS into 0x563d9222d540
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 188 triangles added; total: 188
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e000
Compressed Node: i	exp: (0, 3, 1)	origin: (-7.855429, 0.969378, 5.660808)
Children:
	0x563d9222e068: (0, 75, 0), (108, 136, 81)
	0x563d9222fcd8: (212, 0, 167), (225, 1, 174)
	0x563d9222fef8: (93, 0, 74), (218, 76, 172)
	0x563d922300c0: (103, 0, 74), (225, 76, 171)
	0x563d92230170: (93, 0, 78), (220, 76, 174)
	0x563d92230220: (101, 0, 78), (225, 76, 174)
EMBREE: Set dst_map 0x153f8de18000 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd008000 for accel 0x563d9222d540
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8de18000
EMBREE: Pack root 0x563d9222e000 to root_map 0x153f8de18040
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 312...
RTV: Creating acceleration struction of size 0x79d00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x79d00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd00df00 = 0x153f8de1df00 allocated to accel structure 0x563d9222d5e0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8de1df00 to 0xd7e04500
RTV: Building BLAS into 0x563d9222d5e0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3896 triangles added; total: 3896
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e000
Compressed Node: i	exp: (2, -1, -3)	origin: (7.411160, 9.603903, -37.199673)
Children:
	0x563d9222e068: (31, 39, 0), (68, 140, 145)
	0x563d9223dd78: (75, 39, 0), (102, 125, 145)
	0x563d92248470: (0, 39, 0), (31, 165, 145)
	0x563d922506d0: (103, 39, 0), (121, 140, 145)
	0x563d92258718: (126, 0, 0), (149, 125, 145)
	0x563d9225dc10: (150, 39, 0), (165, 123, 145)
EMBREE: Set dst_map 0x153f8de1df00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd00df00 for accel 0x563d9222d5e0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8de1df00
EMBREE: Pack root 0x563d9222e000 to root_map 0x153f8de1df40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 313...
RTV: Creating acceleration struction of size 0x1700
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1700) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd087c00 = 0x153f8de97c00 allocated to accel structure 0x563d9222d680
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8de97c00 to 0xd7e7e200
RTV: Building BLAS into 0x563d9222d680
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 44 triangles added; total: 44
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e000
Compressed Node: i	exp: (0, 0, -1)	origin: (-0.751274, 13.675462, -12.756758)
Children:
	0x563d9222e068: (0, 0, 52), (152, 15, 205)
	0x563d9222e318: (0, 166, 0), (152, 182, 153)
	0x563d9222e648: (0, 2, 0), (12, 179, 205)
	0x563d9222e6f8: (139, 2, 0), (152, 179, 205)
	0x563d9222e7a8: (11, 2, 0), (140, 167, 53)
	0x563d9222e940: (11, 14, 152), (140, 179, 205)
EMBREE: Set dst_map 0x153f8de97c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd087c00 for accel 0x563d9222d680
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8de97c00
EMBREE: Pack root 0x563d9222e000 to root_map 0x153f8de97c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 314...
RTV: Creating acceleration struction of size 0xf300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd089300 = 0x153f8de99300 allocated to accel structure 0x563d9222d720
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8de99300 to 0xd7e7f900
RTV: Building BLAS into 0x563d9222d720
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 484 triangles added; total: 484
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e000
Compressed Node: i	exp: (1, 0, -1)	origin: (6.792478, 11.625627, 9.421421)
Children:
	0x563d9222e068: (62, 0, 9), (179, 105, 136)
	0x563d9222f8c0: (176, 58, 63), (250, 103, 155)
	0x563d92232ca8: (0, 106, 0), (38, 176, 57)
	0x563d92233f20: (100, 96, 21), (149, 158, 142)
	0x563d92235000: (0, 77, 0), (142, 169, 102)
	0x563d92235c80: (62, 75, 16), (210, 121, 134)
EMBREE: Set dst_map 0x153f8de99300 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd089300 for accel 0x563d9222d720
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8de99300
EMBREE: Pack root 0x563d9222e000 to root_map 0x153f8de99340
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 315...
RTV: Creating acceleration struction of size 0x73300
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x73300) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd098600 = 0x153f8dea8600 allocated to accel structure 0x563d9222d7c0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8dea8600 to 0xd7e8ec00
RTV: Building BLAS into 0x563d9222d7c0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 3683 triangles added; total: 3683
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e000
Compressed Node: i	exp: (1, -1, 0)	origin: (-5.528903, 11.626824, 7.460082)
Children:
	0x563d9222e068: (163, 0, 34), (230, 214, 242)
	0x563d92245480: (0, 64, 168), (140, 167, 219)
	0x563d9224dad0: (81, 36, 185), (208, 193, 238)
	0x563d92253300: (12, 65, 5), (147, 167, 52)
	0x563d922573d8: (3, 74, 0), (55, 142, 181)
	0x563d9225b008: (91, 35, 22), (219, 179, 193)
EMBREE: Set dst_map 0x153f8dea8600 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd098600 for accel 0x563d9222d7c0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8dea8600
EMBREE: Pack root 0x563d9222e000 to root_map 0x153f8dea8640
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 316...
RTV: Creating acceleration struction of size 0x4f00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x4f00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd10b900 = 0x153f8df1b900 allocated to accel structure 0x563d9222d860
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8df1b900 to 0xd7f01f00
RTV: Building BLAS into 0x563d9222d860
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 156 triangles added; total: 156
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e000
Compressed Node: i	exp: (3, 2, 1)	origin: (1.188941, 2.600072, 10.307370)
Children:
	0x563d9222e068: (72, 0, 39), (98, 142, 149)
	0x563d9222eb70: (6, 22, 103), (55, 101, 128)
	0x563d9222f6c0: (109, 14, 88), (131, 74, 120)
	0x563d9222fe00: (0, 14, 0), (97, 24, 149)
	0x563d92230498: (10, 23, 50), (64, 55, 93)
	0x563d92230998: (10, 48, 16), (91, 142, 93)
EMBREE: Set dst_map 0x153f8df1b900 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd10b900 for accel 0x563d9222d860
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8df1b900
EMBREE: Pack root 0x563d9222e000 to root_map 0x153f8df1b940
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 317...
RTV: Creating acceleration struction of size 0x1200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x1200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd110800 = 0x153f8df20800 allocated to accel structure 0x563d9222d900
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8df20800 to 0xd7f06e00
RTV: Building BLAS into 0x563d9222d900
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 34 triangles added; total: 34
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e000
Compressed Node: i	exp: (-2, -2, -2)	origin: (5.053797, 9.179939, -36.681007)
Children:
	0x563d9222e068: (0, 153, 0), (122, 230, 230)
	0x563d9222e200: (108, 153, 0), (230, 229, 236)
	0x563d9222e398: (15, 0, 92), (122, 154, 217)
	0x563d9222e4c8: (108, 0, 11), (216, 154, 137)
	0x563d9222e570: (110, 0, 30), (216, 154, 217)
	0x563d9222e608: (15, 0, 12), (121, 154, 199)
EMBREE: Set dst_map 0x153f8df20800 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd110800 for accel 0x563d9222d900
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8df20800
EMBREE: Pack root 0x563d9222e000 to root_map 0x153f8df20840
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 318...
RTV: Creating acceleration struction of size 0x200
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x200) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd111a00 = 0x153f8df21a00 allocated to accel structure 0x563d9222d9a0
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8df21a00 to 0xd7f08000
RTV: Building BLAS into 0x563d9222d9a0
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 2 triangles added; total: 2
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d9222e040
Compressed Node: i	exp: (8, 0, 7)	origin: (-60.642002, 0.510824, -51.992500)
Children:
	0x563d9222e0a8: (0, 0, 0), (129, 0, 201)
	0x563d9222e0b4: (0, 0, 0), (129, 0, 201)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
	(nil): (0, 0, 0), (0, 0, 0)
EMBREE: Set dst_map 0x153f8df21a00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd111a00 for accel 0x563d9222d9a0
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8df21a00
EMBREE: Pack root 0x563d9222e040 to root_map 0x153f8df21a40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Creating bottom level acceleration structure 319...
RTV: Creating acceleration struction of size 0x19fe00
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0x19fe00) created from lvp_buffer (size 0xd2b1a00). 
LVP: Buffer 0x153f80e10000 + 0xd111c00 = 0x153f8df21c00 allocated to accel structure 0x563d9222da40
gpgpusim: set BLAS address for 0xd2b1a00 at 0x153f8df21c00 to 0xd7f08200
RTV: Building BLAS into 0x563d9222da40
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: 13305 triangles added; total: 13305
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d92232b80
Compressed Node: i	exp: (2, 2, 3)	origin: (-2.760483, 10.268956, 6.757678)
Children:
	0x563d92232be8: (130, 181, 0), (187, 234, 157)
	0x563d9225aeb0: (0, 178, 57), (50, 234, 177)
	0x563d9227eac8: (17, 40, 134), (141, 193, 158)
	0x563d922a26c0: (31, 0, 57), (161, 197, 72)
	0x563d922ba0a8: (18, 181, 52), (155, 210, 158)
	0x563d922cfad8: (22, 139, 65), (158, 193, 120)
EMBREE: Set dst_map 0x153f8df21c00 = accel->address.bo 0x153f80e10000 + accel->address.offset 0xd111c00 for accel 0x563d9222da40
EMBREE: Pack bvh 0x7ffe1afb1610 to dst_map 0x153f8df21c00
EMBREE: Pack root 0x563d92232b80 to root_map 0x153f8df21c40
EMBREE: Release rtcBVH structure created at 0x563d92215470
RTV: Adding 320 BLAS instances
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d10ac4ec0 address 0x153f80e10000
RTV: Getting address of BLAS 0x563d10ac4ec0 -> 0x153f80e10000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d10ac4d70 address 0x153f80e13900
RTV: Getting address of BLAS 0x563d10ac4d70 -> 0x153f80e13900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d0e1c95a0 address 0x153f80e14b00
RTV: Getting address of BLAS 0x563d0e1c95a0 -> 0x153f80e14b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d0e1c9600 address 0x153f80e14d00
RTV: Getting address of BLAS 0x563d0e1c9600 -> 0x153f80e14d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d10b73090 address 0x153f80e56500
RTV: Getting address of BLAS 0x563d10b73090 -> 0x153f80e56500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92215950 address 0x153f80e68600
RTV: Getting address of BLAS 0x563d92215950 -> 0x153f80e68600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922159b0 address 0x153f80eaff00
RTV: Getting address of BLAS 0x563d922159b0 -> 0x153f80eaff00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92215a50 address 0x153f80eb5e00
RTV: Getting address of BLAS 0x563d92215a50 -> 0x153f80eb5e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92215af0 address 0x153f80f34400
RTV: Getting address of BLAS 0x563d92215af0 -> 0x153f80f34400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92215d20 address 0x153f80f3d500
RTV: Getting address of BLAS 0x563d92215d20 -> 0x153f80f3d500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214a90 address 0x153f8105ea00
RTV: Getting address of BLAS 0x563d92214a90 -> 0x153f8105ea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214af0 address 0x153f81097700
RTV: Getting address of BLAS 0x563d92214af0 -> 0x153f81097700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e830 address 0x153f810c6600
RTV: Getting address of BLAS 0x563d9221e830 -> 0x153f810c6600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e8d0 address 0x153f810f2900
RTV: Getting address of BLAS 0x563d9221e8d0 -> 0x153f810f2900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e970 address 0x153f81110600
RTV: Getting address of BLAS 0x563d9221e970 -> 0x153f81110600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214bd0 address 0x153f8113aa00
RTV: Getting address of BLAS 0x563d92214bd0 -> 0x153f8113aa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214c70 address 0x153f8114cb00
RTV: Getting address of BLAS 0x563d92214c70 -> 0x153f8114cb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214d40 address 0x153f8117ec00
RTV: Getting address of BLAS 0x563d92214d40 -> 0x153f8117ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214de0 address 0x153f81185500
RTV: Getting address of BLAS 0x563d92214de0 -> 0x153f81185500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214e80 address 0x153f81403000
RTV: Getting address of BLAS 0x563d92214e80 -> 0x153f81403000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214f20 address 0x153f81413300
RTV: Getting address of BLAS 0x563d92214f20 -> 0x153f81413300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92219600 address 0x153f814b1400
RTV: Getting address of BLAS 0x563d92219600 -> 0x153f814b1400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92219660 address 0x153f814c1700
RTV: Getting address of BLAS 0x563d92219660 -> 0x153f814c1700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922196c0 address 0x153f814ede00
RTV: Getting address of BLAS 0x563d922196c0 -> 0x153f814ede00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922197a0 address 0x153f814fd100
RTV: Getting address of BLAS 0x563d922197a0 -> 0x153f814fd100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92219840 address 0x153f81502400
RTV: Getting address of BLAS 0x563d92219840 -> 0x153f81502400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922198e0 address 0x153f81580a00
RTV: Getting address of BLAS 0x563d922198e0 -> 0x153f81580a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92219980 address 0x153f815b2b00
RTV: Getting address of BLAS 0x563d92219980 -> 0x153f815b2b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92219a20 address 0x153f815ca800
RTV: Getting address of BLAS 0x563d92219a20 -> 0x153f815ca800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92219ac0 address 0x153f816ba900
RTV: Getting address of BLAS 0x563d92219ac0 -> 0x153f816ba900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221dde0 address 0x153f816bbb00
RTV: Getting address of BLAS 0x563d9221dde0 -> 0x153f816bbb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221de40 address 0x153f816efa00
RTV: Getting address of BLAS 0x563d9221de40 -> 0x153f816efa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e470 address 0x153f81701b00
RTV: Getting address of BLAS 0x563d9221e470 -> 0x153f81701b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e510 address 0x153f81702100
RTV: Getting address of BLAS 0x563d9221e510 -> 0x153f81702100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e5b0 address 0x153f817f2200
RTV: Getting address of BLAS 0x563d9221e5b0 -> 0x153f817f2200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e650 address 0x153f81865500
RTV: Getting address of BLAS 0x563d9221e650 -> 0x153f81865500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e6f0 address 0x153f81875800
RTV: Getting address of BLAS 0x563d9221e6f0 -> 0x153f81875800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e790 address 0x153f81884300
RTV: Getting address of BLAS 0x563d9221e790 -> 0x153f81884300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221a410 address 0x153f81887100
RTV: Getting address of BLAS 0x563d9221a410 -> 0x153f81887100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221a4b0 address 0x153f81a26f00
RTV: Getting address of BLAS 0x563d9221a4b0 -> 0x153f81a26f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221a550 address 0x153f81a8da00
RTV: Getting address of BLAS 0x563d9221a550 -> 0x153f81a8da00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221a5f0 address 0x153f81b83600
RTV: Getting address of BLAS 0x563d9221a5f0 -> 0x153f81b83600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221a690 address 0x153f81d21300
RTV: Getting address of BLAS 0x563d9221a690 -> 0x153f81d21300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221a910 address 0x153f81da8400
RTV: Getting address of BLAS 0x563d9221a910 -> 0x153f81da8400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221a9b0 address 0x153f81dda500
RTV: Getting address of BLAS 0x563d9221a9b0 -> 0x153f81dda500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221aa50 address 0x153f81dda700
RTV: Getting address of BLAS 0x563d9221aa50 -> 0x153f81dda700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221aaf0 address 0x153f81e0c600
RTV: Getting address of BLAS 0x563d9221aaf0 -> 0x153f81e0c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221ab90 address 0x153f8254c800
RTV: Getting address of BLAS 0x563d9221ab90 -> 0x153f8254c800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221ac30 address 0x153f8257e900
RTV: Getting address of BLAS 0x563d9221ac30 -> 0x153f8257e900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221acd0 address 0x153f8259c600
RTV: Getting address of BLAS 0x563d9221acd0 -> 0x153f8259c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221ad70 address 0x153f8261ac00
RTV: Getting address of BLAS 0x563d9221ad70 -> 0x153f8261ac00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231550 address 0x153f8265c400
RTV: Getting address of BLAS 0x563d92231550 -> 0x153f8265c400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922315f0 address 0x153f8266af00
RTV: Getting address of BLAS 0x563d922315f0 -> 0x153f8266af00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231690 address 0x153f8266ce00
RTV: Getting address of BLAS 0x563d92231690 -> 0x153f8266ce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231730 address 0x153f8267d500
RTV: Getting address of BLAS 0x563d92231730 -> 0x153f8267d500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922317d0 address 0x153f82680e00
RTV: Getting address of BLAS 0x563d922317d0 -> 0x153f82680e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231870 address 0x153f8287d100
RTV: Getting address of BLAS 0x563d92231870 -> 0x153f8287d100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231910 address 0x153f82975200
RTV: Getting address of BLAS 0x563d92231910 -> 0x153f82975200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922319b0 address 0x153f82985500
RTV: Getting address of BLAS 0x563d922319b0 -> 0x153f82985500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231a50 address 0x153f82a46800
RTV: Getting address of BLAS 0x563d92231a50 -> 0x153f82a46800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231af0 address 0x153f82b53600
RTV: Getting address of BLAS 0x563d92231af0 -> 0x153f82b53600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231b90 address 0x153f82b5eb00
RTV: Getting address of BLAS 0x563d92231b90 -> 0x153f82b5eb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231c30 address 0x153f82b70c00
RTV: Getting address of BLAS 0x563d92231c30 -> 0x153f82b70c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231cd0 address 0x153f82bbaa00
RTV: Getting address of BLAS 0x563d92231cd0 -> 0x153f82bbaa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231d70 address 0x153f82bbf600
RTV: Getting address of BLAS 0x563d92231d70 -> 0x153f82bbf600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231e10 address 0x153f82bcf900
RTV: Getting address of BLAS 0x563d92231e10 -> 0x153f82bcf900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231eb0 address 0x153f82c11100
RTV: Getting address of BLAS 0x563d92231eb0 -> 0x153f82c11100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231f50 address 0x153f82c23200
RTV: Getting address of BLAS 0x563d92231f50 -> 0x153f82c23200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232950 address 0x153f82c7f000
RTV: Getting address of BLAS 0x563d92232950 -> 0x153f82c7f000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922329f0 address 0x153f82d69100
RTV: Getting address of BLAS 0x563d922329f0 -> 0x153f82d69100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232a90 address 0x153f82dc4f00
RTV: Getting address of BLAS 0x563d92232a90 -> 0x153f82dc4f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231ff0 address 0x153f82f64c00
RTV: Getting address of BLAS 0x563d92231ff0 -> 0x153f82f64c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232090 address 0x153f82f96d00
RTV: Getting address of BLAS 0x563d92232090 -> 0x153f82f96d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232130 address 0x153f82f9e000
RTV: Getting address of BLAS 0x563d92232130 -> 0x153f82f9e000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922321d0 address 0x153f82fda300
RTV: Getting address of BLAS 0x563d922321d0 -> 0x153f82fda300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232270 address 0x153f82fdb200
RTV: Getting address of BLAS 0x563d92232270 -> 0x153f82fdb200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232310 address 0x153f8304e500
RTV: Getting address of BLAS 0x563d92232310 -> 0x153f8304e500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922323b0 address 0x153f830bfc00
RTV: Getting address of BLAS 0x563d922323b0 -> 0x153f830bfc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232450 address 0x153f830f1d00
RTV: Getting address of BLAS 0x563d92232450 -> 0x153f830f1d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922324f0 address 0x153f831e7a00
RTV: Getting address of BLAS 0x563d922324f0 -> 0x153f831e7a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232590 address 0x153f833a9b00
RTV: Getting address of BLAS 0x563d92232590 -> 0x153f833a9b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232630 address 0x153f833ad400
RTV: Getting address of BLAS 0x563d92232630 -> 0x153f833ad400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922326d0 address 0x153f833b0d00
RTV: Getting address of BLAS 0x563d922326d0 -> 0x153f833b0d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232770 address 0x153f833dd400
RTV: Getting address of BLAS 0x563d92232770 -> 0x153f833dd400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92232810 address 0x153f834d5500
RTV: Getting address of BLAS 0x563d92232810 -> 0x153f834d5500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922328b0 address 0x153f8350a000
RTV: Getting address of BLAS 0x563d922328b0 -> 0x153f8350a000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b130 address 0x153f83588600
RTV: Getting address of BLAS 0x563d9221b130 -> 0x153f83588600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b1d0 address 0x153f8359af00
RTV: Getting address of BLAS 0x563d9221b1d0 -> 0x153f8359af00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b270 address 0x153f835a9a00
RTV: Getting address of BLAS 0x563d9221b270 -> 0x153f835a9a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b310 address 0x153f835bcd00
RTV: Getting address of BLAS 0x563d9221b310 -> 0x153f835bcd00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b3b0 address 0x153f83759700
RTV: Getting address of BLAS 0x563d9221b3b0 -> 0x153f83759700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b450 address 0x153f8378b800
RTV: Getting address of BLAS 0x563d9221b450 -> 0x153f8378b800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b4f0 address 0x153f83ee1b00
RTV: Getting address of BLAS 0x563d9221b4f0 -> 0x153f83ee1b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b590 address 0x153f84016c00
RTV: Getting address of BLAS 0x563d9221b590 -> 0x153f84016c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b630 address 0x153f84028700
RTV: Getting address of BLAS 0x563d9221b630 -> 0x153f84028700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b6d0 address 0x153f8403a200
RTV: Getting address of BLAS 0x563d9221b6d0 -> 0x153f8403a200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b770 address 0x153f8404a500
RTV: Getting address of BLAS 0x563d9221b770 -> 0x153f8404a500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b810 address 0x153f8407c600
RTV: Getting address of BLAS 0x563d9221b810 -> 0x153f8407c600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b8b0 address 0x153f8409b100
RTV: Getting address of BLAS 0x563d9221b8b0 -> 0x153f8409b100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b950 address 0x153f840ab800
RTV: Getting address of BLAS 0x563d9221b950 -> 0x153f840ab800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221b9f0 address 0x153f840c8100
RTV: Getting address of BLAS 0x563d9221b9f0 -> 0x153f840c8100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221ba90 address 0x153f840ca200
RTV: Getting address of BLAS 0x563d9221ba90 -> 0x153f840ca200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221bb30 address 0x153f840ca400
RTV: Getting address of BLAS 0x563d9221bb30 -> 0x153f840ca400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221bbd0 address 0x153f840d8f00
RTV: Getting address of BLAS 0x563d9221bbd0 -> 0x153f840d8f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221bc70 address 0x153f840eaa00
RTV: Getting address of BLAS 0x563d9221bc70 -> 0x153f840eaa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221bd10 address 0x153f84118700
RTV: Getting address of BLAS 0x563d9221bd10 -> 0x153f84118700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221bdb0 address 0x153f84636700
RTV: Getting address of BLAS 0x563d9221bdb0 -> 0x153f84636700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221be50 address 0x153f8464e400
RTV: Getting address of BLAS 0x563d9221be50 -> 0x153f8464e400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221bef0 address 0x153f84660500
RTV: Getting address of BLAS 0x563d9221bef0 -> 0x153f84660500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221bf90 address 0x153f84875e00
RTV: Getting address of BLAS 0x563d9221bf90 -> 0x153f84875e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c030 address 0x153f84d93700
RTV: Getting address of BLAS 0x563d9221c030 -> 0x153f84d93700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c0d0 address 0x153f84dc5800
RTV: Getting address of BLAS 0x563d9221c0d0 -> 0x153f84dc5800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c170 address 0x153f84dc6a00
RTV: Getting address of BLAS 0x563d9221c170 -> 0x153f84dc6a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c210 address 0x153f84ed3800
RTV: Getting address of BLAS 0x563d9221c210 -> 0x153f84ed3800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c2b0 address 0x153f84fcb900
RTV: Getting address of BLAS 0x563d9221c2b0 -> 0x153f84fcb900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c350 address 0x153f8503ec00
RTV: Getting address of BLAS 0x563d9221c350 -> 0x153f8503ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c3f0 address 0x153f8506b300
RTV: Getting address of BLAS 0x563d9221c3f0 -> 0x153f8506b300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c490 address 0x153f8507d400
RTV: Getting address of BLAS 0x563d9221c490 -> 0x153f8507d400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c530 address 0x153f85104500
RTV: Getting address of BLAS 0x563d9221c530 -> 0x153f85104500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c5d0 address 0x153f8510fa00
RTV: Getting address of BLAS 0x563d9221c5d0 -> 0x153f8510fa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c670 address 0x153f852af800
RTV: Getting address of BLAS 0x563d9221c670 -> 0x153f852af800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c710 address 0x153f852bc700
RTV: Getting address of BLAS 0x563d9221c710 -> 0x153f852bc700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922148b0 address 0x153f85304000
RTV: Getting address of BLAS 0x563d922148b0 -> 0x153f85304000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922147c0 address 0x153f85307900
RTV: Getting address of BLAS 0x563d922147c0 -> 0x153f85307900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c8f0 address 0x153f85312e00
RTV: Getting address of BLAS 0x563d9221c8f0 -> 0x153f85312e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c990 address 0x153f85324700
RTV: Getting address of BLAS 0x563d9221c990 -> 0x153f85324700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221ca30 address 0x153f85414600
RTV: Getting address of BLAS 0x563d9221ca30 -> 0x153f85414600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221cad0 address 0x153f8549b700
RTV: Getting address of BLAS 0x563d9221cad0 -> 0x153f8549b700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221cb70 address 0x153f8549c900
RTV: Getting address of BLAS 0x563d9221cb70 -> 0x153f8549c900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221cc10 address 0x153f855efa00
RTV: Getting address of BLAS 0x563d9221cc10 -> 0x153f855efa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221ccb0 address 0x153f855fed00
RTV: Getting address of BLAS 0x563d9221ccb0 -> 0x153f855fed00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221cd50 address 0x153f85751e00
RTV: Getting address of BLAS 0x563d9221cd50 -> 0x153f85751e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221cdf0 address 0x153f85779d00
RTV: Getting address of BLAS 0x563d9221cdf0 -> 0x153f85779d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221ce90 address 0x153f8577d600
RTV: Getting address of BLAS 0x563d9221ce90 -> 0x153f8577d600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221cf30 address 0x153f857af700
RTV: Getting address of BLAS 0x563d9221cf30 -> 0x153f857af700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d930 address 0x153f857d7600
RTV: Getting address of BLAS 0x563d9221d930 -> 0x153f857d7600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d9d0 address 0x153f857f5300
RTV: Getting address of BLAS 0x563d9221d9d0 -> 0x153f857f5300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221da70 address 0x153f86fdd400
RTV: Getting address of BLAS 0x563d9221da70 -> 0x153f86fdd400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92231160 address 0x153f87091500
RTV: Getting address of BLAS 0x563d92231160 -> 0x153f87091500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221db10 address 0x153f87189600
RTV: Getting address of BLAS 0x563d9221db10 -> 0x153f87189600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221dbb0 address 0x153f87198900
RTV: Getting address of BLAS 0x563d9221dbb0 -> 0x153f87198900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d2b0 address 0x153f8720bc00
RTV: Getting address of BLAS 0x563d9221d2b0 -> 0x153f8720bc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d350 address 0x153f8720be00
RTV: Getting address of BLAS 0x563d9221d350 -> 0x153f8720be00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d430 address 0x153f8720f700
RTV: Getting address of BLAS 0x563d9221d430 -> 0x153f8720f700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221c7b0 address 0x153f87960e00
RTV: Getting address of BLAS 0x563d9221c7b0 -> 0x153f87960e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d540 address 0x153f87995100
RTV: Getting address of BLAS 0x563d9221d540 -> 0x153f87995100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d5e0 address 0x153f879c9100
RTV: Getting address of BLAS 0x563d9221d5e0 -> 0x153f879c9100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d680 address 0x153f8811f400
RTV: Getting address of BLAS 0x563d9221d680 -> 0x153f8811f400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d720 address 0x153f88797400
RTV: Getting address of BLAS 0x563d9221d720 -> 0x153f88797400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d7c0 address 0x153f8881a900
RTV: Getting address of BLAS 0x563d9221d7c0 -> 0x153f8881a900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221d860 address 0x153f88829c00
RTV: Getting address of BLAS 0x563d9221d860 -> 0x153f88829c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227150 address 0x153f88838700
RTV: Getting address of BLAS 0x563d92227150 -> 0x153f88838700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214280 address 0x153f88881400
RTV: Getting address of BLAS 0x563d92214280 -> 0x153f88881400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227260 address 0x153f8890b700
RTV: Getting address of BLAS 0x563d92227260 -> 0x153f8890b700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227300 address 0x153f8890b900
RTV: Getting address of BLAS 0x563d92227300 -> 0x153f8890b900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922273a0 address 0x153f8893da00
RTV: Getting address of BLAS 0x563d922273a0 -> 0x153f8893da00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227440 address 0x153f8893ec00
RTV: Getting address of BLAS 0x563d92227440 -> 0x153f8893ec00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922274e0 address 0x153f88945200
RTV: Getting address of BLAS 0x563d922274e0 -> 0x153f88945200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227580 address 0x153f88be0700
RTV: Getting address of BLAS 0x563d92227580 -> 0x153f88be0700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214370 address 0x153f88c08600
RTV: Getting address of BLAS 0x563d92214370 -> 0x153f88c08600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922276c0 address 0x153f88c3a700
RTV: Getting address of BLAS 0x563d922276c0 -> 0x153f88c3a700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227760 address 0x153f88c3b900
RTV: Getting address of BLAS 0x563d92227760 -> 0x153f88c3b900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227800 address 0x153f88c3bb00
RTV: Getting address of BLAS 0x563d92227800 -> 0x153f88c3bb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922278a0 address 0x153f88ce5700
RTV: Getting address of BLAS 0x563d922278a0 -> 0x153f88ce5700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227940 address 0x153f88e85200
RTV: Getting address of BLAS 0x563d92227940 -> 0x153f88e85200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922279e0 address 0x153f88eb1500
RTV: Getting address of BLAS 0x563d922279e0 -> 0x153f88eb1500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227a80 address 0x153f88fa0400
RTV: Getting address of BLAS 0x563d92227a80 -> 0x153f88fa0400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227b50 address 0x153f8906b800
RTV: Getting address of BLAS 0x563d92227b50 -> 0x153f8906b800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227bf0 address 0x153f8911f900
RTV: Getting address of BLAS 0x563d92227bf0 -> 0x153f8911f900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214700 address 0x153f8912fc00
RTV: Getting address of BLAS 0x563d92214700 -> 0x153f8912fc00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227d00 address 0x153f89440900
RTV: Getting address of BLAS 0x563d92227d00 -> 0x153f89440900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214610 address 0x153f89472a00
RTV: Getting address of BLAS 0x563d92214610 -> 0x153f89472a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227e40 address 0x153f895a7b00
RTV: Getting address of BLAS 0x563d92227e40 -> 0x153f895a7b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227ee0 address 0x153f895f9c00
RTV: Getting address of BLAS 0x563d92227ee0 -> 0x153f895f9c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92227f80 address 0x153f896f1d00
RTV: Getting address of BLAS 0x563d92227f80 -> 0x153f896f1d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228050 address 0x153f896f1f00
RTV: Getting address of BLAS 0x563d92228050 -> 0x153f896f1f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922280f0 address 0x153f896f6800
RTV: Getting address of BLAS 0x563d922280f0 -> 0x153f896f6800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228190 address 0x153f896f6e00
RTV: Getting address of BLAS 0x563d92228190 -> 0x153f896f6e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228230 address 0x153f8973e700
RTV: Getting address of BLAS 0x563d92228230 -> 0x153f8973e700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922282d0 address 0x153f89771600
RTV: Getting address of BLAS 0x563d922282d0 -> 0x153f89771600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228370 address 0x153f897b8f00
RTV: Getting address of BLAS 0x563d92228370 -> 0x153f897b8f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228410 address 0x153f897bf800
RTV: Getting address of BLAS 0x563d92228410 -> 0x153f897bf800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922284b0 address 0x153f8981e200
RTV: Getting address of BLAS 0x563d922284b0 -> 0x153f8981e200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228550 address 0x153f899be000
RTV: Getting address of BLAS 0x563d92228550 -> 0x153f899be000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922285f0 address 0x153f899f0100
RTV: Getting address of BLAS 0x563d922285f0 -> 0x153f899f0100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228690 address 0x153f89a22100
RTV: Getting address of BLAS 0x563d92228690 -> 0x153f89a22100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228730 address 0x153f89a25900
RTV: Getting address of BLAS 0x563d92228730 -> 0x153f89a25900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922287d0 address 0x153f89a3bf00
RTV: Getting address of BLAS 0x563d922287d0 -> 0x153f89a3bf00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228870 address 0x153f89a3c500
RTV: Getting address of BLAS 0x563d92228870 -> 0x153f89a3c500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228910 address 0x153f89a4c800
RTV: Getting address of BLAS 0x563d92228910 -> 0x153f89a4c800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922289b0 address 0x153f89a52e00
RTV: Getting address of BLAS 0x563d922289b0 -> 0x153f89a52e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228a50 address 0x153f89a65700
RTV: Getting address of BLAS 0x563d92228a50 -> 0x153f89a65700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922145b0 address 0x153f89aabd00
RTV: Getting address of BLAS 0x563d922145b0 -> 0x153f89aabd00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228b60 address 0x153f89ad3c00
RTV: Getting address of BLAS 0x563d92228b60 -> 0x153f89ad3c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228c00 address 0x153f89ae5d00
RTV: Getting address of BLAS 0x563d92228c00 -> 0x153f89ae5d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228ca0 address 0x153f89af6c00
RTV: Getting address of BLAS 0x563d92228ca0 -> 0x153f89af6c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228d40 address 0x153f89b08d00
RTV: Getting address of BLAS 0x563d92228d40 -> 0x153f89b08d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228de0 address 0x153f89ca8b00
RTV: Getting address of BLAS 0x563d92228de0 -> 0x153f89ca8b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228e80 address 0x153f89cb4000
RTV: Getting address of BLAS 0x563d92228e80 -> 0x153f89cb4000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228f50 address 0x153f89d1ad00
RTV: Getting address of BLAS 0x563d92228f50 -> 0x153f89d1ad00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92228ff0 address 0x153f89d28a00
RTV: Getting address of BLAS 0x563d92228ff0 -> 0x153f89d28a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229090 address 0x153f89d2c300
RTV: Getting address of BLAS 0x563d92229090 -> 0x153f89d2c300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229130 address 0x153f89d31600
RTV: Getting address of BLAS 0x563d92229130 -> 0x153f89d31600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922291d0 address 0x153f89e48f00
RTV: Getting address of BLAS 0x563d922291d0 -> 0x153f89e48f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229270 address 0x153f89ec7000
RTV: Getting address of BLAS 0x563d92229270 -> 0x153f89ec7000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214460 address 0x153f89ec8200
RTV: Getting address of BLAS 0x563d92214460 -> 0x153f89ec8200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229380 address 0x153f89ecbb00
RTV: Getting address of BLAS 0x563d92229380 -> 0x153f89ecbb00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229450 address 0x153f89ee9800
RTV: Getting address of BLAS 0x563d92229450 -> 0x153f89ee9800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922294f0 address 0x153f89f12200
RTV: Getting address of BLAS 0x563d922294f0 -> 0x153f89f12200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229590 address 0x153f89f24300
RTV: Getting address of BLAS 0x563d92229590 -> 0x153f89f24300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214670 address 0x153f8a007200
RTV: Getting address of BLAS 0x563d92214670 -> 0x153f8a007200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922296a0 address 0x153f8a0fcf00
RTV: Getting address of BLAS 0x563d922296a0 -> 0x153f8a0fcf00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229740 address 0x153f8a12be00
RTV: Getting address of BLAS 0x563d92229740 -> 0x153f8a12be00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922297e0 address 0x153f8a1b2f00
RTV: Getting address of BLAS 0x563d922297e0 -> 0x153f8a1b2f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229880 address 0x153f8a231500
RTV: Getting address of BLAS 0x563d92229880 -> 0x153f8a231500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229950 address 0x153f8a2c4800
RTV: Getting address of BLAS 0x563d92229950 -> 0x153f8a2c4800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922299f0 address 0x153f8a3bc900
RTV: Getting address of BLAS 0x563d922299f0 -> 0x153f8a3bc900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229a90 address 0x153f8a3da600
RTV: Getting address of BLAS 0x563d92229a90 -> 0x153f8a3da600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229b30 address 0x153f8a4a1300
RTV: Getting address of BLAS 0x563d92229b30 -> 0x153f8a4a1300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229bd0 address 0x153f8a63dd00
RTV: Getting address of BLAS 0x563d92229bd0 -> 0x153f8a63dd00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229c70 address 0x153f8a6c4e00
RTV: Getting address of BLAS 0x563d92229c70 -> 0x153f8a6c4e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229d10 address 0x153f8a6f3400
RTV: Getting address of BLAS 0x563d92229d10 -> 0x153f8a6f3400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229db0 address 0x153f8a760500
RTV: Getting address of BLAS 0x563d92229db0 -> 0x153f8a760500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229e50 address 0x153f8a7fce00
RTV: Getting address of BLAS 0x563d92229e50 -> 0x153f8a7fce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229ef0 address 0x153f8a801a00
RTV: Getting address of BLAS 0x563d92229ef0 -> 0x153f8a801a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92229f90 address 0x153f8a808300
RTV: Getting address of BLAS 0x563d92229f90 -> 0x153f8a808300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222a030 address 0x153f8a900400
RTV: Getting address of BLAS 0x563d9222a030 -> 0x153f8a900400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222a0d0 address 0x153f8a97ea00
RTV: Getting address of BLAS 0x563d9222a0d0 -> 0x153f8a97ea00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222a170 address 0x153f8a97ef00
RTV: Getting address of BLAS 0x563d9222a170 -> 0x153f8a97ef00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222a210 address 0x153f8a9f0700
RTV: Getting address of BLAS 0x563d9222a210 -> 0x153f8a9f0700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222a2b0 address 0x153f8ab69c00
RTV: Getting address of BLAS 0x563d9222a2b0 -> 0x153f8ab69c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d92214980 address 0x153f8ab69e00
RTV: Getting address of BLAS 0x563d92214980 -> 0x153f8ab69e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221df10 address 0x153f8ac06700
RTV: Getting address of BLAS 0x563d9221df10 -> 0x153f8ac06700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221dfb0 address 0x153f8ac06900
RTV: Getting address of BLAS 0x563d9221dfb0 -> 0x153f8ac06900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e050 address 0x153f8ac06b00
RTV: Getting address of BLAS 0x563d9221e050 -> 0x153f8ac06b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e0f0 address 0x153f8ac0a400
RTV: Getting address of BLAS 0x563d9221e0f0 -> 0x153f8ac0a400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e190 address 0x153f8ac0a600
RTV: Getting address of BLAS 0x563d9221e190 -> 0x153f8ac0a600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e230 address 0x153f8ac7d900
RTV: Getting address of BLAS 0x563d9221e230 -> 0x153f8ac7d900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e2d0 address 0x153f8ac88e00
RTV: Getting address of BLAS 0x563d9221e2d0 -> 0x153f8ac88e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9221e370 address 0x153f8acae500
RTV: Getting address of BLAS 0x563d9221e370 -> 0x153f8acae500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222a8e0 address 0x153f8acbe800
RTV: Getting address of BLAS 0x563d9222a8e0 -> 0x153f8acbe800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222a980 address 0x153f8accfa00
RTV: Getting address of BLAS 0x563d9222a980 -> 0x153f8accfa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222aa20 address 0x153f8ad56b00
RTV: Getting address of BLAS 0x563d9222aa20 -> 0x153f8ad56b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222aac0 address 0x153f8ad75e00
RTV: Getting address of BLAS 0x563d9222aac0 -> 0x153f8ad75e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ab60 address 0x153f8ada4d00
RTV: Getting address of BLAS 0x563d9222ab60 -> 0x153f8ada4d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ac00 address 0x153f8ada5f00
RTV: Getting address of BLAS 0x563d9222ac00 -> 0x153f8ada5f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222aca0 address 0x153f8aeb2d00
RTV: Getting address of BLAS 0x563d9222aca0 -> 0x153f8aeb2d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ad40 address 0x153f8aedf000
RTV: Getting address of BLAS 0x563d9222ad40 -> 0x153f8aedf000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ade0 address 0x153f8af5d600
RTV: Getting address of BLAS 0x563d9222ade0 -> 0x153f8af5d600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ae80 address 0x153f8af74800
RTV: Getting address of BLAS 0x563d9222ae80 -> 0x153f8af74800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222af20 address 0x153f8af76900
RTV: Getting address of BLAS 0x563d9222af20 -> 0x153f8af76900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222afc0 address 0x153f8afe9c00
RTV: Getting address of BLAS 0x563d9222afc0 -> 0x153f8afe9c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b060 address 0x153f8b186600
RTV: Getting address of BLAS 0x563d9222b060 -> 0x153f8b186600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b100 address 0x153f8b189d00
RTV: Getting address of BLAS 0x563d9222b100 -> 0x153f8b189d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b1a0 address 0x153f8b1a6600
RTV: Getting address of BLAS 0x563d9222b1a0 -> 0x153f8b1a6600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b240 address 0x153f8b1b1900
RTV: Getting address of BLAS 0x563d9222b240 -> 0x153f8b1b1900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b2e0 address 0x153f8b1cd400
RTV: Getting address of BLAS 0x563d9222b2e0 -> 0x153f8b1cd400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b380 address 0x153f8bc68b00
RTV: Getting address of BLAS 0x563d9222b380 -> 0x153f8bc68b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b420 address 0x153f8be08600
RTV: Getting address of BLAS 0x563d9222b420 -> 0x153f8be08600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b4c0 address 0x153f8be1ce00
RTV: Getting address of BLAS 0x563d9222b4c0 -> 0x153f8be1ce00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b560 address 0x153f8be34c00
RTV: Getting address of BLAS 0x563d9222b560 -> 0x153f8be34c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b600 address 0x153f8be35e00
RTV: Getting address of BLAS 0x563d9222b600 -> 0x153f8be35e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b6a0 address 0x153f8bea9100
RTV: Getting address of BLAS 0x563d9222b6a0 -> 0x153f8bea9100
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b740 address 0x153f8bf27200
RTV: Getting address of BLAS 0x563d9222b740 -> 0x153f8bf27200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b7e0 address 0x153f8bf36c00
RTV: Getting address of BLAS 0x563d9222b7e0 -> 0x153f8bf36c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b880 address 0x153f8bf6aa00
RTV: Getting address of BLAS 0x563d9222b880 -> 0x153f8bf6aa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b920 address 0x153f8bf7d700
RTV: Getting address of BLAS 0x563d9222b920 -> 0x153f8bf7d700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222b9c0 address 0x153f8c24e200
RTV: Getting address of BLAS 0x563d9222b9c0 -> 0x153f8c24e200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ba60 address 0x153f8c257d00
RTV: Getting address of BLAS 0x563d9222ba60 -> 0x153f8c257d00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222bb00 address 0x153f8c341e00
RTV: Getting address of BLAS 0x563d9222bb00 -> 0x153f8c341e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222bba0 address 0x153f8c4e1b00
RTV: Getting address of BLAS 0x563d9222bba0 -> 0x153f8c4e1b00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222bc40 address 0x153f8c4f3c00
RTV: Getting address of BLAS 0x563d9222bc40 -> 0x153f8c4f3c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222bce0 address 0x153f8c572200
RTV: Getting address of BLAS 0x563d9222bce0 -> 0x153f8c572200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222bd80 address 0x153f8c576e00
RTV: Getting address of BLAS 0x563d9222bd80 -> 0x153f8c576e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222be20 address 0x153f8c58f300
RTV: Getting address of BLAS 0x563d9222be20 -> 0x153f8c58f300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222bec0 address 0x153f8cccf500
RTV: Getting address of BLAS 0x563d9222bec0 -> 0x153f8cccf500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222bf60 address 0x153f8ccdaa00
RTV: Getting address of BLAS 0x563d9222bf60 -> 0x153f8ccdaa00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d922142e0 address 0x153f8cd1c200
RTV: Getting address of BLAS 0x563d922142e0 -> 0x153f8cd1c200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c0a0 address 0x153f8cd39f00
RTV: Getting address of BLAS 0x563d9222c0a0 -> 0x153f8cd39f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c140 address 0x153f8cd46e00
RTV: Getting address of BLAS 0x563d9222c140 -> 0x153f8cd46e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c1e0 address 0x153f8cd7c300
RTV: Getting address of BLAS 0x563d9222c1e0 -> 0x153f8cd7c300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c280 address 0x153f8ce03400
RTV: Getting address of BLAS 0x563d9222c280 -> 0x153f8ce03400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c320 address 0x153f8d47b400
RTV: Getting address of BLAS 0x563d9222c320 -> 0x153f8d47b400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c3c0 address 0x153f8d47b600
RTV: Getting address of BLAS 0x563d9222c3c0 -> 0x153f8d47b600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c460 address 0x153f8d489300
RTV: Getting address of BLAS 0x563d9222c460 -> 0x153f8d489300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c500 address 0x153f8d525c00
RTV: Getting address of BLAS 0x563d9222c500 -> 0x153f8d525c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c5a0 address 0x153f8d6d6500
RTV: Getting address of BLAS 0x563d9222c5a0 -> 0x153f8d6d6500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c640 address 0x153f8d708600
RTV: Getting address of BLAS 0x563d9222c640 -> 0x153f8d708600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c6e0 address 0x153f8d70b400
RTV: Getting address of BLAS 0x563d9222c6e0 -> 0x153f8d70b400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c780 address 0x153f8d803500
RTV: Getting address of BLAS 0x563d9222c780 -> 0x153f8d803500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c820 address 0x153f8d874000
RTV: Getting address of BLAS 0x563d9222c820 -> 0x153f8d874000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c8c0 address 0x153f8d8a0700
RTV: Getting address of BLAS 0x563d9222c8c0 -> 0x153f8d8a0700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222c960 address 0x153f8d8be400
RTV: Getting address of BLAS 0x563d9222c960 -> 0x153f8d8be400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ca00 address 0x153f8d9b4300
RTV: Getting address of BLAS 0x563d9222ca00 -> 0x153f8d9b4300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222caa0 address 0x153f8d9c3600
RTV: Getting address of BLAS 0x563d9222caa0 -> 0x153f8d9c3600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222cb40 address 0x153f8d9d3900
RTV: Getting address of BLAS 0x563d9222cb40 -> 0x153f8d9d3900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222cbe0 address 0x153f8db9e600
RTV: Getting address of BLAS 0x563d9222cbe0 -> 0x153f8db9e600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222cc80 address 0x153f8dc94200
RTV: Getting address of BLAS 0x563d9222cc80 -> 0x153f8dc94200
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222cd20 address 0x153f8dc99500
RTV: Getting address of BLAS 0x563d9222cd20 -> 0x153f8dc99500
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222cdc0 address 0x153f8dcc4600
RTV: Getting address of BLAS 0x563d9222cdc0 -> 0x153f8dcc4600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222ce60 address 0x153f8dce7800
RTV: Getting address of BLAS 0x563d9222ce60 -> 0x153f8dce7800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222cf00 address 0x153f8dcf1300
RTV: Getting address of BLAS 0x563d9222cf00 -> 0x153f8dcf1300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222cfa0 address 0x153f8dd23400
RTV: Getting address of BLAS 0x563d9222cfa0 -> 0x153f8dd23400
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d040 address 0x153f8dd33700
RTV: Getting address of BLAS 0x563d9222d040 -> 0x153f8dd33700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d0e0 address 0x153f8dd33e00
RTV: Getting address of BLAS 0x563d9222d0e0 -> 0x153f8dd33e00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d180 address 0x153f8dd37700
RTV: Getting address of BLAS 0x563d9222d180 -> 0x153f8dd37700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d220 address 0x153f8dd42c00
RTV: Getting address of BLAS 0x563d9222d220 -> 0x153f8dd42c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d2c0 address 0x153f8dd51f00
RTV: Getting address of BLAS 0x563d9222d2c0 -> 0x153f8dd51f00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d360 address 0x153f8dd5b700
RTV: Getting address of BLAS 0x563d9222d360 -> 0x153f8dd5b700
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d400 address 0x153f8dd5d800
RTV: Getting address of BLAS 0x563d9222d400 -> 0x153f8dd5d800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d4a0 address 0x153f8ddb9600
RTV: Getting address of BLAS 0x563d9222d4a0 -> 0x153f8ddb9600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d540 address 0x153f8de18000
RTV: Getting address of BLAS 0x563d9222d540 -> 0x153f8de18000
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d5e0 address 0x153f8de1df00
RTV: Getting address of BLAS 0x563d9222d5e0 -> 0x153f8de1df00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d680 address 0x153f8de97c00
RTV: Getting address of BLAS 0x563d9222d680 -> 0x153f8de97c00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d720 address 0x153f8de99300
RTV: Getting address of BLAS 0x563d9222d720 -> 0x153f8de99300
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d7c0 address 0x153f8dea8600
RTV: Getting address of BLAS 0x563d9222d7c0 -> 0x153f8dea8600
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d860 address 0x153f8df1b900
RTV: Getting address of BLAS 0x563d9222d860 -> 0x153f8df1b900
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d900 address 0x153f8df20800
RTV: Getting address of BLAS 0x563d9222d900 -> 0x153f8df20800
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222d9a0 address 0x153f8df21a00
RTV: Getting address of BLAS 0x563d9222d9a0 -> 0x153f8df21a00
lvp_GetAccelerationStructureDeviceAddressKHR
LVP: Returning BLAS 0x563d9222da40 address 0x153f8df21c00
RTV: Getting address of BLAS 0x563d9222da40 -> 0x153f8df21c00
RTV: Creating device buffer TLAS Instances of size 20480
LVP: vkBuffer size 20480 created at 0x563d92214268
RTV: New vkBuffer created at 0x563d92214268
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d9222dc90; llvmpipe_resource 0x563d9222dc90; pipe_memory_allocation 0x563d92241000;
LVP: Binding lvp_buffer 0x563d922143d0: buffer->bo: 0x563d9222dc90; buffer->pmem: 0x563d92241000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf092300 (size 20480) to vulkan buffer 0x563d92241000
LVP: gpgpusim buffer size 20480 allocated at 0xdf092300
RTV: Bind buffer memory for vkBuffer 0x563d92214268
LVP: vkBuffer size 20480 created at 0x563d92215938
RTV: New vkBuffer created at 0x563d92215938
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d92250250; llvmpipe_resource 0x563d92250250; pipe_memory_allocation 0x563d92251000;
LVP: Binding lvp_buffer 0x563d922501d0: buffer->bo: 0x563d92250250; buffer->pmem: 0x563d92251000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf097300 (size 20480) to vulkan buffer 0x563d92251000
LVP: gpgpusim buffer size 20480 allocated at 0xdf097300
RTV: Bind buffer memory for vkBuffer 0x563d92215938
LVP: Finding mapped memory for mem 0x563d92250460: mem->pmem 0x563d92251000 
LVP: Identified at 0x563d92251000
LVP: Command Buffer:
	VK_CMD_COPY_BUFFER2
lvp_GetAccelerationStructureBuildSizesKHR
LVP: Size of BVH structure is 0xf0c0
RTV: Rounding size of BVH structure up to 0xf100
RTV: Total accel structure size = 0xf100 + ... = 0xf100
LVP: vkBuffer size 61696 created at 0x563d92240fe8
RTV: New vkBuffer created at 0x563d92240fe8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d92250250; llvmpipe_resource 0x563d92250250; pipe_memory_allocation 0x563d9226b000;
LVP: Binding lvp_buffer 0x563d92250460: buffer->bo: 0x563d92250250; buffer->pmem: 0x563d9226b000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf09c300 (size 61696) to vulkan buffer 0x563d9226b000
LVP: gpgpusim buffer size 61696 allocated at 0xdf09c300
RTV: Bind buffer memory for vkBuffer 0x563d92240fe8
LVP: vkBuffer size 21888 created at 0x563d92227de8
RTV: New vkBuffer created at 0x563d92227de8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d922b1590; llvmpipe_resource 0x563d922b1590; pipe_memory_allocation 0x563d922b2000;
LVP: Binding lvp_buffer 0x563d922b1510: buffer->bo: 0x563d922b1590; buffer->pmem: 0x563d922b2000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf0ab400 (size 21888) to vulkan buffer 0x563d922b2000
LVP: gpgpusim buffer size 21888 allocated at 0xdf0ab400
RTV: Bind buffer memory for vkBuffer 0x563d92227de8
RTV: Creating top level acceleration structure...
RTV: Creating acceleration struction of size 0xf100
lvp_CreateAccelerationStructureKHR
LVP: Accel structure (size 0xf100) created from lvp_buffer (size 0xf100). 
LVP: Buffer 0x563d9226b000 + 0x0 = 0x563d9226b000 allocated to accel structure 0x563d9222dae0
gpgpusim: set TLAS address 0x563d9226b000 to 0xdf09c300
LVP: Building acceleration structure
gpgpusim: set geometry
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 0, box (8.011, 4.235, 10.612), (8.565, 5.579, 12.643)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 1, box (5.055, 9.206, -36.707), (5.282, 9.454, -36.479)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 2, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 3, box (-0.243, 11.503, 8.721), (0.643, 11.950, 9.084)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 4, box (-36.088, 1.850, 33.998), (-35.936, 1.984, 34.455)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 5, box (-0.850, 9.674, -12.342), (-0.041, 11.955, -11.171)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 6, box (-8.964, 0.430, 10.910), (-7.659, 4.586, 12.199)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 7, box (-7.380, -0.110, -9.382), (-0.818, 2.546, -7.445)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 8, box (-4.791, 12.467, -16.530), (-4.678, 13.330, -16.497)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 9, box (3.590, 10.925, -37.200), (9.559, 11.251, -37.129)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 10, box (-5.181, 11.394, 7.662), (-3.626, 11.855, 10.927)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 11, box (54.097, 8.850, -12.354), (54.499, 12.022, -12.193)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 12, box (-9.723, 0.739, -7.941), (-8.402, 1.551, -6.886)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 13, box (-5.219, 9.667, -17.834), (-3.750, 9.865, -16.420)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 14, box (-1.108, 4.464, 6.675), (5.892, 7.886, 12.738)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 15, box (-3.173, 2.408, -8.045), (-2.716, 2.570, -7.893)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 16, box (1.451, 11.781, -12.389), (1.736, 13.757, -11.897)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 17, box (16.024, 6.280, -18.017), (17.579, 8.514, -13.017)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 18, box (-37.069, 1.846, 32.290), (-36.174, 3.049, 33.336)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 19, box (-0.828, 7.815, 12.430), (2.297, 8.675, 12.893)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 20, box (7.399, 10.398, -37.200), (10.399, 10.724, -37.129)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 21, box (2.440, 7.815, 12.772), (5.565, 8.675, 13.235)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 22, box (-0.959, 12.346, -12.459), (-0.485, 13.846, -11.908)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 23, box (0.347, 3.566, 11.974), (4.409, 4.289, 12.513)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 24, box (5.409, 4.902, 10.969), (8.941, 8.168, 13.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 25, box (-43.629, -0.817, 30.012), (-37.067, 1.948, 32.059)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 26, box (-8.518, 8.804, -12.774), (-8.227, 10.851, -11.899)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 27, box (-3.343, 0.998, 7.694), (0.751, 4.263, 9.756)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 28, box (12.738, 11.250, -12.384), (24.488, 15.313, -12.079)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 29, box (5.273, 9.280, -36.719), (5.499, 9.527, -36.492)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 30, box (0.260, 8.825, 8.485), (6.135, 12.982, 11.626)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 31, box (-39.127, 1.854, 30.364), (-38.670, 2.015, 30.517)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 32, box (16.400, 6.446, -22.558), (17.068, 7.278, -21.941)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 33, box (-12.116, 8.885, -12.485), (-0.366, 12.948, -12.171)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 34, box (-4.804, 10.204, 9.444), (-3.554, 10.620, 10.561)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 35, box (-3.476, 8.710, 11.037), (-0.788, 8.986, 11.799)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 36, box (2.536, 7.337, 12.786), (5.301, 7.546, 13.090)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 37, box (-0.596, 4.244, 7.097), (-0.427, 7.854, 8.542)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 38, box (7.596, 11.063, -14.798), (13.815, 14.767, -11.267)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 39, box (-8.840, 5.702, 10.486), (-7.676, 6.944, 11.416)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 40, box (22.317, 17.342, -21.699), (28.629, 27.030, -18.870)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 41, box (-13.083, -0.527, -37.033), (21.417, 11.348, -12.158)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 42, box (-2.631, 5.037, -11.585), (-1.908, 7.725, -10.975)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 43, box (-2.158, 10.110, -12.113), (0.326, 10.407, -11.640)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 44, box (7.916, 1.700, 11.928), (11.463, 3.239, 12.303)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 45, box (21.461, 11.167, -12.634), (21.752, 13.229, -11.845)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 46, box (-3.119, 4.340, 8.924), (-1.432, 6.840, 9.862)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 47, box (-2.495, 12.783, -12.575), (-2.236, 14.783, -11.813)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 48, box (-2.804, 16.622, -17.939), (-1.320, 16.816, -16.493)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 49, box (35.448, -0.025, -5.142), (43.636, 3.272, -2.735)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 50, box (6.576, 7.094, 12.645), (8.490, 9.532, 13.707)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 51, box (-2.865, 4.124, 11.271), (0.651, 4.390, 11.653)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 52, box (8.353, 8.353, -36.038), (9.162, 8.627, -35.927)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 53, box (0.851, 14.398, -13.165), (7.695, 15.538, -11.071)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 54, box (-3.087, 4.385, 9.481), (-2.489, 5.713, 11.442)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 55, box (-2.883, 1.947, 6.899), (6.992, 13.010, 13.524)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 56, box (-14.648, 11.267, -13.570), (-2.460, 12.493, -13.397)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 57, box (0.265, 11.384, 10.980), (0.630, 14.306, 11.141)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 58, box (13.253, 10.962, -44.661), (14.190, 11.907, -12.661)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 59, box (1.421, 10.136, -12.351), (2.804, 14.292, -12.017)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 60, box (3.447, 7.571, 7.737), (4.209, 8.992, 12.706)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 61, box (-7.220, 2.408, -8.045), (-6.763, 2.570, -7.893)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 62, box (19.478, 6.358, -21.625), (20.486, 9.811, -20.539)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 63, box (3.784, 12.444, 8.061), (4.437, 13.136, 12.373)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 64, box (5.046, 7.966, 11.716), (5.769, 10.607, 12.033)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 65, box (-1.112, 11.539, 8.637), (-0.225, 11.986, 9.001)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 66, box (-19.423, 1.852, 31.848), (-18.966, 2.014, 32.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 67, box (4.909, 6.631, -37.091), (6.261, 9.194, -35.919)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 68, box (-9.264, 3.989, 9.826), (-8.814, 6.052, 11.638)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 69, box (1.706, 6.631, -37.091), (3.058, 9.194, -35.919)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 70, box (-2.374, 10.398, -16.131), (7.939, 15.273, -11.224)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 71, box (-5.868, 8.804, -12.774), (-5.577, 10.851, -11.899)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 72, box (1.840, 12.004, -12.053), (2.023, 13.597, -11.150)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 73, box (-2.707, 7.464, -11.480), (0.777, 9.316, -10.531)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 74, box (-39.225, -12.349, 24.364), (32.775, 43.151, 40.989)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 75, box (-4.136, 10.595, 7.950), (-3.327, 11.869, 9.434)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 76, box (2.150, 2.670, 11.644), (5.821, 4.084, 12.343)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 77, box (21.349, 15.366, 8.574), (21.888, 18.194, 8.914)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 78, box (22.490, 17.035, 2.840), (28.803, 26.723, 5.668)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 79, box (-12.116, 8.797, -12.485), (12.884, 13.453, -11.868)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 80, box (8.179, 4.237, 8.696), (8.788, 5.588, 10.657)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 81, box (-3.086, 4.326, 11.264), (-0.727, 5.708, 11.544)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 82, box (14.390, 11.837, -12.367), (15.066, 14.009, -11.726)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 83, box (-59.264, 1.850, 39.631), (-47.077, 3.077, 39.804)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 84, box (-9.673, 1.807, 9.921), (-6.048, 5.964, 11.789)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 85, box (-37.716, -0.699, 30.470), (-35.779, 1.957, 37.033)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 86, box (-32.833, -0.817, -9.927), (0.667, 2.964, -8.482)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 87, box (-2.487, 4.133, 7.654), (1.029, 4.399, 8.037)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 88, box (-1.483, 5.879, 11.624), (-0.596, 7.895, 12.009)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 89, box (4.224, 9.111, 11.144), (5.466, 10.994, 12.277)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 90, box (9.319, 15.344, -12.967), (11.381, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 91, box (-8.227, 2.309, 5.877), (-7.419, 4.653, 7.252)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 92, box (-10.922, 1.872, 9.483), (8.703, 12.247, 13.452)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 93, box (15.673, 6.165, -34.007), (25.423, 11.165, -28.225)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 94, box (-0.437, 6.434, -38.177), (7.095, 10.293, -33.708)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 95, box (-9.313, 2.398, 10.581), (-8.960, 6.930, 10.736)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 96, box (18.987, 11.167, -12.634), (19.278, 13.229, -11.845)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 97, box (-2.781, 12.823, -12.525), (0.406, 15.416, -11.478)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 98, box (9.135, 14.398, -13.165), (15.979, 15.538, -11.071)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 99, box (-2.934, 11.743, -17.588), (-1.801, 20.368, -16.377)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 100, box (-1.189, 6.401, 11.226), (-1.046, 7.948, 12.144)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 101, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 102, box (-0.990, 7.342, 12.417), (2.651, 7.541, 12.816)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 103, box (54.248, 8.041, -14.172), (60.029, 13.041, -4.422)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 104, box (-3.532, 7.311, 11.716), (-3.145, 8.038, 12.091)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 105, box (7.207, 6.590, -36.234), (8.324, 9.543, -35.343)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 106, box (-3.375, 0.993, 9.606), (0.500, 4.258, 11.716)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 107, box (-19.313, 1.869, 30.663), (-18.856, 2.031, 30.815)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 108, box (0.883, 8.461, 11.600), (2.758, 10.438, 12.733)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 109, box (20.821, 6.449, -26.455), (21.782, 9.089, -25.596)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 110, box (9.612, 11.781, -12.389), (9.897, 13.757, -11.897)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 111, box (5.792, 9.204, -36.732), (6.020, 9.470, -36.491)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 112, box (-2.881, 6.236, -11.539), (-1.803, 9.455, -11.280)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 113, box (-37.520, 1.324, 41.952), (-25.332, 2.550, 42.125)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 114, box (-4.753, 10.207, 7.939), (-3.308, 10.623, 9.259)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 115, box (21.396, 15.975, 4.290), (21.986, 16.745, 6.759)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 116, box (-41.131, 1.854, 30.364), (-40.674, 2.015, 30.517)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 117, box (4.246, 9.935, 12.673), (4.852, 12.216, 12.821)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 118, box (0.303, 11.812, 7.875), (0.952, 13.241, 11.765)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 119, box (-3.078, 0.421, -10.811), (1.828, 3.218, -7.968)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 120, box (54.495, 9.251, -12.128), (54.602, 11.548, -8.316)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 121, box (20.963, 14.933, 5.869), (22.127, 17.511, 6.791)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 122, box (6.096, 4.146, 8.561), (8.830, 5.528, 8.879)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 123, box (-1.055, 7.571, 7.266), (-0.293, 8.992, 12.235)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 124, box (-0.440, 8.442, 8.482), (5.498, 10.356, 11.248)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 125, box (20.502, 9.075, -30.894), (23.924, 11.293, -29.511)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 126, box (1.430, 10.237, -12.290), (2.328, 13.643, -12.061)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 127, box (5.057, 9.261, -36.701), (5.286, 9.526, -36.460)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 128, box (-9.423, 1.499, 9.339), (9.577, 11.124, 13.214)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 129, box (-9.606, 2.348, 10.495), (-8.809, 4.137, 10.844)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 130, box (-9.051, 1.514, 6.565), (9.949, 11.139, 9.643)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 131, box (-3.024, 6.550, 6.757), (-2.543, 8.050, 7.261)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 132, box (-2.701, 4.335, 7.578), (-0.341, 5.718, 7.858)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 133, box (5.498, 15.344, -12.967), (7.560, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 134, box (8.413, 5.488, 13.064), (8.893, 6.988, 13.568)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 135, box (-5.384, 19.169, -17.276), (-4.259, 19.344, -16.288)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 136, box (-9.595, 0.917, 7.438), (7.280, 10.355, 14.219)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 137, box (-0.817, 9.499, 9.961), (4.715, 12.983, 11.687)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 138, box (-1.273, 17.325, -18.598), (10.915, 18.552, -18.425)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 139, box (7.681, 6.856, 13.045), (9.634, 7.543, 13.347)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 140, box (-5.820, 11.620, 10.245), (-4.023, 12.038, 11.190)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 141, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 142, box (-3.381, 9.132, 7.754), (-1.022, 10.515, 8.033)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 143, box (-37.682, 1.791, 30.318), (-36.034, 4.603, 31.568)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 144, box (0.398, 0.608, 7.545), (6.460, 4.045, 11.952)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 145, box (25.887, 18.166, -19.840), (26.449, 19.393, -19.480)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 146, box (-9.070, 2.357, 10.745), (-7.132, 4.482, 11.452)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 147, box (-3.086, 4.462, 9.878), (-1.774, 6.899, 10.671)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 148, box (-3.140, 4.427, 11.266), (2.329, 10.490, 12.852)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 149, box (5.398, 4.308, 12.845), (6.132, 7.917, 13.162)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 150, box (-1.170, 7.350, 12.462), (5.611, 7.721, 13.200)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 151, box (3.603, 11.353, -37.241), (9.416, 11.892, -37.088)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 152, box (-11.532, 0.087, -8.059), (-6.439, 1.641, -5.512)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 153, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 154, box (-2.104, 6.913, -11.368), (-0.127, 7.198, -10.876)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 155, box (5.259, 9.186, -36.681), (5.484, 9.411, -36.450)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 156, box (-0.671, 10.066, 10.462), (0.696, 11.645, 11.126)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 157, box (-2.197, 6.851, -13.387), (18.428, 16.039, -10.528)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 158, box (8.642, 5.788, 7.976), (9.122, 7.288, 8.480)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 159, box (21.349, 15.366, 5.133), (21.888, 18.194, 5.473)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 160, box (5.949, 9.236, -36.779), (6.236, 9.505, -36.499)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 161, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 162, box (-32.517, -9.982, -65.076), (54.983, 25.768, 34.424)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 163, box (-36.325, -0.621, 28.271), (-31.419, 2.176, 31.115)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 164, box (2.077, 8.227, 11.938), (3.374, 9.203, 13.008)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 165, box (-4.158, 11.370, -17.481), (-2.924, 14.511, -16.681)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 166, box (-4.412, 8.879, 7.437), (2.713, 12.723, 11.593)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 167, box (5.686, 2.595, 11.888), (8.061, 7.470, 13.372)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 168, box (-1.785, 12.416, 10.119), (-1.367, 15.759, 10.303)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 169, box (-1.971, 17.213, -18.971), (-0.268, 19.104, -18.123)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 170, box (1.036, 15.344, -12.967), (3.098, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 171, box (-10.540, 1.884, 6.808), (8.710, 12.259, 10.168)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 172, box (-0.023, 1.431, 6.620), (6.227, 5.024, 14.183)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 173, box (22.340, 16.815, -18.058), (22.513, 18.041, -5.870)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 174, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 175, box (14.860, 5.604, -23.894), (15.915, 7.854, -23.308)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 176, box (16.491, 6.457, -23.218), (17.034, 6.893, -22.386)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 177, box (14.927, 11.642, -12.324), (15.735, 13.908, -11.301)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 178, box (-0.968, 4.291, 6.681), (5.282, 11.885, 12.462)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 179, box (6.198, 11.642, -12.324), (7.007, 13.908, -11.301)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 180, box (22.757, 6.484, -28.712), (25.820, 7.835, -27.486)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 181, box (0.967, 12.520, 9.979), (1.721, 14.661, 10.744)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 182, box (-2.758, 1.003, 6.735), (0.164, 4.660, 12.266)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 183, box (-3.394, 8.804, -12.774), (-3.103, 10.851, -11.899)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 184, box (16.337, 11.167, -12.634), (16.628, 13.229, -11.845)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 185, box (-75.062, -12.349, -65.585), (17.938, 59.651, 20.415)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 186, box (7.882, 13.554, -13.812), (9.991, 14.081, -12.093)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 187, box (14.672, 5.226, -23.901), (15.805, 6.054, -23.163)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 188, box (-3.088, 8.720, 7.258), (-0.401, 8.995, 8.078)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 189, box (-2.106, 9.615, 10.535), (-0.723, 11.662, 11.117)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 190, box (-66.080, -1.859, 29.156), (-32.580, 1.922, 30.601)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 191, box (-2.354, 12.702, -12.188), (0.318, 14.999, -11.188)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 192, box (4.331, 10.506, 12.712), (4.812, 12.006, 13.216)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 193, box (-21.800, 1.884, 30.663), (-21.343, 2.045, 30.815)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 194, box (15.361, 13.309, -12.877), (15.749, 13.753, -12.260)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 195, box (-22.492, 1.605, 33.421), (-22.339, 1.766, 33.878)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 196, box (-2.900, 10.265, -15.167), (0.694, 16.484, -11.636)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 197, box (1.827, 7.571, 7.567), (2.588, 8.992, 12.536)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 198, box (-2.232, 13.358, 9.421), (-0.873, 15.905, 10.491)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 199, box (15.952, 9.291, -11.917), (16.377, 9.975, -11.651)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 200, box (-2.865, 4.386, 7.498), (-2.322, 5.722, 9.529)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 201, box (5.701, 4.910, 7.697), (9.279, 8.176, 9.728)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 202, box (-9.561, 1.875, 6.150), (8.564, 13.187, 13.775)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 203, box (-23.236, 1.289, 33.545), (-22.310, 1.752, 34.036)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 204, box (5.484, 9.171, -36.773), (5.771, 9.367, -36.515)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 205, box (5.710, 4.136, 12.247), (8.445, 5.519, 12.565)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 206, box (-2.862, 14.335, -17.812), (-1.432, 14.529, -16.429)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 207, box (-1.474, 12.293, 9.688), (0.166, 13.332, 10.497)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 208, box (-36.088, 1.850, 35.965), (-35.936, 1.984, 36.422)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 209, box (8.499, 7.709, -36.006), (9.913, 8.152, -35.960)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 210, box (22.317, 18.422, -31.915), (28.629, 28.110, -29.087)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 211, box (17.491, 6.974, -28.485), (17.652, 10.146, -28.083)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 212, box (7.927, 7.199, 13.478), (8.915, 9.277, 13.720)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 213, box (26.465, 0.214, -7.565), (36.277, 3.120, -3.596)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 214, box (-25.760, 0.049, 30.984), (-22.823, 1.674, 35.984)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 215, box (22.340, 16.815, 5.971), (22.513, 18.041, 18.158)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 216, box (-5.207, 13.367, -17.812), (-3.778, 13.561, -16.429)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 217, box (16.276, 4.565, -35.749), (24.214, 9.472, -28.093)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 218, box (-0.347, 8.193, 11.544), (0.470, 9.701, 12.615)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 219, box (-3.867, 9.659, 7.765), (-3.262, 11.940, 7.912)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 220, box (-0.279, 12.254, -12.400), (1.361, 13.692, -12.039)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 221, box (8.490, 8.749, -36.006), (9.810, 8.959, -35.960)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 222, box (-2.327, 9.832, -14.277), (0.314, 15.019, -13.332)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 223, box (-1.820, 12.444, 7.474), (-1.167, 13.136, 11.787)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 224, box (15.329, 2.185, -23.724), (16.688, 4.419, -18.755)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 225, box (11.973, 17.325, -18.598), (24.160, 18.552, -18.425)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 226, box (-14.601, 0.082, -11.330), (-6.726, 2.410, -8.143)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 227, box (-3.987, 10.644, 8.020), (-3.233, 11.785, 10.676)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 228, box (-1.123, 6.636, 8.146), (-0.549, 8.073, 11.240)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 229, box (26.585, 18.397, -19.784), (27.148, 19.412, -19.429)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 230, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 231, box (5.604, 12.334, -12.544), (9.698, 13.889, -11.986)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 232, box (4.300, 4.936, 12.262), (7.987, 6.655, 12.643)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 233, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 234, box (-1.709, 9.124, 11.177), (2.416, 10.507, 11.632)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 235, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 236, box (-4.128, 10.588, 9.322), (-3.647, 11.838, 10.775)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 237, box (5.419, 11.812, 8.410), (6.067, 13.241, 12.300)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 238, box (-8.309, 1.006, 7.101), (0.441, 4.771, 12.163)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 239, box (-3.913, 12.208, 10.197), (-1.226, 12.946, 10.595)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 240, box (6.304, 2.725, 9.622), (8.304, 5.288, 12.310)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 241, box (-2.261, 10.620, -12.139), (-1.230, 13.370, -11.850)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 242, box (-17.941, 2.315, -14.300), (-1.566, 4.135, -7.894)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 243, box (19.545, 6.974, -28.485), (19.706, 10.146, -28.083)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 244, box (5.273, 9.261, -36.705), (5.500, 9.508, -36.478)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 245, box (9.841, 11.014, -12.353), (11.263, 14.779, -12.011)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 246, box (-3.542, 12.793, 9.697), (-1.745, 13.250, 10.494)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 247, box (-22.344, -0.753, 30.040), (-15.782, 1.982, 32.665)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 248, box (4.645, 5.081, 12.467), (6.192, 7.534, 13.432)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 249, box (-2.028, 6.293, 12.013), (-1.028, 7.980, 12.164)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 250, box (-5.118, 11.549, 7.904), (-3.665, 11.979, 9.216)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 251, box (-3.420, 12.391, 8.530), (-1.522, 13.516, 9.827)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 252, box (23.499, 11.443, -36.783), (28.686, 11.502, -14.783)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 253, box (-5.246, 10.775, -17.473), (-4.074, 19.400, -16.372)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 254, box (0.157, 8.216, 11.857), (1.586, 9.833, 14.092)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 255, box (-5.440, 11.417, -18.068), (-4.768, 12.769, -17.521)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 256, box (-45.868, 4.709, -36.290), (107.132, 25.709, -32.852)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 257, box (4.526, 9.124, 7.517), (7.447, 12.780, 13.048)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 258, box (-2.271, 11.420, 10.938), (6.104, 12.467, 11.563)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 259, box (-3.495, 7.858, 6.887), (-0.510, 8.975, 12.200)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 260, box (7.465, 7.834, -35.555), (7.760, 8.142, -35.295)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 261, box (-5.170, 11.547, 9.409), (-3.912, 11.973, 10.526)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 262, box (-9.340, 1.534, -8.534), (-8.484, 2.417, -7.745)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 263, box (-3.619, 11.300, 10.631), (0.600, 11.855, 11.162)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 264, box (1.645, 11.712, -12.329), (6.114, 14.087, -11.056)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 265, box (7.049, 7.433, 13.076), (8.877, 10.542, 13.483)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 266, box (-10.953, 0.096, 6.393), (10.047, 14.346, 13.362)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 267, box (-6.568, 2.372, -7.928), (-6.405, 2.646, -7.816)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 268, box (-36.819, 1.281, 29.780), (-35.076, 3.343, 31.288)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 269, box (-10.702, 2.045, 9.759), (-6.640, 4.561, 11.415)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 270, box (-9.397, 2.277, -8.513), (-8.952, 2.438, -8.345)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 271, box (-22.675, -0.613, 30.308), (-20.019, 1.809, 36.870)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 272, box (1.979, 12.444, 7.872), (2.631, 13.136, 12.184)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 273, box (-2.592, 10.415, 8.203), (0.408, 12.033, 9.148)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 274, box (7.247, 4.345, 11.009), (8.185, 6.579, 12.876)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 275, box (0.198, 7.571, 7.397), (0.960, 8.992, 12.366)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 276, box (4.010, 9.049, 11.244), (6.244, 10.135, 11.955)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 277, box (-5.149, 15.654, -17.939), (-3.665, 15.848, -16.493)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 278, box (17.717, 7.375, -28.588), (21.530, 9.672, -28.481)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 279, box (9.988, 11.654, -12.187), (14.613, 14.107, -10.749)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 280, box (-0.192, 11.521, -12.486), (0.742, 14.568, -11.611)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 281, box (15.792, 6.398, -24.226), (17.096, 8.742, -23.433)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 282, box (0.000, 0.000, 0.000), (0.000, 0.000, 0.000)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 283, box (-0.646, 9.291, -11.917), (-0.220, 9.975, -11.651)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 284, box (21.290, 15.476, 4.790), (21.927, 17.241, 9.446)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 285, box (-9.588, 0.476, 7.620), (8.037, 2.930, 14.245)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 286, box (13.673, 15.344, -12.967), (15.736, 15.537, -12.597)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 287, box (-1.081, 4.311, 10.744), (-0.836, 7.921, 12.174)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 288, box (22.340, 16.815, -6.085), (22.513, 18.041, 6.102)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 289, box (-4.515, 10.962, 11.373), (-1.796, 11.782, 12.990)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 290, box (6.956, 11.629, -12.367), (7.632, 13.801, -11.726)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 291, box (-3.039, 20.137, -17.276), (-1.914, 20.312, -16.288)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 292, box (-48.645, 1.799, 35.795), (-43.801, 9.706, 37.936)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 293, box (-2.853, 3.701, 11.244), (0.272, 4.299, 11.658)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 294, box (-8.933, 2.407, 6.942), (-8.579, 6.939, 7.097)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 295, box (3.300, 7.724, 11.729), (5.191, 9.497, 12.534)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 296, box (20.989, 10.160, -37.958), (29.364, 22.910, -34.223)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 297, box (5.358, 9.414, 9.335), (8.889, 12.680, 11.366)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 298, box (6.600, 7.407, 12.691), (8.310, 8.860, 13.656)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 299, box (6.584, 12.482, -12.832), (7.858, 13.756, -12.551)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 300, box (-8.696, 2.184, -8.677), (-8.532, 2.458, -8.565)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 301, box (-2.158, 11.431, -12.270), (0.326, 11.728, -11.797)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 302, box (7.407, 5.802, 13.043), (8.255, 8.911, 13.414)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 303, box (8.580, 16.408, -40.955), (10.580, 18.408, -38.955)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 304, box (-3.717, 9.124, 10.966), (-1.358, 10.507, 11.245)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 305, box (5.017, 7.571, 7.901), (5.779, 8.992, 12.870)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 306, box (5.518, 7.154, 12.523), (8.643, 7.752, 12.937)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 307, box (0.227, 1.192, 11.359), (6.790, 4.223, 12.121)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 308, box (-1.515, 6.305, 7.113), (-0.515, 7.992, 7.265)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 309, box (3.346, 6.631, -37.091), (4.698, 9.194, -35.919)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 310, box (7.119, 8.095, 11.887), (7.728, 10.251, 12.633)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 311, box (-7.855, 0.969, 5.661), (-6.977, 5.219, 7.020)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 312, box (7.411, 9.604, -37.200), (9.989, 9.926, -37.129)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 313, box (-0.751, 13.675, -12.757), (-0.158, 14.386, -12.356)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 314, box (6.792, 11.626, 9.421), (8.746, 12.313, 9.724)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 315, box (-5.529, 11.627, 7.460), (-3.732, 12.045, 8.405)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 316, box (1.189, 2.600, 10.307), (5.283, 4.819, 11.471)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 317, box (5.054, 9.180, -36.681), (5.278, 9.405, -36.451)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 318, box (-60.642, 0.511, -51.993), (68.358, 0.511, 48.507)
EMBREE: Get accel instance -> device 0x7ffe1afb12b0
EMBREE: Add AABB geometry: geomID: 0, primID 319, box (-2.760, 10.269, 6.758), (0.161, 13.925, 12.289)
EMBREE: New rtcBVH structure created at 0x563d92215470
EMBREE: Building 6 wide tree (max depth 32) using quality 1
EMBREE: Build BVH with root 0x563d922cd240
Compressed Node: i	exp: (8, 7, 7)	origin: (-75.062286, -12.349403, -65.584579)
Children:
	0x563d922cd2a8: (8, 0, 136), (108, 111, 216)
	0x563d922cfb38: (60, 38, 41), (136, 64, 123)
	0x563d922d0b20: (42, 23, 56), (79, 44, 132)
	0x563d922d1180: (14, 4, 1), (144, 77, 229)
	0x563d922d1738: (29, 34, 49), (183, 81, 144)
	0x563d922d1cc0: (0, 0, 0), (93, 144, 172)
EMBREE: Set dst_map 0x563d9226b000 = accel->address.bo 0x563d9226b000 + accel->address.offset 0x0 for accel 0x563d9222dae0
EMBREE: Pack bvh 0x7ffe1afb15e0 to dst_map 0x563d9226b000
EMBREE: Get accel instance -> device 0x7ffe1afabbd0
EMBREE: Get accel instance -> device 0x7ffe1afabbd0
EMBREE: Get accel instance -> device 0x7ffe1afabbd0
EMBREE: Get accel instance -> device 0x7ffe1afabbd0
EMBREE: Get accel instance -> device 0x7ffe1afabbd0
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afabbd0
EMBREE: Get accel instance -> device 0x7ffe1afabbd0
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afac750
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afad2d0
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afade50
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afae9d0
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afaf550
EMBREE: Get accel instance -> device 0x7ffe1afb00d0
EMBREE: Pack root 0x563d922cd240 to root_map 0x563d9226b040
gpgpusim: set AS
EMBREE: Release rtcBVH structure created at 0x563d92215470
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
- built acceleration structures in 20.1848s
LVP: Image created at 0x7ffe1afb17b8
RTV: Creating image at 0x563d0cb32970
LVP: Creating image_view for image 0x563d0cb32970
RTV: Creating image view at 0x563d922182d0
LVP: Image created at 0x563d922cc748
RTV: Creating image at 0x563d0cb32970
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d922cc790; llvmpipe_resource 0x563d922cc790; pipe_memory_allocation 0x563d922eb000;
gpgpusim: binding gpgpusim buffer 0xdf0b0a00 (size 1048576) to vulkan buffer 0x563d922eb000
LVP: Image 0x563d0cb32970 bound to pmem 0x563d922eb000 using pointer 0xdf0b0a00
LVP: Creating image_view for image 0x563d0cb32970
RTV: Creating image view at 0x563d927c0150
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
LVP: vkBuffer size 320 created at 0x563d9221e418
RTV: New vkBuffer created at 0x563d9221e418
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d927c0570; llvmpipe_resource 0x563d927c0570; pipe_memory_allocation 0x563d927c1000;
LVP: Binding lvp_buffer 0x563d3c89ca70: buffer->bo: 0x563d927c0570; buffer->pmem: 0x563d927c1000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf1b0a00 (size 320) to vulkan buffer 0x563d927c1000
LVP: gpgpusim buffer size 320 allocated at 0xdf1b0a00
RTV: Bind buffer memory for vkBuffer 0x563d9221e418
RTV: Create descriptor pool...
LVP: Create descriptor pool...
RTV: Create descriptor set layout...
LVP: Create descriptor set layout...
LVP: Set Layout with 3 bindings...
DESCRIPTOR TYPE SET: 6
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER; stage flag 0x  1
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x 11
DESCRIPTOR TYPE SET: 1
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER; stage flag 0x 10
RTV: Allocate descriptor sets...
LVP: Allocate descriptor sets...
LVP: Creating descriptor sets with 3 bindings at 0x563d0dbada30...
RTV: Update descriptor sets...
LVP: Update descriptor sets...
DESC AT: 0x563d0dbada88 with type 6
LVP: Setting lvp_buffer 0x563d3c89ca70 for descriptor 0 (0). info.ubo: buffer 0x563d927c0570 + offset 0 = 0x563d927c0570; stored at 0x563d927c1000 using pointer 0xdf1b0a00 with 320 bytes. 
LVP: gpgpusim buffer at 0xdf1b0a00
DESC AT: 0x563d0dbadab8 with type 7
LVP: Setting lvp_buffer 0x563d3c819cc0 for descriptor 1 (0). info.ssbo: buffer 0x563d3c81a000 + offset 0 = 0x563d3c81a000; stored at 0x563d3c81b000 using pointer 0xcadd9400 with 18432 bytes. 
LVP: gpgpusim buffer at 0xcadd9400
DESC AT: 0x563d0dbadae8 with type 1
LVP: Setting descriptor 2 VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
LVP: Create pipeline layout...
LVP: Image created at 0x563d922ea858
RTV: Creating image at 0x563d92991480
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d927c2260; llvmpipe_resource 0x563d927c2260; pipe_memory_allocation 0x563d929b5000;
gpgpusim: binding gpgpusim buffer 0xdf1b0c00 (size 4194304) to vulkan buffer 0x563d929b5000
LVP: Image 0x563d92991480 bound to pmem 0x563d929b5000 using pointer 0xdf1b0c00
LVP: Creating image_view for image 0x563d92991480
RTV: Creating image view at 0x563d927cc260
LVP: Image created at 0x563d92214598
RTV: Creating image at 0x563d92991960
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d93db2d10; llvmpipe_resource 0x563d93db2d10; pipe_memory_allocation 0x563d93db3000;
gpgpusim: binding gpgpusim buffer 0xdf5b0c00 (size 4194304) to vulkan buffer 0x563d93db3000
LVP: Image 0x563d92991960 bound to pmem 0x563d93db3000 using pointer 0xdf5b0c00
LVP: Creating image_view for image 0x563d92991960
RTV: Creating image view at 0x563d927cac20
RTV: Create descriptor pool...
LVP: Create descriptor pool...
RTV: Create descriptor set layout...
LVP: Create descriptor set layout...
LVP: Set Layout with 12 bindings...
DESCRIPTOR TYPE SET: 1000150000
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR; stage flag 0x100
DESCRIPTOR TYPE SET: 3
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE; stage flag 0x100
DESCRIPTOR TYPE SET: 3
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE; stage flag 0x100
DESCRIPTOR TYPE SET: 6
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER; stage flag 0x900
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x600
DESCRIPTOR TYPE SET: 1
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER; stage flag 0x600
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
DESCRIPTOR TYPE SET: 7
LVP: Set Layout: type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER; stage flag 0x1400
RTV: Allocate descriptor sets...
LVP: Allocate descriptor sets...
LVP: Creating descriptor sets with 12 bindings at 0x563d927ea7a0...
RTV: Update descriptor sets...
LVP: Update descriptor sets...
DESC AT: 0x563d927ea7f8 with type 1000150000
LVP: Setting lvp_acceleration_structure 0x563d9222dae0 for descriptor 0 (0). info.ubo: address 0x563d9226b000 + offset 0 = 0x563d9226b000 
DESC AT: 0x563d927ea828 with type 3
LVP: Setting lvp_image_view 0x563d927cc260 for descriptor 1 (0). Type: VK_FORMAT_R32G32B32A32_SFLOAT; Tiling: VK_IMAGE_TILING_OPTIMAL
LVP: Image 0x563d92991480 stored at 0x563d929b5000 using pointer 0xdf1b0c00
DESC AT: 0x563d927ea858 with type 3
LVP: Setting lvp_image_view 0x563d927cac20 for descriptor 2 (0). Type: VK_FORMAT_R32G32B32A32_SFLOAT; Tiling: VK_IMAGE_TILING_OPTIMAL
LVP: Image 0x563d92991960 stored at 0x563d93db3000 using pointer 0xdf5b0c00
DESC AT: 0x563d927ea888 with type 6
LVP: Setting lvp_buffer 0x563d3c89ca70 for descriptor 3 (0). info.ubo: buffer 0x563d927c0570 + offset 0 = 0x563d927c0570; stored at 0x563d927c1000 using pointer 0xdf1b0a00 with 320 bytes. 
LVP: gpgpusim buffer at 0xdf1b0a00
DESC AT: 0x563d927ea8b8 with type 7
LVP: Setting lvp_buffer 0x563d0cba5e40 for descriptor 4 (0). info.ssbo: buffer 0x563d1104ea90 + offset 0 = 0x563d1104ea90; stored at 0x153f8e0c3000 using pointer 0xc0000000 with 70442964 bytes. 
LVP: gpgpusim buffer at 0xc0000000
DESC AT: 0x563d927ea8e8 with type 7
LVP: Setting lvp_buffer 0x563d258a6d50 for descriptor 5 (0). info.ssbo: buffer 0x563d36560760 + offset 0 = 0x563d36560760; stored at 0x563d36561000 using pointer 0xc865c000 with 20703720 bytes. 
LVP: gpgpusim buffer at 0xc865c000
DESC AT: 0x563d927ea918 with type 7
LVP: Setting lvp_buffer 0x563d3c819cc0 for descriptor 6 (0). info.ssbo: buffer 0x563d3c81a000 + offset 0 = 0x563d3c81a000; stored at 0x563d3c81b000 using pointer 0xcadd9400 with 18432 bytes. 
LVP: gpgpusim buffer at 0xcadd9400
DESC AT: 0x563d927ea948 with type 7
LVP: Setting lvp_buffer 0x563d3c830e20 for descriptor 7 (0). info.ssbo: buffer 0x563d3c831000 + offset 0 = 0x563d3c831000; stored at 0x563d3c832000 using pointer 0xcade2400 with 2560 bytes. 
LVP: gpgpusim buffer at 0xcade2400
DESC AT: 0x563d927ea978 with type 1
LVP: Setting descriptor 8 VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
DESC AT: 0x563d927ea9a8 with type 7
LVP: Setting lvp_buffer 0x563d3c852fa0 for descriptor 9 (0). info.ssbo: buffer 0x563d3c854000 + offset 0 = 0x563d3c854000; stored at 0x563d3c85d000 using pointer 0xcade7400 with 5120 bytes. 
LVP: gpgpusim buffer at 0xcade7400
DESC AT: 0x563d927ea9d8 with type 7
LVP: Setting lvp_buffer 0x563d3c8705a0 for descriptor 10 (0). info.ssbo: buffer 0x563d3c871000 + offset 0 = 0x563d3c871000; stored at 0x563d3c87a000 using pointer 0xcaded800 with 5120 bytes. 
LVP: gpgpusim buffer at 0xcaded800
DESC AT: 0x563d927eaa08 with type 7
LVP: Setting lvp_buffer 0x563d3c88d3a0 for descriptor 11 (0). info.ssbo: buffer 0x563d3c88d190 + offset 0 = 0x563d3c88d190; stored at 0x563d3c897000 using pointer 0xcadf3c00 with 5120 bytes. 
LVP: gpgpusim buffer at 0xcadf3c00
LVP: Create pipeline layout...
RTV: Using primary + shadow shader with default light sources.
RTV: Anyhit shTranslating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx
Translating /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptx
ader: -1
RTV: Creating ray tracing pipeline...
LVP: Creating ray tracing pipeline...
LVP: Compiling ray tracing pipeline...
LVP: Compiling shader stage 0
LVP: Translating shader 0 (type 8)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_RAYGEN to PTX
LVP: Compiling shader stage 1
LVP: Translating shader 1 (type 11)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_MISS to PTX
LVP: Compiling shader stage 2
LVP: Translating shader 2 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 3
LVP: Translating shader 3 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 4
LVP: Translating shader 4 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 5
LVP: Translating shader 5 (type 10)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_CLOSEST_HIT to PTX
LVP: Compiling shader stage 6
LVP: Translating shader 6 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 7
LVP: Translating shader 7 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 8
LVP: Translating shader 8 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: Compiling shader stage 9
LVP: Translating shader 9 (type 12)
GPGPU-SIM VULKAN: Translating NIR MESA_SHADER_INTERSECTION to PTX
LVP: run_rt_translation_passes
LVP: Registering shader stage 0 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_RAYGEN_func0_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_RAYGEN_func0_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_RAYGEN_func0_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 14 registers, 320 bytes cmem[0], 16 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_RAYGEN_func0_main' : regs=14, lmem=0, smem=0, cmem=336
LVP: Registering shader stage 1 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_MISS_func1_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_MISS_func1_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_MISS_func1_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 8 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_MISS_func1_main' : regs=8, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 2 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func2_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func2_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func2_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 32 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func2_main' : regs=32, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 3 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func3_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func3_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func3_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 27 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_3.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func3_main' : regs=27, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 4 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func4_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func4_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func4_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 28 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_4.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func4_main' : regs=28, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 5 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_CLOSEST_HIT_func5_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_CLOSEST_HIT_func5_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_CLOSEST_HIT_func5_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 28 registers, 320 bytes cmem[0], 8 bytes cmem[2]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_5.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_CLOSEST_HIT_func5_main' : regs=28, lmem=0, smem=0, cmem=328
LVP: Registering shader stage 6 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func6_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func6_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func6_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 14 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_6.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func6_main' : regs=14, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 7 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func7_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func7_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func7_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 2 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_7.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func7_main' : regs=2, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 8 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func8_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func8_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func8_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 16 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_8.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func8_main' : regs=16, lmem=0, smem=0, cmem=320
LVP: Registering shader stage 9 with GPGPU-Sim
gpgpusim: register shaders
gpgpusim: invoking gpgpusim
GPGPU-Sim PTX: instruction assembly for function 'MESA_SHADER_INTERSECTION_func9_main'...   done.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptx
GPGPUSIM: Generating PTXINFO for/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptxinfo
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function 'MESA_SHADER_INTERSECTION_func9_main' for 'sm_52'
ptxas info    : Function properties for MESA_SHADER_INTERSECTION_func9_main
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 14 registers, 320 bytes cmem[0]
Parsing ptxinfo from file: /cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_INTERSECTION_9.ptxinfo
GPGPU-Sim PTX: Kernel 'MESA_SHADER_INTERSECTION_func9_main' : regs=14, lmem=0, smem=0, cmem=320
LVP: Adding group handle for general group: 
	general_index 0
LVP: Adding group handle for general group: 
	general_index 1
LVP: Adding group handle for triangle hit group: 
	closest_hit_index 2
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 3
	intersection_index 6
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 4
	intersection_index 7
LVP: Adding group handle for procedural hit group: 
	closest_hit_index 5
	intersection_index 8
gpgpusim: set pipeline
LVP: vkBuffer size 192 created at 0x563d9695cff8
RTV: New vkBuffer created at 0x563d9695cff8
LLVM: llvmpipe_resource_bind_backing: pipe_screen 0x563d0c8c53c0; pipe_resource 0x563d96975180; llvmpipe_resource 0x563d96975180; pipe_memory_allocation 0x563d96976000;
LVP: Binding lvp_buffer 0x563d959f5cb0: buffer->bo: 0x563d96975180; buffer->pmem: 0x563d96976000; memory-offset: 0;
gpgpusim: binding gpgpusim buffer 0xdf9b0c00 (size 192) to vulkan buffer 0x563d96976000
LVP: gpgpusim buffer size 192 allocated at 0xdf9b0c00
RTV: Bind buffer memory for vkBuffer 0x563d9695cff8
RTV: Get ray tracing shader group handles... group count: 6; handle size: 32
LVP: Get ray tracing shader group handles...
LVP: Copying handle 0 to 0x563d927c8c80
LVP: Copying handle 1 to 0x563d927c8ca0
LVP: Copying handle 2 to 0x563d927c8cc0
LVP: Copying handle 3 to 0x563d927c8ce0
LVP: Copying handle 4 to 0x563d927c8d00
LVP: Copying handle 5 to 0x563d927c8d20
LVP: Finding mapped memory for mem 0x563d96975390: mem->pmem 0x563d96976000 
LVP: Identified at 0x563d96976000
RTV: CopyShaderData (size 32) from 0x563d927c8c80 to 0x563d96976000 for raygen shader
RTV: CopyShaderData (size 32) from 0x563d927c8c80 to 0x563d96976020 for miss shader
RTV: CopyShaderData (size 32) from 0x563d927c8c80 to 0x563d96976040 for hit shader

Swap Chain: 
- image count: 1
- present mode: 3

RTV: Bind ray tracing pipeline...
RTV: Bind descriptor sets...
RTV: Trace ray...
RTV: (512 x 512 x 1) SBT raygen 0x7ffe1afb1760, miss 0x7ffe1afb1780, hit 0x7ffe1afb17a0, callable 0x7ffe1afb17c0
RTV: Copy image...
LVP: Finding mapped memory for mem 0x563d922b17a0: mem->pmem 0x563d927c1000 
LVP: Identified at 0x563d927c1000
RTV: Setting uniform buffer value at 0x563d927c1000 using memcpy
LVP: Command Buffer:
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_BIND_PIPELINE
	VK_CMD_BIND_DESCRIPTOR_SETS
	VK_CMD_TRACE_RAYS_KHR
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_PIPELINE_BARRIER2
	VK_CMD_COPY_IMAGE2
	VK_CMD_PIPELINE_BARRIER2
LVP: Bind pipeline...
LVP: Bind ray tracing pipeline...
LVP: Bind descriptor sets...
LVP: Bind ray tracing descriptor sets...
LVP: Binding... 
Bind raygen... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind any hit... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind closest hit... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind miss... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
Bind intersection... 
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_IMAGE...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...
LVP: Handling descriptor type VK_DESCRIPTOR_TYPE_STORAGE_BUFFER...

LVP: Setting descriptor set pointer 0x927ea7a0...
gpgpusim: set descriptor set 0x927ea7a0
LVP: Handling trace ray...
LVP: SBT: raygen 0x563d96976000, miss 0x563d96976020, hit 0x563d96976040, callable (nil) 
LVP: Launching vkCmdTraceRaysKHR on Vulkan-Sim; Mesa last updated August 29, 2023
gpgpusim: invoking gpgpusim
gpgpusim: launching cmd trace ray
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_RAYGEN_func0_main'...
Printing basic blocks for function 'MESA_SHADER_RAYGEN_func0_main':
bb_00	:  PC=0x000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:15) load_ray_launch_id %launch_ID_0, %launch_ID_1, %launch_ID_2;
bb_00	:  PC=0x008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:20) load_ray_launch_size %launch_Size_0, %launch_Size_1, %launch_Size_2;
bb_00	:  PC=0x010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:24) setp.ge.u32 %bigger_0, %launch_ID_0, %launch_Size_0;
bb_00	:  PC=0x018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:27) setp.ge.u32 %bigger_1, %launch_ID_1, %launch_Size_1;
bb_00	:  PC=0x020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:30) setp.ge.u32 %bigger_2, %launch_ID_2, %launch_Size_2;
bb_00	:  PC=0x028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:32) @%bigger_0 bra shader_exit;

bb_01	:  PC=0x030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:33) @%bigger_1 bra shader_exit;

bb_02	:  PC=0x038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:34) @%bigger_2 bra shader_exit;

bb_03	:  PC=0x040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:85) load_vulkan_descriptor %AccumulationImage, 0, 1; // decl_var image INTERP_MODE_NONE restrict r32g32b32a32_float image2D AccumulationImage
bb_03	:  PC=0x048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:87) load_vulkan_descriptor %OutputImage, 0, 2; // decl_var image INTERP_MODE_NONE restrict r8g8b8a8_unorm image2D OutputImage
bb_03	:  PC=0x050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:89) rt_alloc_mem %Ray, 48, 8192; // decl_var function_temp INTERP_MODE_NONE RayPayload Ray
bb_03	:  PC=0x058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:97) mov.f32 %const1_f32, 0F3f800000;
bb_03	:  PC=0x060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:100) mov.f32 %const0_f32, 0F00000000;
bb_03	:  PC=0x068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:103) mov.u32 %const0_u32, 0;
bb_03	:  PC=0x070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:106) mov.u16 %const1_u16, 1;
bb_03	:  PC=0x078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:111) mov.f32 %ssa_0, 0F000000ff; // vec1 32 ssa_0 = undefined
bb_03	:  PC=0x080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:113) mov.b32 %ssa_0_bits, 0F000000ff;
bb_03	:  PC=0x088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:116) mov.f32 %ssa_1, 0F000000ff; // vec1 32 ssa_1 = undefined
bb_03	:  PC=0x090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:118) mov.b32 %ssa_1_bits, 0F000000ff;
bb_03	:  PC=0x098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:121) mov.f32 %ssa_2, 0F00000000; // vec1 32 ssa_2 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x0a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:123) mov.b32 %ssa_2_bits, 0F00000000;
bb_03	:  PC=0x0a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:126) mov.f32 %ssa_3, 0F000000ff; // vec1 32 ssa_3 = undefined
bb_03	:  PC=0x0b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:128) mov.b32 %ssa_3_bits, 0F000000ff;
bb_03	:  PC=0x0b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:131) mov.f32 %ssa_4, 0F000000ff; // vec1 32 ssa_4 = undefined
bb_03	:  PC=0x0c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:133) mov.b32 %ssa_4_bits, 0F000000ff;
bb_03	:  PC=0x0c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:139) mov.f32 %ssa_5_0, 0F00000000;
bb_03	:  PC=0x0d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:140) mov.f32 %ssa_5_1, 0F00000000;
bb_03	:  PC=0x0d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:141) mov.f32 %ssa_5_2, 0F00000000;
bb_03	:  PC=0x0e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:142) mov.f32 %ssa_5_3, 0F00000000;
bb_03	:  PC=0x0e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:146) mov.f32 %ssa_6, 0F000000ff; // vec1 32 ssa_6 = undefined
bb_03	:  PC=0x0f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:148) mov.b32 %ssa_6_bits, 0F000000ff;
bb_03	:  PC=0x0f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:151) mov.f32 %ssa_7, 0F000000ff; // vec1 32 ssa_7 = undefined
bb_03	:  PC=0x100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:153) mov.b32 %ssa_7_bits, 0F000000ff;
bb_03	:  PC=0x108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:156) mov.f32 %ssa_8, 0F00000001; // vec1 32 ssa_8 = load_const (0x00000001 /* 0.000000 */)
bb_03	:  PC=0x110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:158) mov.b32 %ssa_8_bits, 0F00000001;
bb_03	:  PC=0x118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:161) mov.f32 %ssa_9, 0F3e99999a; // vec1 32 ssa_9 = load_const (0x3e99999a /* 0.300000 */)
bb_03	:  PC=0x120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:163) mov.b32 %ssa_9_bits, 0F3e99999a;
bb_03	:  PC=0x128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:166) mov.f32 %ssa_10, 0F3a83126f; // vec1 32 ssa_10 = load_const (0x3a83126f /* 0.001000 */)
bb_03	:  PC=0x130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:168) mov.b32 %ssa_10_bits, 0F3a83126f;
bb_03	:  PC=0x138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:171) mov.f32 %ssa_11, 0F000000ff; // vec1 32 ssa_11 = load_const (0x000000ff /* 0.000000 */)
bb_03	:  PC=0x140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:173) mov.b32 %ssa_11_bits, 0F000000ff;
bb_03	:  PC=0x148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:176) mov.f32 %ssa_12, 0F00000005; // vec1 32 ssa_12 = load_const (0x00000005 /* 0.000000 */)
bb_03	:  PC=0x150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:178) mov.b32 %ssa_12_bits, 0F00000005;
bb_03	:  PC=0x158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:181) mov.f32 %ssa_13, 0F3f800000; // vec1 32 ssa_13 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:183) mov.b32 %ssa_13_bits, 0F3f800000;
bb_03	:  PC=0x168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:186) mov.f32 %ssa_14, 0F461c4000; // vec1 32 ssa_14 = load_const (0x461c4000 /* 10000.000000 */)
bb_03	:  PC=0x170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:188) mov.b32 %ssa_14_bits, 0F461c4000;
bb_03	:  PC=0x178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:191) mov.f32 %ssa_15, 0F40000000; // vec1 32 ssa_15 = load_const (0x40000000 /* 2.000000 */)
bb_03	:  PC=0x180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:193) mov.b32 %ssa_15_bits, 0F40000000;
bb_03	:  PC=0x188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:199) mov.f32 %ssa_16_0, 0F00000000;
bb_03	:  PC=0x190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:200) mov.f32 %ssa_16_1, 0F00000000;
bb_03	:  PC=0x198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:201) mov.f32 %ssa_16_2, 0F00000000;
bb_03	:  PC=0x1a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:202) mov.f32 %ssa_16_3, 0F00000000;
bb_03	:  PC=0x1a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:206) load_vulkan_descriptor %ssa_17, 0, 3, 6; // vec2 32 ssa_17 = intrinsic vulkan_resource_index (%ssa_2) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
bb_03	:  PC=0x1b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:209) mov.b64 %ssa_18, %ssa_17; // vec2 32 ssa_18 = intrinsic load_vulkan_descriptor (%ssa_17) (6) /* desc_type=UBO */
bb_03	:  PC=0x1b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:212) mov.b64 %ssa_19, %ssa_18; // vec2 32 ssa_19 = deref_cast (UniformBufferObjectStruct *)ssa_18 (ubo UniformBufferObjectStruct)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_03	:  PC=0x1c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:215) add.u64 %ssa_20, %ssa_19, 0; // vec2 32 ssa_20 = deref_struct &ssa_19->Camera (ubo UniformBufferObject) /* &((UniformBufferObjectStruct *)ssa_18)->Camera */
bb_03	:  PC=0x1c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:218) add.u64 %ssa_21, %ssa_20, 300; // vec2 32 ssa_21 = deref_struct &ssa_20->RandomSeed (ubo uint) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.RandomSeed */
bb_03	:  PC=0x1d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:221) ld.global.u32 %ssa_22, [%ssa_21]; // vec1 32 ssa_22 = intrinsic load_deref (%ssa_21) (16) /* access=16 */
bb_03	:  PC=0x1d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:227) load_ray_launch_id %ssa_23_0, %ssa_23_1, %ssa_23_2; // vec3 32 ssa_23 = intrinsic load_ray_launch_id () ()
bb_03	:  PC=0x1e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:230) mov.f32 %ssa_24, 0F7e95761e; // vec1 32 ssa_24 = load_const (0x7e95761e /* 99334135436773842136473284483078946816.000000 */)
bb_03	:  PC=0x1e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:232) mov.b32 %ssa_24_bits, 0F7e95761e;
bb_03	:  PC=0x1f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:235) mov.f32 %ssa_25, 0Fad90777d; // vec1 32 ssa_25 = load_const (0xad90777d /* -0.000000 */)
bb_03	:  PC=0x1f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:237) mov.b32 %ssa_25_bits, 0Fad90777d;
bb_03	:  PC=0x200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:240) mov.f32 %ssa_26, 0F00000004; // vec1 32 ssa_26 = load_const (0x00000004 /* 0.000000 */)
bb_03	:  PC=0x208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:242) mov.b32 %ssa_26_bits, 0F00000004;
bb_03	:  PC=0x210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:245) mov.f32 %ssa_27, 0Fc8013ea4; // vec1 32 ssa_27 = load_const (0xc8013ea4 /* -132346.562500 */)
bb_03	:  PC=0x218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:247) mov.b32 %ssa_27_bits, 0Fc8013ea4;
bb_03	:  PC=0x220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:250) mov.f32 %ssa_28, 0Fa341316c; // vec1 32 ssa_28 = load_const (0xa341316c /* -0.000000 */)
bb_03	:  PC=0x228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:252) mov.b32 %ssa_28_bits, 0Fa341316c;
bb_03	:  PC=0x230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:255) mov.f32 %ssa_29, 0F9e3779b9; // vec1 32 ssa_29 = load_const (0x9e3779b9 /* -0.000000 */)
bb_03	:  PC=0x238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:257) mov.b32 %ssa_29_bits, 0F9e3779b9;
bb_03	:  PC=0x240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:260) shl.b32 %ssa_30, %ssa_23_1, %ssa_26_bits; // vec1 32 ssa_30 = ishl ssa_23.y, ssa_26
bb_03	:  PC=0x248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:263) add.s32 %ssa_31, %ssa_30, %ssa_28_bits; // vec1 32 ssa_31 = iadd ssa_30, ssa_28
bb_03	:  PC=0x250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:266) add.s32 %ssa_32, %ssa_23_1, %ssa_29_bits; // vec1 32 ssa_32 = iadd ssa_23.y, ssa_29
bb_03	:  PC=0x258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:269) xor.b32 %ssa_33, %ssa_31, %ssa_32;// vec1 32 ssa_33 = ixor ssa_31, ssa_32
bb_03	:  PC=0x260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:272) shr.u32 %ssa_34, %ssa_23_1, %ssa_12_bits; // vec1 32 ssa_34 = ushr ssa_23.y, ssa_12
bb_03	:  PC=0x268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:275) add.s32 %ssa_35, %ssa_34, %ssa_27_bits; // vec1 32 ssa_35 = iadd ssa_34, ssa_27
bb_03	:  PC=0x270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:278) xor.b32 %ssa_36, %ssa_33, %ssa_35;// vec1 32 ssa_36 = ixor ssa_33, ssa_35
bb_03	:  PC=0x278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:281) add.s32 %ssa_37, %ssa_23_0, %ssa_36; // vec1 32 ssa_37 = iadd ssa_23.x, ssa_36
bb_03	:  PC=0x280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:284) shl.b32 %ssa_38, %ssa_37, %ssa_26_bits; // vec1 32 ssa_38 = ishl ssa_37, ssa_26
bb_03	:  PC=0x288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:287) add.s32 %ssa_39, %ssa_38, %ssa_25_bits; // vec1 32 ssa_39 = iadd ssa_38, ssa_25
bb_03	:  PC=0x290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:290) add.s32 %ssa_40, %ssa_37, %ssa_29_bits; // vec1 32 ssa_40 = iadd ssa_37, ssa_29
bb_03	:  PC=0x298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:293) xor.b32 %ssa_41, %ssa_39, %ssa_40;// vec1 32 ssa_41 = ixor ssa_39, ssa_40
bb_03	:  PC=0x2a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:296) shr.u32 %ssa_42, %ssa_37, %ssa_12_bits; // vec1 32 ssa_42 = ushr ssa_37, ssa_12
bb_03	:  PC=0x2a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:299) add.s32 %ssa_43, %ssa_42, %ssa_24_bits; // vec1 32 ssa_43 = iadd ssa_42, ssa_24
bb_03	:  PC=0x2b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:302) xor.b32 %ssa_44, %ssa_41, %ssa_43;// vec1 32 ssa_44 = ixor ssa_41, ssa_43
bb_03	:  PC=0x2b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:305) add.s32 %ssa_45, %ssa_23_1, %ssa_44; // vec1 32 ssa_45 = iadd ssa_23.y, ssa_44
bb_03	:  PC=0x2c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:308) mov.f32 %ssa_46, 0F3c6ef372; // vec1 32 ssa_46 = load_const (0x3c6ef372 /* 0.014584 */)
bb_03	:  PC=0x2c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:310) mov.b32 %ssa_46_bits, 0F3c6ef372;
bb_03	:  PC=0x2d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:313) shl.b32 %ssa_47, %ssa_45, %ssa_26_bits; // vec1 32 ssa_47 = ishl ssa_45, ssa_26
bb_03	:  PC=0x2d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:316) add.s32 %ssa_48, %ssa_47, %ssa_28_bits; // vec1 32 ssa_48 = iadd ssa_47, ssa_28
bb_03	:  PC=0x2e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:319) add.s32 %ssa_49, %ssa_45, %ssa_46_bits; // vec1 32 ssa_49 = iadd ssa_45, ssa_46
bb_03	:  PC=0x2e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:322) xor.b32 %ssa_50, %ssa_48, %ssa_49;// vec1 32 ssa_50 = ixor ssa_48, ssa_49
bb_03	:  PC=0x2f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:325) shr.u32 %ssa_51, %ssa_45, %ssa_12_bits; // vec1 32 ssa_51 = ushr ssa_45, ssa_12
bb_03	:  PC=0x2f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:328) add.s32 %ssa_52, %ssa_51, %ssa_27_bits; // vec1 32 ssa_52 = iadd ssa_51, ssa_27
bb_03	:  PC=0x300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:331) xor.b32 %ssa_53, %ssa_50, %ssa_52;// vec1 32 ssa_53 = ixor ssa_50, ssa_52
bb_03	:  PC=0x308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:334) add.s32 %ssa_54, %ssa_37, %ssa_53;// vec1 32 ssa_54 = iadd ssa_37, ssa_53
bb_03	:  PC=0x310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:337) shl.b32 %ssa_55, %ssa_54, %ssa_26_bits; // vec1 32 ssa_55 = ishl ssa_54, ssa_26
bb_03	:  PC=0x318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:340) add.s32 %ssa_56, %ssa_55, %ssa_25_bits; // vec1 32 ssa_56 = iadd ssa_55, ssa_25
bb_03	:  PC=0x320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:343) add.s32 %ssa_57, %ssa_54, %ssa_46_bits; // vec1 32 ssa_57 = iadd ssa_54, ssa_46
bb_03	:  PC=0x328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:346) xor.b32 %ssa_58, %ssa_56, %ssa_57;// vec1 32 ssa_58 = ixor ssa_56, ssa_57
bb_03	:  PC=0x330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:349) shr.u32 %ssa_59, %ssa_54, %ssa_12_bits; // vec1 32 ssa_59 = ushr ssa_54, ssa_12
bb_03	:  PC=0x338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:352) add.s32 %ssa_60, %ssa_59, %ssa_24_bits; // vec1 32 ssa_60 = iadd ssa_59, ssa_24
bb_03	:  PC=0x340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:355) xor.b32 %ssa_61, %ssa_58, %ssa_60;// vec1 32 ssa_61 = ixor ssa_58, ssa_60
bb_03	:  PC=0x348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:358) add.s32 %ssa_62, %ssa_45, %ssa_61;// vec1 32 ssa_62 = iadd ssa_45, ssa_61
bb_03	:  PC=0x350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:361) mov.f32 %ssa_63, 0Fdaa66d2b; // vec1 32 ssa_63 = load_const (0xdaa66d2b /* -23422438792495104.000000 */)
bb_03	:  PC=0x358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:363) mov.b32 %ssa_63_bits, 0Fdaa66d2b;
bb_03	:  PC=0x360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:366) shl.b32 %ssa_64, %ssa_62, %ssa_26_bits; // vec1 32 ssa_64 = ishl ssa_62, ssa_26
bb_03	:  PC=0x368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:369) add.s32 %ssa_65, %ssa_64, %ssa_28_bits; // vec1 32 ssa_65 = iadd ssa_64, ssa_28
bb_03	:  PC=0x370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:372) add.s32 %ssa_66, %ssa_62, %ssa_63_bits; // vec1 32 ssa_66 = iadd ssa_62, ssa_63
bb_03	:  PC=0x378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:375) xor.b32 %ssa_67, %ssa_65, %ssa_66;// vec1 32 ssa_67 = ixor ssa_65, ssa_66
bb_03	:  PC=0x380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:378) shr.u32 %ssa_68, %ssa_62, %ssa_12_bits; // vec1 32 ssa_68 = ushr ssa_62, ssa_12
bb_03	:  PC=0x388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:381) add.s32 %ssa_69, %ssa_68, %ssa_27_bits; // vec1 32 ssa_69 = iadd ssa_68, ssa_27
bb_03	:  PC=0x390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:384) xor.b32 %ssa_70, %ssa_67, %ssa_69;// vec1 32 ssa_70 = ixor ssa_67, ssa_69
bb_03	:  PC=0x398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:387) add.s32 %ssa_71, %ssa_54, %ssa_70;// vec1 32 ssa_71 = iadd ssa_54, ssa_70
bb_03	:  PC=0x3a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:390) shl.b32 %ssa_72, %ssa_71, %ssa_26_bits; // vec1 32 ssa_72 = ishl ssa_71, ssa_26
bb_03	:  PC=0x3a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:393) add.s32 %ssa_73, %ssa_72, %ssa_25_bits; // vec1 32 ssa_73 = iadd ssa_72, ssa_25
bb_03	:  PC=0x3b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:396) add.s32 %ssa_74, %ssa_71, %ssa_63_bits; // vec1 32 ssa_74 = iadd ssa_71, ssa_63
bb_03	:  PC=0x3b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:399) xor.b32 %ssa_75, %ssa_73, %ssa_74;// vec1 32 ssa_75 = ixor ssa_73, ssa_74
bb_03	:  PC=0x3c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:402) shr.u32 %ssa_76, %ssa_71, %ssa_12_bits; // vec1 32 ssa_76 = ushr ssa_71, ssa_12
bb_03	:  PC=0x3c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:405) add.s32 %ssa_77, %ssa_76, %ssa_24_bits; // vec1 32 ssa_77 = iadd ssa_76, ssa_24
bb_03	:  PC=0x3d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:408) xor.b32 %ssa_78, %ssa_75, %ssa_77;// vec1 32 ssa_78 = ixor ssa_75, ssa_77
bb_03	:  PC=0x3d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:411) add.s32 %ssa_79, %ssa_62, %ssa_78;// vec1 32 ssa_79 = iadd ssa_62, ssa_78
bb_03	:  PC=0x3e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:414) mov.f32 %ssa_80, 0F78dde6e4; // vec1 32 ssa_80 = load_const (0x78dde6e4 /* 36005644498940313824116215142940672.000000 */)
bb_03	:  PC=0x3e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:416) mov.b32 %ssa_80_bits, 0F78dde6e4;
bb_03	:  PC=0x3f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:419) shl.b32 %ssa_81, %ssa_79, %ssa_26_bits; // vec1 32 ssa_81 = ishl ssa_79, ssa_26
bb_03	:  PC=0x3f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:422) add.s32 %ssa_82, %ssa_81, %ssa_28_bits; // vec1 32 ssa_82 = iadd ssa_81, ssa_28
bb_03	:  PC=0x400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:425) add.s32 %ssa_83, %ssa_79, %ssa_80_bits; // vec1 32 ssa_83 = iadd ssa_79, ssa_80
bb_03	:  PC=0x408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:428) xor.b32 %ssa_84, %ssa_82, %ssa_83;// vec1 32 ssa_84 = ixor ssa_82, ssa_83
bb_03	:  PC=0x410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:431) shr.u32 %ssa_85, %ssa_79, %ssa_12_bits; // vec1 32 ssa_85 = ushr ssa_79, ssa_12
bb_03	:  PC=0x418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:434) add.s32 %ssa_86, %ssa_85, %ssa_27_bits; // vec1 32 ssa_86 = iadd ssa_85, ssa_27
bb_03	:  PC=0x420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:437) xor.b32 %ssa_87, %ssa_84, %ssa_86;// vec1 32 ssa_87 = ixor ssa_84, ssa_86
bb_03	:  PC=0x428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:440) add.s32 %ssa_88, %ssa_71, %ssa_87;// vec1 32 ssa_88 = iadd ssa_71, ssa_87
bb_03	:  PC=0x430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:443) shl.b32 %ssa_89, %ssa_88, %ssa_26_bits; // vec1 32 ssa_89 = ishl ssa_88, ssa_26
bb_03	:  PC=0x438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:446) add.s32 %ssa_90, %ssa_89, %ssa_25_bits; // vec1 32 ssa_90 = iadd ssa_89, ssa_25
bb_03	:  PC=0x440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:449) add.s32 %ssa_91, %ssa_88, %ssa_80_bits; // vec1 32 ssa_91 = iadd ssa_88, ssa_80
bb_03	:  PC=0x448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:452) xor.b32 %ssa_92, %ssa_90, %ssa_91;// vec1 32 ssa_92 = ixor ssa_90, ssa_91
bb_03	:  PC=0x450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:455) shr.u32 %ssa_93, %ssa_88, %ssa_12_bits; // vec1 32 ssa_93 = ushr ssa_88, ssa_12
bb_03	:  PC=0x458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:458) add.s32 %ssa_94, %ssa_93, %ssa_24_bits; // vec1 32 ssa_94 = iadd ssa_93, ssa_24
bb_03	:  PC=0x460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:461) xor.b32 %ssa_95, %ssa_92, %ssa_94;// vec1 32 ssa_95 = ixor ssa_92, ssa_94
bb_03	:  PC=0x468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:464) add.s32 %ssa_96, %ssa_79, %ssa_95;// vec1 32 ssa_96 = iadd ssa_79, ssa_95
bb_03	:  PC=0x470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:467) mov.f32 %ssa_97, 0F1715609d; // vec1 32 ssa_97 = load_const (0x1715609d /* 0.000000 */)
bb_03	:  PC=0x478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:469) mov.b32 %ssa_97_bits, 0F1715609d;
bb_03	:  PC=0x480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:472) shl.b32 %ssa_98, %ssa_96, %ssa_26_bits; // vec1 32 ssa_98 = ishl ssa_96, ssa_26
bb_03	:  PC=0x488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:475) add.s32 %ssa_99, %ssa_98, %ssa_28_bits; // vec1 32 ssa_99 = iadd ssa_98, ssa_28
bb_03	:  PC=0x490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:478) add.s32 %ssa_100, %ssa_96, %ssa_97_bits; // vec1 32 ssa_100 = iadd ssa_96, ssa_97
bb_03	:  PC=0x498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:481) xor.b32 %ssa_101, %ssa_99, %ssa_100;// vec1 32 ssa_101 = ixor ssa_99, ssa_100
bb_03	:  PC=0x4a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:484) shr.u32 %ssa_102, %ssa_96, %ssa_12_bits; // vec1 32 ssa_102 = ushr ssa_96, ssa_12
bb_03	:  PC=0x4a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:487) add.s32 %ssa_103, %ssa_102, %ssa_27_bits; // vec1 32 ssa_103 = iadd ssa_102, ssa_27
bb_03	:  PC=0x4b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:490) xor.b32 %ssa_104, %ssa_101, %ssa_103;// vec1 32 ssa_104 = ixor ssa_101, ssa_103
bb_03	:  PC=0x4b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:493) add.s32 %ssa_105, %ssa_88, %ssa_104;// vec1 32 ssa_105 = iadd ssa_88, ssa_104
bb_03	:  PC=0x4c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:496) shl.b32 %ssa_106, %ssa_105, %ssa_26_bits; // vec1 32 ssa_106 = ishl ssa_105, ssa_26
bb_03	:  PC=0x4c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:499) add.s32 %ssa_107, %ssa_106, %ssa_25_bits; // vec1 32 ssa_107 = iadd ssa_106, ssa_25
bb_03	:  PC=0x4d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:502) add.s32 %ssa_108, %ssa_105, %ssa_97_bits; // vec1 32 ssa_108 = iadd ssa_105, ssa_97
bb_03	:  PC=0x4d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:505) xor.b32 %ssa_109, %ssa_107, %ssa_108;// vec1 32 ssa_109 = ixor ssa_107, ssa_108
bb_03	:  PC=0x4e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:508) shr.u32 %ssa_110, %ssa_105, %ssa_12_bits; // vec1 32 ssa_110 = ushr ssa_105, ssa_12
bb_03	:  PC=0x4e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:511) add.s32 %ssa_111, %ssa_110, %ssa_24_bits; // vec1 32 ssa_111 = iadd ssa_110, ssa_24
bb_03	:  PC=0x4f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:514) xor.b32 %ssa_112, %ssa_109, %ssa_111;// vec1 32 ssa_112 = ixor ssa_109, ssa_111
bb_03	:  PC=0x4f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:517) add.s32 %ssa_113, %ssa_96, %ssa_112;// vec1 32 ssa_113 = iadd ssa_96, ssa_112
bb_03	:  PC=0x500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:520) mov.f32 %ssa_114, 0Fb54cda56; // vec1 32 ssa_114 = load_const (0xb54cda56 /* -0.000001 */)
bb_03	:  PC=0x508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:522) mov.b32 %ssa_114_bits, 0Fb54cda56;
bb_03	:  PC=0x510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:525) shl.b32 %ssa_115, %ssa_113, %ssa_26_bits; // vec1 32 ssa_115 = ishl ssa_113, ssa_26
bb_03	:  PC=0x518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:528) add.s32 %ssa_116, %ssa_115, %ssa_28_bits; // vec1 32 ssa_116 = iadd ssa_115, ssa_28
bb_03	:  PC=0x520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:531) add.s32 %ssa_117, %ssa_113, %ssa_114_bits; // vec1 32 ssa_117 = iadd ssa_113, ssa_114
bb_03	:  PC=0x528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:534) xor.b32 %ssa_118, %ssa_116, %ssa_117;// vec1 32 ssa_118 = ixor ssa_116, ssa_117
bb_03	:  PC=0x530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:537) shr.u32 %ssa_119, %ssa_113, %ssa_12_bits; // vec1 32 ssa_119 = ushr ssa_113, ssa_12
bb_03	:  PC=0x538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:540) add.s32 %ssa_120, %ssa_119, %ssa_27_bits; // vec1 32 ssa_120 = iadd ssa_119, ssa_27
bb_03	:  PC=0x540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:543) xor.b32 %ssa_121, %ssa_118, %ssa_120;// vec1 32 ssa_121 = ixor ssa_118, ssa_120
bb_03	:  PC=0x548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:546) add.s32 %ssa_122, %ssa_105, %ssa_121;// vec1 32 ssa_122 = iadd ssa_105, ssa_121
bb_03	:  PC=0x550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:549) shl.b32 %ssa_123, %ssa_122, %ssa_26_bits; // vec1 32 ssa_123 = ishl ssa_122, ssa_26
bb_03	:  PC=0x558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:552) add.s32 %ssa_124, %ssa_123, %ssa_25_bits; // vec1 32 ssa_124 = iadd ssa_123, ssa_25
bb_03	:  PC=0x560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:555) add.s32 %ssa_125, %ssa_122, %ssa_114_bits; // vec1 32 ssa_125 = iadd ssa_122, ssa_114
bb_03	:  PC=0x568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:558) xor.b32 %ssa_126, %ssa_124, %ssa_125;// vec1 32 ssa_126 = ixor ssa_124, ssa_125
bb_03	:  PC=0x570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:561) shr.u32 %ssa_127, %ssa_122, %ssa_12_bits; // vec1 32 ssa_127 = ushr ssa_122, ssa_12
bb_03	:  PC=0x578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:564) add.s32 %ssa_128, %ssa_127, %ssa_24_bits; // vec1 32 ssa_128 = iadd ssa_127, ssa_24
bb_03	:  PC=0x580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:567) xor.b32 %ssa_129, %ssa_126, %ssa_128;// vec1 32 ssa_129 = ixor ssa_126, ssa_128
bb_03	:  PC=0x588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:570) add.s32 %ssa_130, %ssa_113, %ssa_129;// vec1 32 ssa_130 = iadd ssa_113, ssa_129
bb_03	:  PC=0x590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:573) mov.f32 %ssa_131, 0F5384540f; // vec1 32 ssa_131 = load_const (0x5384540f /* 1136691904512.000000 */)
bb_03	:  PC=0x598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:575) mov.b32 %ssa_131_bits, 0F5384540f;
bb_03	:  PC=0x5a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:578) shl.b32 %ssa_132, %ssa_130, %ssa_26_bits; // vec1 32 ssa_132 = ishl ssa_130, ssa_26
bb_03	:  PC=0x5a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:581) add.s32 %ssa_133, %ssa_132, %ssa_28_bits; // vec1 32 ssa_133 = iadd ssa_132, ssa_28
bb_03	:  PC=0x5b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:584) add.s32 %ssa_134, %ssa_130, %ssa_131_bits; // vec1 32 ssa_134 = iadd ssa_130, ssa_131
bb_03	:  PC=0x5b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:587) xor.b32 %ssa_135, %ssa_133, %ssa_134;// vec1 32 ssa_135 = ixor ssa_133, ssa_134
bb_03	:  PC=0x5c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:590) shr.u32 %ssa_136, %ssa_130, %ssa_12_bits; // vec1 32 ssa_136 = ushr ssa_130, ssa_12
bb_03	:  PC=0x5c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:593) add.s32 %ssa_137, %ssa_136, %ssa_27_bits; // vec1 32 ssa_137 = iadd ssa_136, ssa_27
bb_03	:  PC=0x5d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:596) xor.b32 %ssa_138, %ssa_135, %ssa_137;// vec1 32 ssa_138 = ixor ssa_135, ssa_137
bb_03	:  PC=0x5d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:599) add.s32 %ssa_139, %ssa_122, %ssa_138;// vec1 32 ssa_139 = iadd ssa_122, ssa_138
bb_03	:  PC=0x5e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:602) shl.b32 %ssa_140, %ssa_139, %ssa_26_bits; // vec1 32 ssa_140 = ishl ssa_139, ssa_26
bb_03	:  PC=0x5e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:605) add.s32 %ssa_141, %ssa_140, %ssa_25_bits; // vec1 32 ssa_141 = iadd ssa_140, ssa_25
bb_03	:  PC=0x5f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:608) add.s32 %ssa_142, %ssa_139, %ssa_131_bits; // vec1 32 ssa_142 = iadd ssa_139, ssa_131
bb_03	:  PC=0x5f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:611) xor.b32 %ssa_143, %ssa_141, %ssa_142;// vec1 32 ssa_143 = ixor ssa_141, ssa_142
bb_03	:  PC=0x600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:614) shr.u32 %ssa_144, %ssa_139, %ssa_12_bits; // vec1 32 ssa_144 = ushr ssa_139, ssa_12
bb_03	:  PC=0x608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:617) add.s32 %ssa_145, %ssa_144, %ssa_24_bits; // vec1 32 ssa_145 = iadd ssa_144, ssa_24
bb_03	:  PC=0x610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:620) xor.b32 %ssa_146, %ssa_143, %ssa_145;// vec1 32 ssa_146 = ixor ssa_143, ssa_145
bb_03	:  PC=0x618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:623) add.s32 %ssa_147, %ssa_130, %ssa_146;// vec1 32 ssa_147 = iadd ssa_130, ssa_146
bb_03	:  PC=0x620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:626) mov.f32 %ssa_148, 0Ff1bbcdc8; // vec1 32 ssa_148 = load_const (0xf1bbcdc8 /* -1859919075293091224364530008064.000000 */)
bb_03	:  PC=0x628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:628) mov.b32 %ssa_148_bits, 0Ff1bbcdc8;
bb_03	:  PC=0x630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:631) shl.b32 %ssa_149, %ssa_147, %ssa_26_bits; // vec1 32 ssa_149 = ishl ssa_147, ssa_26
bb_03	:  PC=0x638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:634) add.s32 %ssa_150, %ssa_149, %ssa_28_bits; // vec1 32 ssa_150 = iadd ssa_149, ssa_28
bb_03	:  PC=0x640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:637) add.s32 %ssa_151, %ssa_147, %ssa_148_bits; // vec1 32 ssa_151 = iadd ssa_147, ssa_148
bb_03	:  PC=0x648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:640) xor.b32 %ssa_152, %ssa_150, %ssa_151;// vec1 32 ssa_152 = ixor ssa_150, ssa_151
bb_03	:  PC=0x650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:643) shr.u32 %ssa_153, %ssa_147, %ssa_12_bits; // vec1 32 ssa_153 = ushr ssa_147, ssa_12
bb_03	:  PC=0x658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:646) add.s32 %ssa_154, %ssa_153, %ssa_27_bits; // vec1 32 ssa_154 = iadd ssa_153, ssa_27
bb_03	:  PC=0x660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:649) xor.b32 %ssa_155, %ssa_152, %ssa_154;// vec1 32 ssa_155 = ixor ssa_152, ssa_154
bb_03	:  PC=0x668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:652) add.s32 %ssa_156, %ssa_139, %ssa_155;// vec1 32 ssa_156 = iadd ssa_139, ssa_155
bb_03	:  PC=0x670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:655) shl.b32 %ssa_157, %ssa_156, %ssa_26_bits; // vec1 32 ssa_157 = ishl ssa_156, ssa_26
bb_03	:  PC=0x678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:658) add.s32 %ssa_158, %ssa_157, %ssa_25_bits; // vec1 32 ssa_158 = iadd ssa_157, ssa_25
bb_03	:  PC=0x680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:661) add.s32 %ssa_159, %ssa_156, %ssa_148_bits; // vec1 32 ssa_159 = iadd ssa_156, ssa_148
bb_03	:  PC=0x688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:664) xor.b32 %ssa_160, %ssa_158, %ssa_159;// vec1 32 ssa_160 = ixor ssa_158, ssa_159
bb_03	:  PC=0x690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:667) shr.u32 %ssa_161, %ssa_156, %ssa_12_bits; // vec1 32 ssa_161 = ushr ssa_156, ssa_12
bb_03	:  PC=0x698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:670) add.s32 %ssa_162, %ssa_161, %ssa_24_bits; // vec1 32 ssa_162 = iadd ssa_161, ssa_24
bb_03	:  PC=0x6a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:673) xor.b32 %ssa_163, %ssa_160, %ssa_162;// vec1 32 ssa_163 = ixor ssa_160, ssa_162
bb_03	:  PC=0x6a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:676) add.s32 %ssa_164, %ssa_147, %ssa_163;// vec1 32 ssa_164 = iadd ssa_147, ssa_163
bb_03	:  PC=0x6b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:679) mov.f32 %ssa_165, 0F8ff34781; // vec1 32 ssa_165 = load_const (0x8ff34781 /* -0.000000 */)
bb_03	:  PC=0x6b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:681) mov.b32 %ssa_165_bits, 0F8ff34781;
bb_03	:  PC=0x6c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:684) shl.b32 %ssa_166, %ssa_164, %ssa_26_bits; // vec1 32 ssa_166 = ishl ssa_164, ssa_26
bb_03	:  PC=0x6c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:687) add.s32 %ssa_167, %ssa_166, %ssa_28_bits; // vec1 32 ssa_167 = iadd ssa_166, ssa_28
bb_03	:  PC=0x6d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:690) add.s32 %ssa_168, %ssa_164, %ssa_165_bits; // vec1 32 ssa_168 = iadd ssa_164, ssa_165
bb_03	:  PC=0x6d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:693) xor.b32 %ssa_169, %ssa_167, %ssa_168;// vec1 32 ssa_169 = ixor ssa_167, ssa_168
bb_03	:  PC=0x6e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:696) shr.u32 %ssa_170, %ssa_164, %ssa_12_bits; // vec1 32 ssa_170 = ushr ssa_164, ssa_12
bb_03	:  PC=0x6e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:699) add.s32 %ssa_171, %ssa_170, %ssa_27_bits; // vec1 32 ssa_171 = iadd ssa_170, ssa_27
bb_03	:  PC=0x6f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:702) xor.b32 %ssa_172, %ssa_169, %ssa_171;// vec1 32 ssa_172 = ixor ssa_169, ssa_171
bb_03	:  PC=0x6f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:705) add.s32 %ssa_173, %ssa_156, %ssa_172;// vec1 32 ssa_173 = iadd ssa_156, ssa_172
bb_03	:  PC=0x700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:708) shl.b32 %ssa_174, %ssa_173, %ssa_26_bits; // vec1 32 ssa_174 = ishl ssa_173, ssa_26
bb_03	:  PC=0x708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:711) add.s32 %ssa_175, %ssa_174, %ssa_25_bits; // vec1 32 ssa_175 = iadd ssa_174, ssa_25
bb_03	:  PC=0x710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:714) add.s32 %ssa_176, %ssa_173, %ssa_165_bits; // vec1 32 ssa_176 = iadd ssa_173, ssa_165
bb_03	:  PC=0x718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:717) xor.b32 %ssa_177, %ssa_175, %ssa_176;// vec1 32 ssa_177 = ixor ssa_175, ssa_176
bb_03	:  PC=0x720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:720) shr.u32 %ssa_178, %ssa_173, %ssa_12_bits; // vec1 32 ssa_178 = ushr ssa_173, ssa_12
bb_03	:  PC=0x728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:723) add.s32 %ssa_179, %ssa_178, %ssa_24_bits; // vec1 32 ssa_179 = iadd ssa_178, ssa_24
bb_03	:  PC=0x730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:726) xor.b32 %ssa_180, %ssa_177, %ssa_179;// vec1 32 ssa_180 = ixor ssa_177, ssa_179
bb_03	:  PC=0x738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:729) add.s32 %ssa_181, %ssa_164, %ssa_180;// vec1 32 ssa_181 = iadd ssa_164, ssa_180
bb_03	:  PC=0x740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:732) mov.f32 %ssa_182, 0F2e2ac13a; // vec1 32 ssa_182 = load_const (0x2e2ac13a /* 0.000000 */)
bb_03	:  PC=0x748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:734) mov.b32 %ssa_182_bits, 0F2e2ac13a;
bb_03	:  PC=0x750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:737) shl.b32 %ssa_183, %ssa_181, %ssa_26_bits; // vec1 32 ssa_183 = ishl ssa_181, ssa_26
bb_03	:  PC=0x758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:740) add.s32 %ssa_184, %ssa_183, %ssa_28_bits; // vec1 32 ssa_184 = iadd ssa_183, ssa_28
bb_03	:  PC=0x760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:743) add.s32 %ssa_185, %ssa_181, %ssa_182_bits; // vec1 32 ssa_185 = iadd ssa_181, ssa_182
bb_03	:  PC=0x768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:746) xor.b32 %ssa_186, %ssa_184, %ssa_185;// vec1 32 ssa_186 = ixor ssa_184, ssa_185
bb_03	:  PC=0x770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:749) shr.u32 %ssa_187, %ssa_181, %ssa_12_bits; // vec1 32 ssa_187 = ushr ssa_181, ssa_12
bb_03	:  PC=0x778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:752) add.s32 %ssa_188, %ssa_187, %ssa_27_bits; // vec1 32 ssa_188 = iadd ssa_187, ssa_27
bb_03	:  PC=0x780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:755) xor.b32 %ssa_189, %ssa_186, %ssa_188;// vec1 32 ssa_189 = ixor ssa_186, ssa_188
bb_03	:  PC=0x788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:758) add.s32 %ssa_190, %ssa_173, %ssa_189;// vec1 32 ssa_190 = iadd ssa_173, ssa_189
bb_03	:  PC=0x790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:761) shl.b32 %ssa_191, %ssa_190, %ssa_26_bits; // vec1 32 ssa_191 = ishl ssa_190, ssa_26
bb_03	:  PC=0x798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:764) add.s32 %ssa_192, %ssa_191, %ssa_25_bits; // vec1 32 ssa_192 = iadd ssa_191, ssa_25
bb_03	:  PC=0x7a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:767) add.s32 %ssa_193, %ssa_190, %ssa_182_bits; // vec1 32 ssa_193 = iadd ssa_190, ssa_182
bb_03	:  PC=0x7a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:770) xor.b32 %ssa_194, %ssa_192, %ssa_193;// vec1 32 ssa_194 = ixor ssa_192, ssa_193
bb_03	:  PC=0x7b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:773) shr.u32 %ssa_195, %ssa_190, %ssa_12_bits; // vec1 32 ssa_195 = ushr ssa_190, ssa_12
bb_03	:  PC=0x7b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:776) add.s32 %ssa_196, %ssa_195, %ssa_24_bits; // vec1 32 ssa_196 = iadd ssa_195, ssa_24
bb_03	:  PC=0x7c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:779) xor.b32 %ssa_197, %ssa_194, %ssa_196;// vec1 32 ssa_197 = ixor ssa_194, ssa_196
bb_03	:  PC=0x7c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:782) add.s32 %ssa_198, %ssa_181, %ssa_197;// vec1 32 ssa_198 = iadd ssa_181, ssa_197
bb_03	:  PC=0x7d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:785) mov.f32 %ssa_199, 0Fcc623af3; // vec1 32 ssa_199 = load_const (0xcc623af3 /* -59304908.000000 */)
bb_03	:  PC=0x7d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:787) mov.b32 %ssa_199_bits, 0Fcc623af3;
bb_03	:  PC=0x7e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:790) shl.b32 %ssa_200, %ssa_198, %ssa_26_bits; // vec1 32 ssa_200 = ishl ssa_198, ssa_26
bb_03	:  PC=0x7e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:793) add.s32 %ssa_201, %ssa_200, %ssa_28_bits; // vec1 32 ssa_201 = iadd ssa_200, ssa_28
bb_03	:  PC=0x7f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:796) add.s32 %ssa_202, %ssa_198, %ssa_199_bits; // vec1 32 ssa_202 = iadd ssa_198, ssa_199
bb_03	:  PC=0x7f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:799) xor.b32 %ssa_203, %ssa_201, %ssa_202;// vec1 32 ssa_203 = ixor ssa_201, ssa_202
bb_03	:  PC=0x800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:802) shr.u32 %ssa_204, %ssa_198, %ssa_12_bits; // vec1 32 ssa_204 = ushr ssa_198, ssa_12
bb_03	:  PC=0x808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:805) add.s32 %ssa_205, %ssa_204, %ssa_27_bits; // vec1 32 ssa_205 = iadd ssa_204, ssa_27
bb_03	:  PC=0x810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:808) xor.b32 %ssa_206, %ssa_203, %ssa_205;// vec1 32 ssa_206 = ixor ssa_203, ssa_205
bb_03	:  PC=0x818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:811) add.s32 %ssa_207, %ssa_190, %ssa_206;// vec1 32 ssa_207 = iadd ssa_190, ssa_206
bb_03	:  PC=0x820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:814) shl.b32 %ssa_208, %ssa_207, %ssa_26_bits; // vec1 32 ssa_208 = ishl ssa_207, ssa_26
bb_03	:  PC=0x828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:817) add.s32 %ssa_209, %ssa_208, %ssa_25_bits; // vec1 32 ssa_209 = iadd ssa_208, ssa_25
bb_03	:  PC=0x830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:820) add.s32 %ssa_210, %ssa_207, %ssa_199_bits; // vec1 32 ssa_210 = iadd ssa_207, ssa_199
bb_03	:  PC=0x838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:823) xor.b32 %ssa_211, %ssa_209, %ssa_210;// vec1 32 ssa_211 = ixor ssa_209, ssa_210
bb_03	:  PC=0x840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:826) shr.u32 %ssa_212, %ssa_207, %ssa_12_bits; // vec1 32 ssa_212 = ushr ssa_207, ssa_12
bb_03	:  PC=0x848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:829) add.s32 %ssa_213, %ssa_212, %ssa_24_bits; // vec1 32 ssa_213 = iadd ssa_212, ssa_24
bb_03	:  PC=0x850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:832) xor.b32 %ssa_214, %ssa_211, %ssa_213;// vec1 32 ssa_214 = ixor ssa_211, ssa_213
bb_03	:  PC=0x858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:835) add.s32 %ssa_215, %ssa_198, %ssa_214;// vec1 32 ssa_215 = iadd ssa_198, ssa_214
bb_03	:  PC=0x860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:838) mov.f32 %ssa_216, 0F6a99b4ac; // vec1 32 ssa_216 = load_const (0x6a99b4ac /* 92909424603967738955694080.000000 */)
bb_03	:  PC=0x868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:840) mov.b32 %ssa_216_bits, 0F6a99b4ac;
bb_03	:  PC=0x870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:843) shl.b32 %ssa_217, %ssa_215, %ssa_26_bits; // vec1 32 ssa_217 = ishl ssa_215, ssa_26
bb_03	:  PC=0x878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:846) add.s32 %ssa_218, %ssa_217, %ssa_28_bits; // vec1 32 ssa_218 = iadd ssa_217, ssa_28
bb_03	:  PC=0x880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:849) add.s32 %ssa_219, %ssa_215, %ssa_216_bits; // vec1 32 ssa_219 = iadd ssa_215, ssa_216
bb_03	:  PC=0x888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:852) xor.b32 %ssa_220, %ssa_218, %ssa_219;// vec1 32 ssa_220 = ixor ssa_218, ssa_219
bb_03	:  PC=0x890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:855) shr.u32 %ssa_221, %ssa_215, %ssa_12_bits; // vec1 32 ssa_221 = ushr ssa_215, ssa_12
bb_03	:  PC=0x898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:858) add.s32 %ssa_222, %ssa_221, %ssa_27_bits; // vec1 32 ssa_222 = iadd ssa_221, ssa_27
bb_03	:  PC=0x8a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:861) xor.b32 %ssa_223, %ssa_220, %ssa_222;// vec1 32 ssa_223 = ixor ssa_220, ssa_222
bb_03	:  PC=0x8a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:864) add.s32 %ssa_224, %ssa_207, %ssa_223;// vec1 32 ssa_224 = iadd ssa_207, ssa_223
bb_03	:  PC=0x8b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:867) shl.b32 %ssa_225, %ssa_224, %ssa_26_bits; // vec1 32 ssa_225 = ishl ssa_224, ssa_26
bb_03	:  PC=0x8b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:870) add.s32 %ssa_226, %ssa_225, %ssa_25_bits; // vec1 32 ssa_226 = iadd ssa_225, ssa_25
bb_03	:  PC=0x8c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:873) add.s32 %ssa_227, %ssa_224, %ssa_216_bits; // vec1 32 ssa_227 = iadd ssa_224, ssa_216
bb_03	:  PC=0x8c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:876) xor.b32 %ssa_228, %ssa_226, %ssa_227;// vec1 32 ssa_228 = ixor ssa_226, ssa_227
bb_03	:  PC=0x8d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:879) shr.u32 %ssa_229, %ssa_224, %ssa_12_bits; // vec1 32 ssa_229 = ushr ssa_224, ssa_12
bb_03	:  PC=0x8d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:882) add.s32 %ssa_230, %ssa_229, %ssa_24_bits; // vec1 32 ssa_230 = iadd ssa_229, ssa_24
bb_03	:  PC=0x8e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:885) xor.b32 %ssa_231, %ssa_228, %ssa_230;// vec1 32 ssa_231 = ixor ssa_228, ssa_230
bb_03	:  PC=0x8e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:888) add.s32 %ssa_232, %ssa_215, %ssa_231;// vec1 32 ssa_232 = iadd ssa_215, ssa_231
bb_03	:  PC=0x8f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:891) mov.f32 %ssa_233, 0F08d12e65; // vec1 32 ssa_233 = load_const (0x08d12e65 /* 0.000000 */)
bb_03	:  PC=0x8f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:893) mov.b32 %ssa_233_bits, 0F08d12e65;
bb_03	:  PC=0x900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:896) shl.b32 %ssa_234, %ssa_232, %ssa_26_bits; // vec1 32 ssa_234 = ishl ssa_232, ssa_26
bb_03	:  PC=0x908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:899) add.s32 %ssa_235, %ssa_234, %ssa_28_bits; // vec1 32 ssa_235 = iadd ssa_234, ssa_28
bb_03	:  PC=0x910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:902) add.s32 %ssa_236, %ssa_232, %ssa_233_bits; // vec1 32 ssa_236 = iadd ssa_232, ssa_233
bb_03	:  PC=0x918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:905) xor.b32 %ssa_237, %ssa_235, %ssa_236;// vec1 32 ssa_237 = ixor ssa_235, ssa_236
bb_03	:  PC=0x920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:908) shr.u32 %ssa_238, %ssa_232, %ssa_12_bits; // vec1 32 ssa_238 = ushr ssa_232, ssa_12
bb_03	:  PC=0x928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:911) add.s32 %ssa_239, %ssa_238, %ssa_27_bits; // vec1 32 ssa_239 = iadd ssa_238, ssa_27
bb_03	:  PC=0x930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:914) xor.b32 %ssa_240, %ssa_237, %ssa_239;// vec1 32 ssa_240 = ixor ssa_237, ssa_239
bb_03	:  PC=0x938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:917) add.s32 %ssa_241, %ssa_224, %ssa_240;// vec1 32 ssa_241 = iadd ssa_224, ssa_240
bb_03	:  PC=0x940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:920) shl.b32 %ssa_242, %ssa_241, %ssa_26_bits; // vec1 32 ssa_242 = ishl ssa_241, ssa_26
bb_03	:  PC=0x948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:923) add.s32 %ssa_243, %ssa_242, %ssa_25_bits; // vec1 32 ssa_243 = iadd ssa_242, ssa_25
bb_03	:  PC=0x950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:926) add.s32 %ssa_244, %ssa_241, %ssa_233_bits; // vec1 32 ssa_244 = iadd ssa_241, ssa_233
bb_03	:  PC=0x958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:929) xor.b32 %ssa_245, %ssa_243, %ssa_244;// vec1 32 ssa_245 = ixor ssa_243, ssa_244
bb_03	:  PC=0x960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:932) shr.u32 %ssa_246, %ssa_241, %ssa_12_bits; // vec1 32 ssa_246 = ushr ssa_241, ssa_12
bb_03	:  PC=0x968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:935) add.s32 %ssa_247, %ssa_246, %ssa_24_bits; // vec1 32 ssa_247 = iadd ssa_246, ssa_24
bb_03	:  PC=0x970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:938) xor.b32 %ssa_248, %ssa_245, %ssa_247;// vec1 32 ssa_248 = ixor ssa_245, ssa_247
bb_03	:  PC=0x978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:941) add.s32 %ssa_249, %ssa_232, %ssa_248;// vec1 32 ssa_249 = iadd ssa_232, ssa_248
bb_03	:  PC=0x980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:944) mov.f32 %ssa_250, 0Fa708a81e; // vec1 32 ssa_250 = load_const (0xa708a81e /* -0.000000 */)
bb_03	:  PC=0x988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:946) mov.b32 %ssa_250_bits, 0Fa708a81e;
bb_03	:  PC=0x990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:949) shl.b32 %ssa_251, %ssa_249, %ssa_26_bits; // vec1 32 ssa_251 = ishl ssa_249, ssa_26
bb_03	:  PC=0x998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:952) add.s32 %ssa_252, %ssa_251, %ssa_28_bits; // vec1 32 ssa_252 = iadd ssa_251, ssa_28
bb_03	:  PC=0x9a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:955) add.s32 %ssa_253, %ssa_249, %ssa_250_bits; // vec1 32 ssa_253 = iadd ssa_249, ssa_250
bb_03	:  PC=0x9a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:958) xor.b32 %ssa_254, %ssa_252, %ssa_253;// vec1 32 ssa_254 = ixor ssa_252, ssa_253
bb_03	:  PC=0x9b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:961) shr.u32 %ssa_255, %ssa_249, %ssa_12_bits; // vec1 32 ssa_255 = ushr ssa_249, ssa_12
bb_03	:  PC=0x9b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:964) add.s32 %ssa_256, %ssa_255, %ssa_27_bits; // vec1 32 ssa_256 = iadd ssa_255, ssa_27
bb_03	:  PC=0x9c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:967) xor.b32 %ssa_257, %ssa_254, %ssa_256;// vec1 32 ssa_257 = ixor ssa_254, ssa_256
bb_03	:  PC=0x9c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:970) add.s32 %ssa_258, %ssa_241, %ssa_257;// vec1 32 ssa_258 = iadd ssa_241, ssa_257
bb_03	:  PC=0x9d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:973) shl.b32 %ssa_259, %ssa_258, %ssa_26_bits; // vec1 32 ssa_259 = ishl ssa_258, ssa_26
bb_03	:  PC=0x9d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:976) add.s32 %ssa_260, %ssa_259, %ssa_25_bits; // vec1 32 ssa_260 = iadd ssa_259, ssa_25
bb_03	:  PC=0x9e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:979) add.s32 %ssa_261, %ssa_258, %ssa_250_bits; // vec1 32 ssa_261 = iadd ssa_258, ssa_250
bb_03	:  PC=0x9e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:982) xor.b32 %ssa_262, %ssa_260, %ssa_261;// vec1 32 ssa_262 = ixor ssa_260, ssa_261
bb_03	:  PC=0x9f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:985) shr.u32 %ssa_263, %ssa_258, %ssa_12_bits; // vec1 32 ssa_263 = ushr ssa_258, ssa_12
bb_03	:  PC=0x9f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:988) add.s32 %ssa_264, %ssa_263, %ssa_24_bits; // vec1 32 ssa_264 = iadd ssa_263, ssa_24
bb_03	:  PC=0xa00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:991) xor.b32 %ssa_265, %ssa_262, %ssa_264;// vec1 32 ssa_265 = ixor ssa_262, ssa_264
bb_03	:  PC=0xa08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:994) add.s32 %ssa_266, %ssa_249, %ssa_265;// vec1 32 ssa_266 = iadd ssa_249, ssa_265
bb_03	:  PC=0xa10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:997) mov.f32 %ssa_267, 0F454021d7; // vec1 32 ssa_267 = load_const (0x454021d7 /* 3074.114990 */)
bb_03	:  PC=0xa18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:999) mov.b32 %ssa_267_bits, 0F454021d7;
bb_03	:  PC=0xa20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1002) shl.b32 %ssa_268, %ssa_266, %ssa_26_bits; // vec1 32 ssa_268 = ishl ssa_266, ssa_26
bb_03	:  PC=0xa28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1005) add.s32 %ssa_269, %ssa_268, %ssa_28_bits; // vec1 32 ssa_269 = iadd ssa_268, ssa_28
bb_03	:  PC=0xa30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1008) add.s32 %ssa_270, %ssa_266, %ssa_267_bits; // vec1 32 ssa_270 = iadd ssa_266, ssa_267
bb_03	:  PC=0xa38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1011) xor.b32 %ssa_271, %ssa_269, %ssa_270;// vec1 32 ssa_271 = ixor ssa_269, ssa_270
bb_03	:  PC=0xa40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1014) shr.u32 %ssa_272, %ssa_266, %ssa_12_bits; // vec1 32 ssa_272 = ushr ssa_266, ssa_12
bb_03	:  PC=0xa48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1017) add.s32 %ssa_273, %ssa_272, %ssa_27_bits; // vec1 32 ssa_273 = iadd ssa_272, ssa_27
bb_03	:  PC=0xa50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1020) xor.b32 %ssa_274, %ssa_271, %ssa_273;// vec1 32 ssa_274 = ixor ssa_271, ssa_273
bb_03	:  PC=0xa58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1023) add.s32 %ssa_275, %ssa_258, %ssa_274;// vec1 32 ssa_275 = iadd ssa_258, ssa_274
bb_03	:  PC=0xa60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1026) shl.b32 %ssa_276, %ssa_275, %ssa_26_bits; // vec1 32 ssa_276 = ishl ssa_275, ssa_26
bb_03	:  PC=0xa68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1029) add.s32 %ssa_277, %ssa_276, %ssa_25_bits; // vec1 32 ssa_277 = iadd ssa_276, ssa_25
bb_03	:  PC=0xa70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1032) add.s32 %ssa_278, %ssa_275, %ssa_267_bits; // vec1 32 ssa_278 = iadd ssa_275, ssa_267
bb_03	:  PC=0xa78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1035) xor.b32 %ssa_279, %ssa_277, %ssa_278;// vec1 32 ssa_279 = ixor ssa_277, ssa_278
bb_03	:  PC=0xa80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1038) shr.u32 %ssa_280, %ssa_275, %ssa_12_bits; // vec1 32 ssa_280 = ushr ssa_275, ssa_12
bb_03	:  PC=0xa88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1041) add.s32 %ssa_281, %ssa_280, %ssa_24_bits; // vec1 32 ssa_281 = iadd ssa_280, ssa_24
bb_03	:  PC=0xa90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1044) xor.b32 %ssa_282, %ssa_279, %ssa_281;// vec1 32 ssa_282 = ixor ssa_279, ssa_281
bb_03	:  PC=0xa98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1047) add.s32 %ssa_283, %ssa_266, %ssa_282;// vec1 32 ssa_283 = iadd ssa_266, ssa_282
bb_03	:  PC=0xaa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1050) mov.f32 %ssa_284, 0Fe3779b90; // vec1 32 ssa_284 = load_const (0xe3779b90 /* -4567555245678784413696.000000 */)
bb_03	:  PC=0xaa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1052) mov.b32 %ssa_284_bits, 0Fe3779b90;
bb_03	:  PC=0xab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1055) shl.b32 %ssa_285, %ssa_283, %ssa_26_bits; // vec1 32 ssa_285 = ishl ssa_283, ssa_26
bb_03	:  PC=0xab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1058) add.s32 %ssa_286, %ssa_285, %ssa_28_bits; // vec1 32 ssa_286 = iadd ssa_285, ssa_28
bb_03	:  PC=0xac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1061) add.s32 %ssa_287, %ssa_283, %ssa_284_bits; // vec1 32 ssa_287 = iadd ssa_283, ssa_284
bb_03	:  PC=0xac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1064) xor.b32 %ssa_288, %ssa_286, %ssa_287;// vec1 32 ssa_288 = ixor ssa_286, ssa_287
bb_03	:  PC=0xad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1067) shr.u32 %ssa_289, %ssa_283, %ssa_12_bits; // vec1 32 ssa_289 = ushr ssa_283, ssa_12
bb_03	:  PC=0xad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1070) add.s32 %ssa_290, %ssa_289, %ssa_27_bits; // vec1 32 ssa_290 = iadd ssa_289, ssa_27
bb_03	:  PC=0xae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1073) xor.b32 %ssa_291, %ssa_288, %ssa_290;// vec1 32 ssa_291 = ixor ssa_288, ssa_290
bb_03	:  PC=0xae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1076) add.s32 %ssa_292, %ssa_275, %ssa_291;// vec1 32 ssa_292 = iadd ssa_275, ssa_291
bb_03	:  PC=0xaf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1079) add.u64 %ssa_293, %ssa_20, 284; // vec2 32 ssa_293 = deref_struct &ssa_20->TotalNumberOfSamples (ubo uint) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.TotalNumberOfSamples */
bb_03	:  PC=0xaf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1082) ld.global.u32 %ssa_294, [%ssa_293]; // vec1 32 ssa_294 = intrinsic load_deref (%ssa_293) (16) /* access=16 */
bb_03	:  PC=0xb00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1085) shl.b32 %ssa_295, %ssa_294, %ssa_26_bits; // vec1 32 ssa_295 = ishl ssa_294, ssa_26
bb_03	:  PC=0xb08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1088) add.s32 %ssa_296, %ssa_295, %ssa_28_bits; // vec1 32 ssa_296 = iadd ssa_295, ssa_28
bb_03	:  PC=0xb10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1091) add.s32 %ssa_297, %ssa_294, %ssa_29_bits; // vec1 32 ssa_297 = iadd ssa_294, ssa_29
bb_03	:  PC=0xb18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1094) xor.b32 %ssa_298, %ssa_296, %ssa_297;// vec1 32 ssa_298 = ixor ssa_296, ssa_297
bb_03	:  PC=0xb20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1097) shr.u32 %ssa_299, %ssa_294, %ssa_12_bits; // vec1 32 ssa_299 = ushr ssa_294, ssa_12
bb_03	:  PC=0xb28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1100) add.s32 %ssa_300, %ssa_299, %ssa_27_bits; // vec1 32 ssa_300 = iadd ssa_299, ssa_27
bb_03	:  PC=0xb30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1103) xor.b32 %ssa_301, %ssa_298, %ssa_300;// vec1 32 ssa_301 = ixor ssa_298, ssa_300
bb_03	:  PC=0xb38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1106) add.s32 %ssa_302, %ssa_292, %ssa_301;// vec1 32 ssa_302 = iadd ssa_292, ssa_301
bb_03	:  PC=0xb40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1109) shl.b32 %ssa_303, %ssa_302, %ssa_26_bits; // vec1 32 ssa_303 = ishl ssa_302, ssa_26
bb_03	:  PC=0xb48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1112) add.s32 %ssa_304, %ssa_303, %ssa_25_bits; // vec1 32 ssa_304 = iadd ssa_303, ssa_25
bb_03	:  PC=0xb50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1115) add.s32 %ssa_305, %ssa_302, %ssa_29_bits; // vec1 32 ssa_305 = iadd ssa_302, ssa_29
bb_03	:  PC=0xb58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1118) xor.b32 %ssa_306, %ssa_304, %ssa_305;// vec1 32 ssa_306 = ixor ssa_304, ssa_305
bb_03	:  PC=0xb60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1121) shr.u32 %ssa_307, %ssa_302, %ssa_12_bits; // vec1 32 ssa_307 = ushr ssa_302, ssa_12
bb_03	:  PC=0xb68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1124) add.s32 %ssa_308, %ssa_307, %ssa_24_bits; // vec1 32 ssa_308 = iadd ssa_307, ssa_24
bb_03	:  PC=0xb70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1127) xor.b32 %ssa_309, %ssa_306, %ssa_308;// vec1 32 ssa_309 = ixor ssa_306, ssa_308
bb_03	:  PC=0xb78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1130) add.s32 %ssa_310, %ssa_294, %ssa_309;// vec1 32 ssa_310 = iadd ssa_294, ssa_309
bb_03	:  PC=0xb80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1133) shl.b32 %ssa_311, %ssa_310, %ssa_26_bits; // vec1 32 ssa_311 = ishl ssa_310, ssa_26
bb_03	:  PC=0xb88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1136) add.s32 %ssa_312, %ssa_311, %ssa_28_bits; // vec1 32 ssa_312 = iadd ssa_311, ssa_28
bb_03	:  PC=0xb90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1139) add.s32 %ssa_313, %ssa_310, %ssa_46_bits; // vec1 32 ssa_313 = iadd ssa_310, ssa_46
bb_03	:  PC=0xb98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1142) xor.b32 %ssa_314, %ssa_312, %ssa_313;// vec1 32 ssa_314 = ixor ssa_312, ssa_313
bb_03	:  PC=0xba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1145) shr.u32 %ssa_315, %ssa_310, %ssa_12_bits; // vec1 32 ssa_315 = ushr ssa_310, ssa_12
bb_03	:  PC=0xba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1148) add.s32 %ssa_316, %ssa_315, %ssa_27_bits; // vec1 32 ssa_316 = iadd ssa_315, ssa_27
bb_03	:  PC=0xbb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1151) xor.b32 %ssa_317, %ssa_314, %ssa_316;// vec1 32 ssa_317 = ixor ssa_314, ssa_316
bb_03	:  PC=0xbb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1154) add.s32 %ssa_318, %ssa_302, %ssa_317;// vec1 32 ssa_318 = iadd ssa_302, ssa_317
bb_03	:  PC=0xbc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1157) shl.b32 %ssa_319, %ssa_318, %ssa_26_bits; // vec1 32 ssa_319 = ishl ssa_318, ssa_26
bb_03	:  PC=0xbc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1160) add.s32 %ssa_320, %ssa_319, %ssa_25_bits; // vec1 32 ssa_320 = iadd ssa_319, ssa_25
bb_03	:  PC=0xbd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1163) add.s32 %ssa_321, %ssa_318, %ssa_46_bits; // vec1 32 ssa_321 = iadd ssa_318, ssa_46
bb_03	:  PC=0xbd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1166) xor.b32 %ssa_322, %ssa_320, %ssa_321;// vec1 32 ssa_322 = ixor ssa_320, ssa_321
bb_03	:  PC=0xbe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1169) shr.u32 %ssa_323, %ssa_318, %ssa_12_bits; // vec1 32 ssa_323 = ushr ssa_318, ssa_12
bb_03	:  PC=0xbe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1172) add.s32 %ssa_324, %ssa_323, %ssa_24_bits; // vec1 32 ssa_324 = iadd ssa_323, ssa_24
bb_03	:  PC=0xbf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1175) xor.b32 %ssa_325, %ssa_322, %ssa_324;// vec1 32 ssa_325 = ixor ssa_322, ssa_324
bb_03	:  PC=0xbf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1178) add.s32 %ssa_326, %ssa_310, %ssa_325;// vec1 32 ssa_326 = iadd ssa_310, ssa_325
bb_03	:  PC=0xc00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1181) shl.b32 %ssa_327, %ssa_326, %ssa_26_bits; // vec1 32 ssa_327 = ishl ssa_326, ssa_26
bb_03	:  PC=0xc08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1184) add.s32 %ssa_328, %ssa_327, %ssa_28_bits; // vec1 32 ssa_328 = iadd ssa_327, ssa_28
bb_03	:  PC=0xc10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1187) add.s32 %ssa_329, %ssa_326, %ssa_63_bits; // vec1 32 ssa_329 = iadd ssa_326, ssa_63
bb_03	:  PC=0xc18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1190) xor.b32 %ssa_330, %ssa_328, %ssa_329;// vec1 32 ssa_330 = ixor ssa_328, ssa_329
bb_03	:  PC=0xc20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1193) shr.u32 %ssa_331, %ssa_326, %ssa_12_bits; // vec1 32 ssa_331 = ushr ssa_326, ssa_12
bb_03	:  PC=0xc28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1196) add.s32 %ssa_332, %ssa_331, %ssa_27_bits; // vec1 32 ssa_332 = iadd ssa_331, ssa_27
bb_03	:  PC=0xc30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1199) xor.b32 %ssa_333, %ssa_330, %ssa_332;// vec1 32 ssa_333 = ixor ssa_330, ssa_332
bb_03	:  PC=0xc38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1202) add.s32 %ssa_334, %ssa_318, %ssa_333;// vec1 32 ssa_334 = iadd ssa_318, ssa_333
bb_03	:  PC=0xc40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1205) shl.b32 %ssa_335, %ssa_334, %ssa_26_bits; // vec1 32 ssa_335 = ishl ssa_334, ssa_26
bb_03	:  PC=0xc48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1208) add.s32 %ssa_336, %ssa_335, %ssa_25_bits; // vec1 32 ssa_336 = iadd ssa_335, ssa_25
bb_03	:  PC=0xc50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1211) add.s32 %ssa_337, %ssa_334, %ssa_63_bits; // vec1 32 ssa_337 = iadd ssa_334, ssa_63
bb_03	:  PC=0xc58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1214) xor.b32 %ssa_338, %ssa_336, %ssa_337;// vec1 32 ssa_338 = ixor ssa_336, ssa_337
bb_03	:  PC=0xc60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1217) shr.u32 %ssa_339, %ssa_334, %ssa_12_bits; // vec1 32 ssa_339 = ushr ssa_334, ssa_12
bb_03	:  PC=0xc68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1220) add.s32 %ssa_340, %ssa_339, %ssa_24_bits; // vec1 32 ssa_340 = iadd ssa_339, ssa_24
bb_03	:  PC=0xc70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1223) xor.b32 %ssa_341, %ssa_338, %ssa_340;// vec1 32 ssa_341 = ixor ssa_338, ssa_340
bb_03	:  PC=0xc78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1226) add.s32 %ssa_342, %ssa_326, %ssa_341;// vec1 32 ssa_342 = iadd ssa_326, ssa_341
bb_03	:  PC=0xc80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1229) shl.b32 %ssa_343, %ssa_342, %ssa_26_bits; // vec1 32 ssa_343 = ishl ssa_342, ssa_26
bb_03	:  PC=0xc88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1232) add.s32 %ssa_344, %ssa_343, %ssa_28_bits; // vec1 32 ssa_344 = iadd ssa_343, ssa_28
bb_03	:  PC=0xc90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1235) add.s32 %ssa_345, %ssa_342, %ssa_80_bits; // vec1 32 ssa_345 = iadd ssa_342, ssa_80
bb_03	:  PC=0xc98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1238) xor.b32 %ssa_346, %ssa_344, %ssa_345;// vec1 32 ssa_346 = ixor ssa_344, ssa_345
bb_03	:  PC=0xca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1241) shr.u32 %ssa_347, %ssa_342, %ssa_12_bits; // vec1 32 ssa_347 = ushr ssa_342, ssa_12
bb_03	:  PC=0xca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1244) add.s32 %ssa_348, %ssa_347, %ssa_27_bits; // vec1 32 ssa_348 = iadd ssa_347, ssa_27
bb_03	:  PC=0xcb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1247) xor.b32 %ssa_349, %ssa_346, %ssa_348;// vec1 32 ssa_349 = ixor ssa_346, ssa_348
bb_03	:  PC=0xcb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1250) add.s32 %ssa_350, %ssa_334, %ssa_349;// vec1 32 ssa_350 = iadd ssa_334, ssa_349
bb_03	:  PC=0xcc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1253) shl.b32 %ssa_351, %ssa_350, %ssa_26_bits; // vec1 32 ssa_351 = ishl ssa_350, ssa_26
bb_03	:  PC=0xcc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1256) add.s32 %ssa_352, %ssa_351, %ssa_25_bits; // vec1 32 ssa_352 = iadd ssa_351, ssa_25
bb_03	:  PC=0xcd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1259) add.s32 %ssa_353, %ssa_350, %ssa_80_bits; // vec1 32 ssa_353 = iadd ssa_350, ssa_80
bb_03	:  PC=0xcd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1262) xor.b32 %ssa_354, %ssa_352, %ssa_353;// vec1 32 ssa_354 = ixor ssa_352, ssa_353
bb_03	:  PC=0xce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1265) shr.u32 %ssa_355, %ssa_350, %ssa_12_bits; // vec1 32 ssa_355 = ushr ssa_350, ssa_12
bb_03	:  PC=0xce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1268) add.s32 %ssa_356, %ssa_355, %ssa_24_bits; // vec1 32 ssa_356 = iadd ssa_355, ssa_24
bb_03	:  PC=0xcf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1271) xor.b32 %ssa_357, %ssa_354, %ssa_356;// vec1 32 ssa_357 = ixor ssa_354, ssa_356
bb_03	:  PC=0xcf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1274) add.s32 %ssa_358, %ssa_342, %ssa_357;// vec1 32 ssa_358 = iadd ssa_342, ssa_357
bb_03	:  PC=0xd00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1277) shl.b32 %ssa_359, %ssa_358, %ssa_26_bits; // vec1 32 ssa_359 = ishl ssa_358, ssa_26
bb_03	:  PC=0xd08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1280) add.s32 %ssa_360, %ssa_359, %ssa_28_bits; // vec1 32 ssa_360 = iadd ssa_359, ssa_28
bb_03	:  PC=0xd10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1283) add.s32 %ssa_361, %ssa_358, %ssa_97_bits; // vec1 32 ssa_361 = iadd ssa_358, ssa_97
bb_03	:  PC=0xd18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1286) xor.b32 %ssa_362, %ssa_360, %ssa_361;// vec1 32 ssa_362 = ixor ssa_360, ssa_361
bb_03	:  PC=0xd20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1289) shr.u32 %ssa_363, %ssa_358, %ssa_12_bits; // vec1 32 ssa_363 = ushr ssa_358, ssa_12
bb_03	:  PC=0xd28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1292) add.s32 %ssa_364, %ssa_363, %ssa_27_bits; // vec1 32 ssa_364 = iadd ssa_363, ssa_27
bb_03	:  PC=0xd30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1295) xor.b32 %ssa_365, %ssa_362, %ssa_364;// vec1 32 ssa_365 = ixor ssa_362, ssa_364
bb_03	:  PC=0xd38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1298) add.s32 %ssa_366, %ssa_350, %ssa_365;// vec1 32 ssa_366 = iadd ssa_350, ssa_365
bb_03	:  PC=0xd40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1301) shl.b32 %ssa_367, %ssa_366, %ssa_26_bits; // vec1 32 ssa_367 = ishl ssa_366, ssa_26
bb_03	:  PC=0xd48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1304) add.s32 %ssa_368, %ssa_367, %ssa_25_bits; // vec1 32 ssa_368 = iadd ssa_367, ssa_25
bb_03	:  PC=0xd50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1307) add.s32 %ssa_369, %ssa_366, %ssa_97_bits; // vec1 32 ssa_369 = iadd ssa_366, ssa_97
bb_03	:  PC=0xd58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1310) xor.b32 %ssa_370, %ssa_368, %ssa_369;// vec1 32 ssa_370 = ixor ssa_368, ssa_369
bb_03	:  PC=0xd60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1313) shr.u32 %ssa_371, %ssa_366, %ssa_12_bits; // vec1 32 ssa_371 = ushr ssa_366, ssa_12
bb_03	:  PC=0xd68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1316) add.s32 %ssa_372, %ssa_371, %ssa_24_bits; // vec1 32 ssa_372 = iadd ssa_371, ssa_24
bb_03	:  PC=0xd70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1319) xor.b32 %ssa_373, %ssa_370, %ssa_372;// vec1 32 ssa_373 = ixor ssa_370, ssa_372
bb_03	:  PC=0xd78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1322) add.s32 %ssa_374, %ssa_358, %ssa_373;// vec1 32 ssa_374 = iadd ssa_358, ssa_373
bb_03	:  PC=0xd80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1325) shl.b32 %ssa_375, %ssa_374, %ssa_26_bits; // vec1 32 ssa_375 = ishl ssa_374, ssa_26
bb_03	:  PC=0xd88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1328) add.s32 %ssa_376, %ssa_375, %ssa_28_bits; // vec1 32 ssa_376 = iadd ssa_375, ssa_28
bb_03	:  PC=0xd90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1331) add.s32 %ssa_377, %ssa_374, %ssa_114_bits; // vec1 32 ssa_377 = iadd ssa_374, ssa_114
bb_03	:  PC=0xd98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1334) xor.b32 %ssa_378, %ssa_376, %ssa_377;// vec1 32 ssa_378 = ixor ssa_376, ssa_377
bb_03	:  PC=0xda0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1337) shr.u32 %ssa_379, %ssa_374, %ssa_12_bits; // vec1 32 ssa_379 = ushr ssa_374, ssa_12
bb_03	:  PC=0xda8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1340) add.s32 %ssa_380, %ssa_379, %ssa_27_bits; // vec1 32 ssa_380 = iadd ssa_379, ssa_27
bb_03	:  PC=0xdb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1343) xor.b32 %ssa_381, %ssa_378, %ssa_380;// vec1 32 ssa_381 = ixor ssa_378, ssa_380
bb_03	:  PC=0xdb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1346) add.s32 %ssa_382, %ssa_366, %ssa_381;// vec1 32 ssa_382 = iadd ssa_366, ssa_381
bb_03	:  PC=0xdc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1349) shl.b32 %ssa_383, %ssa_382, %ssa_26_bits; // vec1 32 ssa_383 = ishl ssa_382, ssa_26
bb_03	:  PC=0xdc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1352) add.s32 %ssa_384, %ssa_383, %ssa_25_bits; // vec1 32 ssa_384 = iadd ssa_383, ssa_25
bb_03	:  PC=0xdd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1355) add.s32 %ssa_385, %ssa_382, %ssa_114_bits; // vec1 32 ssa_385 = iadd ssa_382, ssa_114
bb_03	:  PC=0xdd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1358) xor.b32 %ssa_386, %ssa_384, %ssa_385;// vec1 32 ssa_386 = ixor ssa_384, ssa_385
bb_03	:  PC=0xde0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1361) shr.u32 %ssa_387, %ssa_382, %ssa_12_bits; // vec1 32 ssa_387 = ushr ssa_382, ssa_12
bb_03	:  PC=0xde8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1364) add.s32 %ssa_388, %ssa_387, %ssa_24_bits; // vec1 32 ssa_388 = iadd ssa_387, ssa_24
bb_03	:  PC=0xdf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1367) xor.b32 %ssa_389, %ssa_386, %ssa_388;// vec1 32 ssa_389 = ixor ssa_386, ssa_388
bb_03	:  PC=0xdf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1370) add.s32 %ssa_390, %ssa_374, %ssa_389;// vec1 32 ssa_390 = iadd ssa_374, ssa_389
bb_03	:  PC=0xe00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1373) shl.b32 %ssa_391, %ssa_390, %ssa_26_bits; // vec1 32 ssa_391 = ishl ssa_390, ssa_26
bb_03	:  PC=0xe08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1376) add.s32 %ssa_392, %ssa_391, %ssa_28_bits; // vec1 32 ssa_392 = iadd ssa_391, ssa_28
bb_03	:  PC=0xe10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1379) add.s32 %ssa_393, %ssa_390, %ssa_131_bits; // vec1 32 ssa_393 = iadd ssa_390, ssa_131
bb_03	:  PC=0xe18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1382) xor.b32 %ssa_394, %ssa_392, %ssa_393;// vec1 32 ssa_394 = ixor ssa_392, ssa_393
bb_03	:  PC=0xe20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1385) shr.u32 %ssa_395, %ssa_390, %ssa_12_bits; // vec1 32 ssa_395 = ushr ssa_390, ssa_12
bb_03	:  PC=0xe28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1388) add.s32 %ssa_396, %ssa_395, %ssa_27_bits; // vec1 32 ssa_396 = iadd ssa_395, ssa_27
bb_03	:  PC=0xe30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1391) xor.b32 %ssa_397, %ssa_394, %ssa_396;// vec1 32 ssa_397 = ixor ssa_394, ssa_396
bb_03	:  PC=0xe38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1394) add.s32 %ssa_398, %ssa_382, %ssa_397;// vec1 32 ssa_398 = iadd ssa_382, ssa_397
bb_03	:  PC=0xe40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1397) shl.b32 %ssa_399, %ssa_398, %ssa_26_bits; // vec1 32 ssa_399 = ishl ssa_398, ssa_26
bb_03	:  PC=0xe48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1400) add.s32 %ssa_400, %ssa_399, %ssa_25_bits; // vec1 32 ssa_400 = iadd ssa_399, ssa_25
bb_03	:  PC=0xe50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1403) add.s32 %ssa_401, %ssa_398, %ssa_131_bits; // vec1 32 ssa_401 = iadd ssa_398, ssa_131
bb_03	:  PC=0xe58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1406) xor.b32 %ssa_402, %ssa_400, %ssa_401;// vec1 32 ssa_402 = ixor ssa_400, ssa_401
bb_03	:  PC=0xe60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1409) shr.u32 %ssa_403, %ssa_398, %ssa_12_bits; // vec1 32 ssa_403 = ushr ssa_398, ssa_12
bb_03	:  PC=0xe68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1412) add.s32 %ssa_404, %ssa_403, %ssa_24_bits; // vec1 32 ssa_404 = iadd ssa_403, ssa_24
bb_03	:  PC=0xe70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1415) xor.b32 %ssa_405, %ssa_402, %ssa_404;// vec1 32 ssa_405 = ixor ssa_402, ssa_404
bb_03	:  PC=0xe78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1418) add.s32 %ssa_406, %ssa_390, %ssa_405;// vec1 32 ssa_406 = iadd ssa_390, ssa_405
bb_03	:  PC=0xe80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1421) shl.b32 %ssa_407, %ssa_406, %ssa_26_bits; // vec1 32 ssa_407 = ishl ssa_406, ssa_26
bb_03	:  PC=0xe88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1424) add.s32 %ssa_408, %ssa_407, %ssa_28_bits; // vec1 32 ssa_408 = iadd ssa_407, ssa_28
bb_03	:  PC=0xe90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1427) add.s32 %ssa_409, %ssa_406, %ssa_148_bits; // vec1 32 ssa_409 = iadd ssa_406, ssa_148
bb_03	:  PC=0xe98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1430) xor.b32 %ssa_410, %ssa_408, %ssa_409;// vec1 32 ssa_410 = ixor ssa_408, ssa_409
bb_03	:  PC=0xea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1433) shr.u32 %ssa_411, %ssa_406, %ssa_12_bits; // vec1 32 ssa_411 = ushr ssa_406, ssa_12
bb_03	:  PC=0xea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1436) add.s32 %ssa_412, %ssa_411, %ssa_27_bits; // vec1 32 ssa_412 = iadd ssa_411, ssa_27
bb_03	:  PC=0xeb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1439) xor.b32 %ssa_413, %ssa_410, %ssa_412;// vec1 32 ssa_413 = ixor ssa_410, ssa_412
bb_03	:  PC=0xeb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1442) add.s32 %ssa_414, %ssa_398, %ssa_413;// vec1 32 ssa_414 = iadd ssa_398, ssa_413
bb_03	:  PC=0xec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1445) shl.b32 %ssa_415, %ssa_414, %ssa_26_bits; // vec1 32 ssa_415 = ishl ssa_414, ssa_26
bb_03	:  PC=0xec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1448) add.s32 %ssa_416, %ssa_415, %ssa_25_bits; // vec1 32 ssa_416 = iadd ssa_415, ssa_25
bb_03	:  PC=0xed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1451) add.s32 %ssa_417, %ssa_414, %ssa_148_bits; // vec1 32 ssa_417 = iadd ssa_414, ssa_148
bb_03	:  PC=0xed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1454) xor.b32 %ssa_418, %ssa_416, %ssa_417;// vec1 32 ssa_418 = ixor ssa_416, ssa_417
bb_03	:  PC=0xee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1457) shr.u32 %ssa_419, %ssa_414, %ssa_12_bits; // vec1 32 ssa_419 = ushr ssa_414, ssa_12
bb_03	:  PC=0xee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1460) add.s32 %ssa_420, %ssa_419, %ssa_24_bits; // vec1 32 ssa_420 = iadd ssa_419, ssa_24
bb_03	:  PC=0xef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1463) xor.b32 %ssa_421, %ssa_418, %ssa_420;// vec1 32 ssa_421 = ixor ssa_418, ssa_420
bb_03	:  PC=0xef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1466) add.s32 %ssa_422, %ssa_406, %ssa_421;// vec1 32 ssa_422 = iadd ssa_406, ssa_421
bb_03	:  PC=0xf00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1469) shl.b32 %ssa_423, %ssa_422, %ssa_26_bits; // vec1 32 ssa_423 = ishl ssa_422, ssa_26
bb_03	:  PC=0xf08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1472) add.s32 %ssa_424, %ssa_423, %ssa_28_bits; // vec1 32 ssa_424 = iadd ssa_423, ssa_28
bb_03	:  PC=0xf10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1475) add.s32 %ssa_425, %ssa_422, %ssa_165_bits; // vec1 32 ssa_425 = iadd ssa_422, ssa_165
bb_03	:  PC=0xf18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1478) xor.b32 %ssa_426, %ssa_424, %ssa_425;// vec1 32 ssa_426 = ixor ssa_424, ssa_425
bb_03	:  PC=0xf20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1481) shr.u32 %ssa_427, %ssa_422, %ssa_12_bits; // vec1 32 ssa_427 = ushr ssa_422, ssa_12
bb_03	:  PC=0xf28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1484) add.s32 %ssa_428, %ssa_427, %ssa_27_bits; // vec1 32 ssa_428 = iadd ssa_427, ssa_27
bb_03	:  PC=0xf30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1487) xor.b32 %ssa_429, %ssa_426, %ssa_428;// vec1 32 ssa_429 = ixor ssa_426, ssa_428
bb_03	:  PC=0xf38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1490) add.s32 %ssa_430, %ssa_414, %ssa_429;// vec1 32 ssa_430 = iadd ssa_414, ssa_429
bb_03	:  PC=0xf40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1493) shl.b32 %ssa_431, %ssa_430, %ssa_26_bits; // vec1 32 ssa_431 = ishl ssa_430, ssa_26
bb_03	:  PC=0xf48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1496) add.s32 %ssa_432, %ssa_431, %ssa_25_bits; // vec1 32 ssa_432 = iadd ssa_431, ssa_25
bb_03	:  PC=0xf50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1499) add.s32 %ssa_433, %ssa_430, %ssa_165_bits; // vec1 32 ssa_433 = iadd ssa_430, ssa_165
bb_03	:  PC=0xf58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1502) xor.b32 %ssa_434, %ssa_432, %ssa_433;// vec1 32 ssa_434 = ixor ssa_432, ssa_433
bb_03	:  PC=0xf60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1505) shr.u32 %ssa_435, %ssa_430, %ssa_12_bits; // vec1 32 ssa_435 = ushr ssa_430, ssa_12
bb_03	:  PC=0xf68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1508) add.s32 %ssa_436, %ssa_435, %ssa_24_bits; // vec1 32 ssa_436 = iadd ssa_435, ssa_24
bb_03	:  PC=0xf70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1511) xor.b32 %ssa_437, %ssa_434, %ssa_436;// vec1 32 ssa_437 = ixor ssa_434, ssa_436
bb_03	:  PC=0xf78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1514) add.s32 %ssa_438, %ssa_422, %ssa_437;// vec1 32 ssa_438 = iadd ssa_422, ssa_437
bb_03	:  PC=0xf80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1517) shl.b32 %ssa_439, %ssa_438, %ssa_26_bits; // vec1 32 ssa_439 = ishl ssa_438, ssa_26
bb_03	:  PC=0xf88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1520) add.s32 %ssa_440, %ssa_439, %ssa_28_bits; // vec1 32 ssa_440 = iadd ssa_439, ssa_28
bb_03	:  PC=0xf90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1523) add.s32 %ssa_441, %ssa_438, %ssa_182_bits; // vec1 32 ssa_441 = iadd ssa_438, ssa_182
bb_03	:  PC=0xf98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1526) xor.b32 %ssa_442, %ssa_440, %ssa_441;// vec1 32 ssa_442 = ixor ssa_440, ssa_441
bb_03	:  PC=0xfa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1529) shr.u32 %ssa_443, %ssa_438, %ssa_12_bits; // vec1 32 ssa_443 = ushr ssa_438, ssa_12
bb_03	:  PC=0xfa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1532) add.s32 %ssa_444, %ssa_443, %ssa_27_bits; // vec1 32 ssa_444 = iadd ssa_443, ssa_27
bb_03	:  PC=0xfb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1535) xor.b32 %ssa_445, %ssa_442, %ssa_444;// vec1 32 ssa_445 = ixor ssa_442, ssa_444
bb_03	:  PC=0xfb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1538) add.s32 %ssa_446, %ssa_430, %ssa_445;// vec1 32 ssa_446 = iadd ssa_430, ssa_445
bb_03	:  PC=0xfc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1541) shl.b32 %ssa_447, %ssa_446, %ssa_26_bits; // vec1 32 ssa_447 = ishl ssa_446, ssa_26
bb_03	:  PC=0xfc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1544) add.s32 %ssa_448, %ssa_447, %ssa_25_bits; // vec1 32 ssa_448 = iadd ssa_447, ssa_25
bb_03	:  PC=0xfd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1547) add.s32 %ssa_449, %ssa_446, %ssa_182_bits; // vec1 32 ssa_449 = iadd ssa_446, ssa_182
bb_03	:  PC=0xfd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1550) xor.b32 %ssa_450, %ssa_448, %ssa_449;// vec1 32 ssa_450 = ixor ssa_448, ssa_449
bb_03	:  PC=0xfe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1553) shr.u32 %ssa_451, %ssa_446, %ssa_12_bits; // vec1 32 ssa_451 = ushr ssa_446, ssa_12
bb_03	:  PC=0xfe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1556) add.s32 %ssa_452, %ssa_451, %ssa_24_bits; // vec1 32 ssa_452 = iadd ssa_451, ssa_24
bb_03	:  PC=0xff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1559) xor.b32 %ssa_453, %ssa_450, %ssa_452;// vec1 32 ssa_453 = ixor ssa_450, ssa_452
bb_03	:  PC=0xff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1562) add.s32 %ssa_454, %ssa_438, %ssa_453;// vec1 32 ssa_454 = iadd ssa_438, ssa_453
bb_03	:  PC=0x1000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1565) shl.b32 %ssa_455, %ssa_454, %ssa_26_bits; // vec1 32 ssa_455 = ishl ssa_454, ssa_26
bb_03	:  PC=0x1008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1568) add.s32 %ssa_456, %ssa_455, %ssa_28_bits; // vec1 32 ssa_456 = iadd ssa_455, ssa_28
bb_03	:  PC=0x1010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1571) add.s32 %ssa_457, %ssa_454, %ssa_199_bits; // vec1 32 ssa_457 = iadd ssa_454, ssa_199
bb_03	:  PC=0x1018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1574) xor.b32 %ssa_458, %ssa_456, %ssa_457;// vec1 32 ssa_458 = ixor ssa_456, ssa_457
bb_03	:  PC=0x1020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1577) shr.u32 %ssa_459, %ssa_454, %ssa_12_bits; // vec1 32 ssa_459 = ushr ssa_454, ssa_12
bb_03	:  PC=0x1028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1580) add.s32 %ssa_460, %ssa_459, %ssa_27_bits; // vec1 32 ssa_460 = iadd ssa_459, ssa_27
bb_03	:  PC=0x1030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1583) xor.b32 %ssa_461, %ssa_458, %ssa_460;// vec1 32 ssa_461 = ixor ssa_458, ssa_460
bb_03	:  PC=0x1038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1586) add.s32 %ssa_462, %ssa_446, %ssa_461;// vec1 32 ssa_462 = iadd ssa_446, ssa_461
bb_03	:  PC=0x1040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1589) shl.b32 %ssa_463, %ssa_462, %ssa_26_bits; // vec1 32 ssa_463 = ishl ssa_462, ssa_26
bb_03	:  PC=0x1048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1592) add.s32 %ssa_464, %ssa_463, %ssa_25_bits; // vec1 32 ssa_464 = iadd ssa_463, ssa_25
bb_03	:  PC=0x1050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1595) add.s32 %ssa_465, %ssa_462, %ssa_199_bits; // vec1 32 ssa_465 = iadd ssa_462, ssa_199
bb_03	:  PC=0x1058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1598) xor.b32 %ssa_466, %ssa_464, %ssa_465;// vec1 32 ssa_466 = ixor ssa_464, ssa_465
bb_03	:  PC=0x1060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1601) shr.u32 %ssa_467, %ssa_462, %ssa_12_bits; // vec1 32 ssa_467 = ushr ssa_462, ssa_12
bb_03	:  PC=0x1068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1604) add.s32 %ssa_468, %ssa_467, %ssa_24_bits; // vec1 32 ssa_468 = iadd ssa_467, ssa_24
bb_03	:  PC=0x1070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1607) xor.b32 %ssa_469, %ssa_466, %ssa_468;// vec1 32 ssa_469 = ixor ssa_466, ssa_468
bb_03	:  PC=0x1078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1610) add.s32 %ssa_470, %ssa_454, %ssa_469;// vec1 32 ssa_470 = iadd ssa_454, ssa_469
bb_03	:  PC=0x1080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1613) shl.b32 %ssa_471, %ssa_470, %ssa_26_bits; // vec1 32 ssa_471 = ishl ssa_470, ssa_26
bb_03	:  PC=0x1088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1616) add.s32 %ssa_472, %ssa_471, %ssa_28_bits; // vec1 32 ssa_472 = iadd ssa_471, ssa_28
bb_03	:  PC=0x1090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1619) add.s32 %ssa_473, %ssa_470, %ssa_216_bits; // vec1 32 ssa_473 = iadd ssa_470, ssa_216
bb_03	:  PC=0x1098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1622) xor.b32 %ssa_474, %ssa_472, %ssa_473;// vec1 32 ssa_474 = ixor ssa_472, ssa_473
bb_03	:  PC=0x10a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1625) shr.u32 %ssa_475, %ssa_470, %ssa_12_bits; // vec1 32 ssa_475 = ushr ssa_470, ssa_12
bb_03	:  PC=0x10a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1628) add.s32 %ssa_476, %ssa_475, %ssa_27_bits; // vec1 32 ssa_476 = iadd ssa_475, ssa_27
bb_03	:  PC=0x10b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1631) xor.b32 %ssa_477, %ssa_474, %ssa_476;// vec1 32 ssa_477 = ixor ssa_474, ssa_476
bb_03	:  PC=0x10b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1634) add.s32 %ssa_478, %ssa_462, %ssa_477;// vec1 32 ssa_478 = iadd ssa_462, ssa_477
bb_03	:  PC=0x10c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1637) shl.b32 %ssa_479, %ssa_478, %ssa_26_bits; // vec1 32 ssa_479 = ishl ssa_478, ssa_26
bb_03	:  PC=0x10c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1640) add.s32 %ssa_480, %ssa_479, %ssa_25_bits; // vec1 32 ssa_480 = iadd ssa_479, ssa_25
bb_03	:  PC=0x10d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1643) add.s32 %ssa_481, %ssa_478, %ssa_216_bits; // vec1 32 ssa_481 = iadd ssa_478, ssa_216
bb_03	:  PC=0x10d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1646) xor.b32 %ssa_482, %ssa_480, %ssa_481;// vec1 32 ssa_482 = ixor ssa_480, ssa_481
bb_03	:  PC=0x10e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1649) shr.u32 %ssa_483, %ssa_478, %ssa_12_bits; // vec1 32 ssa_483 = ushr ssa_478, ssa_12
bb_03	:  PC=0x10e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1652) add.s32 %ssa_484, %ssa_483, %ssa_24_bits; // vec1 32 ssa_484 = iadd ssa_483, ssa_24
bb_03	:  PC=0x10f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1655) xor.b32 %ssa_485, %ssa_482, %ssa_484;// vec1 32 ssa_485 = ixor ssa_482, ssa_484
bb_03	:  PC=0x10f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1658) add.s32 %ssa_486, %ssa_470, %ssa_485;// vec1 32 ssa_486 = iadd ssa_470, ssa_485
bb_03	:  PC=0x1100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1661) shl.b32 %ssa_487, %ssa_486, %ssa_26_bits; // vec1 32 ssa_487 = ishl ssa_486, ssa_26
bb_03	:  PC=0x1108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1664) add.s32 %ssa_488, %ssa_487, %ssa_28_bits; // vec1 32 ssa_488 = iadd ssa_487, ssa_28
bb_03	:  PC=0x1110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1667) add.s32 %ssa_489, %ssa_486, %ssa_233_bits; // vec1 32 ssa_489 = iadd ssa_486, ssa_233
bb_03	:  PC=0x1118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1670) xor.b32 %ssa_490, %ssa_488, %ssa_489;// vec1 32 ssa_490 = ixor ssa_488, ssa_489
bb_03	:  PC=0x1120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1673) shr.u32 %ssa_491, %ssa_486, %ssa_12_bits; // vec1 32 ssa_491 = ushr ssa_486, ssa_12
bb_03	:  PC=0x1128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1676) add.s32 %ssa_492, %ssa_491, %ssa_27_bits; // vec1 32 ssa_492 = iadd ssa_491, ssa_27
bb_03	:  PC=0x1130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1679) xor.b32 %ssa_493, %ssa_490, %ssa_492;// vec1 32 ssa_493 = ixor ssa_490, ssa_492
bb_03	:  PC=0x1138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1682) add.s32 %ssa_494, %ssa_478, %ssa_493;// vec1 32 ssa_494 = iadd ssa_478, ssa_493
bb_03	:  PC=0x1140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1685) shl.b32 %ssa_495, %ssa_494, %ssa_26_bits; // vec1 32 ssa_495 = ishl ssa_494, ssa_26
bb_03	:  PC=0x1148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1688) add.s32 %ssa_496, %ssa_495, %ssa_25_bits; // vec1 32 ssa_496 = iadd ssa_495, ssa_25
bb_03	:  PC=0x1150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1691) add.s32 %ssa_497, %ssa_494, %ssa_233_bits; // vec1 32 ssa_497 = iadd ssa_494, ssa_233
bb_03	:  PC=0x1158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1694) xor.b32 %ssa_498, %ssa_496, %ssa_497;// vec1 32 ssa_498 = ixor ssa_496, ssa_497
bb_03	:  PC=0x1160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1697) shr.u32 %ssa_499, %ssa_494, %ssa_12_bits; // vec1 32 ssa_499 = ushr ssa_494, ssa_12
bb_03	:  PC=0x1168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1700) add.s32 %ssa_500, %ssa_499, %ssa_24_bits; // vec1 32 ssa_500 = iadd ssa_499, ssa_24
bb_03	:  PC=0x1170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1703) xor.b32 %ssa_501, %ssa_498, %ssa_500;// vec1 32 ssa_501 = ixor ssa_498, ssa_500
bb_03	:  PC=0x1178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1706) add.s32 %ssa_502, %ssa_486, %ssa_501;// vec1 32 ssa_502 = iadd ssa_486, ssa_501
bb_03	:  PC=0x1180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1709) shl.b32 %ssa_503, %ssa_502, %ssa_26_bits; // vec1 32 ssa_503 = ishl ssa_502, ssa_26
bb_03	:  PC=0x1188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1712) add.s32 %ssa_504, %ssa_503, %ssa_28_bits; // vec1 32 ssa_504 = iadd ssa_503, ssa_28
bb_03	:  PC=0x1190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1715) add.s32 %ssa_505, %ssa_502, %ssa_250_bits; // vec1 32 ssa_505 = iadd ssa_502, ssa_250
bb_03	:  PC=0x1198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1718) xor.b32 %ssa_506, %ssa_504, %ssa_505;// vec1 32 ssa_506 = ixor ssa_504, ssa_505
bb_03	:  PC=0x11a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1721) shr.u32 %ssa_507, %ssa_502, %ssa_12_bits; // vec1 32 ssa_507 = ushr ssa_502, ssa_12
bb_03	:  PC=0x11a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1724) add.s32 %ssa_508, %ssa_507, %ssa_27_bits; // vec1 32 ssa_508 = iadd ssa_507, ssa_27
bb_03	:  PC=0x11b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1727) xor.b32 %ssa_509, %ssa_506, %ssa_508;// vec1 32 ssa_509 = ixor ssa_506, ssa_508
bb_03	:  PC=0x11b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1730) add.s32 %ssa_510, %ssa_494, %ssa_509;// vec1 32 ssa_510 = iadd ssa_494, ssa_509
bb_03	:  PC=0x11c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1733) shl.b32 %ssa_511, %ssa_510, %ssa_26_bits; // vec1 32 ssa_511 = ishl ssa_510, ssa_26
bb_03	:  PC=0x11c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1736) add.s32 %ssa_512, %ssa_511, %ssa_25_bits; // vec1 32 ssa_512 = iadd ssa_511, ssa_25
bb_03	:  PC=0x11d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1739) add.s32 %ssa_513, %ssa_510, %ssa_250_bits; // vec1 32 ssa_513 = iadd ssa_510, ssa_250
bb_03	:  PC=0x11d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1742) xor.b32 %ssa_514, %ssa_512, %ssa_513;// vec1 32 ssa_514 = ixor ssa_512, ssa_513
bb_03	:  PC=0x11e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1745) shr.u32 %ssa_515, %ssa_510, %ssa_12_bits; // vec1 32 ssa_515 = ushr ssa_510, ssa_12
bb_03	:  PC=0x11e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1748) add.s32 %ssa_516, %ssa_515, %ssa_24_bits; // vec1 32 ssa_516 = iadd ssa_515, ssa_24
bb_03	:  PC=0x11f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1751) xor.b32 %ssa_517, %ssa_514, %ssa_516;// vec1 32 ssa_517 = ixor ssa_514, ssa_516
bb_03	:  PC=0x11f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1754) add.s32 %ssa_518, %ssa_502, %ssa_517;// vec1 32 ssa_518 = iadd ssa_502, ssa_517
bb_03	:  PC=0x1200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1757) shl.b32 %ssa_519, %ssa_518, %ssa_26_bits; // vec1 32 ssa_519 = ishl ssa_518, ssa_26
bb_03	:  PC=0x1208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1760) add.s32 %ssa_520, %ssa_519, %ssa_28_bits; // vec1 32 ssa_520 = iadd ssa_519, ssa_28
bb_03	:  PC=0x1210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1763) add.s32 %ssa_521, %ssa_518, %ssa_267_bits; // vec1 32 ssa_521 = iadd ssa_518, ssa_267
bb_03	:  PC=0x1218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1766) xor.b32 %ssa_522, %ssa_520, %ssa_521;// vec1 32 ssa_522 = ixor ssa_520, ssa_521
bb_03	:  PC=0x1220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1769) shr.u32 %ssa_523, %ssa_518, %ssa_12_bits; // vec1 32 ssa_523 = ushr ssa_518, ssa_12
bb_03	:  PC=0x1228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1772) add.s32 %ssa_524, %ssa_523, %ssa_27_bits; // vec1 32 ssa_524 = iadd ssa_523, ssa_27
bb_03	:  PC=0x1230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1775) xor.b32 %ssa_525, %ssa_522, %ssa_524;// vec1 32 ssa_525 = ixor ssa_522, ssa_524
bb_03	:  PC=0x1238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1778) add.s32 %ssa_526, %ssa_510, %ssa_525;// vec1 32 ssa_526 = iadd ssa_510, ssa_525
bb_03	:  PC=0x1240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1781) shl.b32 %ssa_527, %ssa_526, %ssa_26_bits; // vec1 32 ssa_527 = ishl ssa_526, ssa_26
bb_03	:  PC=0x1248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1784) add.s32 %ssa_528, %ssa_527, %ssa_25_bits; // vec1 32 ssa_528 = iadd ssa_527, ssa_25
bb_03	:  PC=0x1250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1787) add.s32 %ssa_529, %ssa_526, %ssa_267_bits; // vec1 32 ssa_529 = iadd ssa_526, ssa_267
bb_03	:  PC=0x1258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1790) xor.b32 %ssa_530, %ssa_528, %ssa_529;// vec1 32 ssa_530 = ixor ssa_528, ssa_529
bb_03	:  PC=0x1260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1793) shr.u32 %ssa_531, %ssa_526, %ssa_12_bits; // vec1 32 ssa_531 = ushr ssa_526, ssa_12
bb_03	:  PC=0x1268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1796) add.s32 %ssa_532, %ssa_531, %ssa_24_bits; // vec1 32 ssa_532 = iadd ssa_531, ssa_24
bb_03	:  PC=0x1270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1799) xor.b32 %ssa_533, %ssa_530, %ssa_532;// vec1 32 ssa_533 = ixor ssa_530, ssa_532
bb_03	:  PC=0x1278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1802) add.s32 %ssa_534, %ssa_518, %ssa_533;// vec1 32 ssa_534 = iadd ssa_518, ssa_533
bb_03	:  PC=0x1280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1805) shl.b32 %ssa_535, %ssa_534, %ssa_26_bits; // vec1 32 ssa_535 = ishl ssa_534, ssa_26
bb_03	:  PC=0x1288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1808) add.s32 %ssa_536, %ssa_535, %ssa_28_bits; // vec1 32 ssa_536 = iadd ssa_535, ssa_28
bb_03	:  PC=0x1290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1811) add.s32 %ssa_537, %ssa_534, %ssa_284_bits; // vec1 32 ssa_537 = iadd ssa_534, ssa_284
bb_03	:  PC=0x1298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1814) xor.b32 %ssa_538, %ssa_536, %ssa_537;// vec1 32 ssa_538 = ixor ssa_536, ssa_537
bb_03	:  PC=0x12a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1817) shr.u32 %ssa_539, %ssa_534, %ssa_12_bits; // vec1 32 ssa_539 = ushr ssa_534, ssa_12
bb_03	:  PC=0x12a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1820) add.s32 %ssa_540, %ssa_539, %ssa_27_bits; // vec1 32 ssa_540 = iadd ssa_539, ssa_27
bb_03	:  PC=0x12b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1823) xor.b32 %ssa_541, %ssa_538, %ssa_540;// vec1 32 ssa_541 = ixor ssa_538, ssa_540
bb_03	:  PC=0x12b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1826) add.s32 %ssa_542, %ssa_526, %ssa_541;// vec1 32 ssa_542 = iadd ssa_526, ssa_541
bb_03	:  PC=0x12c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1829) mov.b64 %ssa_543, %Ray; // vec1 32 ssa_543 = deref_var &Ray (function_temp RayPayload) 
bb_03	:  PC=0x12c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1832) add.u64 %ssa_544, %ssa_543, 44; // vec1 32 ssa_544 = deref_struct &ssa_543->RandomSeed (function_temp uint) /* &Ray.RandomSeed */
bb_03	:  PC=0x12d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1834) st.global.s32 [%ssa_544], %ssa_542; // intrinsic store_deref (%ssa_544, %ssa_542) (1, 0) /* wrmask=x */ /* access=0 */
bb_03	:  PC=0x12d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1837) mov.f32 %ssa_878, 0F00000000; // vec1 32 ssa_878 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x12e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1839) mov.b32 %ssa_878_bits, 0F00000000;
bb_03	:  PC=0x12e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1842) mov.f32 %ssa_879, 0F00000000; // vec1 32 ssa_879 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x12f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1844) mov.b32 %ssa_879_bits, 0F00000000;
bb_03	:  PC=0x12f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1847) mov.f32 %ssa_880, 0F00000000; // vec1 32 ssa_880 = load_const (0x00000000 /* 0.000000 */)
bb_03	:  PC=0x1300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1849) mov.b32 %ssa_880_bits, 0F00000000;
bb_03	:  PC=0x1308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1851) mov.b32 %ssa_827, %ssa_878_bits; // vec1 32 ssa_827 = phi block_0: ssa_878, block_28: ssa_826
bb_03	:  PC=0x1310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1852) mov.b32 %ssa_830, %ssa_879_bits; // vec1 32 ssa_830 = phi block_0: ssa_879, block_28: ssa_829
bb_03	:  PC=0x1318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1853) mov.b32 %ssa_833, %ssa_880_bits; // vec1 32 ssa_833 = phi block_0: ssa_880, block_28: ssa_832
bb_03	:  PC=0x1320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1854) mov.s32 %ssa_546, %ssa_22; // vec1 32 ssa_546 = phi block_0: ssa_22, block_28: ssa_564
bb_03	:  PC=0x1328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1855) mov.s32 %ssa_547, %ssa_2_bits; // vec1 32 ssa_547 = phi block_0: ssa_2, block_28: ssa_802

bb_04	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1866) .reg .b32 %ssa_834_0;
bb_04	:  PC=0x1330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1870) mov.b32 %ssa_834_0, %ssa_827;
bb_04	:  PC=0x1338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1871) mov.b32 %ssa_834_1, %ssa_830;
bb_04	:  PC=0x1340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1872) mov.b32 %ssa_834_2, %ssa_833; // vec3 32 ssa_834 = vec3 ssa_827, ssa_830, ssa_833
bb_04	:  PC=0x1348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1875) add.u64 %ssa_548, %ssa_20, 288; // vec2 32 ssa_548 = deref_struct &ssa_20->NumberOfSamples (ubo uint) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.NumberOfSamples */
bb_04	:  PC=0x1350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1878) ld.global.u32 %ssa_549, [%ssa_548]; // vec1 32 ssa_549 = intrinsic load_deref (%ssa_548) (16) /* access=16 */
bb_04	:  PC=0x1358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1881) setp.ge.u32 %ssa_550, %ssa_547, %ssa_549;// vec1  1 ssa_550 = uge ssa_547, ssa_549
bb_04	:  PC=0x1360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1886) @!%ssa_550 bra else_0;

bb_05	:  PC=0x1368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1890) bra loop_0_exit;

bb_06	:  PC=0x1370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1894) bra end_if_0;

bb_07	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1901) end_if_0:
bb_07	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1904) .reg .f32 %ssa_551;
bb_07	:  PC=0x1378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1905) cvt.rn.f32.u32 %ssa_551, %ssa_23_0; // vec1 32 ssa_551 = u2f32 ssa_23.x
bb_07	:  PC=0x1380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1908) mov.f32 %ssa_552, 0F00ffffff; // vec1 32 ssa_552 = load_const (0x00ffffff /* 0.000000 */)
bb_07	:  PC=0x1388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1910) mov.b32 %ssa_552_bits, 0F00ffffff;
bb_07	:  PC=0x1390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1913) mov.f32 %ssa_553, 0F3c6ef35f; // vec1 32 ssa_553 = load_const (0x3c6ef35f /* 0.014584 */)
bb_07	:  PC=0x1398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1915) mov.b32 %ssa_553_bits, 0F3c6ef35f;
bb_07	:  PC=0x13a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1918) mov.f32 %ssa_554, 0F0019660d; // vec1 32 ssa_554 = load_const (0x0019660d /* 0.000000 */)
bb_07	:  PC=0x13a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1920) mov.b32 %ssa_554_bits, 0F0019660d;
bb_07	:  PC=0x13b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1923) mul.lo.s32 %ssa_555, %ssa_554_bits, %ssa_546; // vec1 32 ssa_555 = imul ssa_554, ssa_546
bb_07	:  PC=0x13b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1926) add.s32 %ssa_556, %ssa_555, %ssa_553_bits; // vec1 32 ssa_556 = iadd ssa_555, ssa_553
bb_07	:  PC=0x13c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1929) and.b32 %ssa_557, %ssa_556, %ssa_552;// vec1 32 ssa_557 = iand ssa_556, ssa_552
bb_07	:  PC=0x13c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1932) cvt.rn.f32.u32 %ssa_558, %ssa_557;// vec1 32 ssa_558 = u2f32 ssa_557
bb_07	:  PC=0x13d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1935) mov.f32 %ssa_559, 0F33800000; // vec1 32 ssa_559 = load_const (0x33800000 /* 0.000000 */)
bb_07	:  PC=0x13d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1937) mov.b32 %ssa_559_bits, 0F33800000;
bb_07	:  PC=0x13e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1940) mul.f32 %ssa_560, %ssa_558, %ssa_559;// vec1 32 ssa_560 = fmul ssa_558, ssa_559
bb_07	:  PC=0x13e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1943) add.f32 %ssa_561, %ssa_551, %ssa_560;// vec1 32 ssa_561 = fadd ssa_551, ssa_560
bb_07	:  PC=0x13f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1946) cvt.rn.f32.u32 %ssa_562, %ssa_23_1; // vec1 32 ssa_562 = u2f32 ssa_23.y
bb_07	:  PC=0x13f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1949) mul.lo.s32 %ssa_563, %ssa_554_bits, %ssa_556; // vec1 32 ssa_563 = imul ssa_554, ssa_556
bb_07	:  PC=0x1400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1952) add.s32 %ssa_564, %ssa_563, %ssa_553_bits; // vec1 32 ssa_564 = iadd ssa_563, ssa_553
bb_07	:  PC=0x1408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1955) and.b32 %ssa_565, %ssa_564, %ssa_552;// vec1 32 ssa_565 = iand ssa_564, ssa_552
bb_07	:  PC=0x1410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1958) cvt.rn.f32.u32 %ssa_566, %ssa_565;// vec1 32 ssa_566 = u2f32 ssa_565
bb_07	:  PC=0x1418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1961) mul.f32 %ssa_567, %ssa_566, %ssa_559;// vec1 32 ssa_567 = fmul ssa_566, ssa_559
bb_07	:  PC=0x1420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1964) add.f32 %ssa_568, %ssa_562, %ssa_567;// vec1 32 ssa_568 = fadd ssa_562, ssa_567
bb_07	:  PC=0x1428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1970) load_ray_launch_size %ssa_569_0, %ssa_569_1, %ssa_569_2; // vec3 32 ssa_569 = intrinsic load_ray_launch_size () ()
bb_07	:  PC=0x1430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1973) cvt.rn.f32.u32 %ssa_570, %ssa_569_0; // vec1 32 ssa_570 = u2f32 ssa_569.x
bb_07	:  PC=0x1438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1976) cvt.rn.f32.u32 %ssa_571, %ssa_569_1; // vec1 32 ssa_571 = u2f32 ssa_569.y
bb_07	:  PC=0x1440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1979) rcp.approx.f32 %ssa_572, %ssa_570;// vec1 32 ssa_572 = frcp ssa_570
bb_07	:  PC=0x1448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1982) rcp.approx.f32 %ssa_573, %ssa_571;// vec1 32 ssa_573 = frcp ssa_571
bb_07	:  PC=0x1450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1985) mul.f32 %ssa_574, %ssa_561, %ssa_15;// vec1 32 ssa_574 = fmul ssa_561, ssa_15
bb_07	:  PC=0x1458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1988) mul.f32 %ssa_575, %ssa_568, %ssa_15;// vec1 32 ssa_575 = fmul ssa_568, ssa_15
bb_07	:  PC=0x1460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1991) mul.f32 %ssa_576, %ssa_574, %ssa_572;// vec1 32 ssa_576 = fmul ssa_574, ssa_572
bb_07	:  PC=0x1468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1994) mul.f32 %ssa_577, %ssa_575, %ssa_573;// vec1 32 ssa_577 = fmul ssa_575, ssa_573
bb_07	:  PC=0x1470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1998) mov.f32 %ssa_578_0, 0Fbf800000;
bb_07	:  PC=0x1478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1999) mov.f32 %ssa_578_1, 0Fbf800000;
bb_07	:  PC=0x1480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2003) add.f32 %ssa_579, %ssa_576, %ssa_578_0; // vec1 32 ssa_579 = fadd ssa_576, ssa_578.x
bb_07	:  PC=0x1488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2006) add.f32 %ssa_580, %ssa_577, %ssa_578_1; // vec1 32 ssa_580 = fadd ssa_577, ssa_578.y
bb_07	:  PC=0x1490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2009) add.u64 %ssa_581, %ssa_20, 272; // vec2 32 ssa_581 = deref_struct &ssa_20->Aperture (ubo float) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.Aperture */
bb_07	:  PC=0x1498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2012) ld.global.f32 %ssa_582, [%ssa_581]; // vec1 32 ssa_582 = intrinsic load_deref (%ssa_581) (16) /* access=16 */
bb_07	:  PC=0x14a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2015) mov.f32 %ssa_583, 0F3f000000; // vec1 32 ssa_583 = load_const (0x3f000000 /* 0.500000 */)
bb_07	:  PC=0x14a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2017) mov.b32 %ssa_583_bits, 0F3f000000;
bb_07	:  PC=0x14b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2020) mul.f32 %ssa_584, %ssa_582, %ssa_583;// vec1 32 ssa_584 = fmul ssa_582, ssa_583
bb_07	:  PC=0x14b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2023) ld.global.u32 %ssa_585, [%ssa_544]; // vec1 32 ssa_585 = intrinsic load_deref (%ssa_544) (0) /* access=0 */
bb_07	:  PC=0x14c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2025) mov.s32 %ssa_586, %ssa_585; // vec1 32 ssa_586 = phi block_4: ssa_585, block_8: ssa_592

bb_08	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2032) .reg .s32 %ssa_587;
bb_08	:  PC=0x14c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2033) mul.lo.s32 %ssa_587, %ssa_554_bits, %ssa_586; // vec1 32 ssa_587 = imul ssa_554, ssa_586
bb_08	:  PC=0x14d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2036) add.s32 %ssa_588, %ssa_587, %ssa_553_bits; // vec1 32 ssa_588 = iadd ssa_587, ssa_553
bb_08	:  PC=0x14d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2039) and.b32 %ssa_589, %ssa_588, %ssa_552;// vec1 32 ssa_589 = iand ssa_588, ssa_552
bb_08	:  PC=0x14e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2042) cvt.rn.f32.u32 %ssa_590, %ssa_589;// vec1 32 ssa_590 = u2f32 ssa_589
bb_08	:  PC=0x14e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2045) mul.lo.s32 %ssa_591, %ssa_554_bits, %ssa_588; // vec1 32 ssa_591 = imul ssa_554, ssa_588
bb_08	:  PC=0x14f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2048) add.s32 %ssa_592, %ssa_591, %ssa_553_bits; // vec1 32 ssa_592 = iadd ssa_591, ssa_553
bb_08	:  PC=0x14f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2051) and.b32 %ssa_593, %ssa_592, %ssa_552;// vec1 32 ssa_593 = iand ssa_592, ssa_552
bb_08	:  PC=0x1500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2054) cvt.rn.f32.u32 %ssa_594, %ssa_593;// vec1 32 ssa_594 = u2f32 ssa_593
bb_08	:  PC=0x1508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2057) mov.f32 %ssa_595, 0F34000000; // vec1 32 ssa_595 = load_const (0x34000000 /* 0.000000 */)
bb_08	:  PC=0x1510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2059) mov.b32 %ssa_595_bits, 0F34000000;
bb_08	:  PC=0x1518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2062) mul.f32 %ssa_596, %ssa_595, %ssa_590;// vec1 32 ssa_596 = fmul ssa_595, ssa_590
bb_08	:  PC=0x1520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2065) mul.f32 %ssa_597, %ssa_595, %ssa_594;// vec1 32 ssa_597 = fmul ssa_595, ssa_594
bb_08	:  PC=0x1528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2068) add.f32 %ssa_598, %ssa_596, %ssa_578_0; // vec1 32 ssa_598 = fadd ssa_596, ssa_578.x
bb_08	:  PC=0x1530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2071) add.f32 %ssa_599, %ssa_597, %ssa_578_1; // vec1 32 ssa_599 = fadd ssa_597, ssa_578.y
bb_08	:  PC=0x1538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2074) mul.f32 %ssa_600, %ssa_598, %ssa_598;// vec1 32 ssa_600 = fmul ssa_598, ssa_598
bb_08	:  PC=0x1540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2077) mul.f32 %ssa_601, %ssa_599, %ssa_599;// vec1 32 ssa_601 = fmul ssa_599, ssa_599
bb_08	:  PC=0x1548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2080) add.f32 %ssa_602, %ssa_600, %ssa_601;// vec1 32 ssa_602 = fadd ssa_600, ssa_601
bb_08	:  PC=0x1550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2083) setp.lt.f32 %ssa_603, %ssa_602, %ssa_13;// vec1  1 ssa_603 = flt! ssa_602, ssa_13
bb_08	:  PC=0x1558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2088) @!%ssa_603 bra else_1;

bb_09	:  PC=0x1560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2092) bra loop_1_exit;

bb_10	:  PC=0x1568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2096) bra end_if_1;

bb_11	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2103) end_if_1:
bb_11	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2106) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_585, block_8: ssa_592
bb_11	:  PC=0x1570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2106) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_585, block_8: ssa_592
bb_11	:  PC=0x1578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2109) bra loop_1;

bb_12	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2114) st.global.s32 [%ssa_544], %ssa_592; // intrinsic store_deref (%ssa_544, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
bb_12	:  PC=0x1580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2114) st.global.s32 [%ssa_544], %ssa_592; // intrinsic store_deref (%ssa_544, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
bb_12	:  PC=0x1588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2117) mul.f32 %ssa_604, %ssa_598, %ssa_584;// vec1 32 ssa_604 = fmul ssa_598, ssa_584
bb_12	:  PC=0x1590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2120) mul.f32 %ssa_605, %ssa_599, %ssa_584;// vec1 32 ssa_605 = fmul ssa_599, ssa_584
bb_12	:  PC=0x1598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2123) add.u64 %ssa_606, %ssa_20, 128; // vec2 32 ssa_606 = deref_struct &ssa_20->ModelViewInverse (ubo mat4x16a0B) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ModelViewInverse */
bb_12	:  PC=0x15a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2126) add.u64 %ssa_607, %ssa_606, 0; // vec2 32 ssa_607 = deref_array &(*ssa_606)[0] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ModelViewInverse[0] */
bb_12	:  PC=0x15a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2132) ld.global.f32 %ssa_608_0, [%ssa_607 + 0];
bb_12	:  PC=0x15b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2133) ld.global.f32 %ssa_608_1, [%ssa_607 + 4];
bb_12	:  PC=0x15b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2134) ld.global.f32 %ssa_608_2, [%ssa_607 + 8];
bb_12	:  PC=0x15c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2135) ld.global.f32 %ssa_608_3, [%ssa_607 + 12];
bb_12	:  PC=0x15c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2140) add.u64 %ssa_609, %ssa_606, 16; // vec2 32 ssa_609 = deref_array &(*ssa_606)[1] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ModelViewInverse[1] */
bb_12	:  PC=0x15d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2146) ld.global.f32 %ssa_610_0, [%ssa_609 + 0];
bb_12	:  PC=0x15d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2147) ld.global.f32 %ssa_610_1, [%ssa_609 + 4];
bb_12	:  PC=0x15e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2148) ld.global.f32 %ssa_610_2, [%ssa_609 + 8];
bb_12	:  PC=0x15e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2149) ld.global.f32 %ssa_610_3, [%ssa_609 + 12];
bb_12	:  PC=0x15f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2154) mov.f32 %ssa_611, 0F00000003; // vec1 32 ssa_611 = load_const (0x00000003 /* 0.000000 */)
bb_12	:  PC=0x15f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2156) mov.b32 %ssa_611_bits, 0F00000003;
bb_12	:  PC=0x1600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2159) add.u64 %ssa_612, %ssa_606, 48; // vec2 32 ssa_612 = deref_array &(*ssa_606)[3] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ModelViewInverse[3] */
bb_12	:  PC=0x1608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2165) ld.global.f32 %ssa_613_0, [%ssa_612 + 0];
bb_12	:  PC=0x1610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2166) ld.global.f32 %ssa_613_1, [%ssa_612 + 4];
bb_12	:  PC=0x1618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2167) ld.global.f32 %ssa_613_2, [%ssa_612 + 8];
bb_12	:  PC=0x1620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2168) ld.global.f32 %ssa_613_3, [%ssa_612 + 12];
bb_12	:  PC=0x1628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2173) mul.f32 %ssa_614, %ssa_610_0, %ssa_605; // vec1 32 ssa_614 = fmul ssa_610.x, ssa_605
bb_12	:  PC=0x1630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2176) mul.f32 %ssa_615, %ssa_610_1, %ssa_605; // vec1 32 ssa_615 = fmul ssa_610.y, ssa_605
bb_12	:  PC=0x1638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2179) mul.f32 %ssa_616, %ssa_610_2, %ssa_605; // vec1 32 ssa_616 = fmul ssa_610.z, ssa_605
bb_12	:  PC=0x1640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2182) add.f32 %ssa_617, %ssa_614, %ssa_613_0; // vec1 32 ssa_617 = fadd ssa_614, ssa_613.x
bb_12	:  PC=0x1648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2185) add.f32 %ssa_618, %ssa_615, %ssa_613_1; // vec1 32 ssa_618 = fadd ssa_615, ssa_613.y
bb_12	:  PC=0x1650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2188) add.f32 %ssa_619, %ssa_616, %ssa_613_2; // vec1 32 ssa_619 = fadd ssa_616, ssa_613.z
bb_12	:  PC=0x1658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2191) mul.f32 %ssa_620, %ssa_608_0, %ssa_604; // vec1 32 ssa_620 = fmul ssa_608.x, ssa_604
bb_12	:  PC=0x1660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2194) mul.f32 %ssa_621, %ssa_608_1, %ssa_604; // vec1 32 ssa_621 = fmul ssa_608.y, ssa_604
bb_12	:  PC=0x1668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2197) mul.f32 %ssa_622, %ssa_608_2, %ssa_604; // vec1 32 ssa_622 = fmul ssa_608.z, ssa_604
bb_12	:  PC=0x1670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2200) add.f32 %ssa_623, %ssa_620, %ssa_617;// vec1 32 ssa_623 = fadd ssa_620, ssa_617
bb_12	:  PC=0x1678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2203) add.f32 %ssa_624, %ssa_621, %ssa_618;// vec1 32 ssa_624 = fadd ssa_621, ssa_618
bb_12	:  PC=0x1680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2206) add.f32 %ssa_625, %ssa_622, %ssa_619;// vec1 32 ssa_625 = fadd ssa_622, ssa_619
bb_12	:  PC=0x1688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2209) add.u64 %ssa_626, %ssa_20, 192; // vec2 32 ssa_626 = deref_struct &ssa_20->ProjectionInverse (ubo mat4x16a0B) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ProjectionInverse */
bb_12	:  PC=0x1690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2212) add.u64 %ssa_627, %ssa_626, 0; // vec2 32 ssa_627 = deref_array &(*ssa_626)[0] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ProjectionInverse[0] */
bb_12	:  PC=0x1698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2218) ld.global.f32 %ssa_628_0, [%ssa_627 + 0];
bb_12	:  PC=0x16a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2219) ld.global.f32 %ssa_628_1, [%ssa_627 + 4];
bb_12	:  PC=0x16a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2220) ld.global.f32 %ssa_628_2, [%ssa_627 + 8];
bb_12	:  PC=0x16b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2221) ld.global.f32 %ssa_628_3, [%ssa_627 + 12];
bb_12	:  PC=0x16b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2226) add.u64 %ssa_629, %ssa_626, 16; // vec2 32 ssa_629 = deref_array &(*ssa_626)[1] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ProjectionInverse[1] */
bb_12	:  PC=0x16c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2232) ld.global.f32 %ssa_630_0, [%ssa_629 + 0];
bb_12	:  PC=0x16c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2233) ld.global.f32 %ssa_630_1, [%ssa_629 + 4];
bb_12	:  PC=0x16d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2234) ld.global.f32 %ssa_630_2, [%ssa_629 + 8];
bb_12	:  PC=0x16d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2235) ld.global.f32 %ssa_630_3, [%ssa_629 + 12];
bb_12	:  PC=0x16e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2240) mov.f32 %ssa_631, 0F00000002; // vec1 32 ssa_631 = load_const (0x00000002 /* 0.000000 */)
bb_12	:  PC=0x16e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2242) mov.b32 %ssa_631_bits, 0F00000002;
bb_12	:  PC=0x16f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2245) add.u64 %ssa_632, %ssa_626, 32; // vec2 32 ssa_632 = deref_array &(*ssa_626)[2] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ProjectionInverse[2] */
bb_12	:  PC=0x16f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2251) ld.global.f32 %ssa_633_0, [%ssa_632 + 0];
bb_12	:  PC=0x1700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2252) ld.global.f32 %ssa_633_1, [%ssa_632 + 4];
bb_12	:  PC=0x1708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2253) ld.global.f32 %ssa_633_2, [%ssa_632 + 8];
bb_12	:  PC=0x1710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2254) ld.global.f32 %ssa_633_3, [%ssa_632 + 12];
bb_12	:  PC=0x1718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2259) add.u64 %ssa_634, %ssa_626, 48; // vec2 32 ssa_634 = deref_array &(*ssa_626)[3] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ProjectionInverse[3] */
bb_12	:  PC=0x1720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2265) ld.global.f32 %ssa_635_0, [%ssa_634 + 0];
bb_12	:  PC=0x1728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2266) ld.global.f32 %ssa_635_1, [%ssa_634 + 4];
bb_12	:  PC=0x1730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2267) ld.global.f32 %ssa_635_2, [%ssa_634 + 8];
bb_12	:  PC=0x1738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2268) ld.global.f32 %ssa_635_3, [%ssa_634 + 12];
bb_12	:  PC=0x1740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2273) add.f32 %ssa_636, %ssa_633_0, %ssa_635_0; // vec1 32 ssa_636 = fadd ssa_633.x, ssa_635.x
bb_12	:  PC=0x1748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2276) add.f32 %ssa_637, %ssa_633_1, %ssa_635_1; // vec1 32 ssa_637 = fadd ssa_633.y, ssa_635.y
bb_12	:  PC=0x1750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2279) add.f32 %ssa_638, %ssa_633_2, %ssa_635_2; // vec1 32 ssa_638 = fadd ssa_633.z, ssa_635.z
bb_12	:  PC=0x1758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2282) mul.f32 %ssa_639, %ssa_630_0, %ssa_580; // vec1 32 ssa_639 = fmul ssa_630.x, ssa_580
bb_12	:  PC=0x1760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2285) mul.f32 %ssa_640, %ssa_630_1, %ssa_580; // vec1 32 ssa_640 = fmul ssa_630.y, ssa_580
bb_12	:  PC=0x1768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2288) mul.f32 %ssa_641, %ssa_630_2, %ssa_580; // vec1 32 ssa_641 = fmul ssa_630.z, ssa_580
bb_12	:  PC=0x1770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2291) add.f32 %ssa_642, %ssa_639, %ssa_636;// vec1 32 ssa_642 = fadd ssa_639, ssa_636
bb_12	:  PC=0x1778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2294) add.f32 %ssa_643, %ssa_640, %ssa_637;// vec1 32 ssa_643 = fadd ssa_640, ssa_637
bb_12	:  PC=0x1780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2297) add.f32 %ssa_644, %ssa_641, %ssa_638;// vec1 32 ssa_644 = fadd ssa_641, ssa_638
bb_12	:  PC=0x1788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2300) mul.f32 %ssa_645, %ssa_628_0, %ssa_579; // vec1 32 ssa_645 = fmul ssa_628.x, ssa_579
bb_12	:  PC=0x1790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2303) mul.f32 %ssa_646, %ssa_628_1, %ssa_579; // vec1 32 ssa_646 = fmul ssa_628.y, ssa_579
bb_12	:  PC=0x1798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2306) mul.f32 %ssa_647, %ssa_628_2, %ssa_579; // vec1 32 ssa_647 = fmul ssa_628.z, ssa_579
bb_12	:  PC=0x17a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2309) add.f32 %ssa_648, %ssa_645, %ssa_642;// vec1 32 ssa_648 = fadd ssa_645, ssa_642
bb_12	:  PC=0x17a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2312) add.f32 %ssa_649, %ssa_646, %ssa_643;// vec1 32 ssa_649 = fadd ssa_646, ssa_643
bb_12	:  PC=0x17b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2315) add.f32 %ssa_650, %ssa_647, %ssa_644;// vec1 32 ssa_650 = fadd ssa_647, ssa_644
bb_12	:  PC=0x17b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2318) add.u64 %ssa_651, %ssa_606, 32; // vec2 32 ssa_651 = deref_array &(*ssa_606)[2] (ubo vec4) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.ModelViewInverse[2] */
bb_12	:  PC=0x17c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2324) ld.global.f32 %ssa_652_0, [%ssa_651 + 0];
bb_12	:  PC=0x17c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2325) ld.global.f32 %ssa_652_1, [%ssa_651 + 4];
bb_12	:  PC=0x17d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2326) ld.global.f32 %ssa_652_2, [%ssa_651 + 8];
bb_12	:  PC=0x17d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2327) ld.global.f32 %ssa_652_3, [%ssa_651 + 12];
bb_12	:  PC=0x17e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2332) add.u64 %ssa_653, %ssa_20, 276; // vec2 32 ssa_653 = deref_struct &ssa_20->FocusDistance (ubo float) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.FocusDistance */
bb_12	:  PC=0x17e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2335) ld.global.f32 %ssa_654, [%ssa_653]; // vec1 32 ssa_654 = intrinsic load_deref (%ssa_653) (16) /* access=16 */
bb_12	:  PC=0x17f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2338) mul.f32 %ssa_655, %ssa_648, %ssa_654;// vec1 32 ssa_655 = fmul ssa_648, ssa_654
bb_12	:  PC=0x17f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2341) mul.f32 %ssa_656, %ssa_649, %ssa_654;// vec1 32 ssa_656 = fmul ssa_649, ssa_654
bb_12	:  PC=0x1800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2344) mul.f32 %ssa_657, %ssa_650, %ssa_654;// vec1 32 ssa_657 = fmul ssa_650, ssa_654
bb_12	:  PC=0x1808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2347) neg.f32 %ssa_658, %ssa_604;// vec1 32 ssa_658 = fneg ssa_604
bb_12	:  PC=0x1810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2350) neg.f32 %ssa_659, %ssa_605;// vec1 32 ssa_659 = fneg ssa_605
bb_12	:  PC=0x1818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2353) add.f32 %ssa_660, %ssa_655, %ssa_658;// vec1 32 ssa_660 = fadd ssa_655, ssa_658
bb_12	:  PC=0x1820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2356) add.f32 %ssa_661, %ssa_656, %ssa_659;// vec1 32 ssa_661 = fadd ssa_656, ssa_659
bb_12	:  PC=0x1828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2359) mul.f32 %ssa_662, %ssa_660, %ssa_660;// vec1 32 ssa_662 = fmul ssa_660, ssa_660
bb_12	:  PC=0x1830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2362) mul.f32 %ssa_663, %ssa_661, %ssa_661;// vec1 32 ssa_663 = fmul ssa_661, ssa_661
bb_12	:  PC=0x1838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2365) mul.f32 %ssa_664, %ssa_657, %ssa_657;// vec1 32 ssa_664 = fmul ssa_657, ssa_657
bb_12	:  PC=0x1840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2371) mov.f32 %ssa_665_0, %ssa_662;
bb_12	:  PC=0x1848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2372) mov.f32 %ssa_665_1, %ssa_663;
bb_12	:  PC=0x1850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2373) mov.f32 %ssa_665_2, %ssa_664; // vec3 32 ssa_665 = vec3 ssa_662, ssa_663, ssa_664
bb_12	:  PC=0x1858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2376) add.f32 %ssa_666, %ssa_665_0, %ssa_665_1;
bb_12	:  PC=0x1860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2377) add.f32 %ssa_666, %ssa_666, %ssa_665_2; // vec1 32 ssa_666 = fsum3 ssa_665
bb_12	:  PC=0x1868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2380) rsqrt.approx.f32 %ssa_667, %ssa_666;// vec1 32 ssa_667 = frsq ssa_666
bb_12	:  PC=0x1870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2383) mul.f32 %ssa_668, %ssa_660, %ssa_667;// vec1 32 ssa_668 = fmul ssa_660, ssa_667
bb_12	:  PC=0x1878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2386) mul.f32 %ssa_669, %ssa_661, %ssa_667;// vec1 32 ssa_669 = fmul ssa_661, ssa_667
bb_12	:  PC=0x1880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2389) mul.f32 %ssa_670, %ssa_657, %ssa_667;// vec1 32 ssa_670 = fmul ssa_657, ssa_667
bb_12	:  PC=0x1888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2392) mul.f32 %ssa_671, %ssa_652_0, %ssa_670; // vec1 32 ssa_671 = fmul ssa_652.x, ssa_670
bb_12	:  PC=0x1890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2395) mul.f32 %ssa_672, %ssa_652_1, %ssa_670; // vec1 32 ssa_672 = fmul ssa_652.y, ssa_670
bb_12	:  PC=0x1898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2398) mul.f32 %ssa_673, %ssa_652_2, %ssa_670; // vec1 32 ssa_673 = fmul ssa_652.z, ssa_670
bb_12	:  PC=0x18a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2401) mul.f32 %ssa_674, %ssa_610_0, %ssa_669; // vec1 32 ssa_674 = fmul ssa_610.x, ssa_669
bb_12	:  PC=0x18a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2404) mul.f32 %ssa_675, %ssa_610_1, %ssa_669; // vec1 32 ssa_675 = fmul ssa_610.y, ssa_669
bb_12	:  PC=0x18b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2407) mul.f32 %ssa_676, %ssa_610_2, %ssa_669; // vec1 32 ssa_676 = fmul ssa_610.z, ssa_669
bb_12	:  PC=0x18b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2410) add.f32 %ssa_677, %ssa_674, %ssa_671;// vec1 32 ssa_677 = fadd ssa_674, ssa_671
bb_12	:  PC=0x18c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2413) add.f32 %ssa_678, %ssa_675, %ssa_672;// vec1 32 ssa_678 = fadd ssa_675, ssa_672
bb_12	:  PC=0x18c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2416) add.f32 %ssa_679, %ssa_676, %ssa_673;// vec1 32 ssa_679 = fadd ssa_676, ssa_673
bb_12	:  PC=0x18d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2419) mul.f32 %ssa_680, %ssa_608_0, %ssa_668; // vec1 32 ssa_680 = fmul ssa_608.x, ssa_668
bb_12	:  PC=0x18d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2422) mul.f32 %ssa_681, %ssa_608_1, %ssa_668; // vec1 32 ssa_681 = fmul ssa_608.y, ssa_668
bb_12	:  PC=0x18e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2425) mul.f32 %ssa_682, %ssa_608_2, %ssa_668; // vec1 32 ssa_682 = fmul ssa_608.z, ssa_668
bb_12	:  PC=0x18e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2428) add.f32 %ssa_683, %ssa_680, %ssa_677;// vec1 32 ssa_683 = fadd ssa_680, ssa_677
bb_12	:  PC=0x18f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2431) add.f32 %ssa_684, %ssa_681, %ssa_678;// vec1 32 ssa_684 = fadd ssa_681, ssa_678
bb_12	:  PC=0x18f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2434) add.f32 %ssa_685, %ssa_682, %ssa_679;// vec1 32 ssa_685 = fadd ssa_682, ssa_679
bb_12	:  PC=0x1900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2437) load_vulkan_descriptor %ssa_686, 0, 0, 1000150000; // vec1 64 ssa_686 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
bb_12	:  PC=0x1908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2440) mov.b64 %ssa_687, %ssa_686; // vec1 64 ssa_687 = intrinsic load_vulkan_descriptor (%ssa_686) (1000150000) /* desc_type=accel-struct */
bb_12	:  PC=0x1910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2446) mov.f32 %ssa_688_0, %ssa_623;
bb_12	:  PC=0x1918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2447) mov.f32 %ssa_688_1, %ssa_624;
bb_12	:  PC=0x1920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2448) mov.f32 %ssa_688_2, %ssa_625; // vec3 32 ssa_688 = vec3 ssa_623, ssa_624, ssa_625
bb_12	:  PC=0x1928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2454) mov.f32 %ssa_689_0, %ssa_683;
bb_12	:  PC=0x1930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2455) mov.f32 %ssa_689_1, %ssa_684;
bb_12	:  PC=0x1938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2456) mov.f32 %ssa_689_2, %ssa_685; // vec3 32 ssa_689 = vec3 ssa_683, ssa_684, ssa_685
bb_12	:  PC=0x1940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2459) trace_ray %ssa_687, %ssa_8, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_688_0, %ssa_688_1, %ssa_688_2, %ssa_10, %ssa_689_0, %ssa_689_1, %ssa_689_2, %ssa_14, %traversal_finished_0; // intrinsic trace_ray (%ssa_687, %ssa_8, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_688, %ssa_10, %ssa_689, %ssa_14, %ssa_543) ()
bb_12	:  PC=0x1948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2462) mov.u32 %intersection_counter_0, 0;

bb_13	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2464) .reg .pred %intersections_exit_0;
bb_13	:  PC=0x1950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2465) intersection_exit.pred %intersections_exit_0, %intersection_counter_0, %traversal_finished_0;
bb_13	:  PC=0x1958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2466) @%intersections_exit_0 bra exit_intersection_label_0;

bb_14	:  PC=0x1960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2468) get_intersection_shader_data_address %shader_data_address_0, %intersection_counter_0;
bb_14	:  PC=0x1968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2470) get_intersection_shaderID %intersection_shaderID_0, %intersection_counter_0;
bb_14	:  PC=0x1970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2472) setp.ne.u32 %skip_intersection_7_0, %intersection_shaderID_0, 7;
bb_14	:  PC=0x1978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2473) @%skip_intersection_7_0 bra skip_intersection_label_7_0;

bb_15	:  PC=0x1980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2474) call_intersection_shader %intersection_counter_0;

bb_16	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2476) .reg .pred %skip_intersection_8_0;
bb_16	:  PC=0x1988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2477) setp.ne.u32 %skip_intersection_8_0, %intersection_shaderID_0, 8;
bb_16	:  PC=0x1990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2478) @%skip_intersection_8_0 bra skip_intersection_label_8_0;

bb_17	:  PC=0x1998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2479) call_intersection_shader %intersection_counter_0;

bb_18	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2481) .reg .pred %skip_intersection_6_0;
bb_18	:  PC=0x19a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2482) setp.ne.u32 %skip_intersection_6_0, %intersection_shaderID_0, 6;
bb_18	:  PC=0x19a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2483) @%skip_intersection_6_0 bra skip_intersection_label_6_0;

bb_19	:  PC=0x19b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2484) call_intersection_shader %intersection_counter_0;

bb_20	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2486) .reg .pred %skip_intersection_9_0;
bb_20	:  PC=0x19b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2487) setp.ne.u32 %skip_intersection_9_0, %intersection_shaderID_0, 9;
bb_20	:  PC=0x19c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2488) @%skip_intersection_9_0 bra skip_intersection_label_9_0;

bb_21	:  PC=0x19c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2489) call_intersection_shader %intersection_counter_0;

bb_22	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2491) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
bb_22	:  PC=0x19d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2491) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
bb_22	:  PC=0x19d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2492) bra intersection_loop_0;

bb_23	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2496) .reg .pred %hit_geometry_0;
bb_23	:  PC=0x19e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2497) hit_geometry.pred %hit_geometry_0, %traversal_finished_0;
bb_23	:  PC=0x19e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2499) @!%hit_geometry_0 bra exit_closest_hit_label_0;

bb_24	:  PC=0x19f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2501) get_closest_hit_shaderID %closest_hit_shaderID_0;
bb_24	:  PC=0x19f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2503) setp.ne.u32 %skip_closest_hit_3_0, %closest_hit_shaderID_0, 3;
bb_24	:  PC=0x1a00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2504) @%skip_closest_hit_3_0 bra skip_closest_hit_label_3_0;

bb_25	:  PC=0x1a08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2505) call_closest_hit_shader 3;

bb_26	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2507) .reg .pred %skip_closest_hit_5_0;
bb_26	:  PC=0x1a10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2508) setp.ne.u32 %skip_closest_hit_5_0, %closest_hit_shaderID_0, 5;
bb_26	:  PC=0x1a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2509) @%skip_closest_hit_5_0 bra skip_closest_hit_label_5_0;

bb_27	:  PC=0x1a20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2510) call_closest_hit_shader 5;

bb_28	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2512) .reg .pred %skip_closest_hit_4_0;
bb_28	:  PC=0x1a28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2513) setp.ne.u32 %skip_closest_hit_4_0, %closest_hit_shaderID_0, 4;
bb_28	:  PC=0x1a30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2514) @%skip_closest_hit_4_0 bra skip_closest_hit_label_4_0;

bb_29	:  PC=0x1a38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2515) call_closest_hit_shader 4;

bb_30	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2517) .reg .pred %skip_closest_hit_2_0;
bb_30	:  PC=0x1a40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2518) setp.ne.u32 %skip_closest_hit_2_0, %closest_hit_shaderID_0, 2;
bb_30	:  PC=0x1a48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2519) @%skip_closest_hit_2_0 bra skip_closest_hit_label_2_0;

bb_31	:  PC=0x1a50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2520) call_closest_hit_shader 2;

bb_32	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2522) exit_closest_hit_label_0:
bb_32	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2524) @%hit_geometry_0 bra skip_miss_label_0;
bb_32	:  PC=0x1a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2524) @%hit_geometry_0 bra skip_miss_label_0;

bb_33	:  PC=0x1a60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2525) call_miss_shader ;

bb_34	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2528) end_trace_ray ;
bb_34	:  PC=0x1a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2528) end_trace_ray ;
bb_34	:  PC=0x1a70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2531) add.u64 %ssa_690, %ssa_543, 0; // vec1 32 ssa_690 = deref_struct &ssa_543->ColorAndDistance (function_temp vec4) /* &Ray.ColorAndDistance */
bb_34	:  PC=0x1a78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2537) ld.global.f32 %ssa_691_0, [%ssa_690 + 0];
bb_34	:  PC=0x1a80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2538) ld.global.f32 %ssa_691_1, [%ssa_690 + 4];
bb_34	:  PC=0x1a88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2539) ld.global.f32 %ssa_691_2, [%ssa_690 + 8];
bb_34	:  PC=0x1a90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2540) ld.global.f32 %ssa_691_3, [%ssa_690 + 12];
bb_34	:  PC=0x1a98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2545) setp.lt.f32 %ssa_692, %ssa_691_3, %ssa_2; // vec1  1 ssa_692 = flt! ssa_691.w, ssa_2
bb_34	:  PC=0x1aa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2550) @!%ssa_692 bra else_2;

bb_35	:  PC=0x1aa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2555) add.f32 %ssa_693, %ssa_834_0, %ssa_691_0; // vec1 32 ssa_693 = fadd ssa_834.x, ssa_691.x
bb_35	:  PC=0x1ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2558) add.f32 %ssa_694, %ssa_834_1, %ssa_691_1; // vec1 32 ssa_694 = fadd ssa_834.y, ssa_691.y
bb_35	:  PC=0x1ab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2561) add.f32 %ssa_695, %ssa_834_2, %ssa_691_2; // vec1 32 ssa_695 = fadd ssa_834.z, ssa_691.z
bb_35	:  PC=0x1ac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2567) mov.f32 %ssa_696_0, %ssa_693;
bb_35	:  PC=0x1ac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2568) mov.f32 %ssa_696_1, %ssa_694;
bb_35	:  PC=0x1ad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2569) mov.f32 %ssa_696_2, %ssa_695; // vec3 32 ssa_696 = vec3 ssa_693, ssa_694, ssa_695
bb_35	:  PC=0x1ad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2572) mov.f32 %ssa_855, %ssa_696_0; // vec1 32 ssa_855 = mov ssa_696.x
bb_35	:  PC=0x1ae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2575) mov.f32 %ssa_858, %ssa_696_1; // vec1 32 ssa_858 = mov ssa_696.y
bb_35	:  PC=0x1ae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2578) mov.f32 %ssa_861, %ssa_696_2; // vec1 32 ssa_861 = mov ssa_696.z
bb_35	:  PC=0x1af0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2580) mov.f32 %ssa_857, %ssa_855; // vec1 32 ssa_857 = phi block_10: ssa_855, block_27: ssa_856
bb_35	:  PC=0x1af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2581) mov.f32 %ssa_860, %ssa_858; // vec1 32 ssa_860 = phi block_10: ssa_858, block_27: ssa_859
bb_35	:  PC=0x1b00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2582) mov.f32 %ssa_863, %ssa_861; // vec1 32 ssa_863 = phi block_10: ssa_861, block_27: ssa_862
bb_35	:  PC=0x1b08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2585) bra end_if_2;

bb_36	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2590) .reg .f32 %ssa_697_0;
bb_36	:  PC=0x1b10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2594) mov.f32 %ssa_697_0, %ssa_691_0;
bb_36	:  PC=0x1b18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2595) mov.f32 %ssa_697_1, %ssa_691_1;
bb_36	:  PC=0x1b20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2596) mov.f32 %ssa_697_2, %ssa_691_2; // vec3 32 ssa_697 = vec3 ssa_691.x, ssa_691.y, ssa_691.z
bb_36	:  PC=0x1b28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2599) mul.f32 %ssa_698, %ssa_683, %ssa_691_3; // vec1 32 ssa_698 = fmul ssa_683, ssa_691.w
bb_36	:  PC=0x1b30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2602) mul.f32 %ssa_699, %ssa_684, %ssa_691_3; // vec1 32 ssa_699 = fmul ssa_684, ssa_691.w
bb_36	:  PC=0x1b38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2605) mul.f32 %ssa_700, %ssa_685, %ssa_691_3; // vec1 32 ssa_700 = fmul ssa_685, ssa_691.w
bb_36	:  PC=0x1b40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2608) add.f32 %ssa_701, %ssa_623, %ssa_698;// vec1 32 ssa_701 = fadd ssa_623, ssa_698
bb_36	:  PC=0x1b48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2611) add.f32 %ssa_702, %ssa_624, %ssa_699;// vec1 32 ssa_702 = fadd ssa_624, ssa_699
bb_36	:  PC=0x1b50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2614) add.f32 %ssa_703, %ssa_625, %ssa_700;// vec1 32 ssa_703 = fadd ssa_625, ssa_700
bb_36	:  PC=0x1b58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2617) add.u64 %ssa_704, %ssa_543, 32; // vec1 32 ssa_704 = deref_struct &ssa_543->SurfaceNormal (function_temp vec3) /* &Ray.SurfaceNormal */
bb_36	:  PC=0x1b60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2623) ld.global.f32 %ssa_705_0, [%ssa_704 + 0];
bb_36	:  PC=0x1b68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2624) ld.global.f32 %ssa_705_1, [%ssa_704 + 4];
bb_36	:  PC=0x1b70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2625) ld.global.f32 %ssa_705_2, [%ssa_704 + 8];
bb_36	:  PC=0x1b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2630) mul.f32 %ssa_706, %ssa_705_0, %ssa_10; // vec1 32 ssa_706 = fmul ssa_705.x, ssa_10
bb_36	:  PC=0x1b80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2633) mul.f32 %ssa_707, %ssa_705_1, %ssa_10; // vec1 32 ssa_707 = fmul ssa_705.y, ssa_10
bb_36	:  PC=0x1b88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2636) mul.f32 %ssa_708, %ssa_705_2, %ssa_10; // vec1 32 ssa_708 = fmul ssa_705.z, ssa_10
bb_36	:  PC=0x1b90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2639) add.f32 %ssa_709, %ssa_701, %ssa_706;// vec1 32 ssa_709 = fadd ssa_701, ssa_706
bb_36	:  PC=0x1b98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2642) add.f32 %ssa_710, %ssa_702, %ssa_707;// vec1 32 ssa_710 = fadd ssa_702, ssa_707
bb_36	:  PC=0x1ba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2645) add.f32 %ssa_711, %ssa_703, %ssa_708;// vec1 32 ssa_711 = fadd ssa_703, ssa_708
bb_36	:  PC=0x1ba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2651) mov.f32 %ssa_712_0, %ssa_709;
bb_36	:  PC=0x1bb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2652) mov.f32 %ssa_712_1, %ssa_710;
bb_36	:  PC=0x1bb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2653) mov.f32 %ssa_712_2, %ssa_711; // vec3 32 ssa_712 = vec3 ssa_709, ssa_710, ssa_711
bb_36	:  PC=0x1bc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2656) mov.f32 %ssa_835, %ssa_697_0; // vec1 32 ssa_835 = mov ssa_697.x
bb_36	:  PC=0x1bc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2659) mov.f32 %ssa_838, %ssa_697_1; // vec1 32 ssa_838 = mov ssa_697.y
bb_36	:  PC=0x1bd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2662) mov.f32 %ssa_841, %ssa_697_2; // vec1 32 ssa_841 = mov ssa_697.z
bb_36	:  PC=0x1bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2664) mov.f32 %ssa_837, %ssa_835; // vec1 32 ssa_837 = phi block_11: ssa_835, block_26: ssa_836
bb_36	:  PC=0x1be0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2665) mov.f32 %ssa_840, %ssa_838; // vec1 32 ssa_840 = phi block_11: ssa_838, block_26: ssa_839
bb_36	:  PC=0x1be8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2666) mov.f32 %ssa_843, %ssa_841; // vec1 32 ssa_843 = phi block_11: ssa_841, block_26: ssa_842
bb_36	:  PC=0x1bf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2667) mov.b32 %ssa_714, %ssa_14_bits; // vec1 32 ssa_714 = phi block_11: ssa_14, block_26: ssa_778
bb_36	:  PC=0x1bf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2668) mov.s32 %ssa_715, %ssa_2_bits; // vec1 32 ssa_715 = phi block_11: ssa_2, block_26: ssa_796

bb_37	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2679) .reg .b32 %ssa_844_0;
bb_37	:  PC=0x1c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2683) mov.b32 %ssa_844_0, %ssa_837;
bb_37	:  PC=0x1c08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2684) mov.b32 %ssa_844_1, %ssa_840;
bb_37	:  PC=0x1c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2685) mov.b32 %ssa_844_2, %ssa_843; // vec3 32 ssa_844 = vec3 ssa_837, ssa_840, ssa_843
bb_37	:  PC=0x1c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2688) add.u64 %ssa_716, %ssa_20, 296; // vec2 32 ssa_716 = deref_struct &ssa_20->NumberOfShadows (ubo uint) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.NumberOfShadows */
bb_37	:  PC=0x1c20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2691) ld.global.u32 %ssa_717, [%ssa_716]; // vec1 32 ssa_717 = intrinsic load_deref (%ssa_716) (16) /* access=16 */
bb_37	:  PC=0x1c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2694) setp.ge.u32 %ssa_718, %ssa_715, %ssa_717;// vec1  1 ssa_718 = uge ssa_715, ssa_717
bb_37	:  PC=0x1c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2699) @!%ssa_718 bra else_3;

bb_38	:  PC=0x1c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2703) bra loop_2_exit;

bb_39	:  PC=0x1c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2707) bra end_if_3;

bb_40	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2714) end_if_3:
bb_40	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2717) .reg .b64 %ssa_719;
bb_40	:  PC=0x1c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2718) add.u64 %ssa_719, %ssa_20, 312; // vec2 32 ssa_719 = deref_struct &ssa_20->HasSky (ubo uint) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.HasSky */
bb_40	:  PC=0x1c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2721) ld.global.u32 %ssa_720, [%ssa_719]; // vec1 32 ssa_720 = intrinsic load_deref (%ssa_719) (16) /* access=16 */
bb_40	:  PC=0x1c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2724) setp.ne.s32 %ssa_721, %ssa_720, %ssa_2_bits; // vec1  1 ssa_721 = ine ssa_720, ssa_2
bb_40	:  PC=0x1c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2729) @!%ssa_721 bra else_4;

bb_41	:  PC=0x1c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2737) mov.f32 %ssa_722_0, 0F00000000;
bb_41	:  PC=0x1c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2738) mov.f32 %ssa_722_1, 0F3f800000;
bb_41	:  PC=0x1c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2739) mov.f32 %ssa_722_2, 0F00000000;
bb_41	:  PC=0x1c80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2740) mov.f32 %ssa_722_3, 0F00000000;
bb_41	:  PC=0x1c88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2744) mov.f32 %ssa_881, 0F00000000; // vec1 32 ssa_881 = load_const (0x00000000 /* 0.000000 */)
bb_41	:  PC=0x1c90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2746) mov.b32 %ssa_881_bits, 0F00000000;
bb_41	:  PC=0x1c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2749) mov.f32 %ssa_882, 0F3f800000; // vec1 32 ssa_882 = load_const (0x3f800000 /* 1.000000 */)
bb_41	:  PC=0x1ca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2751) mov.b32 %ssa_882_bits, 0F3f800000;
bb_41	:  PC=0x1ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2754) mov.f32 %ssa_883, 0F00000000; // vec1 32 ssa_883 = load_const (0x00000000 /* 0.000000 */)
bb_41	:  PC=0x1cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2756) mov.b32 %ssa_883_bits, 0F00000000;
bb_41	:  PC=0x1cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2758) mov.f32 %ssa_847, %ssa_881; // vec1 32 ssa_847 = phi block_16: ssa_881, block_22: ssa_846
bb_41	:  PC=0x1cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2759) mov.f32 %ssa_850, %ssa_882; // vec1 32 ssa_850 = phi block_16: ssa_882, block_22: ssa_849
bb_41	:  PC=0x1cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2760) mov.f32 %ssa_853, %ssa_883; // vec1 32 ssa_853 = phi block_16: ssa_883, block_22: ssa_852
bb_41	:  PC=0x1cd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2761) mov.b32 %ssa_778, %ssa_714; // vec1 32 ssa_778 = phi block_16: ssa_714, block_22: ssa_771
bb_41	:  PC=0x1cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2764) bra end_if_4;

bb_42	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2769) .reg .b64 %ssa_723;
bb_42	:  PC=0x1ce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2770) add.u64 %ssa_723, %ssa_20, 256; // vec2 32 ssa_723 = deref_struct &ssa_20->LightPosition (ubo vec3) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.LightPosition */
bb_42	:  PC=0x1ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2776) ld.global.f32 %ssa_724_0, [%ssa_723 + 0];
bb_42	:  PC=0x1cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2777) ld.global.f32 %ssa_724_1, [%ssa_723 + 4];
bb_42	:  PC=0x1cf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2778) ld.global.f32 %ssa_724_2, [%ssa_723 + 8];
bb_42	:  PC=0x1d00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2783) add.u64 %ssa_725, %ssa_20, 268; // vec2 32 ssa_725 = deref_struct &ssa_20->LightRadius (ubo float) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.LightRadius */
bb_42	:  PC=0x1d08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2786) ld.global.f32 %ssa_726, [%ssa_725]; // vec1 32 ssa_726 = intrinsic load_deref (%ssa_725) (16) /* access=16 */
bb_42	:  PC=0x1d10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2789) ld.global.u32 %ssa_727, [%ssa_544]; // vec1 32 ssa_727 = intrinsic load_deref (%ssa_544) (0) /* access=0 */
bb_42	:  PC=0x1d18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2791) mov.s32 %ssa_728, %ssa_727; // vec1 32 ssa_728 = phi block_17: ssa_727, block_21: ssa_738

bb_43	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2798) .reg .s32 %ssa_729;
bb_43	:  PC=0x1d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2799) mul.lo.s32 %ssa_729, %ssa_554_bits, %ssa_728; // vec1 32 ssa_729 = imul ssa_554, ssa_728
bb_43	:  PC=0x1d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2802) add.s32 %ssa_730, %ssa_729, %ssa_553_bits; // vec1 32 ssa_730 = iadd ssa_729, ssa_553
bb_43	:  PC=0x1d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2805) and.b32 %ssa_731, %ssa_730, %ssa_552;// vec1 32 ssa_731 = iand ssa_730, ssa_552
bb_43	:  PC=0x1d38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2808) cvt.rn.f32.u32 %ssa_732, %ssa_731;// vec1 32 ssa_732 = u2f32 ssa_731
bb_43	:  PC=0x1d40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2811) mul.lo.s32 %ssa_733, %ssa_554_bits, %ssa_730; // vec1 32 ssa_733 = imul ssa_554, ssa_730
bb_43	:  PC=0x1d48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2814) add.s32 %ssa_734, %ssa_733, %ssa_553_bits; // vec1 32 ssa_734 = iadd ssa_733, ssa_553
bb_43	:  PC=0x1d50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2817) and.b32 %ssa_735, %ssa_734, %ssa_552;// vec1 32 ssa_735 = iand ssa_734, ssa_552
bb_43	:  PC=0x1d58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2820) cvt.rn.f32.u32 %ssa_736, %ssa_735;// vec1 32 ssa_736 = u2f32 ssa_735
bb_43	:  PC=0x1d60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2823) mul.lo.s32 %ssa_737, %ssa_554_bits, %ssa_734; // vec1 32 ssa_737 = imul ssa_554, ssa_734
bb_43	:  PC=0x1d68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2826) add.s32 %ssa_738, %ssa_737, %ssa_553_bits; // vec1 32 ssa_738 = iadd ssa_737, ssa_553
bb_43	:  PC=0x1d70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2829) and.b32 %ssa_739, %ssa_738, %ssa_552;// vec1 32 ssa_739 = iand ssa_738, ssa_552
bb_43	:  PC=0x1d78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2832) cvt.rn.f32.u32 %ssa_740, %ssa_739;// vec1 32 ssa_740 = u2f32 ssa_739
bb_43	:  PC=0x1d80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2835) mul.f32 %ssa_741, %ssa_595, %ssa_732;// vec1 32 ssa_741 = fmul ssa_595, ssa_732
bb_43	:  PC=0x1d88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2838) mul.f32 %ssa_742, %ssa_595, %ssa_736;// vec1 32 ssa_742 = fmul ssa_595, ssa_736
bb_43	:  PC=0x1d90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2841) mul.f32 %ssa_743, %ssa_595, %ssa_740;// vec1 32 ssa_743 = fmul ssa_595, ssa_740
bb_43	:  PC=0x1d98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2847) mov.f32 %ssa_744_0, 0Fbf800000;
bb_43	:  PC=0x1da0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2848) mov.f32 %ssa_744_1, 0Fbf800000;
bb_43	:  PC=0x1da8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2849) mov.f32 %ssa_744_2, 0Fbf800000;
bb_43	:  PC=0x1db0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2850) mov.f32 %ssa_744_3, 0F00000000;
bb_43	:  PC=0x1db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2854) add.f32 %ssa_745, %ssa_741, %ssa_744_0; // vec1 32 ssa_745 = fadd ssa_741, ssa_744.x
bb_43	:  PC=0x1dc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2857) add.f32 %ssa_746, %ssa_742, %ssa_744_1; // vec1 32 ssa_746 = fadd ssa_742, ssa_744.y
bb_43	:  PC=0x1dc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2860) add.f32 %ssa_747, %ssa_743, %ssa_744_2; // vec1 32 ssa_747 = fadd ssa_743, ssa_744.z
bb_43	:  PC=0x1dd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2863) mul.f32 %ssa_748, %ssa_745, %ssa_745;// vec1 32 ssa_748 = fmul ssa_745, ssa_745
bb_43	:  PC=0x1dd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2866) mul.f32 %ssa_749, %ssa_746, %ssa_746;// vec1 32 ssa_749 = fmul ssa_746, ssa_746
bb_43	:  PC=0x1de0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2869) mul.f32 %ssa_750, %ssa_747, %ssa_747;// vec1 32 ssa_750 = fmul ssa_747, ssa_747
bb_43	:  PC=0x1de8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2875) mov.f32 %ssa_751_0, %ssa_748;
bb_43	:  PC=0x1df0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2876) mov.f32 %ssa_751_1, %ssa_749;
bb_43	:  PC=0x1df8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2877) mov.f32 %ssa_751_2, %ssa_750; // vec3 32 ssa_751 = vec3 ssa_748, ssa_749, ssa_750
bb_43	:  PC=0x1e00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2880) add.f32 %ssa_752, %ssa_751_0, %ssa_751_1;
bb_43	:  PC=0x1e08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2881) add.f32 %ssa_752, %ssa_752, %ssa_751_2; // vec1 32 ssa_752 = fsum3 ssa_751
bb_43	:  PC=0x1e10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2884) setp.lt.f32 %ssa_753, %ssa_752, %ssa_13;// vec1  1 ssa_753 = flt! ssa_752, ssa_13
bb_43	:  PC=0x1e18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2889) @!%ssa_753 bra else_5;

bb_44	:  PC=0x1e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2893) bra loop_3_exit;

bb_45	:  PC=0x1e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2897) bra end_if_5;

bb_46	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2904) end_if_5:
bb_46	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2907) mov.s32 %ssa_728, %ssa_738; // vec1 32 ssa_728 = phi block_17: ssa_727, block_21: ssa_738
bb_46	:  PC=0x1e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2907) mov.s32 %ssa_728, %ssa_738; // vec1 32 ssa_728 = phi block_17: ssa_727, block_21: ssa_738
bb_46	:  PC=0x1e38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2910) bra loop_3;

bb_47	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2915) st.global.s32 [%ssa_544], %ssa_738; // intrinsic store_deref (%ssa_544, %ssa_738) (1, 0) /* wrmask=x */ /* access=0 */
bb_47	:  PC=0x1e40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2915) st.global.s32 [%ssa_544], %ssa_738; // intrinsic store_deref (%ssa_544, %ssa_738) (1, 0) /* wrmask=x */ /* access=0 */
bb_47	:  PC=0x1e48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2918) mul.f32 %ssa_754, %ssa_745, %ssa_726;// vec1 32 ssa_754 = fmul ssa_745, ssa_726
bb_47	:  PC=0x1e50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2921) mul.f32 %ssa_755, %ssa_746, %ssa_726;// vec1 32 ssa_755 = fmul ssa_746, ssa_726
bb_47	:  PC=0x1e58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2924) mul.f32 %ssa_756, %ssa_747, %ssa_726;// vec1 32 ssa_756 = fmul ssa_747, ssa_726
bb_47	:  PC=0x1e60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2927) add.f32 %ssa_757, %ssa_724_0, %ssa_754; // vec1 32 ssa_757 = fadd ssa_724.x, ssa_754
bb_47	:  PC=0x1e68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2930) add.f32 %ssa_758, %ssa_724_1, %ssa_755; // vec1 32 ssa_758 = fadd ssa_724.y, ssa_755
bb_47	:  PC=0x1e70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2933) add.f32 %ssa_759, %ssa_724_2, %ssa_756; // vec1 32 ssa_759 = fadd ssa_724.z, ssa_756
bb_47	:  PC=0x1e78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2936) neg.f32 %ssa_760, %ssa_709;// vec1 32 ssa_760 = fneg ssa_709
bb_47	:  PC=0x1e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2939) neg.f32 %ssa_761, %ssa_710;// vec1 32 ssa_761 = fneg ssa_710
bb_47	:  PC=0x1e88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2942) neg.f32 %ssa_762, %ssa_711;// vec1 32 ssa_762 = fneg ssa_711
bb_47	:  PC=0x1e90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2945) add.f32 %ssa_763, %ssa_757, %ssa_760;// vec1 32 ssa_763 = fadd ssa_757, ssa_760
bb_47	:  PC=0x1e98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2948) add.f32 %ssa_764, %ssa_758, %ssa_761;// vec1 32 ssa_764 = fadd ssa_758, ssa_761
bb_47	:  PC=0x1ea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2951) add.f32 %ssa_765, %ssa_759, %ssa_762;// vec1 32 ssa_765 = fadd ssa_759, ssa_762
bb_47	:  PC=0x1ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2954) mul.f32 %ssa_766, %ssa_763, %ssa_763;// vec1 32 ssa_766 = fmul ssa_763, ssa_763
bb_47	:  PC=0x1eb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2957) mul.f32 %ssa_767, %ssa_764, %ssa_764;// vec1 32 ssa_767 = fmul ssa_764, ssa_764
bb_47	:  PC=0x1eb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2960) mul.f32 %ssa_768, %ssa_765, %ssa_765;// vec1 32 ssa_768 = fmul ssa_765, ssa_765
bb_47	:  PC=0x1ec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2966) mov.f32 %ssa_769_0, %ssa_766;
bb_47	:  PC=0x1ec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2967) mov.f32 %ssa_769_1, %ssa_767;
bb_47	:  PC=0x1ed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2968) mov.f32 %ssa_769_2, %ssa_768; // vec3 32 ssa_769 = vec3 ssa_766, ssa_767, ssa_768
bb_47	:  PC=0x1ed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2971) add.f32 %ssa_770, %ssa_769_0, %ssa_769_1;
bb_47	:  PC=0x1ee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2972) add.f32 %ssa_770, %ssa_770, %ssa_769_2; // vec1 32 ssa_770 = fsum3 ssa_769
bb_47	:  PC=0x1ee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2975) sqrt.approx.f32 %ssa_771, %ssa_770;// vec1 32 ssa_771 = fsqrt ssa_770
bb_47	:  PC=0x1ef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2978) rsqrt.approx.f32 %ssa_772, %ssa_770;// vec1 32 ssa_772 = frsq ssa_770
bb_47	:  PC=0x1ef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2981) mul.f32 %ssa_773, %ssa_763, %ssa_772;// vec1 32 ssa_773 = fmul ssa_763, ssa_772
bb_47	:  PC=0x1f00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2984) mul.f32 %ssa_774, %ssa_764, %ssa_772;// vec1 32 ssa_774 = fmul ssa_764, ssa_772
bb_47	:  PC=0x1f08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2987) mul.f32 %ssa_775, %ssa_765, %ssa_772;// vec1 32 ssa_775 = fmul ssa_765, ssa_772
bb_47	:  PC=0x1f10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2993) mov.f32 %ssa_776_0, %ssa_773;
bb_47	:  PC=0x1f18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2994) mov.f32 %ssa_776_1, %ssa_774;
bb_47	:  PC=0x1f20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2995) mov.f32 %ssa_776_2, %ssa_775; // vec3 32 ssa_776 = vec3 ssa_773, ssa_774, ssa_775
bb_47	:  PC=0x1f28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2998) mov.f32 %ssa_846, %ssa_776_0; // vec1 32 ssa_846 = mov ssa_776.x
bb_47	:  PC=0x1f30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3001) mov.f32 %ssa_849, %ssa_776_1; // vec1 32 ssa_849 = mov ssa_776.y
bb_47	:  PC=0x1f38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3004) mov.f32 %ssa_852, %ssa_776_2; // vec1 32 ssa_852 = mov ssa_776.z
bb_47	:  PC=0x1f40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3006) mov.f32 %ssa_847, %ssa_846; // vec1 32 ssa_847 = phi block_16: ssa_881, block_22: ssa_846
bb_47	:  PC=0x1f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3007) mov.f32 %ssa_850, %ssa_849; // vec1 32 ssa_850 = phi block_16: ssa_882, block_22: ssa_849
bb_47	:  PC=0x1f50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3008) mov.f32 %ssa_853, %ssa_852; // vec1 32 ssa_853 = phi block_16: ssa_883, block_22: ssa_852
bb_47	:  PC=0x1f58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3009) mov.b32 %ssa_778, %ssa_771; // vec1 32 ssa_778 = phi block_16: ssa_714, block_22: ssa_771

bb_48	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3019) .reg .b32 %ssa_854_0;
bb_48	:  PC=0x1f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3023) mov.b32 %ssa_854_0, %ssa_847;
bb_48	:  PC=0x1f68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3024) mov.b32 %ssa_854_1, %ssa_850;
bb_48	:  PC=0x1f70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3025) mov.b32 %ssa_854_2, %ssa_853; // vec3 32 ssa_854 = vec3 ssa_847, ssa_850, ssa_853
bb_48	:  PC=0x1f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3028) mul.f32 %ssa_779, %ssa_854_0, %ssa_705_0; // vec1 32 ssa_779 = fmul ssa_854.x, ssa_705.x
bb_48	:  PC=0x1f80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3031) mul.f32 %ssa_780, %ssa_854_1, %ssa_705_1; // vec1 32 ssa_780 = fmul ssa_854.y, ssa_705.y
bb_48	:  PC=0x1f88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3034) mul.f32 %ssa_781, %ssa_854_2, %ssa_705_2; // vec1 32 ssa_781 = fmul ssa_854.z, ssa_705.z
bb_48	:  PC=0x1f90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3040) mov.f32 %ssa_782_0, %ssa_779;
bb_48	:  PC=0x1f98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3041) mov.f32 %ssa_782_1, %ssa_780;
bb_48	:  PC=0x1fa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3042) mov.f32 %ssa_782_2, %ssa_781; // vec3 32 ssa_782 = vec3 ssa_779, ssa_780, ssa_781
bb_48	:  PC=0x1fa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3045) add.f32 %ssa_783, %ssa_782_0, %ssa_782_1;
bb_48	:  PC=0x1fb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3046) add.f32 %ssa_783, %ssa_783, %ssa_782_2; // vec1 32 ssa_783 = fsum3 ssa_782
bb_48	:  PC=0x1fb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3049) setp.lt.f32 %ssa_784, %ssa_2, %ssa_783;// vec1  1 ssa_784 = flt! ssa_2, ssa_783
bb_48	:  PC=0x1fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3054) @!%ssa_784 bra else_6;

bb_49	:  PC=0x1fc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3059) trace_ray %ssa_687, %ssa_12, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_712_0, %ssa_712_1, %ssa_712_2, %ssa_10, %ssa_854_0, %ssa_854_1, %ssa_854_2, %ssa_778, %traversal_finished_1; // intrinsic trace_ray (%ssa_687, %ssa_12, %ssa_11, %ssa_2, %ssa_2, %ssa_2, %ssa_712, %ssa_10, %ssa_854, %ssa_778, %ssa_543) ()
bb_49	:  PC=0x1fd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3062) mov.u32 %intersection_counter_1, 0;

bb_50	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3064) .reg .pred %intersections_exit_1;
bb_50	:  PC=0x1fd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3065) intersection_exit.pred %intersections_exit_1, %intersection_counter_1, %traversal_finished_1;
bb_50	:  PC=0x1fe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3066) @%intersections_exit_1 bra exit_intersection_label_1;

bb_51	:  PC=0x1fe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3068) get_intersection_shader_data_address %shader_data_address_1, %intersection_counter_1;
bb_51	:  PC=0x1ff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3070) get_intersection_shaderID %intersection_shaderID_1, %intersection_counter_1;
bb_51	:  PC=0x1ff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3072) setp.ne.u32 %skip_intersection_7_1, %intersection_shaderID_1, 7;
bb_51	:  PC=0x2000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3073) @%skip_intersection_7_1 bra skip_intersection_label_7_1;

bb_52	:  PC=0x2008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3074) call_intersection_shader %intersection_counter_1;

bb_53	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3076) .reg .pred %skip_intersection_8_1;
bb_53	:  PC=0x2010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3077) setp.ne.u32 %skip_intersection_8_1, %intersection_shaderID_1, 8;
bb_53	:  PC=0x2018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3078) @%skip_intersection_8_1 bra skip_intersection_label_8_1;

bb_54	:  PC=0x2020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3079) call_intersection_shader %intersection_counter_1;

bb_55	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3081) .reg .pred %skip_intersection_6_1;
bb_55	:  PC=0x2028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3082) setp.ne.u32 %skip_intersection_6_1, %intersection_shaderID_1, 6;
bb_55	:  PC=0x2030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3083) @%skip_intersection_6_1 bra skip_intersection_label_6_1;

bb_56	:  PC=0x2038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3084) call_intersection_shader %intersection_counter_1;

bb_57	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3086) .reg .pred %skip_intersection_9_1;
bb_57	:  PC=0x2040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3087) setp.ne.u32 %skip_intersection_9_1, %intersection_shaderID_1, 9;
bb_57	:  PC=0x2048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3088) @%skip_intersection_9_1 bra skip_intersection_label_9_1;

bb_58	:  PC=0x2050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3089) call_intersection_shader %intersection_counter_1;

bb_59	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3091) add.u32 %intersection_counter_1, %intersection_counter_1, 1;
bb_59	:  PC=0x2058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3091) add.u32 %intersection_counter_1, %intersection_counter_1, 1;
bb_59	:  PC=0x2060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3092) bra intersection_loop_1;

bb_60	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3096) .reg .pred %hit_geometry_1;
bb_60	:  PC=0x2068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3097) hit_geometry.pred %hit_geometry_1, %traversal_finished_1;
bb_60	:  PC=0x2070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3099) @!%hit_geometry_1 bra exit_closest_hit_label_1;

bb_61	:  PC=0x2078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3101) get_closest_hit_shaderID %closest_hit_shaderID_1;
bb_61	:  PC=0x2080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3103) setp.ne.u32 %skip_closest_hit_3_1, %closest_hit_shaderID_1, 3;
bb_61	:  PC=0x2088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3104) @%skip_closest_hit_3_1 bra skip_closest_hit_label_3_1;

bb_62	:  PC=0x2090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3105) call_closest_hit_shader 3;

bb_63	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3107) .reg .pred %skip_closest_hit_5_1;
bb_63	:  PC=0x2098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3108) setp.ne.u32 %skip_closest_hit_5_1, %closest_hit_shaderID_1, 5;
bb_63	:  PC=0x20a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3109) @%skip_closest_hit_5_1 bra skip_closest_hit_label_5_1;

bb_64	:  PC=0x20a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3110) call_closest_hit_shader 5;

bb_65	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3112) .reg .pred %skip_closest_hit_4_1;
bb_65	:  PC=0x20b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3113) setp.ne.u32 %skip_closest_hit_4_1, %closest_hit_shaderID_1, 4;
bb_65	:  PC=0x20b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3114) @%skip_closest_hit_4_1 bra skip_closest_hit_label_4_1;

bb_66	:  PC=0x20c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3115) call_closest_hit_shader 4;

bb_67	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3117) .reg .pred %skip_closest_hit_2_1;
bb_67	:  PC=0x20c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3118) setp.ne.u32 %skip_closest_hit_2_1, %closest_hit_shaderID_1, 2;
bb_67	:  PC=0x20d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3119) @%skip_closest_hit_2_1 bra skip_closest_hit_label_2_1;

bb_68	:  PC=0x20d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3120) call_closest_hit_shader 2;

bb_69	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3122) exit_closest_hit_label_1:
bb_69	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3124) @%hit_geometry_1 bra skip_miss_label_1;
bb_69	:  PC=0x20e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3124) @%hit_geometry_1 bra skip_miss_label_1;

bb_70	:  PC=0x20e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3125) call_miss_shader ;

bb_71	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3128) end_trace_ray ;
bb_71	:  PC=0x20f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3128) end_trace_ray ;
bb_71	:  PC=0x20f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3134) ld.global.f32 %ssa_785_0, [%ssa_690 + 0];
bb_71	:  PC=0x2100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3135) ld.global.f32 %ssa_785_1, [%ssa_690 + 4];
bb_71	:  PC=0x2108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3136) ld.global.f32 %ssa_785_2, [%ssa_690 + 8];
bb_71	:  PC=0x2110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3137) ld.global.f32 %ssa_785_3, [%ssa_690 + 12];
bb_71	:  PC=0x2118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3142) mov.f32 %ssa_786, %ssa_785_3; // vec1 32 ssa_786 = mov ssa_785.w
bb_71	:  PC=0x2120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3144) mov.f32 %ssa_787, %ssa_786; // vec1 32 ssa_787 = phi block_24: ssa_786, block_25: ssa_13
bb_71	:  PC=0x2128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3147) bra end_if_6;

bb_72	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3152) mov.f32 %ssa_787, %ssa_13; // vec1 32 ssa_787 = phi block_24: ssa_786, block_25: ssa_13
bb_72	:  PC=0x2130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3152) mov.f32 %ssa_787, %ssa_13; // vec1 32 ssa_787 = phi block_24: ssa_786, block_25: ssa_13

bb_73	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3159) .reg .pred %ssa_788;
bb_73	:  PC=0x2138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3160) setp.lt.f32 %ssa_788, %ssa_2, %ssa_787;// vec1  1 ssa_788 = flt! ssa_2, ssa_787
bb_73	:  PC=0x2140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3163) mul.f32 %ssa_789, %ssa_844_0, %ssa_9; // vec1 32 ssa_789 = fmul ssa_844.x, ssa_9
bb_73	:  PC=0x2148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3166) mul.f32 %ssa_790, %ssa_844_1, %ssa_9; // vec1 32 ssa_790 = fmul ssa_844.y, ssa_9
bb_73	:  PC=0x2150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3169) mul.f32 %ssa_791, %ssa_844_2, %ssa_9; // vec1 32 ssa_791 = fmul ssa_844.z, ssa_9
bb_73	:  PC=0x2158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3172) selp.f32 %ssa_792, %ssa_789, %ssa_844_0, %ssa_788; // vec1 32 ssa_792 = bcsel ssa_788, ssa_789, ssa_844.x
bb_73	:  PC=0x2160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3175) selp.f32 %ssa_793, %ssa_790, %ssa_844_1, %ssa_788; // vec1 32 ssa_793 = bcsel ssa_788, ssa_790, ssa_844.y
bb_73	:  PC=0x2168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3178) selp.f32 %ssa_794, %ssa_791, %ssa_844_2, %ssa_788; // vec1 32 ssa_794 = bcsel ssa_788, ssa_791, ssa_844.z
bb_73	:  PC=0x2170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3184) mov.f32 %ssa_795_0, %ssa_792;
bb_73	:  PC=0x2178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3185) mov.f32 %ssa_795_1, %ssa_793;
bb_73	:  PC=0x2180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3186) mov.f32 %ssa_795_2, %ssa_794; // vec3 32 ssa_795 = vec3 ssa_792, ssa_793, ssa_794
bb_73	:  PC=0x2188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3189) add.s32 %ssa_796, %ssa_715, %ssa_8_bits; // vec1 32 ssa_796 = iadd ssa_715, ssa_8
bb_73	:  PC=0x2190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3192) mov.f32 %ssa_836, %ssa_795_0; // vec1 32 ssa_836 = mov ssa_795.x
bb_73	:  PC=0x2198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3195) mov.f32 %ssa_839, %ssa_795_1; // vec1 32 ssa_839 = mov ssa_795.y
bb_73	:  PC=0x21a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3198) mov.f32 %ssa_842, %ssa_795_2; // vec1 32 ssa_842 = mov ssa_795.z
bb_73	:  PC=0x21a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3200) mov.f32 %ssa_837, %ssa_836; // vec1 32 ssa_837 = phi block_11: ssa_835, block_26: ssa_836
bb_73	:  PC=0x21b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3201) mov.f32 %ssa_840, %ssa_839; // vec1 32 ssa_840 = phi block_11: ssa_838, block_26: ssa_839
bb_73	:  PC=0x21b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3202) mov.f32 %ssa_843, %ssa_842; // vec1 32 ssa_843 = phi block_11: ssa_841, block_26: ssa_842
bb_73	:  PC=0x21c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3203) mov.b32 %ssa_714, %ssa_778; // vec1 32 ssa_714 = phi block_11: ssa_14, block_26: ssa_778
bb_73	:  PC=0x21c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3204) mov.s32 %ssa_715, %ssa_796; // vec1 32 ssa_715 = phi block_11: ssa_2, block_26: ssa_796
bb_73	:  PC=0x21d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3207) bra loop_2;

bb_74	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3212) .reg .f32 %ssa_797;
bb_74	:  PC=0x21d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3213) add.f32 %ssa_797, %ssa_834_0, %ssa_844_0; // vec1 32 ssa_797 = fadd ssa_834.x, ssa_844.x
bb_74	:  PC=0x21e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3216) add.f32 %ssa_798, %ssa_834_1, %ssa_844_1; // vec1 32 ssa_798 = fadd ssa_834.y, ssa_844.y
bb_74	:  PC=0x21e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3219) add.f32 %ssa_799, %ssa_834_2, %ssa_844_2; // vec1 32 ssa_799 = fadd ssa_834.z, ssa_844.z
bb_74	:  PC=0x21f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3225) mov.f32 %ssa_800_0, %ssa_797;
bb_74	:  PC=0x21f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3226) mov.f32 %ssa_800_1, %ssa_798;
bb_74	:  PC=0x2200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3227) mov.f32 %ssa_800_2, %ssa_799; // vec3 32 ssa_800 = vec3 ssa_797, ssa_798, ssa_799
bb_74	:  PC=0x2208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3230) mov.f32 %ssa_856, %ssa_800_0; // vec1 32 ssa_856 = mov ssa_800.x
bb_74	:  PC=0x2210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3233) mov.f32 %ssa_859, %ssa_800_1; // vec1 32 ssa_859 = mov ssa_800.y
bb_74	:  PC=0x2218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3236) mov.f32 %ssa_862, %ssa_800_2; // vec1 32 ssa_862 = mov ssa_800.z
bb_74	:  PC=0x2220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3238) mov.f32 %ssa_857, %ssa_856; // vec1 32 ssa_857 = phi block_10: ssa_855, block_27: ssa_856
bb_74	:  PC=0x2228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3239) mov.f32 %ssa_860, %ssa_859; // vec1 32 ssa_860 = phi block_10: ssa_858, block_27: ssa_859
bb_74	:  PC=0x2230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3240) mov.f32 %ssa_863, %ssa_862; // vec1 32 ssa_863 = phi block_10: ssa_861, block_27: ssa_862

bb_75	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3249) .reg .b32 %ssa_864_0;
bb_75	:  PC=0x2238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3253) mov.b32 %ssa_864_0, %ssa_857;
bb_75	:  PC=0x2240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3254) mov.b32 %ssa_864_1, %ssa_860;
bb_75	:  PC=0x2248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3255) mov.b32 %ssa_864_2, %ssa_863; // vec3 32 ssa_864 = vec3 ssa_857, ssa_860, ssa_863
bb_75	:  PC=0x2250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3258) add.s32 %ssa_802, %ssa_547, %ssa_8_bits; // vec1 32 ssa_802 = iadd ssa_547, ssa_8
bb_75	:  PC=0x2258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3261) mov.b32 %ssa_826, %ssa_864_0; // vec1 32 ssa_826 = mov ssa_864.x
bb_75	:  PC=0x2260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3264) mov.b32 %ssa_829, %ssa_864_1; // vec1 32 ssa_829 = mov ssa_864.y
bb_75	:  PC=0x2268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3267) mov.b32 %ssa_832, %ssa_864_2; // vec1 32 ssa_832 = mov ssa_864.z
bb_75	:  PC=0x2270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3269) mov.b32 %ssa_827, %ssa_826; // vec1 32 ssa_827 = phi block_0: ssa_878, block_28: ssa_826
bb_75	:  PC=0x2278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3270) mov.b32 %ssa_830, %ssa_829; // vec1 32 ssa_830 = phi block_0: ssa_879, block_28: ssa_829
bb_75	:  PC=0x2280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3271) mov.b32 %ssa_833, %ssa_832; // vec1 32 ssa_833 = phi block_0: ssa_880, block_28: ssa_832
bb_75	:  PC=0x2288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3272) mov.s32 %ssa_546, %ssa_564; // vec1 32 ssa_546 = phi block_0: ssa_22, block_28: ssa_564
bb_75	:  PC=0x2290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3273) mov.s32 %ssa_547, %ssa_802; // vec1 32 ssa_547 = phi block_0: ssa_2, block_28: ssa_802
bb_75	:  PC=0x2298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3276) bra loop_0;

bb_76	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3281) .reg .pred %ssa_803;
bb_76	:  PC=0x22a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3282) setp.ne.s32 %ssa_803, %ssa_549, %ssa_294;// vec1  1 ssa_803 = ine ssa_549, ssa_294
bb_76	:  PC=0x22a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3287) @!%ssa_803 bra else_7;

bb_77	:  PC=0x22b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3292) mov.b64 %ssa_804, %AccumulationImage; // vec1 32 ssa_804 = deref_var &AccumulationImage (image image2D) 
bb_77	:  PC=0x22b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3298) mov.u32 %ssa_805_0, %ssa_23_0;
bb_77	:  PC=0x22c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3299) mov.u32 %ssa_805_1, %ssa_23_1;
bb_77	:  PC=0x22c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3300) mov.u32 %ssa_805_2, %ssa_7_bits;
bb_77	:  PC=0x22d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3301) mov.u32 %ssa_805_3, %ssa_7_bits; // vec4 32 ssa_805 = vec4 ssa_23.x, ssa_23.y, ssa_7, ssa_7
bb_77	:  PC=0x22d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3307) image_deref_load %ssa_804, %ssa_806_0, %ssa_806_1, %ssa_806_2, %ssa_806_3, %ssa_805_0, %ssa_805_1, %ssa_805_2, %ssa_805_3, %ssa_6, %ssa_2, 1, 0, 0, 0, 160; // vec4 32 ssa_806 = intrinsic image_deref_load (%ssa_804, %ssa_805, %ssa_6, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* dest_type=float32 */
bb_77	:  PC=0x22e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3310) mov.f32 %ssa_865, %ssa_806_0; // vec1 32 ssa_865 = mov ssa_806.x
bb_77	:  PC=0x22e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3313) mov.f32 %ssa_868, %ssa_806_1; // vec1 32 ssa_868 = mov ssa_806.y
bb_77	:  PC=0x22f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3316) mov.f32 %ssa_871, %ssa_806_2; // vec1 32 ssa_871 = mov ssa_806.z
bb_77	:  PC=0x22f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3319) mov.f32 %ssa_874, %ssa_806_3; // vec1 32 ssa_874 = mov ssa_806.w
bb_77	:  PC=0x2300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3321) mov.f32 %ssa_867, %ssa_865; // vec1 32 ssa_867 = phi block_30: ssa_865, block_31: ssa_884
bb_77	:  PC=0x2308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3322) mov.f32 %ssa_870, %ssa_868; // vec1 32 ssa_870 = phi block_30: ssa_868, block_31: ssa_885
bb_77	:  PC=0x2310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3323) mov.f32 %ssa_873, %ssa_871; // vec1 32 ssa_873 = phi block_30: ssa_871, block_31: ssa_886
bb_77	:  PC=0x2318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3324) mov.f32 %ssa_876, %ssa_874; // vec1 32 ssa_876 = phi block_30: ssa_874, block_31: ssa_887
bb_77	:  PC=0x2320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3327) bra end_if_7;

bb_78	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3332) .reg .f32 %ssa_884;
bb_78	:  PC=0x2328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3333) mov.f32 %ssa_884, 0F00000000; // vec1 32 ssa_884 = load_const (0x00000000 /* 0.000000 */)
bb_78	:  PC=0x2330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3335) mov.b32 %ssa_884_bits, 0F00000000;
bb_78	:  PC=0x2338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3338) mov.f32 %ssa_885, 0F00000000; // vec1 32 ssa_885 = load_const (0x00000000 /* 0.000000 */)
bb_78	:  PC=0x2340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3340) mov.b32 %ssa_885_bits, 0F00000000;
bb_78	:  PC=0x2348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3343) mov.f32 %ssa_886, 0F00000000; // vec1 32 ssa_886 = load_const (0x00000000 /* 0.000000 */)
bb_78	:  PC=0x2350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3345) mov.b32 %ssa_886_bits, 0F00000000;
bb_78	:  PC=0x2358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3348) mov.f32 %ssa_887, 0F00000000; // vec1 32 ssa_887 = load_const (0x00000000 /* 0.000000 */)
bb_78	:  PC=0x2360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3350) mov.b32 %ssa_887_bits, 0F00000000;
bb_78	:  PC=0x2368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3352) mov.f32 %ssa_867, %ssa_884; // vec1 32 ssa_867 = phi block_30: ssa_865, block_31: ssa_884
bb_78	:  PC=0x2370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3353) mov.f32 %ssa_870, %ssa_885; // vec1 32 ssa_870 = phi block_30: ssa_868, block_31: ssa_885
bb_78	:  PC=0x2378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3354) mov.f32 %ssa_873, %ssa_886; // vec1 32 ssa_873 = phi block_30: ssa_871, block_31: ssa_886
bb_78	:  PC=0x2380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3355) mov.f32 %ssa_876, %ssa_887; // vec1 32 ssa_876 = phi block_30: ssa_874, block_31: ssa_887

bb_79	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3365) .reg .b32 %ssa_877_0;
bb_79	:  PC=0x2388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3369) mov.b32 %ssa_877_0, %ssa_867;
bb_79	:  PC=0x2390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3370) mov.b32 %ssa_877_1, %ssa_870;
bb_79	:  PC=0x2398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3371) mov.b32 %ssa_877_2, %ssa_873;
bb_79	:  PC=0x23a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3372) mov.b32 %ssa_877_3, %ssa_876; // vec4 32 ssa_877 = vec4 ssa_867, ssa_870, ssa_873, ssa_876
bb_79	:  PC=0x23a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3375) add.f32 %ssa_808, %ssa_877_0, %ssa_834_0; // vec1 32 ssa_808 = fadd ssa_877.x, ssa_834.x
bb_79	:  PC=0x23b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3378) add.f32 %ssa_809, %ssa_877_1, %ssa_834_1; // vec1 32 ssa_809 = fadd ssa_877.y, ssa_834.y
bb_79	:  PC=0x23b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3381) add.f32 %ssa_810, %ssa_877_2, %ssa_834_2; // vec1 32 ssa_810 = fadd ssa_877.z, ssa_834.z
bb_79	:  PC=0x23c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3384) cvt.rn.f32.u32 %ssa_811, %ssa_294;// vec1 32 ssa_811 = u2f32 ssa_294
bb_79	:  PC=0x23c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3387) rcp.approx.f32 %ssa_812, %ssa_811;// vec1 32 ssa_812 = frcp ssa_811
bb_79	:  PC=0x23d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3390) mul.f32 %ssa_813, %ssa_808, %ssa_812;// vec1 32 ssa_813 = fmul ssa_808, ssa_812
bb_79	:  PC=0x23d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3393) mul.f32 %ssa_814, %ssa_809, %ssa_812;// vec1 32 ssa_814 = fmul ssa_809, ssa_812
bb_79	:  PC=0x23e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3396) mul.f32 %ssa_815, %ssa_810, %ssa_812;// vec1 32 ssa_815 = fmul ssa_810, ssa_812
bb_79	:  PC=0x23e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3399) sqrt.approx.f32 %ssa_816, %ssa_813;// vec1 32 ssa_816 = fsqrt ssa_813
bb_79	:  PC=0x23f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3402) sqrt.approx.f32 %ssa_817, %ssa_814;// vec1 32 ssa_817 = fsqrt ssa_814
bb_79	:  PC=0x23f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3405) sqrt.approx.f32 %ssa_818, %ssa_815;// vec1 32 ssa_818 = fsqrt ssa_815
bb_79	:  PC=0x2400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3408) mov.b64 %ssa_819, %AccumulationImage; // vec1 32 ssa_819 = deref_var &AccumulationImage (image image2D) 
bb_79	:  PC=0x2408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3414) mov.f32 %ssa_820_0, %ssa_808;
bb_79	:  PC=0x2410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3415) mov.f32 %ssa_820_1, %ssa_809;
bb_79	:  PC=0x2418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3416) mov.f32 %ssa_820_2, %ssa_810;
bb_79	:  PC=0x2420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3417) mov.f32 %ssa_820_3, %ssa_2; // vec4 32 ssa_820 = vec4 ssa_808, ssa_809, ssa_810, ssa_2
bb_79	:  PC=0x2428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3423) mov.u32 %ssa_821_0, %ssa_23_0;
bb_79	:  PC=0x2430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3424) mov.u32 %ssa_821_1, %ssa_23_1;
bb_79	:  PC=0x2438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3425) mov.u32 %ssa_821_2, %ssa_4_bits;
bb_79	:  PC=0x2440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3426) mov.u32 %ssa_821_3, %ssa_4_bits; // vec4 32 ssa_821 = vec4 ssa_23.x, ssa_23.y, ssa_4, ssa_4
bb_79	:  PC=0x2448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3428) image_deref_store %ssa_819, %ssa_821_0, %ssa_821_1, %ssa_821_2, %ssa_821_3, %ssa_3, %ssa_820_0, %ssa_820_1, %ssa_820_2, %ssa_820_3, %ssa_2, 1, 0, 0, 0, 160; // intrinsic image_deref_store (%ssa_819, %ssa_821, %ssa_3, %ssa_820, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* src_type=float32 */
bb_79	:  PC=0x2450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3431) mov.b64 %ssa_822, %OutputImage; // vec1 32 ssa_822 = deref_var &OutputImage (image image2D) 
bb_79	:  PC=0x2458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3437) mov.f32 %ssa_823_0, %ssa_816;
bb_79	:  PC=0x2460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3438) mov.f32 %ssa_823_1, %ssa_817;
bb_79	:  PC=0x2468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3439) mov.f32 %ssa_823_2, %ssa_818;
bb_79	:  PC=0x2470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3440) mov.f32 %ssa_823_3, %ssa_2; // vec4 32 ssa_823 = vec4 ssa_816, ssa_817, ssa_818, ssa_2
bb_79	:  PC=0x2478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3446) mov.u32 %ssa_824_0, %ssa_23_0;
bb_79	:  PC=0x2480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3447) mov.u32 %ssa_824_1, %ssa_23_1;
bb_79	:  PC=0x2488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3448) mov.u32 %ssa_824_2, %ssa_1_bits;
bb_79	:  PC=0x2490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3449) mov.u32 %ssa_824_3, %ssa_1_bits; // vec4 32 ssa_824 = vec4 ssa_23.x, ssa_23.y, ssa_1, ssa_1
bb_79	:  PC=0x2498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3451) image_deref_store %ssa_822, %ssa_824_0, %ssa_824_1, %ssa_824_2, %ssa_824_3, %ssa_0, %ssa_823_0, %ssa_823_1, %ssa_823_2, %ssa_823_3, %ssa_2, 1, 0, 0, 0, 160; // intrinsic image_deref_store (%ssa_822, %ssa_824, %ssa_0, %ssa_823, %ssa_2) (1, 0, 0, 0, 160) /* image_dim=2D */ /* image_array=false */ /* format=none  */ /* access=0 */ /* src_type=float32 */

bb_80	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3457) ret ;
bb_80	:  PC=0x24a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3457) ret ;

Summary of basic blocks for 'MESA_SHADER_RAYGEN_func0_main':
bb_00	: first: load_ray_launch_id	 last: bra	
bb_01	: first: bra	 last: bra	
bb_02	: first: bra	 last: bra	
bb_03	: first: load_vulkan_descriptor	 last: mov	
bb_04	: first: mov	 last: bra	
bb_05	: first: bra	 last: bra	
bb_06	: first: bra	 last: bra	
bb_07	: first: cvt	 last: mov	
bb_08	: first: mul	 last: bra	
bb_09	: first: bra	 last: bra	
bb_10	: first: bra	 last: bra	
bb_11	: first: mov	 last: bra	
bb_12	: first: st	 last: mov	
bb_13	: first: intersection_exit	 last: bra	
bb_14	: first: get_intersection_shader_data_address	 last: bra	
bb_15	: first: call_intersection_shader	 last: call_intersection_shader	
bb_16	: first: setp	 last: bra	
bb_17	: first: call_intersection_shader	 last: call_intersection_shader	
bb_18	: first: setp	 last: bra	
bb_19	: first: call_intersection_shader	 last: call_intersection_shader	
bb_20	: first: setp	 last: bra	
bb_21	: first: call_intersection_shader	 last: call_intersection_shader	
bb_22	: first: add	 last: bra	
bb_23	: first: hit_geometry	 last: bra	
bb_24	: first: get_closest_hit_shaderID	 last: bra	
bb_25	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_26	: first: setp	 last: bra	
bb_27	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_28	: first: setp	 last: bra	
bb_29	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_30	: first: setp	 last: bra	
bb_31	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_32	: first: bra	 last: bra	
bb_33	: first: call_miss_shader	 last: call_miss_shader	
bb_34	: first: end_trace_ray	 last: bra	
bb_35	: first: add	 last: bra	
bb_36	: first: mov	 last: mov	
bb_37	: first: mov	 last: bra	
bb_38	: first: bra	 last: bra	
bb_39	: first: bra	 last: bra	
bb_40	: first: add	 last: bra	
bb_41	: first: mov	 last: bra	
bb_42	: first: add	 last: mov	
bb_43	: first: mul	 last: bra	
bb_44	: first: bra	 last: bra	
bb_45	: first: bra	 last: bra	
bb_46	: first: mov	 last: bra	
bb_47	: first: st	 last: mov	
bb_48	: first: mov	 last: bra	
bb_49	: first: trace_ray	 last: mov	
bb_50	: first: intersection_exit	 last: bra	
bb_51	: first: get_intersection_shader_data_address	 last: bra	
bb_52	: first: call_intersection_shader	 last: call_intersection_shader	
bb_53	: first: setp	 last: bra	
bb_54	: first: call_intersection_shader	 last: call_intersection_shader	
bb_55	: first: setp	 last: bra	
bb_56	: first: call_intersection_shader	 last: call_intersection_shader	
bb_57	: first: setp	 last: bra	
bb_58	: first: call_intersection_shader	 last: call_intersection_shader	
bb_59	: first: add	 last: bra	
bb_60	: first: hit_geometry	 last: bra	
bb_61	: first: get_closest_hit_shaderID	 last: bra	
bb_62	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_63	: first: setp	 last: bra	
bb_64	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_65	: first: setp	 last: bra	
bb_66	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_67	: first: setp	 last: bra	
bb_68	: first: call_closest_hit_shader	 last: call_closest_hit_shader	
bb_69	: first: bra	 last: bra	
bb_70	: first: call_miss_shader	 last: call_miss_shader	
bb_71	: first: end_trace_ray	 last: bra	
bb_72	: first: mov	 last: mov	
bb_73	: first: setp	 last: bra	
bb_74	: first: add	 last: mov	
bb_75	: first: mov	 last: bra	
bb_76	: first: setp	 last: bra	
bb_77	: first: mov	 last: bra	
bb_78	: first: mov	 last: mov	
bb_79	: first: mov	 last: image_deref_store	
bb_80	: first: ret	 last: ret	
bb_81	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_RAYGEN_func0_main'...
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_RAYGEN_func0_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:32) @%bigger_0 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x24a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3457) ret ;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:33) @%bigger_1 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x24a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3457) ret ;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:34) @%bigger_2 bra shader_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x24a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3457) ret ;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x1360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1886) @!%ssa_550 bra else_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1890) bra loop_0_exit;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x1368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1890) bra loop_0_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x22a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3282) setp.ne.s32 %ssa_803, %ssa_549, %ssa_294;// vec1  1 ssa_803 = ine ssa_549, ssa_294
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x1370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1894) bra end_if_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1905) cvt.rn.f32.u32 %ssa_551, %ssa_23_0; // vec1 32 ssa_551 = u2f32 ssa_23.x
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x1558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2088) @!%ssa_603 bra else_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2092) bra loop_1_exit;
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x1560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2092) bra loop_1_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2114) st.global.s32 [%ssa_544], %ssa_592; // intrinsic store_deref (%ssa_544, %ssa_592) (1, 0) /* wrmask=x */ /* access=0 */
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x1568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2096) bra end_if_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2106) mov.s32 %ssa_586, %ssa_592; // vec1 32 ssa_586 = phi block_4: ssa_585, block_8: ssa_592
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x1578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2109) bra loop_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x14c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2033) mul.lo.s32 %ssa_587, %ssa_554_bits, %ssa_586; // vec1 32 ssa_587 = imul ssa_554, ssa_586
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x1958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2466) @%intersections_exit_0 bra exit_intersection_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x19e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2497) hit_geometry.pred %hit_geometry_0, %traversal_finished_0;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x1978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2473) @%skip_intersection_7_0 bra skip_intersection_label_7_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2477) setp.ne.u32 %skip_intersection_8_0, %intersection_shaderID_0, 8;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x1990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2478) @%skip_intersection_8_0 bra skip_intersection_label_8_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x19a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2482) setp.ne.u32 %skip_intersection_6_0, %intersection_shaderID_0, 6;
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x19a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2483) @%skip_intersection_6_0 bra skip_intersection_label_6_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x19b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2487) setp.ne.u32 %skip_intersection_9_0, %intersection_shaderID_0, 9;
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x19c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2488) @%skip_intersection_9_0 bra skip_intersection_label_9_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x19d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2491) add.u32 %intersection_counter_0, %intersection_counter_0, 1;
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x19d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2492) bra intersection_loop_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2465) intersection_exit.pred %intersections_exit_0, %intersection_counter_0, %traversal_finished_0;
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x19e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2499) @!%hit_geometry_0 bra exit_closest_hit_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2524) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x1a00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2504) @%skip_closest_hit_3_0 bra skip_closest_hit_label_3_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2508) setp.ne.u32 %skip_closest_hit_5_0, %closest_hit_shaderID_0, 5;
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x1a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2509) @%skip_closest_hit_5_0 bra skip_closest_hit_label_5_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2513) setp.ne.u32 %skip_closest_hit_4_0, %closest_hit_shaderID_0, 4;
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x1a30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2514) @%skip_closest_hit_4_0 bra skip_closest_hit_label_4_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2518) setp.ne.u32 %skip_closest_hit_2_0, %closest_hit_shaderID_0, 2;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x1a48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2519) @%skip_closest_hit_2_0 bra skip_closest_hit_label_2_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2524) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x1a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2524) @%hit_geometry_0 bra skip_miss_label_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2528) end_trace_ray ;
GPGPU-Sim PTX: 23 (potential) branch divergence @  PC=0x1aa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2550) @!%ssa_692 bra else_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3253) mov.b32 %ssa_864_0, %ssa_857;
GPGPU-Sim PTX: 24 (potential) branch divergence @  PC=0x1b08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2585) bra end_if_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3253) mov.b32 %ssa_864_0, %ssa_857;
GPGPU-Sim PTX: 25 (potential) branch divergence @  PC=0x1c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2699) @!%ssa_718 bra else_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2703) bra loop_2_exit;
GPGPU-Sim PTX: 26 (potential) branch divergence @  PC=0x1c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2703) bra loop_2_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x21d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3213) add.f32 %ssa_797, %ssa_834_0, %ssa_844_0; // vec1 32 ssa_797 = fadd ssa_834.x, ssa_844.x
GPGPU-Sim PTX: 27 (potential) branch divergence @  PC=0x1c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2707) bra end_if_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2718) add.u64 %ssa_719, %ssa_20, 312; // vec2 32 ssa_719 = deref_struct &ssa_20->HasSky (ubo uint) /* &((UniformBufferObjectStruct *)ssa_18)->Camera.HasSky */
GPGPU-Sim PTX: 28 (potential) branch divergence @  PC=0x1c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2729) @!%ssa_721 bra else_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3023) mov.b32 %ssa_854_0, %ssa_847;
GPGPU-Sim PTX: 29 (potential) branch divergence @  PC=0x1cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2764) bra end_if_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3023) mov.b32 %ssa_854_0, %ssa_847;
GPGPU-Sim PTX: 30 (potential) branch divergence @  PC=0x1e18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2889) @!%ssa_753 bra else_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2893) bra loop_3_exit;
GPGPU-Sim PTX: 31 (potential) branch divergence @  PC=0x1e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2893) bra loop_3_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1e40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2915) st.global.s32 [%ssa_544], %ssa_738; // intrinsic store_deref (%ssa_544, %ssa_738) (1, 0) /* wrmask=x */ /* access=0 */
GPGPU-Sim PTX: 32 (potential) branch divergence @  PC=0x1e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2897) bra end_if_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2907) mov.s32 %ssa_728, %ssa_738; // vec1 32 ssa_728 = phi block_17: ssa_727, block_21: ssa_738
GPGPU-Sim PTX: 33 (potential) branch divergence @  PC=0x1e38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2910) bra loop_3;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2799) mul.lo.s32 %ssa_729, %ssa_554_bits, %ssa_728; // vec1 32 ssa_729 = imul ssa_554, ssa_728
GPGPU-Sim PTX: 34 (potential) branch divergence @  PC=0x1fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3054) @!%ssa_784 bra else_6;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3160) setp.lt.f32 %ssa_788, %ssa_2, %ssa_787;// vec1  1 ssa_788 = flt! ssa_2, ssa_787
GPGPU-Sim PTX: 35 (potential) branch divergence @  PC=0x1fe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3066) @%intersections_exit_1 bra exit_intersection_label_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3097) hit_geometry.pred %hit_geometry_1, %traversal_finished_1;
GPGPU-Sim PTX: 36 (potential) branch divergence @  PC=0x2000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3073) @%skip_intersection_7_1 bra skip_intersection_label_7_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3077) setp.ne.u32 %skip_intersection_8_1, %intersection_shaderID_1, 8;
GPGPU-Sim PTX: 37 (potential) branch divergence @  PC=0x2018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3078) @%skip_intersection_8_1 bra skip_intersection_label_8_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3082) setp.ne.u32 %skip_intersection_6_1, %intersection_shaderID_1, 6;
GPGPU-Sim PTX: 38 (potential) branch divergence @  PC=0x2030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3083) @%skip_intersection_6_1 bra skip_intersection_label_6_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3087) setp.ne.u32 %skip_intersection_9_1, %intersection_shaderID_1, 9;
GPGPU-Sim PTX: 39 (potential) branch divergence @  PC=0x2048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3088) @%skip_intersection_9_1 bra skip_intersection_label_9_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3091) add.u32 %intersection_counter_1, %intersection_counter_1, 1;
GPGPU-Sim PTX: 40 (potential) branch divergence @  PC=0x2060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3092) bra intersection_loop_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1fd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3065) intersection_exit.pred %intersections_exit_1, %intersection_counter_1, %traversal_finished_1;
GPGPU-Sim PTX: 41 (potential) branch divergence @  PC=0x2070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3099) @!%hit_geometry_1 bra exit_closest_hit_label_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3124) @%hit_geometry_1 bra skip_miss_label_1;
GPGPU-Sim PTX: 42 (potential) branch divergence @  PC=0x2088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3104) @%skip_closest_hit_3_1 bra skip_closest_hit_label_3_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3108) setp.ne.u32 %skip_closest_hit_5_1, %closest_hit_shaderID_1, 5;
GPGPU-Sim PTX: 43 (potential) branch divergence @  PC=0x20a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3109) @%skip_closest_hit_5_1 bra skip_closest_hit_label_5_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3113) setp.ne.u32 %skip_closest_hit_4_1, %closest_hit_shaderID_1, 4;
GPGPU-Sim PTX: 44 (potential) branch divergence @  PC=0x20b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3114) @%skip_closest_hit_4_1 bra skip_closest_hit_label_4_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3118) setp.ne.u32 %skip_closest_hit_2_1, %closest_hit_shaderID_1, 2;
GPGPU-Sim PTX: 45 (potential) branch divergence @  PC=0x20d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3119) @%skip_closest_hit_2_1 bra skip_closest_hit_label_2_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3124) @%hit_geometry_1 bra skip_miss_label_1;
GPGPU-Sim PTX: 46 (potential) branch divergence @  PC=0x20e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3124) @%hit_geometry_1 bra skip_miss_label_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x20f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3128) end_trace_ray ;
GPGPU-Sim PTX: 47 (potential) branch divergence @  PC=0x2128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3147) bra end_if_6;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3160) setp.lt.f32 %ssa_788, %ssa_2, %ssa_787;// vec1  1 ssa_788 = flt! ssa_2, ssa_787
GPGPU-Sim PTX: 48 (potential) branch divergence @  PC=0x21d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3207) bra loop_2;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:2683) mov.b32 %ssa_844_0, %ssa_837;
GPGPU-Sim PTX: 49 (potential) branch divergence @  PC=0x2298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3276) bra loop_0;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:1870) mov.b32 %ssa_834_0, %ssa_827;
GPGPU-Sim PTX: 50 (potential) branch divergence @  PC=0x22a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3287) @!%ssa_803 bra else_7;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3369) mov.b32 %ssa_877_0, %ssa_867;
GPGPU-Sim PTX: 51 (potential) branch divergence @  PC=0x2320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3327) bra end_if_7;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:3369) mov.b32 %ssa_877_0, %ssa_867;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_RAYGEN_func0_main
Operand information not set. load_vulkan_descriptor %AccumulationImage, 0, 1; // decl_var image INTERP_MODE_NONE restrict r32g32b32a32_float image2D AccumulationImage
Operand information not set. load_vulkan_descriptor %OutputImage, 0, 2; // decl_var image INTERP_MODE_NONE restrict r8g8b8a8_unorm image2D OutputImage
Operand information not set. load_vulkan_descriptor %ssa_17, 0, 3, 6; // vec2 32 ssa_17 = intrinsic vulkan_resource_index (%ssa_2) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
Operand information not set. load_vulkan_descriptor %ssa_686, 0, 0, 1000150000; // vec1 64 ssa_686 = intrinsic vulkan_resource_index (%ssa_2) (0, 0, 1000150000) /* desc_set=0 */ /* binding=0 */ /* desc_type=accel-struct */
trace_ray instruction found at PC 6464 (line 2459, shader 0)!
Operand information not set. get_intersection_shader_data_address %shader_data_address_0, %intersection_counter_0;
Operand information not set. get_intersection_shaderID %intersection_shaderID_0, %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. call_intersection_shader %intersection_counter_0;
Operand information not set. get_closest_hit_shaderID %closest_hit_shaderID_0;
Operand information not set. call_closest_hit_shader 3;
Operand information not set. call_closest_hit_shader 5;
Operand information not set. call_closest_hit_shader 4;
Operand information not set. call_closest_hit_shader 2;
Operand information not set. call_miss_shader ;
Operand information not set. end_trace_ray ;
trace_ray instruction found at PC 8136 (line 3059, shader 0)!
Operand information not set. get_intersection_shader_data_address %shader_data_address_1, %intersection_counter_1;
Operand information not set. get_intersection_shaderID %intersection_shaderID_1, %intersection_counter_1;
Operand information not set. call_intersection_shader %intersection_counter_1;
Operand information not set. call_intersection_shader %intersection_counter_1;
Operand information not set. call_intersection_shader %intersection_counter_1;
Operand information not set. call_intersection_shader %intersection_counter_1;
Operand information not set. get_closest_hit_shaderID %closest_hit_shaderID_1;
Operand information not set. call_closest_hit_shader 3;
Operand information not set. call_closest_hit_shader 5;
Operand information not set. call_closest_hit_shader 4;
Operand information not set. call_closest_hit_shader 2;
Operand information not set. call_miss_shader ;
Operand information not set. end_trace_ray ;
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_RAYGEN_func0_main'.
gpgpusim: launch dimensions 16 x 512 x 1
gpgpusim: SBT: raygen 0x563d96976000, miss 0x563d96976020, hit 0x563d96976040, callable (nil)
gpgpusim: blas address
	[0x153f80e10000] -> 0xcadf6600
	[0x153f80e13900] -> 0xcadf9f00
	[0x153f80e14b00] -> 0xcadfb100
	[0x153f80e14d00] -> 0xcadfb300
	[0x153f80e56500] -> 0xcae3cb00
	[0x153f80e68600] -> 0xcae4ec00
	[0x153f80eaff00] -> 0xcae96500
	[0x153f80eb5e00] -> 0xcae9c400
	[0x153f80f34400] -> 0xcaf1aa00
	[0x153f80f3d500] -> 0xcaf23b00
	[0x153f8105ea00] -> 0xcb045000
	[0x153f81097700] -> 0xcb07dd00
	[0x153f810c6600] -> 0xcb0acc00
	[0x153f810f2900] -> 0xcb0d8f00
	[0x153f81110600] -> 0xcb0f6c00
	[0x153f8113aa00] -> 0xcb121000
	[0x153f8114cb00] -> 0xcb133100
	[0x153f8117ec00] -> 0xcb165200
	[0x153f81185500] -> 0xcb16bb00
	[0x153f81403000] -> 0xcb3e9600
	[0x153f81413300] -> 0xcb3f9900
	[0x153f814b1400] -> 0xcb497a00
	[0x153f814c1700] -> 0xcb4a7d00
	[0x153f814ede00] -> 0xcb4d4400
	[0x153f814fd100] -> 0xcb4e3700
	[0x153f81502400] -> 0xcb4e8a00
	[0x153f81580a00] -> 0xcb567000
	[0x153f815b2b00] -> 0xcb599100
	[0x153f815ca800] -> 0xcb5b0e00
	[0x153f816ba900] -> 0xcb6a0f00
	[0x153f816bbb00] -> 0xcb6a2100
	[0x153f816efa00] -> 0xcb6d6000
	[0x153f81701b00] -> 0xcb6e8100
	[0x153f81702100] -> 0xcb6e8700
	[0x153f817f2200] -> 0xcb7d8800
	[0x153f81865500] -> 0xcb84bb00
	[0x153f81875800] -> 0xcb85be00
	[0x153f81884300] -> 0xcb86a900
	[0x153f81887100] -> 0xcb86d700
	[0x153f81a26f00] -> 0xcba0d500
	[0x153f81a8da00] -> 0xcba74000
	[0x153f81b83600] -> 0xcbb69c00
	[0x153f81d21300] -> 0xcbd07900
	[0x153f81da8400] -> 0xcbd8ea00
	[0x153f81dda500] -> 0xcbdc0b00
	[0x153f81dda700] -> 0xcbdc0d00
	[0x153f81e0c600] -> 0xcbdf2c00
	[0x153f8254c800] -> 0xcc532e00
	[0x153f8257e900] -> 0xcc564f00
	[0x153f8259c600] -> 0xcc582c00
	[0x153f8261ac00] -> 0xcc601200
	[0x153f8265c400] -> 0xcc642a00
	[0x153f8266af00] -> 0xcc651500
	[0x153f8266ce00] -> 0xcc653400
	[0x153f8267d500] -> 0xcc663b00
	[0x153f82680e00] -> 0xcc667400
	[0x153f8287d100] -> 0xcc863700
	[0x153f82975200] -> 0xcc95b800
	[0x153f82985500] -> 0xcc96bb00
	[0x153f82a46800] -> 0xcca2ce00
	[0x153f82b53600] -> 0xccb39c00
	[0x153f82b5eb00] -> 0xccb45100
	[0x153f82b70c00] -> 0xccb57200
	[0x153f82bbaa00] -> 0xccba1000
	[0x153f82bbf600] -> 0xccba5c00
	[0x153f82bcf900] -> 0xccbb5f00
	[0x153f82c11100] -> 0xccbf7700
	[0x153f82c23200] -> 0xccc09800
	[0x153f82c7f000] -> 0xccc65600
	[0x153f82d69100] -> 0xccd4f700
	[0x153f82dc4f00] -> 0xccdab500
	[0x153f82f64c00] -> 0xccf4b200
	[0x153f82f96d00] -> 0xccf7d300
	[0x153f82f9e000] -> 0xccf84600
	[0x153f82fda300] -> 0xccfc0900
	[0x153f82fdb200] -> 0xccfc1800
	[0x153f8304e500] -> 0xcd034b00
	[0x153f830bfc00] -> 0xcd0a6200
	[0x153f830f1d00] -> 0xcd0d8300
	[0x153f831e7a00] -> 0xcd1ce000
	[0x153f833a9b00] -> 0xcd390100
	[0x153f833ad400] -> 0xcd393a00
	[0x153f833b0d00] -> 0xcd397300
	[0x153f833dd400] -> 0xcd3c3a00
	[0x153f834d5500] -> 0xcd4bbb00
	[0x153f8350a000] -> 0xcd4f0600
	[0x153f83588600] -> 0xcd56ec00
	[0x153f8359af00] -> 0xcd581500
	[0x153f835a9a00] -> 0xcd590000
	[0x153f835bcd00] -> 0xcd5a3300
	[0x153f83759700] -> 0xcd73fd00
	[0x153f8378b800] -> 0xcd771e00
	[0x153f83ee1b00] -> 0xcdec8100
	[0x153f84016c00] -> 0xcdffd200
	[0x153f84028700] -> 0xce00ed00
	[0x153f8403a200] -> 0xce020800
	[0x153f8404a500] -> 0xce030b00
	[0x153f8407c600] -> 0xce062c00
	[0x153f8409b100] -> 0xce081700
	[0x153f840ab800] -> 0xce091e00
	[0x153f840c8100] -> 0xce0ae700
	[0x153f840ca200] -> 0xce0b0800
	[0x153f840ca400] -> 0xce0b0a00
	[0x153f840d8f00] -> 0xce0bf500
	[0x153f840eaa00] -> 0xce0d1000
	[0x153f84118700] -> 0xce0fed00
	[0x153f84636700] -> 0xce61cd00
	[0x153f8464e400] -> 0xce634a00
	[0x153f84660500] -> 0xce646b00
	[0x153f84875e00] -> 0xce85c400
	[0x153f84d93700] -> 0xced79d00
	[0x153f84dc5800] -> 0xcedabe00
	[0x153f84dc6a00] -> 0xcedad000
	[0x153f84ed3800] -> 0xceeb9e00
	[0x153f84fcb900] -> 0xcefb1f00
	[0x153f8503ec00] -> 0xcf025200
	[0x153f8506b300] -> 0xcf051900
	[0x153f8507d400] -> 0xcf063a00
	[0x153f85104500] -> 0xcf0eab00
	[0x153f8510fa00] -> 0xcf0f6000
	[0x153f852af800] -> 0xcf295e00
	[0x153f852bc700] -> 0xcf2a2d00
	[0x153f85304000] -> 0xcf2ea600
	[0x153f85307900] -> 0xcf2edf00
	[0x153f85312e00] -> 0xcf2f9400
	[0x153f85324700] -> 0xcf30ad00
	[0x153f85414600] -> 0xcf3fac00
	[0x153f8549b700] -> 0xcf481d00
	[0x153f8549c900] -> 0xcf482f00
	[0x153f855efa00] -> 0xcf5d6000
	[0x153f855fed00] -> 0xcf5e5300
	[0x153f85751e00] -> 0xcf738400
	[0x153f85779d00] -> 0xcf760300
	[0x153f8577d600] -> 0xcf763c00
	[0x153f857af700] -> 0xcf795d00
	[0x153f857d7600] -> 0xcf7bdc00
	[0x153f857f5300] -> 0xcf7db900
	[0x153f86fdd400] -> 0xd0fc3a00
	[0x153f87091500] -> 0xd1077b00
	[0x153f87189600] -> 0xd116fc00
	[0x153f87198900] -> 0xd117ef00
	[0x153f8720bc00] -> 0xd11f2200
	[0x153f8720be00] -> 0xd11f2400
	[0x153f8720f700] -> 0xd11f5d00
	[0x153f87960e00] -> 0xd1947400
	[0x153f87995100] -> 0xd197b700
	[0x153f879c9100] -> 0xd19af700
	[0x153f8811f400] -> 0xd2105a00
	[0x153f88797400] -> 0xd277da00
	[0x153f8881a900] -> 0xd2800f00
	[0x153f88829c00] -> 0xd2810200
	[0x153f88838700] -> 0xd281ed00
	[0x153f88881400] -> 0xd2867a00
	[0x153f8890b700] -> 0xd28f1d00
	[0x153f8890b900] -> 0xd28f1f00
	[0x153f8893da00] -> 0xd2924000
	[0x153f8893ec00] -> 0xd2925200
	[0x153f88945200] -> 0xd292b800
	[0x153f88be0700] -> 0xd2bc6d00
	[0x153f88c08600] -> 0xd2beec00
	[0x153f88c3a700] -> 0xd2c20d00
	[0x153f88c3b900] -> 0xd2c21f00
	[0x153f88c3bb00] -> 0xd2c22100
	[0x153f88ce5700] -> 0xd2ccbd00
	[0x153f88e85200] -> 0xd2e6b800
	[0x153f88eb1500] -> 0xd2e97b00
	[0x153f88fa0400] -> 0xd2f86a00
	[0x153f8906b800] -> 0xd3051e00
	[0x153f8911f900] -> 0xd3105f00
	[0x153f8912fc00] -> 0xd3116200
	[0x153f89440900] -> 0xd3426f00
	[0x153f89472a00] -> 0xd3459000
	[0x153f895a7b00] -> 0xd358e100
	[0x153f895f9c00] -> 0xd35e0200
	[0x153f896f1d00] -> 0xd36d8300
	[0x153f896f1f00] -> 0xd36d8500
	[0x153f896f6800] -> 0xd36dce00
	[0x153f896f6e00] -> 0xd36dd400
	[0x153f8973e700] -> 0xd3724d00
	[0x153f89771600] -> 0xd3757c00
	[0x153f897b8f00] -> 0xd379f500
	[0x153f897bf800] -> 0xd37a5e00
	[0x153f8981e200] -> 0xd3804800
	[0x153f899be000] -> 0xd39a4600
	[0x153f899f0100] -> 0xd39d6700
	[0x153f89a22100] -> 0xd3a08700
	[0x153f89a25900] -> 0xd3a0bf00
	[0x153f89a3bf00] -> 0xd3a22500
	[0x153f89a3c500] -> 0xd3a22b00
	[0x153f89a4c800] -> 0xd3a32e00
	[0x153f89a52e00] -> 0xd3a39400
	[0x153f89a65700] -> 0xd3a4bd00
	[0x153f89aabd00] -> 0xd3a92300
	[0x153f89ad3c00] -> 0xd3aba200
	[0x153f89ae5d00] -> 0xd3acc300
	[0x153f89af6c00] -> 0xd3add200
	[0x153f89b08d00] -> 0xd3aef300
	[0x153f89ca8b00] -> 0xd3c8f100
	[0x153f89cb4000] -> 0xd3c9a600
	[0x153f89d1ad00] -> 0xd3d01300
	[0x153f89d28a00] -> 0xd3d0f000
	[0x153f89d2c300] -> 0xd3d12900
	[0x153f89d31600] -> 0xd3d17c00
	[0x153f89e48f00] -> 0xd3e2f500
	[0x153f89ec7000] -> 0xd3ead600
	[0x153f89ec8200] -> 0xd3eae800
	[0x153f89ecbb00] -> 0xd3eb2100
	[0x153f89ee9800] -> 0xd3ecfe00
	[0x153f89f12200] -> 0xd3ef8800
	[0x153f89f24300] -> 0xd3f0a900
	[0x153f8a007200] -> 0xd3fed800
	[0x153f8a0fcf00] -> 0xd40e3500
	[0x153f8a12be00] -> 0xd4112400
	[0x153f8a1b2f00] -> 0xd4199500
	[0x153f8a231500] -> 0xd4217b00
	[0x153f8a2c4800] -> 0xd42aae00
	[0x153f8a3bc900] -> 0xd43a2f00
	[0x153f8a3da600] -> 0xd43c0c00
	[0x153f8a4a1300] -> 0xd4487900
	[0x153f8a63dd00] -> 0xd4624300
	[0x153f8a6c4e00] -> 0xd46ab400
	[0x153f8a6f3400] -> 0xd46d9a00
	[0x153f8a760500] -> 0xd4746b00
	[0x153f8a7fce00] -> 0xd47e3400
	[0x153f8a801a00] -> 0xd47e8000
	[0x153f8a808300] -> 0xd47ee900
	[0x153f8a900400] -> 0xd48e6a00
	[0x153f8a97ea00] -> 0xd4965000
	[0x153f8a97ef00] -> 0xd4965500
	[0x153f8a9f0700] -> 0xd49d6d00
	[0x153f8ab69c00] -> 0xd4b50200
	[0x153f8ab69e00] -> 0xd4b50400
	[0x153f8ac06700] -> 0xd4becd00
	[0x153f8ac06900] -> 0xd4becf00
	[0x153f8ac06b00] -> 0xd4bed100
	[0x153f8ac0a400] -> 0xd4bf0a00
	[0x153f8ac0a600] -> 0xd4bf0c00
	[0x153f8ac7d900] -> 0xd4c63f00
	[0x153f8ac88e00] -> 0xd4c6f400
	[0x153f8acae500] -> 0xd4c94b00
	[0x153f8acbe800] -> 0xd4ca4e00
	[0x153f8accfa00] -> 0xd4cb6000
	[0x153f8ad56b00] -> 0xd4d3d100
	[0x153f8ad75e00] -> 0xd4d5c400
	[0x153f8ada4d00] -> 0xd4d8b300
	[0x153f8ada5f00] -> 0xd4d8c500
	[0x153f8aeb2d00] -> 0xd4e99300
	[0x153f8aedf000] -> 0xd4ec5600
	[0x153f8af5d600] -> 0xd4f43c00
	[0x153f8af74800] -> 0xd4f5ae00
	[0x153f8af76900] -> 0xd4f5cf00
	[0x153f8afe9c00] -> 0xd4fd0200
	[0x153f8b186600] -> 0xd516cc00
	[0x153f8b189d00] -> 0xd5170300
	[0x153f8b1a6600] -> 0xd518cc00
	[0x153f8b1b1900] -> 0xd5197f00
	[0x153f8b1cd400] -> 0xd51b3a00
	[0x153f8bc68b00] -> 0xd5c4f100
	[0x153f8be08600] -> 0xd5deec00
	[0x153f8be1ce00] -> 0xd5e03400
	[0x153f8be34c00] -> 0xd5e1b200
	[0x153f8be35e00] -> 0xd5e1c400
	[0x153f8bea9100] -> 0xd5e8f700
	[0x153f8bf27200] -> 0xd5f0d800
	[0x153f8bf36c00] -> 0xd5f1d200
	[0x153f8bf6aa00] -> 0xd5f51000
	[0x153f8bf7d700] -> 0xd5f63d00
	[0x153f8c24e200] -> 0xd6234800
	[0x153f8c257d00] -> 0xd623e300
	[0x153f8c341e00] -> 0xd6328400
	[0x153f8c4e1b00] -> 0xd64c8100
	[0x153f8c4f3c00] -> 0xd64da200
	[0x153f8c572200] -> 0xd6558800
	[0x153f8c576e00] -> 0xd655d400
	[0x153f8c58f300] -> 0xd6575900
	[0x153f8cccf500] -> 0xd6cb5b00
	[0x153f8ccdaa00] -> 0xd6cc1000
	[0x153f8cd1c200] -> 0xd6d02800
	[0x153f8cd39f00] -> 0xd6d20500
	[0x153f8cd46e00] -> 0xd6d2d400
	[0x153f8cd7c300] -> 0xd6d62900
	[0x153f8ce03400] -> 0xd6de9a00
	[0x153f8d47b400] -> 0xd7461a00
	[0x153f8d47b600] -> 0xd7461c00
	[0x153f8d489300] -> 0xd746f900
	[0x153f8d525c00] -> 0xd750c200
	[0x153f8d6d6500] -> 0xd76bcb00
	[0x153f8d708600] -> 0xd76eec00
	[0x153f8d70b400] -> 0xd76f1a00
	[0x153f8d803500] -> 0xd77e9b00
	[0x153f8d874000] -> 0xd785a600
	[0x153f8d8a0700] -> 0xd7886d00
	[0x153f8d8be400] -> 0xd78a4a00
	[0x153f8d9b4300] -> 0xd799a900
	[0x153f8d9c3600] -> 0xd79a9c00
	[0x153f8d9d3900] -> 0xd79b9f00
	[0x153f8db9e600] -> 0xd7b84c00
	[0x153f8dc94200] -> 0xd7c7a800
	[0x153f8dc99500] -> 0xd7c7fb00
	[0x153f8dcc4600] -> 0xd7caac00
	[0x153f8dce7800] -> 0xd7ccde00
	[0x153f8dcf1300] -> 0xd7cd7900
	[0x153f8dd23400] -> 0xd7d09a00
	[0x153f8dd33700] -> 0xd7d19d00
	[0x153f8dd33e00] -> 0xd7d1a400
	[0x153f8dd37700] -> 0xd7d1dd00
	[0x153f8dd42c00] -> 0xd7d29200
	[0x153f8dd51f00] -> 0xd7d38500
	[0x153f8dd5b700] -> 0xd7d41d00
	[0x153f8dd5d800] -> 0xd7d43e00
	[0x153f8ddb9600] -> 0xd7d9fc00
	[0x153f8de18000] -> 0xd7dfe600
	[0x153f8de1df00] -> 0xd7e04500
	[0x153f8de97c00] -> 0xd7e7e200
	[0x153f8de99300] -> 0xd7e7f900
	[0x153f8dea8600] -> 0xd7e8ec00
	[0x153f8df1b900] -> 0xd7f01f00
	[0x153f8df20800] -> 0xd7f06e00
	[0x153f8df21a00] -> 0xd7f08000
	[0x153f8df21c00] -> 0xd7f08200
gpgpusim: tlas address 0xdf09c300
Streaming cache with 4096 mshr
GPGPU-Sim: Performing Functional Simulation, executing kernel MESA_SHADER_RAYGEN_func0_main...
GPGPU-Sim PTX: PDOM analysis already done for MESA_SHADER_RAYGEN_func0_main 
padded cta size is 32 and 14 and 16GPGPU-Sim uArch: CTA/core = 16, limited by: cta_limit
Max CTA : 16
GPGPU-Sim PTX: WARNING (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_RAYGEN_0.ptx:97) ** reading undefined register '%const1_f32' (cuid:0). Setting to 0X00000000. This is okay if you are simulating the native ISA
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
Printing basic blocks for function 'MESA_SHADER_CLOSEST_HIT_func2_main':
bb_00	:  PC=0x26d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:96) load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
bb_00	:  PC=0x26d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:98) rt_alloc_mem %HitAttributes, 16, 64; // decl_var ray_hit_attrib INTERP_MODE_NONE vec2 HitAttributes
bb_00	:  PC=0x26e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:100) rt_alloc_mem %Ray, 48, 32; // decl_var shader_call_data INTERP_MODE_NONE RayPayload Ray
bb_00	:  PC=0x26e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:108) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x26f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:111) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x26f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:114) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x2700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:117) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x2708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:122) mov.f32 %ssa_0, 0F00000000; // vec1 32 ssa_0 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x2710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:124) mov.b32 %ssa_0_bits, 0F00000000;
bb_00	:  PC=0x2718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:127) mov.f32 %ssa_1, 0F3f800000; // vec1 32 ssa_1 = load_const (0x3f800000 /* 1.000000 */)
bb_00	:  PC=0x2720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:129) mov.b32 %ssa_1_bits, 0F3f800000;
bb_00	:  PC=0x2728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:132) mov.f32 %ssa_2, 0F00000002; // vec1 32 ssa_2 = load_const (0x00000002 /* 0.000000 */)
bb_00	:  PC=0x2730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:134) mov.b32 %ssa_2_bits, 0F00000002;
bb_00	:  PC=0x2738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:137) mov.f32 %ssa_3, 0F00000003; // vec1 32 ssa_3 = load_const (0x00000003 /* 0.000000 */)
bb_00	:  PC=0x2740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:139) mov.b32 %ssa_3_bits, 0F00000003;
bb_00	:  PC=0x2748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:142) mov.f32 %ssa_4, 0F00000001; // vec1 32 ssa_4 = load_const (0x00000001 /* 0.000000 */)
bb_00	:  PC=0x2750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:144) mov.b32 %ssa_4_bits, 0F00000001;
bb_00	:  PC=0x2758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:147) load_ray_instance_custom_index %ssa_5;// vec1 32 ssa_5 = intrinsic load_ray_instance_custom_index () ()
bb_00	:  PC=0x2760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:150) load_vulkan_descriptor %ssa_6, 0, 7, 7; // vec2 32 ssa_6 = intrinsic vulkan_resource_index (%ssa_0) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
bb_00	:  PC=0x2768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:153) mov.b64 %ssa_7, %ssa_6; // vec2 32 ssa_7 = intrinsic load_vulkan_descriptor (%ssa_6) (7) /* desc_type=SSBO */
bb_00	:  PC=0x2770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:156) mov.b64 %ssa_8, %ssa_7; // vec2 32 ssa_8 = deref_cast (OffsetArray *)ssa_7 (ssbo OffsetArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:159) add.u64 %ssa_9, %ssa_8, 0; // vec2 32 ssa_9 = deref_struct &ssa_8->Offsets (ssbo uvec2[]) /* &((OffsetArray *)ssa_7)->Offsets */
bb_00	:  PC=0x2780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:164) mov.u32 %ssa_10_array_index_32, %ssa_5;
bb_00	:  PC=0x2788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:165) mul.wide.u32 %ssa_10_array_index_64, %ssa_10_array_index_32, 8;
bb_00	:  PC=0x2790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:166) add.u64 %ssa_10, %ssa_9, %ssa_10_array_index_64; // vec2 32 ssa_10 = deref_array &(*ssa_9)[ssa_5] (ssbo uvec2) /* &((OffsetArray *)ssa_7)->Offsets[ssa_5] */
bb_00	:  PC=0x2798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:170) ld.global.u32 %ssa_11_0, [%ssa_10 + 0];
bb_00	:  PC=0x27a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:171) ld.global.u32 %ssa_11_1, [%ssa_10 + 4];
bb_00	:  PC=0x27a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:176) load_primitive_id %ssa_12;// vec1 32 ssa_12 = intrinsic load_primitive_id () ()
bb_00	:  PC=0x27b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:179) mul.lo.s32 %ssa_13, %ssa_12, %ssa_3_bits; // vec1 32 ssa_13 = imul ssa_12, ssa_3
bb_00	:  PC=0x27b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:182) add.s32 %ssa_14, %ssa_11_0, %ssa_13; // vec1 32 ssa_14 = iadd ssa_11.x, ssa_13
bb_00	:  PC=0x27c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:185) load_vulkan_descriptor %ssa_15, 0, 5, 7; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_0) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
bb_00	:  PC=0x27c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:188) mov.b64 %ssa_16, %ssa_15; // vec2 32 ssa_16 = intrinsic load_vulkan_descriptor (%ssa_15) (7) /* desc_type=SSBO */
bb_00	:  PC=0x27d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:191) mov.b64 %ssa_17, %ssa_16; // vec2 32 ssa_17 = deref_cast (IndexArray *)ssa_16 (ssbo IndexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x27d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:194) add.u64 %ssa_18, %ssa_17, 0; // vec2 32 ssa_18 = deref_struct &ssa_17->Indices (ssbo uint[]) /* &((IndexArray *)ssa_16)->Indices */
bb_00	:  PC=0x27e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:199) cvt.u32.s32 %ssa_19_array_index_32, %ssa_14;
bb_00	:  PC=0x27e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:200) mul.wide.u32 %ssa_19_array_index_64, %ssa_19_array_index_32, 4;
bb_00	:  PC=0x27f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:201) add.u64 %ssa_19, %ssa_18, %ssa_19_array_index_64; // vec2 32 ssa_19 = deref_array &(*ssa_18)[ssa_14] (ssbo uint) /* &((IndexArray *)ssa_16)->Indices[ssa_14] */
bb_00	:  PC=0x27f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:204) ld.global.u32 %ssa_20, [%ssa_19]; // vec1 32 ssa_20 = intrinsic load_deref (%ssa_19) (16) /* access=16 */
bb_00	:  PC=0x2800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:207) add.s32 %ssa_21, %ssa_11_1, %ssa_20; // vec1 32 ssa_21 = iadd ssa_11.y, ssa_20
bb_00	:  PC=0x2808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:210) mov.f32 %ssa_22, 0F00000008; // vec1 32 ssa_22 = load_const (0x00000008 /* 0.000000 */)
bb_00	:  PC=0x2810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:212) mov.b32 %ssa_22_bits, 0F00000008;
bb_00	:  PC=0x2818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:215) mov.f32 %ssa_23, 0F00000007; // vec1 32 ssa_23 = load_const (0x00000007 /* 0.000000 */)
bb_00	:  PC=0x2820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:217) mov.b32 %ssa_23_bits, 0F00000007;
bb_00	:  PC=0x2828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:220) mov.f32 %ssa_24, 0F00000006; // vec1 32 ssa_24 = load_const (0x00000006 /* 0.000000 */)
bb_00	:  PC=0x2830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:222) mov.b32 %ssa_24_bits, 0F00000006;
bb_00	:  PC=0x2838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:225) mov.f32 %ssa_25, 0F00000005; // vec1 32 ssa_25 = load_const (0x00000005 /* 0.000000 */)
bb_00	:  PC=0x2840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:227) mov.b32 %ssa_25_bits, 0F00000005;
bb_00	:  PC=0x2848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:230) mov.f32 %ssa_26, 0F00000004; // vec1 32 ssa_26 = load_const (0x00000004 /* 0.000000 */)
bb_00	:  PC=0x2850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:232) mov.b32 %ssa_26_bits, 0F00000004;
bb_00	:  PC=0x2858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:235) mov.f32 %ssa_27, 0F00000009; // vec1 32 ssa_27 = load_const (0x00000009 /* 0.000000 */)
bb_00	:  PC=0x2860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:237) mov.b32 %ssa_27_bits, 0F00000009;
bb_00	:  PC=0x2868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:240) mul.lo.s32 %ssa_28, %ssa_21, %ssa_27_bits; // vec1 32 ssa_28 = imul ssa_21, ssa_27
bb_00	:  PC=0x2870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:243) add.s32 %ssa_29, %ssa_28, %ssa_3_bits; // vec1 32 ssa_29 = iadd ssa_28, ssa_3
bb_00	:  PC=0x2878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:246) load_vulkan_descriptor %ssa_30, 0, 4, 7; // vec2 32 ssa_30 = intrinsic vulkan_resource_index (%ssa_0) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
bb_00	:  PC=0x2880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:249) mov.b64 %ssa_31, %ssa_30; // vec2 32 ssa_31 = intrinsic load_vulkan_descriptor (%ssa_30) (7) /* desc_type=SSBO */
bb_00	:  PC=0x2888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:252) mov.b64 %ssa_32, %ssa_31; // vec2 32 ssa_32 = deref_cast (VertexArray *)ssa_31 (ssbo VertexArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:255) add.u64 %ssa_33, %ssa_32, 0; // vec2 32 ssa_33 = deref_struct &ssa_32->Vertices (ssbo float[]) /* &((VertexArray *)ssa_31)->Vertices */
bb_00	:  PC=0x2898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:260) cvt.u32.s32 %ssa_34_array_index_32, %ssa_29;
bb_00	:  PC=0x28a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:261) mul.wide.u32 %ssa_34_array_index_64, %ssa_34_array_index_32, 4;
bb_00	:  PC=0x28a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:262) add.u64 %ssa_34, %ssa_33, %ssa_34_array_index_64; // vec2 32 ssa_34 = deref_array &(*ssa_33)[ssa_29] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_29] */
bb_00	:  PC=0x28b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:265) ld.global.f32 %ssa_35, [%ssa_34]; // vec1 32 ssa_35 = intrinsic load_deref (%ssa_34) (16) /* access=16 */
bb_00	:  PC=0x28b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:268) add.s32 %ssa_36, %ssa_28, %ssa_26_bits; // vec1 32 ssa_36 = iadd ssa_28, ssa_26
bb_00	:  PC=0x28c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:273) cvt.u32.s32 %ssa_37_array_index_32, %ssa_36;
bb_00	:  PC=0x28c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:274) mul.wide.u32 %ssa_37_array_index_64, %ssa_37_array_index_32, 4;
bb_00	:  PC=0x28d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:275) add.u64 %ssa_37, %ssa_33, %ssa_37_array_index_64; // vec2 32 ssa_37 = deref_array &(*ssa_33)[ssa_36] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_36] */
bb_00	:  PC=0x28d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:278) ld.global.f32 %ssa_38, [%ssa_37]; // vec1 32 ssa_38 = intrinsic load_deref (%ssa_37) (16) /* access=16 */
bb_00	:  PC=0x28e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:281) add.s32 %ssa_39, %ssa_28, %ssa_25_bits; // vec1 32 ssa_39 = iadd ssa_28, ssa_25
bb_00	:  PC=0x28e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:286) cvt.u32.s32 %ssa_40_array_index_32, %ssa_39;
bb_00	:  PC=0x28f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:287) mul.wide.u32 %ssa_40_array_index_64, %ssa_40_array_index_32, 4;
bb_00	:  PC=0x28f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:288) add.u64 %ssa_40, %ssa_33, %ssa_40_array_index_64; // vec2 32 ssa_40 = deref_array &(*ssa_33)[ssa_39] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_39] */
bb_00	:  PC=0x2900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:291) ld.global.f32 %ssa_41, [%ssa_40]; // vec1 32 ssa_41 = intrinsic load_deref (%ssa_40) (16) /* access=16 */
bb_00	:  PC=0x2908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:294) add.s32 %ssa_42, %ssa_28, %ssa_24_bits; // vec1 32 ssa_42 = iadd ssa_28, ssa_24
bb_00	:  PC=0x2910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:299) cvt.u32.s32 %ssa_43_array_index_32, %ssa_42;
bb_00	:  PC=0x2918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:300) mul.wide.u32 %ssa_43_array_index_64, %ssa_43_array_index_32, 4;
bb_00	:  PC=0x2920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:301) add.u64 %ssa_43, %ssa_33, %ssa_43_array_index_64; // vec2 32 ssa_43 = deref_array &(*ssa_33)[ssa_42] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_42] */
bb_00	:  PC=0x2928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:304) ld.global.f32 %ssa_44, [%ssa_43]; // vec1 32 ssa_44 = intrinsic load_deref (%ssa_43) (16) /* access=16 */
bb_00	:  PC=0x2930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:307) add.s32 %ssa_45, %ssa_28, %ssa_23_bits; // vec1 32 ssa_45 = iadd ssa_28, ssa_23
bb_00	:  PC=0x2938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:312) cvt.u32.s32 %ssa_46_array_index_32, %ssa_45;
bb_00	:  PC=0x2940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:313) mul.wide.u32 %ssa_46_array_index_64, %ssa_46_array_index_32, 4;
bb_00	:  PC=0x2948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:314) add.u64 %ssa_46, %ssa_33, %ssa_46_array_index_64; // vec2 32 ssa_46 = deref_array &(*ssa_33)[ssa_45] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_45] */
bb_00	:  PC=0x2950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:317) ld.global.f32 %ssa_47, [%ssa_46]; // vec1 32 ssa_47 = intrinsic load_deref (%ssa_46) (16) /* access=16 */
bb_00	:  PC=0x2958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:320) add.s32 %ssa_48, %ssa_28, %ssa_22_bits; // vec1 32 ssa_48 = iadd ssa_28, ssa_22
bb_00	:  PC=0x2960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:325) cvt.u32.s32 %ssa_49_array_index_32, %ssa_48;
bb_00	:  PC=0x2968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:326) mul.wide.u32 %ssa_49_array_index_64, %ssa_49_array_index_32, 4;
bb_00	:  PC=0x2970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:327) add.u64 %ssa_49, %ssa_33, %ssa_49_array_index_64; // vec2 32 ssa_49 = deref_array &(*ssa_33)[ssa_48] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_48] */
bb_00	:  PC=0x2978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:330) ld.global.f32 %ssa_50, [%ssa_49]; // vec1 32 ssa_50 = intrinsic load_deref (%ssa_49) (16) /* access=16 */
bb_00	:  PC=0x2980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:333) add.s32 %ssa_51, %ssa_11_0, %ssa_4_bits; // vec1 32 ssa_51 = iadd ssa_11.x, ssa_4
bb_00	:  PC=0x2988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:336) add.s32 %ssa_52, %ssa_51, %ssa_13;// vec1 32 ssa_52 = iadd ssa_51, ssa_13
bb_00	:  PC=0x2990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:341) cvt.u32.s32 %ssa_53_array_index_32, %ssa_52;
bb_00	:  PC=0x2998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:342) mul.wide.u32 %ssa_53_array_index_64, %ssa_53_array_index_32, 4;
bb_00	:  PC=0x29a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:343) add.u64 %ssa_53, %ssa_18, %ssa_53_array_index_64; // vec2 32 ssa_53 = deref_array &(*ssa_18)[ssa_52] (ssbo uint) /* &((IndexArray *)ssa_16)->Indices[ssa_52] */
bb_00	:  PC=0x29a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:346) ld.global.u32 %ssa_54, [%ssa_53]; // vec1 32 ssa_54 = intrinsic load_deref (%ssa_53) (16) /* access=16 */
bb_00	:  PC=0x29b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:349) add.s32 %ssa_55, %ssa_11_1, %ssa_54; // vec1 32 ssa_55 = iadd ssa_11.y, ssa_54
bb_00	:  PC=0x29b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:352) mul.lo.s32 %ssa_56, %ssa_55, %ssa_27_bits; // vec1 32 ssa_56 = imul ssa_55, ssa_27
bb_00	:  PC=0x29c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:355) add.s32 %ssa_57, %ssa_56, %ssa_3_bits; // vec1 32 ssa_57 = iadd ssa_56, ssa_3
bb_00	:  PC=0x29c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:360) cvt.u32.s32 %ssa_58_array_index_32, %ssa_57;
bb_00	:  PC=0x29d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:361) mul.wide.u32 %ssa_58_array_index_64, %ssa_58_array_index_32, 4;
bb_00	:  PC=0x29d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:362) add.u64 %ssa_58, %ssa_33, %ssa_58_array_index_64; // vec2 32 ssa_58 = deref_array &(*ssa_33)[ssa_57] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_57] */
bb_00	:  PC=0x29e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:365) ld.global.f32 %ssa_59, [%ssa_58]; // vec1 32 ssa_59 = intrinsic load_deref (%ssa_58) (16) /* access=16 */
bb_00	:  PC=0x29e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:368) add.s32 %ssa_60, %ssa_56, %ssa_26_bits; // vec1 32 ssa_60 = iadd ssa_56, ssa_26
bb_00	:  PC=0x29f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:373) cvt.u32.s32 %ssa_61_array_index_32, %ssa_60;
bb_00	:  PC=0x29f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:374) mul.wide.u32 %ssa_61_array_index_64, %ssa_61_array_index_32, 4;
bb_00	:  PC=0x2a00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:375) add.u64 %ssa_61, %ssa_33, %ssa_61_array_index_64; // vec2 32 ssa_61 = deref_array &(*ssa_33)[ssa_60] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_60] */
bb_00	:  PC=0x2a08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:378) ld.global.f32 %ssa_62, [%ssa_61]; // vec1 32 ssa_62 = intrinsic load_deref (%ssa_61) (16) /* access=16 */
bb_00	:  PC=0x2a10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:381) add.s32 %ssa_63, %ssa_56, %ssa_25_bits; // vec1 32 ssa_63 = iadd ssa_56, ssa_25
bb_00	:  PC=0x2a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:386) cvt.u32.s32 %ssa_64_array_index_32, %ssa_63;
bb_00	:  PC=0x2a20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:387) mul.wide.u32 %ssa_64_array_index_64, %ssa_64_array_index_32, 4;
bb_00	:  PC=0x2a28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:388) add.u64 %ssa_64, %ssa_33, %ssa_64_array_index_64; // vec2 32 ssa_64 = deref_array &(*ssa_33)[ssa_63] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_63] */
bb_00	:  PC=0x2a30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:391) ld.global.f32 %ssa_65, [%ssa_64]; // vec1 32 ssa_65 = intrinsic load_deref (%ssa_64) (16) /* access=16 */
bb_00	:  PC=0x2a38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:394) add.s32 %ssa_66, %ssa_56, %ssa_24_bits; // vec1 32 ssa_66 = iadd ssa_56, ssa_24
bb_00	:  PC=0x2a40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:399) cvt.u32.s32 %ssa_67_array_index_32, %ssa_66;
bb_00	:  PC=0x2a48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:400) mul.wide.u32 %ssa_67_array_index_64, %ssa_67_array_index_32, 4;
bb_00	:  PC=0x2a50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:401) add.u64 %ssa_67, %ssa_33, %ssa_67_array_index_64; // vec2 32 ssa_67 = deref_array &(*ssa_33)[ssa_66] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_66] */
bb_00	:  PC=0x2a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:404) ld.global.f32 %ssa_68, [%ssa_67]; // vec1 32 ssa_68 = intrinsic load_deref (%ssa_67) (16) /* access=16 */
bb_00	:  PC=0x2a60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:407) add.s32 %ssa_69, %ssa_56, %ssa_23_bits; // vec1 32 ssa_69 = iadd ssa_56, ssa_23
bb_00	:  PC=0x2a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:412) cvt.u32.s32 %ssa_70_array_index_32, %ssa_69;
bb_00	:  PC=0x2a70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:413) mul.wide.u32 %ssa_70_array_index_64, %ssa_70_array_index_32, 4;
bb_00	:  PC=0x2a78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:414) add.u64 %ssa_70, %ssa_33, %ssa_70_array_index_64; // vec2 32 ssa_70 = deref_array &(*ssa_33)[ssa_69] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_69] */
bb_00	:  PC=0x2a80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:417) ld.global.f32 %ssa_71, [%ssa_70]; // vec1 32 ssa_71 = intrinsic load_deref (%ssa_70) (16) /* access=16 */
bb_00	:  PC=0x2a88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:420) add.s32 %ssa_72, %ssa_11_0, %ssa_2_bits; // vec1 32 ssa_72 = iadd ssa_11.x, ssa_2
bb_00	:  PC=0x2a90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:423) add.s32 %ssa_73, %ssa_72, %ssa_13;// vec1 32 ssa_73 = iadd ssa_72, ssa_13
bb_00	:  PC=0x2a98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:428) cvt.u32.s32 %ssa_74_array_index_32, %ssa_73;
bb_00	:  PC=0x2aa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:429) mul.wide.u32 %ssa_74_array_index_64, %ssa_74_array_index_32, 4;
bb_00	:  PC=0x2aa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:430) add.u64 %ssa_74, %ssa_18, %ssa_74_array_index_64; // vec2 32 ssa_74 = deref_array &(*ssa_18)[ssa_73] (ssbo uint) /* &((IndexArray *)ssa_16)->Indices[ssa_73] */
bb_00	:  PC=0x2ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:433) ld.global.u32 %ssa_75, [%ssa_74]; // vec1 32 ssa_75 = intrinsic load_deref (%ssa_74) (16) /* access=16 */
bb_00	:  PC=0x2ab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:436) add.s32 %ssa_76, %ssa_11_1, %ssa_75; // vec1 32 ssa_76 = iadd ssa_11.y, ssa_75
bb_00	:  PC=0x2ac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:439) mul.lo.s32 %ssa_77, %ssa_76, %ssa_27_bits; // vec1 32 ssa_77 = imul ssa_76, ssa_27
bb_00	:  PC=0x2ac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:442) add.s32 %ssa_78, %ssa_77, %ssa_3_bits; // vec1 32 ssa_78 = iadd ssa_77, ssa_3
bb_00	:  PC=0x2ad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:447) cvt.u32.s32 %ssa_79_array_index_32, %ssa_78;
bb_00	:  PC=0x2ad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:448) mul.wide.u32 %ssa_79_array_index_64, %ssa_79_array_index_32, 4;
bb_00	:  PC=0x2ae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:449) add.u64 %ssa_79, %ssa_33, %ssa_79_array_index_64; // vec2 32 ssa_79 = deref_array &(*ssa_33)[ssa_78] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_78] */
bb_00	:  PC=0x2ae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:452) ld.global.f32 %ssa_80, [%ssa_79]; // vec1 32 ssa_80 = intrinsic load_deref (%ssa_79) (16) /* access=16 */
bb_00	:  PC=0x2af0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:455) add.s32 %ssa_81, %ssa_77, %ssa_26_bits; // vec1 32 ssa_81 = iadd ssa_77, ssa_26
bb_00	:  PC=0x2af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:460) cvt.u32.s32 %ssa_82_array_index_32, %ssa_81;
bb_00	:  PC=0x2b00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:461) mul.wide.u32 %ssa_82_array_index_64, %ssa_82_array_index_32, 4;
bb_00	:  PC=0x2b08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:462) add.u64 %ssa_82, %ssa_33, %ssa_82_array_index_64; // vec2 32 ssa_82 = deref_array &(*ssa_33)[ssa_81] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_81] */
bb_00	:  PC=0x2b10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:465) ld.global.f32 %ssa_83, [%ssa_82]; // vec1 32 ssa_83 = intrinsic load_deref (%ssa_82) (16) /* access=16 */
bb_00	:  PC=0x2b18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:468) add.s32 %ssa_84, %ssa_77, %ssa_25_bits; // vec1 32 ssa_84 = iadd ssa_77, ssa_25
bb_00	:  PC=0x2b20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:473) cvt.u32.s32 %ssa_85_array_index_32, %ssa_84;
bb_00	:  PC=0x2b28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:474) mul.wide.u32 %ssa_85_array_index_64, %ssa_85_array_index_32, 4;
bb_00	:  PC=0x2b30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:475) add.u64 %ssa_85, %ssa_33, %ssa_85_array_index_64; // vec2 32 ssa_85 = deref_array &(*ssa_33)[ssa_84] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_84] */
bb_00	:  PC=0x2b38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:478) ld.global.f32 %ssa_86, [%ssa_85]; // vec1 32 ssa_86 = intrinsic load_deref (%ssa_85) (16) /* access=16 */
bb_00	:  PC=0x2b40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:481) add.s32 %ssa_87, %ssa_77, %ssa_24_bits; // vec1 32 ssa_87 = iadd ssa_77, ssa_24
bb_00	:  PC=0x2b48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:486) cvt.u32.s32 %ssa_88_array_index_32, %ssa_87;
bb_00	:  PC=0x2b50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:487) mul.wide.u32 %ssa_88_array_index_64, %ssa_88_array_index_32, 4;
bb_00	:  PC=0x2b58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:488) add.u64 %ssa_88, %ssa_33, %ssa_88_array_index_64; // vec2 32 ssa_88 = deref_array &(*ssa_33)[ssa_87] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_87] */
bb_00	:  PC=0x2b60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:491) ld.global.f32 %ssa_89, [%ssa_88]; // vec1 32 ssa_89 = intrinsic load_deref (%ssa_88) (16) /* access=16 */
bb_00	:  PC=0x2b68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:494) add.s32 %ssa_90, %ssa_77, %ssa_23_bits; // vec1 32 ssa_90 = iadd ssa_77, ssa_23
bb_00	:  PC=0x2b70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:499) cvt.u32.s32 %ssa_91_array_index_32, %ssa_90;
bb_00	:  PC=0x2b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:500) mul.wide.u32 %ssa_91_array_index_64, %ssa_91_array_index_32, 4;
bb_00	:  PC=0x2b80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:501) add.u64 %ssa_91, %ssa_33, %ssa_91_array_index_64; // vec2 32 ssa_91 = deref_array &(*ssa_33)[ssa_90] (ssbo float) /* &((VertexArray *)ssa_31)->Vertices[ssa_90] */
bb_00	:  PC=0x2b88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:504) ld.global.f32 %ssa_92, [%ssa_91]; // vec1 32 ssa_92 = intrinsic load_deref (%ssa_91) (16) /* access=16 */
bb_00	:  PC=0x2b90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:507) load_vulkan_descriptor %ssa_93, 0, 6, 7; // vec2 32 ssa_93 = intrinsic vulkan_resource_index (%ssa_0) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
bb_00	:  PC=0x2b98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:510) mov.b64 %ssa_94, %ssa_93; // vec2 32 ssa_94 = intrinsic load_vulkan_descriptor (%ssa_93) (7) /* desc_type=SSBO */
bb_00	:  PC=0x2ba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:513) mov.b64 %ssa_95, %ssa_94; // vec2 32 ssa_95 = deref_cast (MaterialArray *)ssa_94 (ssbo MaterialArray)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2ba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:516) add.u64 %ssa_96, %ssa_95, 0; // vec2 32 ssa_96 = deref_struct &ssa_95->Materials (ssbo Material[]) /* &((MaterialArray *)ssa_94)->Materials */
bb_00	:  PC=0x2bb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:521) mov.b32 %ssa_97_array_index_32, %ssa_50;
bb_00	:  PC=0x2bb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:522) mul.wide.u32 %ssa_97_array_index_64, %ssa_97_array_index_32, 32;
bb_00	:  PC=0x2bc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:523) add.u64 %ssa_97, %ssa_96, %ssa_97_array_index_64; // vec2 32 ssa_97 = deref_array &(*ssa_96)[ssa_50] (ssbo Material) /* &((MaterialArray *)ssa_94)->Materials[ssa_50] */
bb_00	:  PC=0x2bc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:526) add.u64 %ssa_98, %ssa_97, 0; // vec2 32 ssa_98 = deref_struct &ssa_97->Diffuse (ssbo vec4) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].Diffuse */
bb_00	:  PC=0x2bd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:532) ld.global.f32 %ssa_99_0, [%ssa_98 + 0];
bb_00	:  PC=0x2bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:533) ld.global.f32 %ssa_99_1, [%ssa_98 + 4];
bb_00	:  PC=0x2be0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:534) ld.global.f32 %ssa_99_2, [%ssa_98 + 8];
bb_00	:  PC=0x2be8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:535) ld.global.f32 %ssa_99_3, [%ssa_98 + 12];
bb_00	:  PC=0x2bf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:540) add.u64 %ssa_100, %ssa_97, 16; // vec2 32 ssa_100 = deref_struct &ssa_97->DiffuseTextureId (ssbo int) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].DiffuseTextureId */
bb_00	:  PC=0x2bf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:543) ld.global.s32 %ssa_101, [%ssa_100]; // vec1 32 ssa_101 = intrinsic load_deref (%ssa_100) (16) /* access=16 */
bb_00	:  PC=0x2c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:546) add.u64 %ssa_102, %ssa_97, 20; // vec2 32 ssa_102 = deref_struct &ssa_97->Fuzziness (ssbo float) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].Fuzziness */
bb_00	:  PC=0x2c08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:549) ld.global.f32 %ssa_103, [%ssa_102]; // vec1 32 ssa_103 = intrinsic load_deref (%ssa_102) (16) /* access=16 */
bb_00	:  PC=0x2c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:552) add.u64 %ssa_104, %ssa_97, 24; // vec2 32 ssa_104 = deref_struct &ssa_97->RefractionIndex (ssbo float) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].RefractionIndex */
bb_00	:  PC=0x2c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:555) ld.global.f32 %ssa_105, [%ssa_104]; // vec1 32 ssa_105 = intrinsic load_deref (%ssa_104) (16) /* access=16 */
bb_00	:  PC=0x2c20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:558) add.u64 %ssa_106, %ssa_97, 28; // vec2 32 ssa_106 = deref_struct &ssa_97->MaterialModel (ssbo uint) /* &((MaterialArray *)ssa_94)->Materials[ssa_50].MaterialModel */
bb_00	:  PC=0x2c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:561) ld.global.u32 %ssa_107, [%ssa_106]; // vec1 32 ssa_107 = intrinsic load_deref (%ssa_106) (16) /* access=16 */
bb_00	:  PC=0x2c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:564) mov.b64 %ssa_108, %HitAttributes; // vec1 32 ssa_108 = deref_var &HitAttributes (ray_hit_attrib vec2) 
bb_00	:  PC=0x2c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:568) ld.global.f32 %ssa_109_0, [%ssa_108 + 0];
bb_00	:  PC=0x2c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:569) ld.global.f32 %ssa_109_1, [%ssa_108 + 4];
bb_00	:  PC=0x2c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:574) neg.f32 %ssa_110, %ssa_109_0; // vec1 32 ssa_110 = fneg ssa_109.x
bb_00	:  PC=0x2c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:577) add.f32 %ssa_111, %ssa_1, %ssa_110;// vec1 32 ssa_111 = fadd ssa_1, ssa_110
bb_00	:  PC=0x2c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:580) neg.f32 %ssa_112, %ssa_109_1; // vec1 32 ssa_112 = fneg ssa_109.y
bb_00	:  PC=0x2c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:583) add.f32 %ssa_113, %ssa_111, %ssa_112;// vec1 32 ssa_113 = fadd ssa_111, ssa_112
bb_00	:  PC=0x2c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:586) mul.f32 %ssa_114, %ssa_35, %ssa_113;// vec1 32 ssa_114 = fmul ssa_35, ssa_113
bb_00	:  PC=0x2c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:589) mul.f32 %ssa_115, %ssa_38, %ssa_113;// vec1 32 ssa_115 = fmul ssa_38, ssa_113
bb_00	:  PC=0x2c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:592) mul.f32 %ssa_116, %ssa_41, %ssa_113;// vec1 32 ssa_116 = fmul ssa_41, ssa_113
bb_00	:  PC=0x2c80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:595) mul.f32 %ssa_117, %ssa_59, %ssa_109_0; // vec1 32 ssa_117 = fmul ssa_59, ssa_109.x
bb_00	:  PC=0x2c88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:598) mul.f32 %ssa_118, %ssa_62, %ssa_109_0; // vec1 32 ssa_118 = fmul ssa_62, ssa_109.x
bb_00	:  PC=0x2c90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:601) mul.f32 %ssa_119, %ssa_65, %ssa_109_0; // vec1 32 ssa_119 = fmul ssa_65, ssa_109.x
bb_00	:  PC=0x2c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:604) add.f32 %ssa_120, %ssa_114, %ssa_117;// vec1 32 ssa_120 = fadd ssa_114, ssa_117
bb_00	:  PC=0x2ca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:607) add.f32 %ssa_121, %ssa_115, %ssa_118;// vec1 32 ssa_121 = fadd ssa_115, ssa_118
bb_00	:  PC=0x2ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:610) add.f32 %ssa_122, %ssa_116, %ssa_119;// vec1 32 ssa_122 = fadd ssa_116, ssa_119
bb_00	:  PC=0x2cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:613) mul.f32 %ssa_123, %ssa_80, %ssa_109_1; // vec1 32 ssa_123 = fmul ssa_80, ssa_109.y
bb_00	:  PC=0x2cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:616) mul.f32 %ssa_124, %ssa_83, %ssa_109_1; // vec1 32 ssa_124 = fmul ssa_83, ssa_109.y
bb_00	:  PC=0x2cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:619) mul.f32 %ssa_125, %ssa_86, %ssa_109_1; // vec1 32 ssa_125 = fmul ssa_86, ssa_109.y
bb_00	:  PC=0x2cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:622) add.f32 %ssa_126, %ssa_120, %ssa_123;// vec1 32 ssa_126 = fadd ssa_120, ssa_123
bb_00	:  PC=0x2cd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:625) add.f32 %ssa_127, %ssa_121, %ssa_124;// vec1 32 ssa_127 = fadd ssa_121, ssa_124
bb_00	:  PC=0x2cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:628) add.f32 %ssa_128, %ssa_122, %ssa_125;// vec1 32 ssa_128 = fadd ssa_122, ssa_125
bb_00	:  PC=0x2ce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:631) mul.f32 %ssa_129, %ssa_126, %ssa_126;// vec1 32 ssa_129 = fmul ssa_126, ssa_126
bb_00	:  PC=0x2ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:634) mul.f32 %ssa_130, %ssa_127, %ssa_127;// vec1 32 ssa_130 = fmul ssa_127, ssa_127
bb_00	:  PC=0x2cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:637) mul.f32 %ssa_131, %ssa_128, %ssa_128;// vec1 32 ssa_131 = fmul ssa_128, ssa_128
bb_00	:  PC=0x2cf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:643) mov.f32 %ssa_132_0, %ssa_129;
bb_00	:  PC=0x2d00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:644) mov.f32 %ssa_132_1, %ssa_130;
bb_00	:  PC=0x2d08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:645) mov.f32 %ssa_132_2, %ssa_131; // vec3 32 ssa_132 = vec3 ssa_129, ssa_130, ssa_131
bb_00	:  PC=0x2d10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:648) add.f32 %ssa_133, %ssa_132_0, %ssa_132_1;
bb_00	:  PC=0x2d18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:649) add.f32 %ssa_133, %ssa_133, %ssa_132_2; // vec1 32 ssa_133 = fsum3 ssa_132
bb_00	:  PC=0x2d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:652) rsqrt.approx.f32 %ssa_134, %ssa_133;// vec1 32 ssa_134 = frsq ssa_133
bb_00	:  PC=0x2d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:655) mul.f32 %ssa_135, %ssa_126, %ssa_134;// vec1 32 ssa_135 = fmul ssa_126, ssa_134
bb_00	:  PC=0x2d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:658) mul.f32 %ssa_136, %ssa_127, %ssa_134;// vec1 32 ssa_136 = fmul ssa_127, ssa_134
bb_00	:  PC=0x2d38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:661) mul.f32 %ssa_137, %ssa_128, %ssa_134;// vec1 32 ssa_137 = fmul ssa_128, ssa_134
bb_00	:  PC=0x2d40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:668) load_ray_world_direction %ssa_138_address; // vec3 32 ssa_138 = intrinsic load_ray_world_direction () ()
bb_00	:  PC=0x2d48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:669) ld.global.f32 %ssa_138_0, [%ssa_138_address + 0];
bb_00	:  PC=0x2d50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:670) ld.global.f32 %ssa_138_1, [%ssa_138_address + 4];
bb_00	:  PC=0x2d58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:671) ld.global.f32 %ssa_138_2, [%ssa_138_address + 8];
bb_00	:  PC=0x2d60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:672) ld.global.f32 %ssa_138_3, [%ssa_138_address + 12];
bb_00	:  PC=0x2d68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:675) mul.f32 %ssa_139, %ssa_135, %ssa_138_0; // vec1 32 ssa_139 = fmul ssa_135, ssa_138.x
bb_00	:  PC=0x2d70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:678) mul.f32 %ssa_140, %ssa_136, %ssa_138_1; // vec1 32 ssa_140 = fmul ssa_136, ssa_138.y
bb_00	:  PC=0x2d78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:681) mul.f32 %ssa_141, %ssa_137, %ssa_138_2; // vec1 32 ssa_141 = fmul ssa_137, ssa_138.z
bb_00	:  PC=0x2d80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:687) mov.f32 %ssa_142_0, %ssa_139;
bb_00	:  PC=0x2d88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:688) mov.f32 %ssa_142_1, %ssa_140;
bb_00	:  PC=0x2d90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:689) mov.f32 %ssa_142_2, %ssa_141; // vec3 32 ssa_142 = vec3 ssa_139, ssa_140, ssa_141
bb_00	:  PC=0x2d98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:692) add.f32 %ssa_143, %ssa_142_0, %ssa_142_1;
bb_00	:  PC=0x2da0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:693) add.f32 %ssa_143, %ssa_143, %ssa_142_2; // vec1 32 ssa_143 = fsum3 ssa_142
bb_00	:  PC=0x2da8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:696) setp.lt.f32 %ssa_144, %ssa_0, %ssa_143;// vec1  1 ssa_144 = flt! ssa_0, ssa_143
bb_00	:  PC=0x2db0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:699) neg.f32 %ssa_145, %ssa_135;// vec1 32 ssa_145 = fneg ssa_135
bb_00	:  PC=0x2db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:702) neg.f32 %ssa_146, %ssa_136;// vec1 32 ssa_146 = fneg ssa_136
bb_00	:  PC=0x2dc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:705) neg.f32 %ssa_147, %ssa_137;// vec1 32 ssa_147 = fneg ssa_137
bb_00	:  PC=0x2dc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:708) selp.f32 %ssa_148, %ssa_145, %ssa_135, %ssa_144; // vec1 32 ssa_148 = bcsel ssa_144, ssa_145, ssa_135
bb_00	:  PC=0x2dd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:711) selp.f32 %ssa_149, %ssa_146, %ssa_136, %ssa_144; // vec1 32 ssa_149 = bcsel ssa_144, ssa_146, ssa_136
bb_00	:  PC=0x2dd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:714) selp.f32 %ssa_150, %ssa_147, %ssa_137, %ssa_144; // vec1 32 ssa_150 = bcsel ssa_144, ssa_147, ssa_137
bb_00	:  PC=0x2de0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:720) mov.f32 %ssa_151_0, %ssa_148;
bb_00	:  PC=0x2de8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:721) mov.f32 %ssa_151_1, %ssa_149;
bb_00	:  PC=0x2df0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:722) mov.f32 %ssa_151_2, %ssa_150; // vec3 32 ssa_151 = vec3 ssa_148, ssa_149, ssa_150
bb_00	:  PC=0x2df8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:725) mul.f32 %ssa_152, %ssa_44, %ssa_113;// vec1 32 ssa_152 = fmul ssa_44, ssa_113
bb_00	:  PC=0x2e00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:728) mul.f32 %ssa_153, %ssa_47, %ssa_113;// vec1 32 ssa_153 = fmul ssa_47, ssa_113
bb_00	:  PC=0x2e08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:731) mul.f32 %ssa_154, %ssa_68, %ssa_109_0; // vec1 32 ssa_154 = fmul ssa_68, ssa_109.x
bb_00	:  PC=0x2e10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:734) mul.f32 %ssa_155, %ssa_71, %ssa_109_0; // vec1 32 ssa_155 = fmul ssa_71, ssa_109.x
bb_00	:  PC=0x2e18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:737) add.f32 %ssa_156, %ssa_152, %ssa_154;// vec1 32 ssa_156 = fadd ssa_152, ssa_154
bb_00	:  PC=0x2e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:740) add.f32 %ssa_157, %ssa_153, %ssa_155;// vec1 32 ssa_157 = fadd ssa_153, ssa_155
bb_00	:  PC=0x2e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:743) mul.f32 %ssa_158, %ssa_89, %ssa_109_1; // vec1 32 ssa_158 = fmul ssa_89, ssa_109.y
bb_00	:  PC=0x2e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:746) mul.f32 %ssa_159, %ssa_92, %ssa_109_1; // vec1 32 ssa_159 = fmul ssa_92, ssa_109.y
bb_00	:  PC=0x2e38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:749) add.f32 %ssa_160, %ssa_156, %ssa_158;// vec1 32 ssa_160 = fadd ssa_156, ssa_158
bb_00	:  PC=0x2e40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:752) add.f32 %ssa_161, %ssa_157, %ssa_159;// vec1 32 ssa_161 = fadd ssa_157, ssa_159
bb_00	:  PC=0x2e48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:756) mov.f32 %ssa_162_0, %ssa_160;
bb_00	:  PC=0x2e50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:757) mov.f32 %ssa_162_1, %ssa_161; // vec2 32 ssa_162 = vec2 ssa_160, ssa_161
bb_00	:  PC=0x2e58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:760) load_ray_t_max %ssa_163;// vec1 32 ssa_163 = intrinsic load_ray_t_max () ()
bb_00	:  PC=0x2e60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:763) mov.b64 %ssa_164, %Ray; // vec1 32 ssa_164 = deref_var &Ray (shader_call_data RayPayload) 
bb_00	:  PC=0x2e68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:766) add.u64 %ssa_165, %ssa_164, 44; // vec1 32 ssa_165 = deref_struct &ssa_164->RandomSeed (shader_call_data uint) /* &Ray.RandomSeed */
bb_00	:  PC=0x2e70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:769) ld.global.u32 %ssa_166, [%ssa_165]; // vec1 32 ssa_166 = intrinsic load_deref (%ssa_165) (0) /* access=0 */
bb_00	:  PC=0x2e78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:772) mul.f32 %ssa_167, %ssa_138_0, %ssa_138_0; // vec1 32 ssa_167 = fmul ssa_138.x, ssa_138.x
bb_00	:  PC=0x2e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:775) mul.f32 %ssa_168, %ssa_138_1, %ssa_138_1; // vec1 32 ssa_168 = fmul ssa_138.y, ssa_138.y
bb_00	:  PC=0x2e88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:778) mul.f32 %ssa_169, %ssa_138_2, %ssa_138_2; // vec1 32 ssa_169 = fmul ssa_138.z, ssa_138.z
bb_00	:  PC=0x2e90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:784) mov.f32 %ssa_170_0, %ssa_167;
bb_00	:  PC=0x2e98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:785) mov.f32 %ssa_170_1, %ssa_168;
bb_00	:  PC=0x2ea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:786) mov.f32 %ssa_170_2, %ssa_169; // vec3 32 ssa_170 = vec3 ssa_167, ssa_168, ssa_169
bb_00	:  PC=0x2ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:789) add.f32 %ssa_171, %ssa_170_0, %ssa_170_1;
bb_00	:  PC=0x2eb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:790) add.f32 %ssa_171, %ssa_171, %ssa_170_2; // vec1 32 ssa_171 = fsum3 ssa_170
bb_00	:  PC=0x2eb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:793) rsqrt.approx.f32 %ssa_172, %ssa_171;// vec1 32 ssa_172 = frsq ssa_171
bb_00	:  PC=0x2ec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:796) mul.f32 %ssa_173, %ssa_138_0, %ssa_172; // vec1 32 ssa_173 = fmul ssa_138.x, ssa_172
bb_00	:  PC=0x2ec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:799) mul.f32 %ssa_174, %ssa_138_1, %ssa_172; // vec1 32 ssa_174 = fmul ssa_138.y, ssa_172
bb_00	:  PC=0x2ed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:802) mul.f32 %ssa_175, %ssa_138_2, %ssa_172; // vec1 32 ssa_175 = fmul ssa_138.z, ssa_172
bb_00	:  PC=0x2ed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:805) setp.eq.s32 %ssa_176, %ssa_107, %ssa_0_bits; // vec1  1 ssa_176 = ieq ssa_107, ssa_0
bb_00	:  PC=0x2ee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:810) @!%ssa_176 bra else_9;

bb_01	:  PC=0x2ee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:818) mov.f32 %ssa_177_0, 0F3f800000;
bb_01	:  PC=0x2ef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:819) mov.f32 %ssa_177_1, 0F3f800000;
bb_01	:  PC=0x2ef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:820) mov.f32 %ssa_177_2, 0F3f800000;
bb_01	:  PC=0x2f00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:821) mov.f32 %ssa_177_3, 0F3f800000;
bb_01	:  PC=0x2f08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:825) mul.f32 %ssa_178, %ssa_173, %ssa_148;// vec1 32 ssa_178 = fmul ssa_173, ssa_148
bb_01	:  PC=0x2f10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:828) mul.f32 %ssa_179, %ssa_174, %ssa_149;// vec1 32 ssa_179 = fmul ssa_174, ssa_149
bb_01	:  PC=0x2f18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:831) mul.f32 %ssa_180, %ssa_175, %ssa_150;// vec1 32 ssa_180 = fmul ssa_175, ssa_150
bb_01	:  PC=0x2f20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:837) mov.f32 %ssa_181_0, %ssa_178;
bb_01	:  PC=0x2f28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:838) mov.f32 %ssa_181_1, %ssa_179;
bb_01	:  PC=0x2f30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:839) mov.f32 %ssa_181_2, %ssa_180; // vec3 32 ssa_181 = vec3 ssa_178, ssa_179, ssa_180
bb_01	:  PC=0x2f38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:842) add.f32 %ssa_182, %ssa_181_0, %ssa_181_1;
bb_01	:  PC=0x2f40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:843) add.f32 %ssa_182, %ssa_182, %ssa_181_2; // vec1 32 ssa_182 = fsum3 ssa_181
bb_01	:  PC=0x2f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:846) setp.lt.f32 %ssa_183, %ssa_182, %ssa_0;// vec1  1 ssa_183 = flt! ssa_182, ssa_0
bb_01	:  PC=0x2f50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:849) setp.ge.s32 %ssa_184, %ssa_101, %ssa_0_bits; // vec1  1 ssa_184 = ige ssa_101, ssa_0
bb_01	:  PC=0x2f58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:854) @!%ssa_184 bra else_10;

bb_02	:  PC=0x2f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:859) mov.b64 %ssa_185, %TextureSamplers; // vec1 32 ssa_185 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_02	:  PC=0x2f68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:864) cvt.u32.s32 %ssa_186_array_index_32, %ssa_101;
bb_02	:  PC=0x2f70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:865) mul.wide.u32 %ssa_186_array_index_64, %ssa_186_array_index_32, 48;
bb_02	:  PC=0x2f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:866) add.u64 %ssa_186, %ssa_185, %ssa_186_array_index_64; // vec1 32 ssa_186 = deref_array &(*ssa_185)[ssa_101] (uniform sampler2D) /* &TextureSamplers[ssa_101] */
bb_02	:  PC=0x2f80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:872) txl %ssa_186, %ssa_186, %ssa_187_0, %ssa_187_1, %ssa_187_2, %ssa_187_3, %ssa_162_0, %ssa_162_1, %ssa_0; // vec4 32 ssa_187 = (float32)txl ssa_186 (texture_deref), ssa_186 (sampler_deref), ssa_162 (coord), ssa_0 (lod), texture non-uniform, sampler non-uniform
bb_02	:  PC=0x2f88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:875) mov.f32 %ssa_425, %ssa_187_0; // vec1 32 ssa_425 = mov ssa_187.x
bb_02	:  PC=0x2f90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:878) mov.f32 %ssa_428, %ssa_187_1; // vec1 32 ssa_428 = mov ssa_187.y
bb_02	:  PC=0x2f98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:881) mov.f32 %ssa_431, %ssa_187_2; // vec1 32 ssa_431 = mov ssa_187.z
bb_02	:  PC=0x2fa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:884) mov.f32 %ssa_434, %ssa_187_3; // vec1 32 ssa_434 = mov ssa_187.w
bb_02	:  PC=0x2fa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:886) mov.f32 %ssa_427, %ssa_425; // vec1 32 ssa_427 = phi block_2: ssa_425, block_3: ssa_542
bb_02	:  PC=0x2fb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:887) mov.f32 %ssa_430, %ssa_428; // vec1 32 ssa_430 = phi block_2: ssa_428, block_3: ssa_543
bb_02	:  PC=0x2fb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:888) mov.f32 %ssa_433, %ssa_431; // vec1 32 ssa_433 = phi block_2: ssa_431, block_3: ssa_544
bb_02	:  PC=0x2fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:889) mov.f32 %ssa_436, %ssa_434; // vec1 32 ssa_436 = phi block_2: ssa_434, block_3: ssa_545
bb_02	:  PC=0x2fc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:892) bra end_if_10;

bb_03	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:897) .reg .f32 %ssa_542;
bb_03	:  PC=0x2fd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:898) mov.f32 %ssa_542, 0F3f800000; // vec1 32 ssa_542 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x2fd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:900) mov.b32 %ssa_542_bits, 0F3f800000;
bb_03	:  PC=0x2fe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:903) mov.f32 %ssa_543, 0F3f800000; // vec1 32 ssa_543 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x2fe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:905) mov.b32 %ssa_543_bits, 0F3f800000;
bb_03	:  PC=0x2ff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:908) mov.f32 %ssa_544, 0F3f800000; // vec1 32 ssa_544 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x2ff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:910) mov.b32 %ssa_544_bits, 0F3f800000;
bb_03	:  PC=0x3000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:913) mov.f32 %ssa_545, 0F3f800000; // vec1 32 ssa_545 = load_const (0x3f800000 /* 1.000000 */)
bb_03	:  PC=0x3008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:915) mov.b32 %ssa_545_bits, 0F3f800000;
bb_03	:  PC=0x3010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:917) mov.f32 %ssa_427, %ssa_542; // vec1 32 ssa_427 = phi block_2: ssa_425, block_3: ssa_542
bb_03	:  PC=0x3018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:918) mov.f32 %ssa_430, %ssa_543; // vec1 32 ssa_430 = phi block_2: ssa_428, block_3: ssa_543
bb_03	:  PC=0x3020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:919) mov.f32 %ssa_433, %ssa_544; // vec1 32 ssa_433 = phi block_2: ssa_431, block_3: ssa_544
bb_03	:  PC=0x3028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:920) mov.f32 %ssa_436, %ssa_545; // vec1 32 ssa_436 = phi block_2: ssa_434, block_3: ssa_545

bb_04	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:930) .reg .b32 %ssa_437_0;
bb_04	:  PC=0x3030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:934) mov.b32 %ssa_437_0, %ssa_427;
bb_04	:  PC=0x3038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:935) mov.b32 %ssa_437_1, %ssa_430;
bb_04	:  PC=0x3040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:936) mov.b32 %ssa_437_2, %ssa_433;
bb_04	:  PC=0x3048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:937) mov.b32 %ssa_437_3, %ssa_436; // vec4 32 ssa_437 = vec4 ssa_427, ssa_430, ssa_433, ssa_436
bb_04	:  PC=0x3050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:940) mul.f32 %ssa_189, %ssa_99_0, %ssa_437_0; // vec1 32 ssa_189 = fmul ssa_99.x, ssa_437.x
bb_04	:  PC=0x3058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:943) mul.f32 %ssa_190, %ssa_99_1, %ssa_437_1; // vec1 32 ssa_190 = fmul ssa_99.y, ssa_437.y
bb_04	:  PC=0x3060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:946) mul.f32 %ssa_191, %ssa_99_2, %ssa_437_2; // vec1 32 ssa_191 = fmul ssa_99.z, ssa_437.z
bb_04	:  PC=0x3068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:948) mov.s32 %ssa_192, %ssa_166; // vec1 32 ssa_192 = phi block_4: ssa_166, block_8: ssa_205

bb_05	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:955) .reg .f32 %ssa_193;
bb_05	:  PC=0x3070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:956) mov.f32 %ssa_193, 0F00ffffff; // vec1 32 ssa_193 = load_const (0x00ffffff /* 0.000000 */)
bb_05	:  PC=0x3078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:958) mov.b32 %ssa_193_bits, 0F00ffffff;
bb_05	:  PC=0x3080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:961) mov.f32 %ssa_194, 0F3c6ef35f; // vec1 32 ssa_194 = load_const (0x3c6ef35f /* 0.014584 */)
bb_05	:  PC=0x3088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:963) mov.b32 %ssa_194_bits, 0F3c6ef35f;
bb_05	:  PC=0x3090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:966) mov.f32 %ssa_195, 0F0019660d; // vec1 32 ssa_195 = load_const (0x0019660d /* 0.000000 */)
bb_05	:  PC=0x3098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:968) mov.b32 %ssa_195_bits, 0F0019660d;
bb_05	:  PC=0x30a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:971) mul.lo.s32 %ssa_196, %ssa_195_bits, %ssa_192; // vec1 32 ssa_196 = imul ssa_195, ssa_192
bb_05	:  PC=0x30a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:974) add.s32 %ssa_197, %ssa_196, %ssa_194_bits; // vec1 32 ssa_197 = iadd ssa_196, ssa_194
bb_05	:  PC=0x30b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:977) and.b32 %ssa_198, %ssa_197, %ssa_193;// vec1 32 ssa_198 = iand ssa_197, ssa_193
bb_05	:  PC=0x30b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:980) cvt.rn.f32.u32 %ssa_199, %ssa_198;// vec1 32 ssa_199 = u2f32 ssa_198
bb_05	:  PC=0x30c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:983) mul.lo.s32 %ssa_200, %ssa_195_bits, %ssa_197; // vec1 32 ssa_200 = imul ssa_195, ssa_197
bb_05	:  PC=0x30c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:986) add.s32 %ssa_201, %ssa_200, %ssa_194_bits; // vec1 32 ssa_201 = iadd ssa_200, ssa_194
bb_05	:  PC=0x30d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:989) and.b32 %ssa_202, %ssa_201, %ssa_193;// vec1 32 ssa_202 = iand ssa_201, ssa_193
bb_05	:  PC=0x30d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:992) cvt.rn.f32.u32 %ssa_203, %ssa_202;// vec1 32 ssa_203 = u2f32 ssa_202
bb_05	:  PC=0x30e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:995) mul.lo.s32 %ssa_204, %ssa_195_bits, %ssa_201; // vec1 32 ssa_204 = imul ssa_195, ssa_201
bb_05	:  PC=0x30e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:998) add.s32 %ssa_205, %ssa_204, %ssa_194_bits; // vec1 32 ssa_205 = iadd ssa_204, ssa_194
bb_05	:  PC=0x30f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1001) and.b32 %ssa_206, %ssa_205, %ssa_193;// vec1 32 ssa_206 = iand ssa_205, ssa_193
bb_05	:  PC=0x30f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1004) cvt.rn.f32.u32 %ssa_207, %ssa_206;// vec1 32 ssa_207 = u2f32 ssa_206
bb_05	:  PC=0x3100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1007) mov.f32 %ssa_208, 0F34000000; // vec1 32 ssa_208 = load_const (0x34000000 /* 0.000000 */)
bb_05	:  PC=0x3108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1009) mov.b32 %ssa_208_bits, 0F34000000;
bb_05	:  PC=0x3110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1012) mul.f32 %ssa_209, %ssa_208, %ssa_199;// vec1 32 ssa_209 = fmul ssa_208, ssa_199
bb_05	:  PC=0x3118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1015) mul.f32 %ssa_210, %ssa_208, %ssa_203;// vec1 32 ssa_210 = fmul ssa_208, ssa_203
bb_05	:  PC=0x3120 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1018) mul.f32 %ssa_211, %ssa_208, %ssa_207;// vec1 32 ssa_211 = fmul ssa_208, ssa_207
bb_05	:  PC=0x3128 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1024) mov.f32 %ssa_212_0, 0Fbf800000;
bb_05	:  PC=0x3130 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1025) mov.f32 %ssa_212_1, 0Fbf800000;
bb_05	:  PC=0x3138 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1026) mov.f32 %ssa_212_2, 0Fbf800000;
bb_05	:  PC=0x3140 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1027) mov.f32 %ssa_212_3, 0F00000000;
bb_05	:  PC=0x3148 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1031) add.f32 %ssa_213, %ssa_209, %ssa_212_0; // vec1 32 ssa_213 = fadd ssa_209, ssa_212.x
bb_05	:  PC=0x3150 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1034) add.f32 %ssa_214, %ssa_210, %ssa_212_1; // vec1 32 ssa_214 = fadd ssa_210, ssa_212.y
bb_05	:  PC=0x3158 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1037) add.f32 %ssa_215, %ssa_211, %ssa_212_2; // vec1 32 ssa_215 = fadd ssa_211, ssa_212.z
bb_05	:  PC=0x3160 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1040) mul.f32 %ssa_216, %ssa_213, %ssa_213;// vec1 32 ssa_216 = fmul ssa_213, ssa_213
bb_05	:  PC=0x3168 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1043) mul.f32 %ssa_217, %ssa_214, %ssa_214;// vec1 32 ssa_217 = fmul ssa_214, ssa_214
bb_05	:  PC=0x3170 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1046) mul.f32 %ssa_218, %ssa_215, %ssa_215;// vec1 32 ssa_218 = fmul ssa_215, ssa_215
bb_05	:  PC=0x3178 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1052) mov.f32 %ssa_219_0, %ssa_216;
bb_05	:  PC=0x3180 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1053) mov.f32 %ssa_219_1, %ssa_217;
bb_05	:  PC=0x3188 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1054) mov.f32 %ssa_219_2, %ssa_218; // vec3 32 ssa_219 = vec3 ssa_216, ssa_217, ssa_218
bb_05	:  PC=0x3190 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1057) add.f32 %ssa_220, %ssa_219_0, %ssa_219_1;
bb_05	:  PC=0x3198 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1058) add.f32 %ssa_220, %ssa_220, %ssa_219_2; // vec1 32 ssa_220 = fsum3 ssa_219
bb_05	:  PC=0x31a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1061) setp.lt.f32 %ssa_221, %ssa_220, %ssa_1;// vec1  1 ssa_221 = flt! ssa_220, ssa_1
bb_05	:  PC=0x31a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1066) @!%ssa_221 bra else_11;

bb_06	:  PC=0x31b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1070) bra loop_4_exit;

bb_07	:  PC=0x31b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1074) bra end_if_11;

bb_08	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1081) end_if_11:
bb_08	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1084) mov.s32 %ssa_192, %ssa_205; // vec1 32 ssa_192 = phi block_4: ssa_166, block_8: ssa_205
bb_08	:  PC=0x31c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1084) mov.s32 %ssa_192, %ssa_205; // vec1 32 ssa_192 = phi block_4: ssa_166, block_8: ssa_205
bb_08	:  PC=0x31c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1087) bra loop_4;

bb_09	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1092) .reg .f32 %ssa_222;
bb_09	:  PC=0x31d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1093) add.f32 %ssa_222, %ssa_148, %ssa_213;// vec1 32 ssa_222 = fadd ssa_148, ssa_213
bb_09	:  PC=0x31d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1096) add.f32 %ssa_223, %ssa_149, %ssa_214;// vec1 32 ssa_223 = fadd ssa_149, ssa_214
bb_09	:  PC=0x31e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1099) add.f32 %ssa_224, %ssa_150, %ssa_215;// vec1 32 ssa_224 = fadd ssa_150, ssa_215
bb_09	:  PC=0x31e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1102) selp.f32 %ssa_225, 0F3f800000, 0F00000000, %ssa_183; // vec1 32 ssa_225 = b2f32 ssa_183
bb_09	:  PC=0x31f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1108) mov.f32 %ssa_226_0, %ssa_189;
bb_09	:  PC=0x31f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1109) mov.f32 %ssa_226_1, %ssa_190;
bb_09	:  PC=0x3200 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1110) mov.f32 %ssa_226_2, %ssa_191;
bb_09	:  PC=0x3208 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1111) mov.f32 %ssa_226_3, %ssa_163; // vec4 32 ssa_226 = vec4 ssa_189, ssa_190, ssa_191, ssa_163
bb_09	:  PC=0x3210 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1117) mov.f32 %ssa_227_0, %ssa_222;
bb_09	:  PC=0x3218 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1118) mov.f32 %ssa_227_1, %ssa_223;
bb_09	:  PC=0x3220 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1119) mov.f32 %ssa_227_2, %ssa_224;
bb_09	:  PC=0x3228 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1120) mov.f32 %ssa_227_3, %ssa_225; // vec4 32 ssa_227 = vec4 ssa_222, ssa_223, ssa_224, ssa_225
bb_09	:  PC=0x3230 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1123) mov.f32 %ssa_516, %ssa_227_0; // vec1 32 ssa_516 = mov ssa_227.x
bb_09	:  PC=0x3238 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1126) mov.f32 %ssa_519, %ssa_227_1; // vec1 32 ssa_519 = mov ssa_227.y
bb_09	:  PC=0x3240 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1129) mov.f32 %ssa_522, %ssa_227_2; // vec1 32 ssa_522 = mov ssa_227.z
bb_09	:  PC=0x3248 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1132) mov.f32 %ssa_525, %ssa_227_3; // vec1 32 ssa_525 = mov ssa_227.w
bb_09	:  PC=0x3250 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1135) mov.f32 %ssa_529, %ssa_226_0; // vec1 32 ssa_529 = mov ssa_226.x
bb_09	:  PC=0x3258 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1138) mov.f32 %ssa_532, %ssa_226_1; // vec1 32 ssa_532 = mov ssa_226.y
bb_09	:  PC=0x3260 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1141) mov.f32 %ssa_535, %ssa_226_2; // vec1 32 ssa_535 = mov ssa_226.z
bb_09	:  PC=0x3268 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1144) mov.f32 %ssa_538, %ssa_226_3; // vec1 32 ssa_538 = mov ssa_226.w
bb_09	:  PC=0x3270 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1146) mov.s32 %ssa_409, %ssa_205; // vec1 32 ssa_409 = phi block_9: ssa_205, block_30: ssa_406
bb_09	:  PC=0x3278 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1147) mov.b32 %ssa_518, %ssa_516; // vec1 32 ssa_518 = phi block_9: ssa_516, block_30: ssa_517
bb_09	:  PC=0x3280 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1148) mov.b32 %ssa_521, %ssa_519; // vec1 32 ssa_521 = phi block_9: ssa_519, block_30: ssa_520
bb_09	:  PC=0x3288 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1149) mov.b32 %ssa_524, %ssa_522; // vec1 32 ssa_524 = phi block_9: ssa_522, block_30: ssa_523
bb_09	:  PC=0x3290 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1150) mov.b32 %ssa_527, %ssa_525; // vec1 32 ssa_527 = phi block_9: ssa_525, block_30: ssa_526
bb_09	:  PC=0x3298 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1151) mov.b32 %ssa_531, %ssa_529; // vec1 32 ssa_531 = phi block_9: ssa_529, block_30: ssa_530
bb_09	:  PC=0x32a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1152) mov.b32 %ssa_534, %ssa_532; // vec1 32 ssa_534 = phi block_9: ssa_532, block_30: ssa_533
bb_09	:  PC=0x32a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1153) mov.b32 %ssa_537, %ssa_535; // vec1 32 ssa_537 = phi block_9: ssa_535, block_30: ssa_536
bb_09	:  PC=0x32b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1154) mov.b32 %ssa_540, %ssa_538; // vec1 32 ssa_540 = phi block_9: ssa_538, block_30: ssa_539
bb_09	:  PC=0x32b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1157) bra end_if_9;

bb_10	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1162) .reg .pred %ssa_228;
bb_10	:  PC=0x32c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1163) setp.eq.s32 %ssa_228, %ssa_107, %ssa_4_bits; // vec1  1 ssa_228 = ieq ssa_107, ssa_4
bb_10	:  PC=0x32c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1168) @!%ssa_228 bra else_12;

bb_11	:  PC=0x32d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1176) mov.f32 %ssa_229_0, 0F3f800000;
bb_11	:  PC=0x32d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1177) mov.f32 %ssa_229_1, 0F3f800000;
bb_11	:  PC=0x32e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1178) mov.f32 %ssa_229_2, 0F3f800000;
bb_11	:  PC=0x32e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1179) mov.f32 %ssa_229_3, 0F3f800000;
bb_11	:  PC=0x32f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1183) mov.f32 %ssa_230, 0F40000000; // vec1 32 ssa_230 = load_const (0x40000000 /* 2.000000 */)
bb_11	:  PC=0x32f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1185) mov.b32 %ssa_230_bits, 0F40000000;
bb_11	:  PC=0x3300 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1188) mul.f32 %ssa_231, %ssa_173, %ssa_148;// vec1 32 ssa_231 = fmul ssa_173, ssa_148
bb_11	:  PC=0x3308 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1191) mul.f32 %ssa_232, %ssa_174, %ssa_149;// vec1 32 ssa_232 = fmul ssa_174, ssa_149
bb_11	:  PC=0x3310 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1194) mul.f32 %ssa_233, %ssa_175, %ssa_150;// vec1 32 ssa_233 = fmul ssa_175, ssa_150
bb_11	:  PC=0x3318 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1200) mov.f32 %ssa_234_0, %ssa_231;
bb_11	:  PC=0x3320 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1201) mov.f32 %ssa_234_1, %ssa_232;
bb_11	:  PC=0x3328 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1202) mov.f32 %ssa_234_2, %ssa_233; // vec3 32 ssa_234 = vec3 ssa_231, ssa_232, ssa_233
bb_11	:  PC=0x3330 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1205) add.f32 %ssa_235, %ssa_234_0, %ssa_234_1;
bb_11	:  PC=0x3338 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1206) add.f32 %ssa_235, %ssa_235, %ssa_234_2; // vec1 32 ssa_235 = fsum3 ssa_234
bb_11	:  PC=0x3340 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1209) mul.f32 %ssa_236, %ssa_235, %ssa_230;// vec1 32 ssa_236 = fmul ssa_235, ssa_230
bb_11	:  PC=0x3348 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1212) mul.f32 %ssa_237, %ssa_148, %ssa_236;// vec1 32 ssa_237 = fmul ssa_148, ssa_236
bb_11	:  PC=0x3350 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1215) neg.f32 %ssa_238, %ssa_237;// vec1 32 ssa_238 = fneg ssa_237
bb_11	:  PC=0x3358 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1218) mul.f32 %ssa_239, %ssa_149, %ssa_236;// vec1 32 ssa_239 = fmul ssa_149, ssa_236
bb_11	:  PC=0x3360 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1221) neg.f32 %ssa_240, %ssa_239;// vec1 32 ssa_240 = fneg ssa_239
bb_11	:  PC=0x3368 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1224) mul.f32 %ssa_241, %ssa_150, %ssa_236;// vec1 32 ssa_241 = fmul ssa_150, ssa_236
bb_11	:  PC=0x3370 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1227) neg.f32 %ssa_242, %ssa_241;// vec1 32 ssa_242 = fneg ssa_241
bb_11	:  PC=0x3378 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1230) add.f32 %ssa_243, %ssa_238, %ssa_173;// vec1 32 ssa_243 = fadd ssa_238, ssa_173
bb_11	:  PC=0x3380 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1233) add.f32 %ssa_244, %ssa_240, %ssa_174;// vec1 32 ssa_244 = fadd ssa_240, ssa_174
bb_11	:  PC=0x3388 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1236) add.f32 %ssa_245, %ssa_242, %ssa_175;// vec1 32 ssa_245 = fadd ssa_242, ssa_175
bb_11	:  PC=0x3390 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1239) mul.f32 %ssa_246, %ssa_243, %ssa_148;// vec1 32 ssa_246 = fmul ssa_243, ssa_148
bb_11	:  PC=0x3398 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1242) mul.f32 %ssa_247, %ssa_244, %ssa_149;// vec1 32 ssa_247 = fmul ssa_244, ssa_149
bb_11	:  PC=0x33a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1245) mul.f32 %ssa_248, %ssa_245, %ssa_150;// vec1 32 ssa_248 = fmul ssa_245, ssa_150
bb_11	:  PC=0x33a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1251) mov.f32 %ssa_249_0, %ssa_246;
bb_11	:  PC=0x33b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1252) mov.f32 %ssa_249_1, %ssa_247;
bb_11	:  PC=0x33b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1253) mov.f32 %ssa_249_2, %ssa_248; // vec3 32 ssa_249 = vec3 ssa_246, ssa_247, ssa_248
bb_11	:  PC=0x33c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1256) add.f32 %ssa_250, %ssa_249_0, %ssa_249_1;
bb_11	:  PC=0x33c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1257) add.f32 %ssa_250, %ssa_250, %ssa_249_2; // vec1 32 ssa_250 = fsum3 ssa_249
bb_11	:  PC=0x33d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1260) setp.lt.f32 %ssa_251, %ssa_0, %ssa_250;// vec1  1 ssa_251 = flt! ssa_0, ssa_250
bb_11	:  PC=0x33d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1263) setp.ge.s32 %ssa_252, %ssa_101, %ssa_0_bits; // vec1  1 ssa_252 = ige ssa_101, ssa_0
bb_11	:  PC=0x33e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1268) @!%ssa_252 bra else_13;

bb_12	:  PC=0x33e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1273) mov.b64 %ssa_253, %TextureSamplers; // vec1 32 ssa_253 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_12	:  PC=0x33f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1278) cvt.u32.s32 %ssa_254_array_index_32, %ssa_101;
bb_12	:  PC=0x33f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1279) mul.wide.u32 %ssa_254_array_index_64, %ssa_254_array_index_32, 48;
bb_12	:  PC=0x3400 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1280) add.u64 %ssa_254, %ssa_253, %ssa_254_array_index_64; // vec1 32 ssa_254 = deref_array &(*ssa_253)[ssa_101] (uniform sampler2D) /* &TextureSamplers[ssa_101] */
bb_12	:  PC=0x3408 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1286) txl %ssa_254, %ssa_254, %ssa_255_0, %ssa_255_1, %ssa_255_2, %ssa_255_3, %ssa_162_0, %ssa_162_1, %ssa_0; // vec4 32 ssa_255 = (float32)txl ssa_254 (texture_deref), ssa_254 (sampler_deref), ssa_162 (coord), ssa_0 (lod), texture non-uniform, sampler non-uniform
bb_12	:  PC=0x3410 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1289) mov.f32 %ssa_438, %ssa_255_0; // vec1 32 ssa_438 = mov ssa_255.x
bb_12	:  PC=0x3418 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1292) mov.f32 %ssa_441, %ssa_255_1; // vec1 32 ssa_441 = mov ssa_255.y
bb_12	:  PC=0x3420 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1295) mov.f32 %ssa_444, %ssa_255_2; // vec1 32 ssa_444 = mov ssa_255.z
bb_12	:  PC=0x3428 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1298) mov.f32 %ssa_447, %ssa_255_3; // vec1 32 ssa_447 = mov ssa_255.w
bb_12	:  PC=0x3430 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1300) mov.f32 %ssa_440, %ssa_438; // vec1 32 ssa_440 = phi block_12: ssa_438, block_13: ssa_546
bb_12	:  PC=0x3438 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1301) mov.f32 %ssa_443, %ssa_441; // vec1 32 ssa_443 = phi block_12: ssa_441, block_13: ssa_547
bb_12	:  PC=0x3440 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1302) mov.f32 %ssa_446, %ssa_444; // vec1 32 ssa_446 = phi block_12: ssa_444, block_13: ssa_548
bb_12	:  PC=0x3448 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1303) mov.f32 %ssa_449, %ssa_447; // vec1 32 ssa_449 = phi block_12: ssa_447, block_13: ssa_549
bb_12	:  PC=0x3450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1306) bra end_if_13;

bb_13	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1311) .reg .f32 %ssa_546;
bb_13	:  PC=0x3458 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1312) mov.f32 %ssa_546, 0F3f800000; // vec1 32 ssa_546 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3460 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1314) mov.b32 %ssa_546_bits, 0F3f800000;
bb_13	:  PC=0x3468 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1317) mov.f32 %ssa_547, 0F3f800000; // vec1 32 ssa_547 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3470 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1319) mov.b32 %ssa_547_bits, 0F3f800000;
bb_13	:  PC=0x3478 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1322) mov.f32 %ssa_548, 0F3f800000; // vec1 32 ssa_548 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3480 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1324) mov.b32 %ssa_548_bits, 0F3f800000;
bb_13	:  PC=0x3488 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1327) mov.f32 %ssa_549, 0F3f800000; // vec1 32 ssa_549 = load_const (0x3f800000 /* 1.000000 */)
bb_13	:  PC=0x3490 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1329) mov.b32 %ssa_549_bits, 0F3f800000;
bb_13	:  PC=0x3498 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1331) mov.f32 %ssa_440, %ssa_546; // vec1 32 ssa_440 = phi block_12: ssa_438, block_13: ssa_546
bb_13	:  PC=0x34a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1332) mov.f32 %ssa_443, %ssa_547; // vec1 32 ssa_443 = phi block_12: ssa_441, block_13: ssa_547
bb_13	:  PC=0x34a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1333) mov.f32 %ssa_446, %ssa_548; // vec1 32 ssa_446 = phi block_12: ssa_444, block_13: ssa_548
bb_13	:  PC=0x34b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1334) mov.f32 %ssa_449, %ssa_549; // vec1 32 ssa_449 = phi block_12: ssa_447, block_13: ssa_549

bb_14	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1344) .reg .b32 %ssa_450_0;
bb_14	:  PC=0x34b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1348) mov.b32 %ssa_450_0, %ssa_440;
bb_14	:  PC=0x34c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1349) mov.b32 %ssa_450_1, %ssa_443;
bb_14	:  PC=0x34c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1350) mov.b32 %ssa_450_2, %ssa_446;
bb_14	:  PC=0x34d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1351) mov.b32 %ssa_450_3, %ssa_449; // vec4 32 ssa_450 = vec4 ssa_440, ssa_443, ssa_446, ssa_449
bb_14	:  PC=0x34d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1354) mul.f32 %ssa_257, %ssa_99_0, %ssa_450_0; // vec1 32 ssa_257 = fmul ssa_99.x, ssa_450.x
bb_14	:  PC=0x34e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1357) mul.f32 %ssa_258, %ssa_99_1, %ssa_450_1; // vec1 32 ssa_258 = fmul ssa_99.y, ssa_450.y
bb_14	:  PC=0x34e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1360) mul.f32 %ssa_259, %ssa_99_2, %ssa_450_2; // vec1 32 ssa_259 = fmul ssa_99.z, ssa_450.z
bb_14	:  PC=0x34f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1362) mov.s32 %ssa_260, %ssa_166; // vec1 32 ssa_260 = phi block_14: ssa_166, block_18: ssa_273

bb_15	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1369) .reg .f32 %ssa_261;
bb_15	:  PC=0x34f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1370) mov.f32 %ssa_261, 0F00ffffff; // vec1 32 ssa_261 = load_const (0x00ffffff /* 0.000000 */)
bb_15	:  PC=0x3500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1372) mov.b32 %ssa_261_bits, 0F00ffffff;
bb_15	:  PC=0x3508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1375) mov.f32 %ssa_262, 0F3c6ef35f; // vec1 32 ssa_262 = load_const (0x3c6ef35f /* 0.014584 */)
bb_15	:  PC=0x3510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1377) mov.b32 %ssa_262_bits, 0F3c6ef35f;
bb_15	:  PC=0x3518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1380) mov.f32 %ssa_263, 0F0019660d; // vec1 32 ssa_263 = load_const (0x0019660d /* 0.000000 */)
bb_15	:  PC=0x3520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1382) mov.b32 %ssa_263_bits, 0F0019660d;
bb_15	:  PC=0x3528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1385) mul.lo.s32 %ssa_264, %ssa_263_bits, %ssa_260; // vec1 32 ssa_264 = imul ssa_263, ssa_260
bb_15	:  PC=0x3530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1388) add.s32 %ssa_265, %ssa_264, %ssa_262_bits; // vec1 32 ssa_265 = iadd ssa_264, ssa_262
bb_15	:  PC=0x3538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1391) and.b32 %ssa_266, %ssa_265, %ssa_261;// vec1 32 ssa_266 = iand ssa_265, ssa_261
bb_15	:  PC=0x3540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1394) cvt.rn.f32.u32 %ssa_267, %ssa_266;// vec1 32 ssa_267 = u2f32 ssa_266
bb_15	:  PC=0x3548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1397) mul.lo.s32 %ssa_268, %ssa_263_bits, %ssa_265; // vec1 32 ssa_268 = imul ssa_263, ssa_265
bb_15	:  PC=0x3550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1400) add.s32 %ssa_269, %ssa_268, %ssa_262_bits; // vec1 32 ssa_269 = iadd ssa_268, ssa_262
bb_15	:  PC=0x3558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1403) and.b32 %ssa_270, %ssa_269, %ssa_261;// vec1 32 ssa_270 = iand ssa_269, ssa_261
bb_15	:  PC=0x3560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1406) cvt.rn.f32.u32 %ssa_271, %ssa_270;// vec1 32 ssa_271 = u2f32 ssa_270
bb_15	:  PC=0x3568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1409) mul.lo.s32 %ssa_272, %ssa_263_bits, %ssa_269; // vec1 32 ssa_272 = imul ssa_263, ssa_269
bb_15	:  PC=0x3570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1412) add.s32 %ssa_273, %ssa_272, %ssa_262_bits; // vec1 32 ssa_273 = iadd ssa_272, ssa_262
bb_15	:  PC=0x3578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1415) and.b32 %ssa_274, %ssa_273, %ssa_261;// vec1 32 ssa_274 = iand ssa_273, ssa_261
bb_15	:  PC=0x3580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1418) cvt.rn.f32.u32 %ssa_275, %ssa_274;// vec1 32 ssa_275 = u2f32 ssa_274
bb_15	:  PC=0x3588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1421) mov.f32 %ssa_276, 0F34000000; // vec1 32 ssa_276 = load_const (0x34000000 /* 0.000000 */)
bb_15	:  PC=0x3590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1423) mov.b32 %ssa_276_bits, 0F34000000;
bb_15	:  PC=0x3598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1426) mul.f32 %ssa_277, %ssa_276, %ssa_267;// vec1 32 ssa_277 = fmul ssa_276, ssa_267
bb_15	:  PC=0x35a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1429) mul.f32 %ssa_278, %ssa_276, %ssa_271;// vec1 32 ssa_278 = fmul ssa_276, ssa_271
bb_15	:  PC=0x35a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1432) mul.f32 %ssa_279, %ssa_276, %ssa_275;// vec1 32 ssa_279 = fmul ssa_276, ssa_275
bb_15	:  PC=0x35b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1438) mov.f32 %ssa_280_0, 0Fbf800000;
bb_15	:  PC=0x35b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1439) mov.f32 %ssa_280_1, 0Fbf800000;
bb_15	:  PC=0x35c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1440) mov.f32 %ssa_280_2, 0Fbf800000;
bb_15	:  PC=0x35c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1441) mov.f32 %ssa_280_3, 0F00000000;
bb_15	:  PC=0x35d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1445) add.f32 %ssa_281, %ssa_277, %ssa_280_0; // vec1 32 ssa_281 = fadd ssa_277, ssa_280.x
bb_15	:  PC=0x35d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1448) add.f32 %ssa_282, %ssa_278, %ssa_280_1; // vec1 32 ssa_282 = fadd ssa_278, ssa_280.y
bb_15	:  PC=0x35e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1451) add.f32 %ssa_283, %ssa_279, %ssa_280_2; // vec1 32 ssa_283 = fadd ssa_279, ssa_280.z
bb_15	:  PC=0x35e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1454) mul.f32 %ssa_284, %ssa_281, %ssa_281;// vec1 32 ssa_284 = fmul ssa_281, ssa_281
bb_15	:  PC=0x35f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1457) mul.f32 %ssa_285, %ssa_282, %ssa_282;// vec1 32 ssa_285 = fmul ssa_282, ssa_282
bb_15	:  PC=0x35f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1460) mul.f32 %ssa_286, %ssa_283, %ssa_283;// vec1 32 ssa_286 = fmul ssa_283, ssa_283
bb_15	:  PC=0x3600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1466) mov.f32 %ssa_287_0, %ssa_284;
bb_15	:  PC=0x3608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1467) mov.f32 %ssa_287_1, %ssa_285;
bb_15	:  PC=0x3610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1468) mov.f32 %ssa_287_2, %ssa_286; // vec3 32 ssa_287 = vec3 ssa_284, ssa_285, ssa_286
bb_15	:  PC=0x3618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1471) add.f32 %ssa_288, %ssa_287_0, %ssa_287_1;
bb_15	:  PC=0x3620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1472) add.f32 %ssa_288, %ssa_288, %ssa_287_2; // vec1 32 ssa_288 = fsum3 ssa_287
bb_15	:  PC=0x3628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1475) setp.lt.f32 %ssa_289, %ssa_288, %ssa_1;// vec1  1 ssa_289 = flt! ssa_288, ssa_1
bb_15	:  PC=0x3630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1480) @!%ssa_289 bra else_14;

bb_16	:  PC=0x3638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1484) bra loop_5_exit;

bb_17	:  PC=0x3640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1488) bra end_if_14;

bb_18	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1495) end_if_14:
bb_18	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1498) mov.s32 %ssa_260, %ssa_273; // vec1 32 ssa_260 = phi block_14: ssa_166, block_18: ssa_273
bb_18	:  PC=0x3648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1498) mov.s32 %ssa_260, %ssa_273; // vec1 32 ssa_260 = phi block_14: ssa_166, block_18: ssa_273
bb_18	:  PC=0x3650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1501) bra loop_5;

bb_19	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1506) .reg .f32 %ssa_290;
bb_19	:  PC=0x3658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1507) mul.f32 %ssa_290, %ssa_281, %ssa_103;// vec1 32 ssa_290 = fmul ssa_281, ssa_103
bb_19	:  PC=0x3660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1510) mul.f32 %ssa_291, %ssa_282, %ssa_103;// vec1 32 ssa_291 = fmul ssa_282, ssa_103
bb_19	:  PC=0x3668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1513) mul.f32 %ssa_292, %ssa_283, %ssa_103;// vec1 32 ssa_292 = fmul ssa_283, ssa_103
bb_19	:  PC=0x3670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1516) add.f32 %ssa_293, %ssa_243, %ssa_290;// vec1 32 ssa_293 = fadd ssa_243, ssa_290
bb_19	:  PC=0x3678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1519) add.f32 %ssa_294, %ssa_244, %ssa_291;// vec1 32 ssa_294 = fadd ssa_244, ssa_291
bb_19	:  PC=0x3680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1522) add.f32 %ssa_295, %ssa_245, %ssa_292;// vec1 32 ssa_295 = fadd ssa_245, ssa_292
bb_19	:  PC=0x3688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1525) selp.f32 %ssa_296, 0F3f800000, 0F00000000, %ssa_251; // vec1 32 ssa_296 = b2f32 ssa_251
bb_19	:  PC=0x3690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1531) mov.f32 %ssa_297_0, %ssa_257;
bb_19	:  PC=0x3698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1532) mov.f32 %ssa_297_1, %ssa_258;
bb_19	:  PC=0x36a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1533) mov.f32 %ssa_297_2, %ssa_259;
bb_19	:  PC=0x36a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1534) mov.f32 %ssa_297_3, %ssa_163; // vec4 32 ssa_297 = vec4 ssa_257, ssa_258, ssa_259, ssa_163
bb_19	:  PC=0x36b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1540) mov.f32 %ssa_298_0, %ssa_293;
bb_19	:  PC=0x36b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1541) mov.f32 %ssa_298_1, %ssa_294;
bb_19	:  PC=0x36c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1542) mov.f32 %ssa_298_2, %ssa_295;
bb_19	:  PC=0x36c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1543) mov.f32 %ssa_298_3, %ssa_296; // vec4 32 ssa_298 = vec4 ssa_293, ssa_294, ssa_295, ssa_296
bb_19	:  PC=0x36d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1546) mov.f32 %ssa_490, %ssa_298_0; // vec1 32 ssa_490 = mov ssa_298.x
bb_19	:  PC=0x36d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1549) mov.f32 %ssa_493, %ssa_298_1; // vec1 32 ssa_493 = mov ssa_298.y
bb_19	:  PC=0x36e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1552) mov.f32 %ssa_496, %ssa_298_2; // vec1 32 ssa_496 = mov ssa_298.z
bb_19	:  PC=0x36e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1555) mov.f32 %ssa_499, %ssa_298_3; // vec1 32 ssa_499 = mov ssa_298.w
bb_19	:  PC=0x36f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1558) mov.f32 %ssa_503, %ssa_297_0; // vec1 32 ssa_503 = mov ssa_297.x
bb_19	:  PC=0x36f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1561) mov.f32 %ssa_506, %ssa_297_1; // vec1 32 ssa_506 = mov ssa_297.y
bb_19	:  PC=0x3700 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1564) mov.f32 %ssa_509, %ssa_297_2; // vec1 32 ssa_509 = mov ssa_297.z
bb_19	:  PC=0x3708 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1567) mov.f32 %ssa_512, %ssa_297_3; // vec1 32 ssa_512 = mov ssa_297.w
bb_19	:  PC=0x3710 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1569) mov.s32 %ssa_406, %ssa_273; // vec1 32 ssa_406 = phi block_19: ssa_273, block_29: ssa_403
bb_19	:  PC=0x3718 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1570) mov.b32 %ssa_492, %ssa_490; // vec1 32 ssa_492 = phi block_19: ssa_490, block_29: ssa_491
bb_19	:  PC=0x3720 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1571) mov.b32 %ssa_495, %ssa_493; // vec1 32 ssa_495 = phi block_19: ssa_493, block_29: ssa_494
bb_19	:  PC=0x3728 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1572) mov.b32 %ssa_498, %ssa_496; // vec1 32 ssa_498 = phi block_19: ssa_496, block_29: ssa_497
bb_19	:  PC=0x3730 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1573) mov.b32 %ssa_501, %ssa_499; // vec1 32 ssa_501 = phi block_19: ssa_499, block_29: ssa_500
bb_19	:  PC=0x3738 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1574) mov.b32 %ssa_505, %ssa_503; // vec1 32 ssa_505 = phi block_19: ssa_503, block_29: ssa_504
bb_19	:  PC=0x3740 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1575) mov.b32 %ssa_508, %ssa_506; // vec1 32 ssa_508 = phi block_19: ssa_506, block_29: ssa_507
bb_19	:  PC=0x3748 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1576) mov.b32 %ssa_511, %ssa_509; // vec1 32 ssa_511 = phi block_19: ssa_509, block_29: ssa_510
bb_19	:  PC=0x3750 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1577) mov.b32 %ssa_514, %ssa_512; // vec1 32 ssa_514 = phi block_19: ssa_512, block_29: ssa_513
bb_19	:  PC=0x3758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1580) bra end_if_12;

bb_20	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1585) .reg .pred %ssa_299;
bb_20	:  PC=0x3760 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1586) setp.eq.s32 %ssa_299, %ssa_107, %ssa_2_bits; // vec1  1 ssa_299 = ieq ssa_107, ssa_2
bb_20	:  PC=0x3768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1591) @!%ssa_299 bra else_15;

bb_21	:  PC=0x3770 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1599) mov.f32 %ssa_300_0, 0F3f800000;
bb_21	:  PC=0x3778 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1600) mov.f32 %ssa_300_1, 0F3f800000;
bb_21	:  PC=0x3780 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1601) mov.f32 %ssa_300_2, 0F3f800000;
bb_21	:  PC=0x3788 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1602) mov.f32 %ssa_300_3, 0F3f800000;
bb_21	:  PC=0x3790 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1606) mul.f32 %ssa_301, %ssa_173, %ssa_148;// vec1 32 ssa_301 = fmul ssa_173, ssa_148
bb_21	:  PC=0x3798 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1609) mul.f32 %ssa_302, %ssa_174, %ssa_149;// vec1 32 ssa_302 = fmul ssa_174, ssa_149
bb_21	:  PC=0x37a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1612) mul.f32 %ssa_303, %ssa_175, %ssa_150;// vec1 32 ssa_303 = fmul ssa_175, ssa_150
bb_21	:  PC=0x37a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1618) mov.f32 %ssa_304_0, %ssa_301;
bb_21	:  PC=0x37b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1619) mov.f32 %ssa_304_1, %ssa_302;
bb_21	:  PC=0x37b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1620) mov.f32 %ssa_304_2, %ssa_303; // vec3 32 ssa_304 = vec3 ssa_301, ssa_302, ssa_303
bb_21	:  PC=0x37c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1623) add.f32 %ssa_305, %ssa_304_0, %ssa_304_1;
bb_21	:  PC=0x37c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1624) add.f32 %ssa_305, %ssa_305, %ssa_304_2; // vec1 32 ssa_305 = fsum3 ssa_304
bb_21	:  PC=0x37d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1627) setp.lt.f32 %ssa_306, %ssa_0, %ssa_305;// vec1  1 ssa_306 = flt! ssa_0, ssa_305
bb_21	:  PC=0x37d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1630) neg.f32 %ssa_307, %ssa_148;// vec1 32 ssa_307 = fneg ssa_148
bb_21	:  PC=0x37e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1633) neg.f32 %ssa_308, %ssa_149;// vec1 32 ssa_308 = fneg ssa_149
bb_21	:  PC=0x37e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1636) neg.f32 %ssa_309, %ssa_150;// vec1 32 ssa_309 = fneg ssa_150
bb_21	:  PC=0x37f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1639) selp.f32 %ssa_310, %ssa_307, %ssa_148, %ssa_306; // vec1 32 ssa_310 = bcsel ssa_306, ssa_307, ssa_148
bb_21	:  PC=0x37f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1642) selp.f32 %ssa_311, %ssa_308, %ssa_149, %ssa_306; // vec1 32 ssa_311 = bcsel ssa_306, ssa_308, ssa_149
bb_21	:  PC=0x3800 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1645) selp.f32 %ssa_312, %ssa_309, %ssa_150, %ssa_306; // vec1 32 ssa_312 = bcsel ssa_306, ssa_309, ssa_150
bb_21	:  PC=0x3808 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1648) rcp.approx.f32 %ssa_313, %ssa_105;// vec1 32 ssa_313 = frcp ssa_105
bb_21	:  PC=0x3810 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1651) selp.f32 %ssa_314, %ssa_105, %ssa_313, %ssa_306; // vec1 32 ssa_314 = bcsel ssa_306, ssa_105, ssa_313
bb_21	:  PC=0x3818 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1654) mul.f32 %ssa_315, %ssa_105, %ssa_305;// vec1 32 ssa_315 = fmul ssa_105, ssa_305
bb_21	:  PC=0x3820 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1657) neg.f32 %ssa_316, %ssa_305;// vec1 32 ssa_316 = fneg ssa_305
bb_21	:  PC=0x3828 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1660) selp.f32 %ssa_317, %ssa_315, %ssa_316, %ssa_306; // vec1 32 ssa_317 = bcsel ssa_306, ssa_315, ssa_316
bb_21	:  PC=0x3830 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1663) mul.f32 %ssa_318, %ssa_310, %ssa_173;// vec1 32 ssa_318 = fmul ssa_310, ssa_173
bb_21	:  PC=0x3838 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1666) mul.f32 %ssa_319, %ssa_311, %ssa_174;// vec1 32 ssa_319 = fmul ssa_311, ssa_174
bb_21	:  PC=0x3840 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1669) mul.f32 %ssa_320, %ssa_312, %ssa_175;// vec1 32 ssa_320 = fmul ssa_312, ssa_175
bb_21	:  PC=0x3848 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1675) mov.f32 %ssa_321_0, %ssa_318;
bb_21	:  PC=0x3850 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1676) mov.f32 %ssa_321_1, %ssa_319;
bb_21	:  PC=0x3858 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1677) mov.f32 %ssa_321_2, %ssa_320; // vec3 32 ssa_321 = vec3 ssa_318, ssa_319, ssa_320
bb_21	:  PC=0x3860 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1680) add.f32 %ssa_322, %ssa_321_0, %ssa_321_1;
bb_21	:  PC=0x3868 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1681) add.f32 %ssa_322, %ssa_322, %ssa_321_2; // vec1 32 ssa_322 = fsum3 ssa_321
bb_21	:  PC=0x3870 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1684) mul.f32 %ssa_323, %ssa_322, %ssa_322;// vec1 32 ssa_323 = fmul ssa_322, ssa_322
bb_21	:  PC=0x3878 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1687) neg.f32 %ssa_324, %ssa_323;// vec1 32 ssa_324 = fneg ssa_323
bb_21	:  PC=0x3880 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1690) add.f32 %ssa_325, %ssa_324, %ssa_1;// vec1 32 ssa_325 = fadd ssa_324, ssa_1
bb_21	:  PC=0x3888 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1693) mul.f32 %ssa_326, %ssa_314, %ssa_325;// vec1 32 ssa_326 = fmul ssa_314, ssa_325
bb_21	:  PC=0x3890 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1696) mul.f32 %ssa_327, %ssa_314, %ssa_326;// vec1 32 ssa_327 = fmul ssa_314, ssa_326
bb_21	:  PC=0x3898 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1699) neg.f32 %ssa_328, %ssa_327;// vec1 32 ssa_328 = fneg ssa_327
bb_21	:  PC=0x38a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1702) add.f32 %ssa_329, %ssa_328, %ssa_1;// vec1 32 ssa_329 = fadd ssa_328, ssa_1
bb_21	:  PC=0x38a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1705) sqrt.approx.f32 %ssa_330, %ssa_329;// vec1 32 ssa_330 = fsqrt ssa_329
bb_21	:  PC=0x38b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1708) mul.f32 %ssa_331, %ssa_314, %ssa_322;// vec1 32 ssa_331 = fmul ssa_314, ssa_322
bb_21	:  PC=0x38b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1711) add.f32 %ssa_332, %ssa_331, %ssa_330;// vec1 32 ssa_332 = fadd ssa_331, ssa_330
bb_21	:  PC=0x38c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1714) mul.f32 %ssa_333, %ssa_314, %ssa_173;// vec1 32 ssa_333 = fmul ssa_314, ssa_173
bb_21	:  PC=0x38c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1717) mul.f32 %ssa_334, %ssa_314, %ssa_174;// vec1 32 ssa_334 = fmul ssa_314, ssa_174
bb_21	:  PC=0x38d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1720) mul.f32 %ssa_335, %ssa_314, %ssa_175;// vec1 32 ssa_335 = fmul ssa_314, ssa_175
bb_21	:  PC=0x38d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1723) mul.f32 %ssa_336, %ssa_332, %ssa_310;// vec1 32 ssa_336 = fmul ssa_332, ssa_310
bb_21	:  PC=0x38e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1726) neg.f32 %ssa_337, %ssa_336;// vec1 32 ssa_337 = fneg ssa_336
bb_21	:  PC=0x38e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1729) mul.f32 %ssa_338, %ssa_332, %ssa_311;// vec1 32 ssa_338 = fmul ssa_332, ssa_311
bb_21	:  PC=0x38f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1732) neg.f32 %ssa_339, %ssa_338;// vec1 32 ssa_339 = fneg ssa_338
bb_21	:  PC=0x38f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1735) mul.f32 %ssa_340, %ssa_332, %ssa_312;// vec1 32 ssa_340 = fmul ssa_332, ssa_312
bb_21	:  PC=0x3900 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1738) neg.f32 %ssa_341, %ssa_340;// vec1 32 ssa_341 = fneg ssa_340
bb_21	:  PC=0x3908 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1741) add.f32 %ssa_342, %ssa_337, %ssa_333;// vec1 32 ssa_342 = fadd ssa_337, ssa_333
bb_21	:  PC=0x3910 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1744) add.f32 %ssa_343, %ssa_339, %ssa_334;// vec1 32 ssa_343 = fadd ssa_339, ssa_334
bb_21	:  PC=0x3918 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1747) add.f32 %ssa_344, %ssa_341, %ssa_335;// vec1 32 ssa_344 = fadd ssa_341, ssa_335
bb_21	:  PC=0x3920 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1750) setp.lt.f32 %ssa_345, %ssa_329, %ssa_0;// vec1  1 ssa_345 = flt ssa_329, ssa_0
bb_21	:  PC=0x3928 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1753) selp.f32 %ssa_346, %ssa_0_bits, %ssa_342, %ssa_345; // vec1 32 ssa_346 = bcsel ssa_345, ssa_0, ssa_342
bb_21	:  PC=0x3930 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1756) selp.f32 %ssa_347, %ssa_0_bits, %ssa_343, %ssa_345; // vec1 32 ssa_347 = bcsel ssa_345, ssa_0, ssa_343
bb_21	:  PC=0x3938 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1759) selp.f32 %ssa_348, %ssa_0_bits, %ssa_344, %ssa_345; // vec1 32 ssa_348 = bcsel ssa_345, ssa_0, ssa_344
bb_21	:  PC=0x3940 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1762) abs.f32 %ssa_349, %ssa_347;// vec1 32 ssa_349 = fabs! ssa_347
bb_21	:  PC=0x3948 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1765) abs.f32 %ssa_350, %ssa_348;// vec1 32 ssa_350 = fabs! ssa_348
bb_21	:  PC=0x3950 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1768) add.f32 %ssa_351, %ssa_349, %ssa_350;// vec1 32 ssa_351 = fadd! ssa_349, ssa_350
bb_21	:  PC=0x3958 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1771) abs.f32 %ssa_352, %ssa_346;// vec1 32 ssa_352 = fabs! ssa_346
bb_21	:  PC=0x3960 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1774) add.f32 %ssa_353, %ssa_352, %ssa_351;// vec1 32 ssa_353 = fadd! ssa_352, ssa_351
bb_21	:  PC=0x3968 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1777) setp.ne.f32 %ssa_354, %ssa_353, %ssa_0;// vec1  1 ssa_354 = fneu! ssa_353, ssa_0
bb_21	:  PC=0x3970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1782) @!%ssa_354 bra else_16;

bb_22	:  PC=0x3978 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1787) mov.f32 %ssa_355, 0F40a00000; // vec1 32 ssa_355 = load_const (0x40a00000 /* 5.000000 */)
bb_22	:  PC=0x3980 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1789) mov.b32 %ssa_355_bits, 0F40a00000;
bb_22	:  PC=0x3988 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1792) neg.f32 %ssa_356, %ssa_105;// vec1 32 ssa_356 = fneg ssa_105
bb_22	:  PC=0x3990 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1795) add.f32 %ssa_357, %ssa_1, %ssa_356;// vec1 32 ssa_357 = fadd ssa_1, ssa_356
bb_22	:  PC=0x3998 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1798) add.f32 %ssa_358, %ssa_1, %ssa_105;// vec1 32 ssa_358 = fadd ssa_1, ssa_105
bb_22	:  PC=0x39a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1801) rcp.approx.f32 %ssa_359, %ssa_358;// vec1 32 ssa_359 = frcp ssa_358
bb_22	:  PC=0x39a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1804) mul.f32 %ssa_360, %ssa_357, %ssa_359;// vec1 32 ssa_360 = fmul ssa_357, ssa_359
bb_22	:  PC=0x39b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1807) mul.f32 %ssa_361, %ssa_360, %ssa_360;// vec1 32 ssa_361 = fmul ssa_360, ssa_360
bb_22	:  PC=0x39b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1810) neg.f32 %ssa_362, %ssa_361;// vec1 32 ssa_362 = fneg ssa_361
bb_22	:  PC=0x39c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1813) add.f32 %ssa_363, %ssa_1, %ssa_362;// vec1 32 ssa_363 = fadd ssa_1, ssa_362
bb_22	:  PC=0x39c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1816) neg.f32 %ssa_364, %ssa_317;// vec1 32 ssa_364 = fneg ssa_317
bb_22	:  PC=0x39d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1819) add.f32 %ssa_365, %ssa_1, %ssa_364;// vec1 32 ssa_365 = fadd ssa_1, ssa_364
bb_22	:  PC=0x39d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1822) lg2.approx.f32 %ssa_366, %ssa_365;
bb_22	:  PC=0x39e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1823) mul.f32 %ssa_366, %ssa_366, %ssa_355;
bb_22	:  PC=0x39e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1824) ex2.approx.f32 %ssa_366, %ssa_366;
bb_22	:  PC=0x39f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1827) mul.f32 %ssa_367, %ssa_363, %ssa_366;// vec1 32 ssa_367 = fmul ssa_363, ssa_366
bb_22	:  PC=0x39f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1830) add.f32 %ssa_368, %ssa_361, %ssa_367;// vec1 32 ssa_368 = fadd ssa_361, ssa_367
bb_22	:  PC=0x3a00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1832) mov.f32 %ssa_369, %ssa_368; // vec1 32 ssa_369 = phi block_22: ssa_368, block_23: ssa_1
bb_22	:  PC=0x3a08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1835) bra end_if_16;

bb_23	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1840) mov.f32 %ssa_369, %ssa_1; // vec1 32 ssa_369 = phi block_22: ssa_368, block_23: ssa_1
bb_23	:  PC=0x3a10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1840) mov.f32 %ssa_369, %ssa_1; // vec1 32 ssa_369 = phi block_22: ssa_368, block_23: ssa_1

bb_24	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1847) .reg .pred %ssa_370;
bb_24	:  PC=0x3a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1848) setp.ge.s32 %ssa_370, %ssa_101, %ssa_0_bits; // vec1  1 ssa_370 = ige ssa_101, ssa_0
bb_24	:  PC=0x3a20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1853) @!%ssa_370 bra else_17;

bb_25	:  PC=0x3a28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1858) mov.b64 %ssa_371, %TextureSamplers; // vec1 32 ssa_371 = deref_var &TextureSamplers (uniform sampler2D[]) 
bb_25	:  PC=0x3a30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1863) cvt.u32.s32 %ssa_372_array_index_32, %ssa_101;
bb_25	:  PC=0x3a38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1864) mul.wide.u32 %ssa_372_array_index_64, %ssa_372_array_index_32, 48;
bb_25	:  PC=0x3a40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1865) add.u64 %ssa_372, %ssa_371, %ssa_372_array_index_64; // vec1 32 ssa_372 = deref_array &(*ssa_371)[ssa_101] (uniform sampler2D) /* &TextureSamplers[ssa_101] */
bb_25	:  PC=0x3a48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1871) txl %ssa_372, %ssa_372, %ssa_373_0, %ssa_373_1, %ssa_373_2, %ssa_373_3, %ssa_162_0, %ssa_162_1, %ssa_0; // vec4 32 ssa_373 = (float32)txl ssa_372 (texture_deref), ssa_372 (sampler_deref), ssa_162 (coord), ssa_0 (lod), texture non-uniform, sampler non-uniform
bb_25	:  PC=0x3a50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1874) mov.f32 %ssa_451, %ssa_373_0; // vec1 32 ssa_451 = mov ssa_373.x
bb_25	:  PC=0x3a58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1877) mov.f32 %ssa_454, %ssa_373_1; // vec1 32 ssa_454 = mov ssa_373.y
bb_25	:  PC=0x3a60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1880) mov.f32 %ssa_457, %ssa_373_2; // vec1 32 ssa_457 = mov ssa_373.z
bb_25	:  PC=0x3a68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1883) mov.f32 %ssa_460, %ssa_373_3; // vec1 32 ssa_460 = mov ssa_373.w
bb_25	:  PC=0x3a70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1885) mov.f32 %ssa_453, %ssa_451; // vec1 32 ssa_453 = phi block_25: ssa_451, block_26: ssa_550
bb_25	:  PC=0x3a78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1886) mov.f32 %ssa_456, %ssa_454; // vec1 32 ssa_456 = phi block_25: ssa_454, block_26: ssa_551
bb_25	:  PC=0x3a80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1887) mov.f32 %ssa_459, %ssa_457; // vec1 32 ssa_459 = phi block_25: ssa_457, block_26: ssa_552
bb_25	:  PC=0x3a88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1888) mov.f32 %ssa_462, %ssa_460; // vec1 32 ssa_462 = phi block_25: ssa_460, block_26: ssa_553
bb_25	:  PC=0x3a90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1891) bra end_if_17;

bb_26	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1896) .reg .f32 %ssa_550;
bb_26	:  PC=0x3a98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1897) mov.f32 %ssa_550, 0F3f800000; // vec1 32 ssa_550 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x3aa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1899) mov.b32 %ssa_550_bits, 0F3f800000;
bb_26	:  PC=0x3aa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1902) mov.f32 %ssa_551, 0F3f800000; // vec1 32 ssa_551 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x3ab0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1904) mov.b32 %ssa_551_bits, 0F3f800000;
bb_26	:  PC=0x3ab8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1907) mov.f32 %ssa_552, 0F3f800000; // vec1 32 ssa_552 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x3ac0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1909) mov.b32 %ssa_552_bits, 0F3f800000;
bb_26	:  PC=0x3ac8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1912) mov.f32 %ssa_553, 0F3f800000; // vec1 32 ssa_553 = load_const (0x3f800000 /* 1.000000 */)
bb_26	:  PC=0x3ad0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1914) mov.b32 %ssa_553_bits, 0F3f800000;
bb_26	:  PC=0x3ad8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1916) mov.f32 %ssa_453, %ssa_550; // vec1 32 ssa_453 = phi block_25: ssa_451, block_26: ssa_550
bb_26	:  PC=0x3ae0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1917) mov.f32 %ssa_456, %ssa_551; // vec1 32 ssa_456 = phi block_25: ssa_454, block_26: ssa_551
bb_26	:  PC=0x3ae8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1918) mov.f32 %ssa_459, %ssa_552; // vec1 32 ssa_459 = phi block_25: ssa_457, block_26: ssa_552
bb_26	:  PC=0x3af0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1919) mov.f32 %ssa_462, %ssa_553; // vec1 32 ssa_462 = phi block_25: ssa_460, block_26: ssa_553

bb_27	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1929) .reg .b32 %ssa_463_0;
bb_27	:  PC=0x3af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1933) mov.b32 %ssa_463_0, %ssa_453;
bb_27	:  PC=0x3b00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1934) mov.b32 %ssa_463_1, %ssa_456;
bb_27	:  PC=0x3b08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1935) mov.b32 %ssa_463_2, %ssa_459;
bb_27	:  PC=0x3b10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1936) mov.b32 %ssa_463_3, %ssa_462; // vec4 32 ssa_463 = vec4 ssa_453, ssa_456, ssa_459, ssa_462
bb_27	:  PC=0x3b18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1939) mov.f32 %ssa_375, 0F00ffffff; // vec1 32 ssa_375 = load_const (0x00ffffff /* 0.000000 */)
bb_27	:  PC=0x3b20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1941) mov.b32 %ssa_375_bits, 0F00ffffff;
bb_27	:  PC=0x3b28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1944) mov.f32 %ssa_376, 0F3c6ef35f; // vec1 32 ssa_376 = load_const (0x3c6ef35f /* 0.014584 */)
bb_27	:  PC=0x3b30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1946) mov.b32 %ssa_376_bits, 0F3c6ef35f;
bb_27	:  PC=0x3b38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1949) mov.f32 %ssa_377, 0F0019660d; // vec1 32 ssa_377 = load_const (0x0019660d /* 0.000000 */)
bb_27	:  PC=0x3b40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1951) mov.b32 %ssa_377_bits, 0F0019660d;
bb_27	:  PC=0x3b48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1954) mul.lo.s32 %ssa_378, %ssa_377_bits, %ssa_166; // vec1 32 ssa_378 = imul ssa_377, ssa_166
bb_27	:  PC=0x3b50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1957) add.s32 %ssa_379, %ssa_378, %ssa_376_bits; // vec1 32 ssa_379 = iadd ssa_378, ssa_376
bb_27	:  PC=0x3b58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1960) and.b32 %ssa_380, %ssa_379, %ssa_375;// vec1 32 ssa_380 = iand ssa_379, ssa_375
bb_27	:  PC=0x3b60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1963) cvt.rn.f32.u32 %ssa_381, %ssa_380;// vec1 32 ssa_381 = u2f32 ssa_380
bb_27	:  PC=0x3b68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1966) mov.f32 %ssa_382, 0F33800000; // vec1 32 ssa_382 = load_const (0x33800000 /* 0.000000 */)
bb_27	:  PC=0x3b70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1968) mov.b32 %ssa_382_bits, 0F33800000;
bb_27	:  PC=0x3b78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1971) mul.f32 %ssa_383, %ssa_381, %ssa_382;// vec1 32 ssa_383 = fmul ssa_381, ssa_382
bb_27	:  PC=0x3b80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1974) setp.lt.f32 %ssa_384, %ssa_383, %ssa_369;// vec1  1 ssa_384 = flt! ssa_383, ssa_369
bb_27	:  PC=0x3b88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1977) mov.f32 %ssa_385, 0F40000000; // vec1 32 ssa_385 = load_const (0x40000000 /* 2.000000 */)
bb_27	:  PC=0x3b90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1979) mov.b32 %ssa_385_bits, 0F40000000;
bb_27	:  PC=0x3b98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1982) mul.f32 %ssa_386, %ssa_305, %ssa_385;// vec1 32 ssa_386 = fmul ssa_305, ssa_385
bb_27	:  PC=0x3ba0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1985) mul.f32 %ssa_387, %ssa_148, %ssa_386;// vec1 32 ssa_387 = fmul ssa_148, ssa_386
bb_27	:  PC=0x3ba8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1988) neg.f32 %ssa_388, %ssa_387;// vec1 32 ssa_388 = fneg ssa_387
bb_27	:  PC=0x3bb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1991) mul.f32 %ssa_389, %ssa_149, %ssa_386;// vec1 32 ssa_389 = fmul ssa_149, ssa_386
bb_27	:  PC=0x3bb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1994) neg.f32 %ssa_390, %ssa_389;// vec1 32 ssa_390 = fneg ssa_389
bb_27	:  PC=0x3bc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1997) mul.f32 %ssa_391, %ssa_150, %ssa_386;// vec1 32 ssa_391 = fmul ssa_150, ssa_386
bb_27	:  PC=0x3bc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2000) neg.f32 %ssa_392, %ssa_391;// vec1 32 ssa_392 = fneg ssa_391
bb_27	:  PC=0x3bd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2003) add.f32 %ssa_393, %ssa_388, %ssa_173;// vec1 32 ssa_393 = fadd ssa_388, ssa_173
bb_27	:  PC=0x3bd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2006) add.f32 %ssa_394, %ssa_390, %ssa_174;// vec1 32 ssa_394 = fadd ssa_390, ssa_174
bb_27	:  PC=0x3be0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2009) add.f32 %ssa_395, %ssa_392, %ssa_175;// vec1 32 ssa_395 = fadd ssa_392, ssa_175
bb_27	:  PC=0x3be8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2012) selp.f32 %ssa_396, %ssa_393, %ssa_346, %ssa_384; // vec1 32 ssa_396 = bcsel ssa_384, ssa_393, ssa_346
bb_27	:  PC=0x3bf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2015) selp.f32 %ssa_397, %ssa_394, %ssa_347, %ssa_384; // vec1 32 ssa_397 = bcsel ssa_384, ssa_394, ssa_347
bb_27	:  PC=0x3bf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2018) selp.f32 %ssa_398, %ssa_395, %ssa_348, %ssa_384; // vec1 32 ssa_398 = bcsel ssa_384, ssa_395, ssa_348
bb_27	:  PC=0x3c00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2024) mov.f32 %ssa_399_0, %ssa_396;
bb_27	:  PC=0x3c08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2025) mov.f32 %ssa_399_1, %ssa_397;
bb_27	:  PC=0x3c10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2026) mov.f32 %ssa_399_2, %ssa_398;
bb_27	:  PC=0x3c18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2027) mov.f32 %ssa_399_3, %ssa_1; // vec4 32 ssa_399 = vec4 ssa_396, ssa_397, ssa_398, ssa_1
bb_27	:  PC=0x3c20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2033) mov.b32 %ssa_400_0, %ssa_463_0;
bb_27	:  PC=0x3c28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2034) mov.b32 %ssa_400_1, %ssa_463_1;
bb_27	:  PC=0x3c30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2035) mov.b32 %ssa_400_2, %ssa_463_2;
bb_27	:  PC=0x3c38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2036) mov.b32 %ssa_400_3, %ssa_163; // vec4 32 ssa_400 = vec4 ssa_463.x, ssa_463.y, ssa_463.z, ssa_163
bb_27	:  PC=0x3c40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2039) mov.f32 %ssa_464, %ssa_399_0; // vec1 32 ssa_464 = mov ssa_399.x
bb_27	:  PC=0x3c48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2042) mov.f32 %ssa_467, %ssa_399_1; // vec1 32 ssa_467 = mov ssa_399.y
bb_27	:  PC=0x3c50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2045) mov.f32 %ssa_470, %ssa_399_2; // vec1 32 ssa_470 = mov ssa_399.z
bb_27	:  PC=0x3c58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2048) mov.f32 %ssa_473, %ssa_399_3; // vec1 32 ssa_473 = mov ssa_399.w
bb_27	:  PC=0x3c60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2051) mov.b32 %ssa_477, %ssa_400_0; // vec1 32 ssa_477 = mov ssa_400.x
bb_27	:  PC=0x3c68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2054) mov.b32 %ssa_480, %ssa_400_1; // vec1 32 ssa_480 = mov ssa_400.y
bb_27	:  PC=0x3c70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2057) mov.b32 %ssa_483, %ssa_400_2; // vec1 32 ssa_483 = mov ssa_400.z
bb_27	:  PC=0x3c78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2060) mov.b32 %ssa_486, %ssa_400_3; // vec1 32 ssa_486 = mov ssa_400.w
bb_27	:  PC=0x3c80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2062) mov.s32 %ssa_403, %ssa_379; // vec1 32 ssa_403 = phi block_27: ssa_379, block_28: ssa_166
bb_27	:  PC=0x3c88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2063) mov.f32 %ssa_466, %ssa_464; // vec1 32 ssa_466 = phi block_27: ssa_464, block_28: ssa_554
bb_27	:  PC=0x3c90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2064) mov.f32 %ssa_469, %ssa_467; // vec1 32 ssa_469 = phi block_27: ssa_467, block_28: ssa_555
bb_27	:  PC=0x3c98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2065) mov.f32 %ssa_472, %ssa_470; // vec1 32 ssa_472 = phi block_27: ssa_470, block_28: ssa_556
bb_27	:  PC=0x3ca0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2066) mov.f32 %ssa_475, %ssa_473; // vec1 32 ssa_475 = phi block_27: ssa_473, block_28: ssa_557
bb_27	:  PC=0x3ca8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2067) mov.b32 %ssa_479, %ssa_477; // vec1 32 ssa_479 = phi block_27: ssa_477, block_28: ssa_478
bb_27	:  PC=0x3cb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2068) mov.b32 %ssa_482, %ssa_480; // vec1 32 ssa_482 = phi block_27: ssa_480, block_28: ssa_481
bb_27	:  PC=0x3cb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2069) mov.b32 %ssa_485, %ssa_483; // vec1 32 ssa_485 = phi block_27: ssa_483, block_28: ssa_484
bb_27	:  PC=0x3cc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2070) mov.b32 %ssa_488, %ssa_486; // vec1 32 ssa_488 = phi block_27: ssa_486, block_28: ssa_487
bb_27	:  PC=0x3cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2073) bra end_if_15;

bb_28	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2078) .reg .f32 %ssa_401_0;
bb_28	:  PC=0x3cd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2082) mov.f32 %ssa_401_0, 0F3f800000;
bb_28	:  PC=0x3cd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2083) mov.f32 %ssa_401_1, 0F00000000;
bb_28	:  PC=0x3ce0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2084) mov.f32 %ssa_401_2, 0F00000000;
bb_28	:  PC=0x3ce8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2085) mov.f32 %ssa_401_3, 0F00000000;
bb_28	:  PC=0x3cf0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2092) mov.f32 %ssa_402_0, %ssa_99_0;
bb_28	:  PC=0x3cf8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2093) mov.f32 %ssa_402_1, %ssa_99_1;
bb_28	:  PC=0x3d00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2094) mov.f32 %ssa_402_2, %ssa_99_2;
bb_28	:  PC=0x3d08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2095) mov.f32 %ssa_402_3, %ssa_163; // vec4 32 ssa_402 = vec4 ssa_99.x, ssa_99.y, ssa_99.z, ssa_163
bb_28	:  PC=0x3d10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2098) mov.f32 %ssa_554, 0F3f800000; // vec1 32 ssa_554 = load_const (0x3f800000 /* 1.000000 */)
bb_28	:  PC=0x3d18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2100) mov.b32 %ssa_554_bits, 0F3f800000;
bb_28	:  PC=0x3d20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2103) mov.f32 %ssa_555, 0F00000000; // vec1 32 ssa_555 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x3d28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2105) mov.b32 %ssa_555_bits, 0F00000000;
bb_28	:  PC=0x3d30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2108) mov.f32 %ssa_556, 0F00000000; // vec1 32 ssa_556 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x3d38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2110) mov.b32 %ssa_556_bits, 0F00000000;
bb_28	:  PC=0x3d40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2113) mov.f32 %ssa_557, 0F00000000; // vec1 32 ssa_557 = load_const (0x00000000 /* 0.000000 */)
bb_28	:  PC=0x3d48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2115) mov.b32 %ssa_557_bits, 0F00000000;
bb_28	:  PC=0x3d50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2118) mov.f32 %ssa_478, %ssa_402_0; // vec1 32 ssa_478 = mov ssa_402.x
bb_28	:  PC=0x3d58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2121) mov.f32 %ssa_481, %ssa_402_1; // vec1 32 ssa_481 = mov ssa_402.y
bb_28	:  PC=0x3d60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2124) mov.f32 %ssa_484, %ssa_402_2; // vec1 32 ssa_484 = mov ssa_402.z
bb_28	:  PC=0x3d68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2127) mov.f32 %ssa_487, %ssa_402_3; // vec1 32 ssa_487 = mov ssa_402.w
bb_28	:  PC=0x3d70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2129) mov.s32 %ssa_403, %ssa_166; // vec1 32 ssa_403 = phi block_27: ssa_379, block_28: ssa_166
bb_28	:  PC=0x3d78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2130) mov.f32 %ssa_466, %ssa_554; // vec1 32 ssa_466 = phi block_27: ssa_464, block_28: ssa_554
bb_28	:  PC=0x3d80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2131) mov.f32 %ssa_469, %ssa_555; // vec1 32 ssa_469 = phi block_27: ssa_467, block_28: ssa_555
bb_28	:  PC=0x3d88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2132) mov.f32 %ssa_472, %ssa_556; // vec1 32 ssa_472 = phi block_27: ssa_470, block_28: ssa_556
bb_28	:  PC=0x3d90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2133) mov.f32 %ssa_475, %ssa_557; // vec1 32 ssa_475 = phi block_27: ssa_473, block_28: ssa_557
bb_28	:  PC=0x3d98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2134) mov.b32 %ssa_479, %ssa_478; // vec1 32 ssa_479 = phi block_27: ssa_477, block_28: ssa_478
bb_28	:  PC=0x3da0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2135) mov.b32 %ssa_482, %ssa_481; // vec1 32 ssa_482 = phi block_27: ssa_480, block_28: ssa_481
bb_28	:  PC=0x3da8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2136) mov.b32 %ssa_485, %ssa_484; // vec1 32 ssa_485 = phi block_27: ssa_483, block_28: ssa_484
bb_28	:  PC=0x3db0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2137) mov.b32 %ssa_488, %ssa_487; // vec1 32 ssa_488 = phi block_27: ssa_486, block_28: ssa_487

bb_29	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2152) .reg .b32 %ssa_489_0;
bb_29	:  PC=0x3db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2156) mov.b32 %ssa_489_0, %ssa_479;
bb_29	:  PC=0x3dc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2157) mov.b32 %ssa_489_1, %ssa_482;
bb_29	:  PC=0x3dc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2158) mov.b32 %ssa_489_2, %ssa_485;
bb_29	:  PC=0x3dd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2159) mov.b32 %ssa_489_3, %ssa_488; // vec4 32 ssa_489 = vec4 ssa_479, ssa_482, ssa_485, ssa_488
bb_29	:  PC=0x3dd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2165) mov.b32 %ssa_476_0, %ssa_466;
bb_29	:  PC=0x3de0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2166) mov.b32 %ssa_476_1, %ssa_469;
bb_29	:  PC=0x3de8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2167) mov.b32 %ssa_476_2, %ssa_472;
bb_29	:  PC=0x3df0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2168) mov.b32 %ssa_476_3, %ssa_475; // vec4 32 ssa_476 = vec4 ssa_466, ssa_469, ssa_472, ssa_475
bb_29	:  PC=0x3df8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2171) mov.b32 %ssa_491, %ssa_476_0; // vec1 32 ssa_491 = mov ssa_476.x
bb_29	:  PC=0x3e00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2174) mov.b32 %ssa_494, %ssa_476_1; // vec1 32 ssa_494 = mov ssa_476.y
bb_29	:  PC=0x3e08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2177) mov.b32 %ssa_497, %ssa_476_2; // vec1 32 ssa_497 = mov ssa_476.z
bb_29	:  PC=0x3e10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2180) mov.b32 %ssa_500, %ssa_476_3; // vec1 32 ssa_500 = mov ssa_476.w
bb_29	:  PC=0x3e18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2183) mov.b32 %ssa_504, %ssa_489_0; // vec1 32 ssa_504 = mov ssa_489.x
bb_29	:  PC=0x3e20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2186) mov.b32 %ssa_507, %ssa_489_1; // vec1 32 ssa_507 = mov ssa_489.y
bb_29	:  PC=0x3e28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2189) mov.b32 %ssa_510, %ssa_489_2; // vec1 32 ssa_510 = mov ssa_489.z
bb_29	:  PC=0x3e30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2192) mov.b32 %ssa_513, %ssa_489_3; // vec1 32 ssa_513 = mov ssa_489.w
bb_29	:  PC=0x3e38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2194) mov.s32 %ssa_406, %ssa_403; // vec1 32 ssa_406 = phi block_19: ssa_273, block_29: ssa_403
bb_29	:  PC=0x3e40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2195) mov.b32 %ssa_492, %ssa_491; // vec1 32 ssa_492 = phi block_19: ssa_490, block_29: ssa_491
bb_29	:  PC=0x3e48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2196) mov.b32 %ssa_495, %ssa_494; // vec1 32 ssa_495 = phi block_19: ssa_493, block_29: ssa_494
bb_29	:  PC=0x3e50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2197) mov.b32 %ssa_498, %ssa_497; // vec1 32 ssa_498 = phi block_19: ssa_496, block_29: ssa_497
bb_29	:  PC=0x3e58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2198) mov.b32 %ssa_501, %ssa_500; // vec1 32 ssa_501 = phi block_19: ssa_499, block_29: ssa_500
bb_29	:  PC=0x3e60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2199) mov.b32 %ssa_505, %ssa_504; // vec1 32 ssa_505 = phi block_19: ssa_503, block_29: ssa_504
bb_29	:  PC=0x3e68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2200) mov.b32 %ssa_508, %ssa_507; // vec1 32 ssa_508 = phi block_19: ssa_506, block_29: ssa_507
bb_29	:  PC=0x3e70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2201) mov.b32 %ssa_511, %ssa_510; // vec1 32 ssa_511 = phi block_19: ssa_509, block_29: ssa_510
bb_29	:  PC=0x3e78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2202) mov.b32 %ssa_514, %ssa_513; // vec1 32 ssa_514 = phi block_19: ssa_512, block_29: ssa_513

bb_30	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2217) .reg .b32 %ssa_515_0;
bb_30	:  PC=0x3e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2221) mov.b32 %ssa_515_0, %ssa_505;
bb_30	:  PC=0x3e88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2222) mov.b32 %ssa_515_1, %ssa_508;
bb_30	:  PC=0x3e90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2223) mov.b32 %ssa_515_2, %ssa_511;
bb_30	:  PC=0x3e98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2224) mov.b32 %ssa_515_3, %ssa_514; // vec4 32 ssa_515 = vec4 ssa_505, ssa_508, ssa_511, ssa_514
bb_30	:  PC=0x3ea0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2230) mov.b32 %ssa_502_0, %ssa_492;
bb_30	:  PC=0x3ea8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2231) mov.b32 %ssa_502_1, %ssa_495;
bb_30	:  PC=0x3eb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2232) mov.b32 %ssa_502_2, %ssa_498;
bb_30	:  PC=0x3eb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2233) mov.b32 %ssa_502_3, %ssa_501; // vec4 32 ssa_502 = vec4 ssa_492, ssa_495, ssa_498, ssa_501
bb_30	:  PC=0x3ec0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2236) mov.b32 %ssa_517, %ssa_502_0; // vec1 32 ssa_517 = mov ssa_502.x
bb_30	:  PC=0x3ec8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2239) mov.b32 %ssa_520, %ssa_502_1; // vec1 32 ssa_520 = mov ssa_502.y
bb_30	:  PC=0x3ed0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2242) mov.b32 %ssa_523, %ssa_502_2; // vec1 32 ssa_523 = mov ssa_502.z
bb_30	:  PC=0x3ed8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2245) mov.b32 %ssa_526, %ssa_502_3; // vec1 32 ssa_526 = mov ssa_502.w
bb_30	:  PC=0x3ee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2248) mov.b32 %ssa_530, %ssa_515_0; // vec1 32 ssa_530 = mov ssa_515.x
bb_30	:  PC=0x3ee8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2251) mov.b32 %ssa_533, %ssa_515_1; // vec1 32 ssa_533 = mov ssa_515.y
bb_30	:  PC=0x3ef0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2254) mov.b32 %ssa_536, %ssa_515_2; // vec1 32 ssa_536 = mov ssa_515.z
bb_30	:  PC=0x3ef8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2257) mov.b32 %ssa_539, %ssa_515_3; // vec1 32 ssa_539 = mov ssa_515.w
bb_30	:  PC=0x3f00 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2259) mov.s32 %ssa_409, %ssa_406; // vec1 32 ssa_409 = phi block_9: ssa_205, block_30: ssa_406
bb_30	:  PC=0x3f08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2260) mov.b32 %ssa_518, %ssa_517; // vec1 32 ssa_518 = phi block_9: ssa_516, block_30: ssa_517
bb_30	:  PC=0x3f10 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2261) mov.b32 %ssa_521, %ssa_520; // vec1 32 ssa_521 = phi block_9: ssa_519, block_30: ssa_520
bb_30	:  PC=0x3f18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2262) mov.b32 %ssa_524, %ssa_523; // vec1 32 ssa_524 = phi block_9: ssa_522, block_30: ssa_523
bb_30	:  PC=0x3f20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2263) mov.b32 %ssa_527, %ssa_526; // vec1 32 ssa_527 = phi block_9: ssa_525, block_30: ssa_526
bb_30	:  PC=0x3f28 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2264) mov.b32 %ssa_531, %ssa_530; // vec1 32 ssa_531 = phi block_9: ssa_529, block_30: ssa_530
bb_30	:  PC=0x3f30 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2265) mov.b32 %ssa_534, %ssa_533; // vec1 32 ssa_534 = phi block_9: ssa_532, block_30: ssa_533
bb_30	:  PC=0x3f38 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2266) mov.b32 %ssa_537, %ssa_536; // vec1 32 ssa_537 = phi block_9: ssa_535, block_30: ssa_536
bb_30	:  PC=0x3f40 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2267) mov.b32 %ssa_540, %ssa_539; // vec1 32 ssa_540 = phi block_9: ssa_538, block_30: ssa_539

bb_31	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2282) .reg .b32 %ssa_541_0;
bb_31	:  PC=0x3f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2286) mov.b32 %ssa_541_0, %ssa_531;
bb_31	:  PC=0x3f50 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2287) mov.b32 %ssa_541_1, %ssa_534;
bb_31	:  PC=0x3f58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2288) mov.b32 %ssa_541_2, %ssa_537;
bb_31	:  PC=0x3f60 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2289) mov.b32 %ssa_541_3, %ssa_540; // vec4 32 ssa_541 = vec4 ssa_531, ssa_534, ssa_537, ssa_540
bb_31	:  PC=0x3f68 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2295) mov.b32 %ssa_528_0, %ssa_518;
bb_31	:  PC=0x3f70 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2296) mov.b32 %ssa_528_1, %ssa_521;
bb_31	:  PC=0x3f78 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2297) mov.b32 %ssa_528_2, %ssa_524;
bb_31	:  PC=0x3f80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2298) mov.b32 %ssa_528_3, %ssa_527; // vec4 32 ssa_528 = vec4 ssa_518, ssa_521, ssa_524, ssa_527
bb_31	:  PC=0x3f88 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2300) st.global.b32 [%ssa_165], %ssa_409; // intrinsic store_deref (%ssa_165, %ssa_409) (1, 0) /* wrmask=x */ /* access=0 */
bb_31	:  PC=0x3f90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2303) add.u64 %ssa_412, %ssa_164, 0; // vec1 32 ssa_412 = deref_struct &ssa_164->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_31	:  PC=0x3f98 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2305) st.global.b32 [%ssa_412 + 0], %ssa_541_0;
bb_31	:  PC=0x3fa0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2306) st.global.b32 [%ssa_412 + 4], %ssa_541_1;
bb_31	:  PC=0x3fa8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2307) st.global.b32 [%ssa_412 + 8], %ssa_541_2;
bb_31	:  PC=0x3fb0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2308) st.global.b32 [%ssa_412 + 12], %ssa_541_3;
bb_31	:  PC=0x3fb8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2313) add.u64 %ssa_413, %ssa_164, 16; // vec1 32 ssa_413 = deref_struct &ssa_164->ScatterDirection (shader_call_data vec4) /* &Ray.ScatterDirection */
bb_31	:  PC=0x3fc0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2315) st.global.b32 [%ssa_413 + 0], %ssa_528_0;
bb_31	:  PC=0x3fc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2316) st.global.b32 [%ssa_413 + 4], %ssa_528_1;
bb_31	:  PC=0x3fd0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2317) st.global.b32 [%ssa_413 + 8], %ssa_528_2;
bb_31	:  PC=0x3fd8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2318) st.global.b32 [%ssa_413 + 12], %ssa_528_3;
bb_31	:  PC=0x3fe0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2323) add.u64 %ssa_414, %ssa_164, 32; // vec1 32 ssa_414 = deref_struct &ssa_164->SurfaceNormal (shader_call_data vec3) /* &Ray.SurfaceNormal */
bb_31	:  PC=0x3fe8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2325) st.global.f32 [%ssa_414 + 0], %ssa_151_0;
bb_31	:  PC=0x3ff0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2326) st.global.f32 [%ssa_414 + 4], %ssa_151_1;
bb_31	:  PC=0x3ff8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2327) st.global.f32 [%ssa_414 + 8], %ssa_151_2;
bb_31	:  PC=0x4000 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2336) load_ray_world_origin %ssa_415_address; // vec3 32 ssa_415 = intrinsic load_ray_world_origin () ()
bb_31	:  PC=0x4008 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2337) ld.global.f32 %ssa_415_0, [%ssa_415_address + 0];
bb_31	:  PC=0x4010 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2338) ld.global.f32 %ssa_415_1, [%ssa_415_address + 4];
bb_31	:  PC=0x4018 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2339) ld.global.f32 %ssa_415_2, [%ssa_415_address + 8];
bb_31	:  PC=0x4020 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2340) ld.global.f32 %ssa_415_3, [%ssa_415_address + 12];
bb_31	:  PC=0x4028 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2343) mul.f32 %ssa_416, %ssa_138_0, %ssa_163; // vec1 32 ssa_416 = fmul ssa_138.x, ssa_163
bb_31	:  PC=0x4030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2346) mul.f32 %ssa_417, %ssa_138_1, %ssa_163; // vec1 32 ssa_417 = fmul ssa_138.y, ssa_163
bb_31	:  PC=0x4038 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2349) mul.f32 %ssa_418, %ssa_138_2, %ssa_163; // vec1 32 ssa_418 = fmul ssa_138.z, ssa_163
bb_31	:  PC=0x4040 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2352) add.f32 %ssa_419, %ssa_415_0, %ssa_416; // vec1 32 ssa_419 = fadd ssa_415.x, ssa_416
bb_31	:  PC=0x4048 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2355) add.f32 %ssa_420, %ssa_415_1, %ssa_417; // vec1 32 ssa_420 = fadd ssa_415.y, ssa_417
bb_31	:  PC=0x4050 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2358) add.f32 %ssa_421, %ssa_415_2, %ssa_418; // vec1 32 ssa_421 = fadd ssa_415.z, ssa_418
bb_31	:  PC=0x4058 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2364) mov.f32 %ssa_422_0, %ssa_419;
bb_31	:  PC=0x4060 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2365) mov.f32 %ssa_422_1, %ssa_528_1;
bb_31	:  PC=0x4068 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2366) mov.f32 %ssa_422_2, %ssa_528_2;
bb_31	:  PC=0x4070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2367) mov.f32 %ssa_422_3, %ssa_528_3; // vec4 32 ssa_422 = vec4 ssa_419, ssa_528.y, ssa_528.z, ssa_528.w
bb_31	:  PC=0x4078 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2369) st.global.f32 [%ssa_413 + 0], %ssa_422_0;
bb_31	:  PC=0x4080 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2370) st.global.f32 [%ssa_413 + 4], %ssa_422_1;
bb_31	:  PC=0x4088 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2371) st.global.f32 [%ssa_413 + 8], %ssa_422_2;
bb_31	:  PC=0x4090 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2372) st.global.f32 [%ssa_413 + 12], %ssa_422_3;
bb_31	:  PC=0x4098 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2380) mov.f32 %ssa_423_0, %ssa_419;
bb_31	:  PC=0x40a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2381) mov.f32 %ssa_423_1, %ssa_420;
bb_31	:  PC=0x40a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2382) mov.f32 %ssa_423_2, %ssa_528_2;
bb_31	:  PC=0x40b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2383) mov.f32 %ssa_423_3, %ssa_528_3; // vec4 32 ssa_423 = vec4 ssa_419, ssa_420, ssa_528.z, ssa_528.w
bb_31	:  PC=0x40b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2385) st.global.f32 [%ssa_413 + 0], %ssa_423_0;
bb_31	:  PC=0x40c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2386) st.global.f32 [%ssa_413 + 4], %ssa_423_1;
bb_31	:  PC=0x40c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2387) st.global.f32 [%ssa_413 + 8], %ssa_423_2;
bb_31	:  PC=0x40d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2388) st.global.f32 [%ssa_413 + 12], %ssa_423_3;
bb_31	:  PC=0x40d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2396) mov.f32 %ssa_424_0, %ssa_419;
bb_31	:  PC=0x40e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2397) mov.f32 %ssa_424_1, %ssa_420;
bb_31	:  PC=0x40e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2398) mov.f32 %ssa_424_2, %ssa_421;
bb_31	:  PC=0x40f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2399) mov.f32 %ssa_424_3, %ssa_528_3; // vec4 32 ssa_424 = vec4 ssa_419, ssa_420, ssa_421, ssa_528.w
bb_31	:  PC=0x40f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2401) st.global.f32 [%ssa_413 + 0], %ssa_424_0;
bb_31	:  PC=0x4100 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2402) st.global.f32 [%ssa_413 + 4], %ssa_424_1;
bb_31	:  PC=0x4108 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2403) st.global.f32 [%ssa_413 + 8], %ssa_424_2;
bb_31	:  PC=0x4110 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2404) st.global.f32 [%ssa_413 + 12], %ssa_424_3;

bb_32	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2412) ret ;
bb_32	:  PC=0x4118 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2412) ret ;

Summary of basic blocks for 'MESA_SHADER_CLOSEST_HIT_func2_main':
bb_00	: first: load_vulkan_descriptor	 last: bra	
bb_01	: first: mov	 last: bra	
bb_02	: first: mov	 last: bra	
bb_03	: first: mov	 last: mov	
bb_04	: first: mov	 last: mov	
bb_05	: first: mov	 last: bra	
bb_06	: first: bra	 last: bra	
bb_07	: first: bra	 last: bra	
bb_08	: first: mov	 last: bra	
bb_09	: first: add	 last: bra	
bb_10	: first: setp	 last: bra	
bb_11	: first: mov	 last: bra	
bb_12	: first: mov	 last: bra	
bb_13	: first: mov	 last: mov	
bb_14	: first: mov	 last: mov	
bb_15	: first: mov	 last: bra	
bb_16	: first: bra	 last: bra	
bb_17	: first: bra	 last: bra	
bb_18	: first: mov	 last: bra	
bb_19	: first: mul	 last: bra	
bb_20	: first: setp	 last: bra	
bb_21	: first: mov	 last: bra	
bb_22	: first: mov	 last: bra	
bb_23	: first: mov	 last: mov	
bb_24	: first: setp	 last: bra	
bb_25	: first: mov	 last: bra	
bb_26	: first: mov	 last: mov	
bb_27	: first: mov	 last: bra	
bb_28	: first: mov	 last: mov	
bb_29	: first: mov	 last: mov	
bb_30	: first: mov	 last: mov	
bb_31	: first: mov	 last: st	
bb_32	: first: ret	 last: ret	
bb_33	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_CLOSEST_HIT_func2_main'...
Operand information not set. load_vulkan_descriptor %TextureSamplers, 0, 8; // decl_var uniform INTERP_MODE_NONE restrict sampler2D[] TextureSamplers (~0, 0, 8)
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_CLOSEST_HIT_func2_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x2ee0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:810) @!%ssa_176 bra else_9;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2286) mov.b32 %ssa_541_0, %ssa_531;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x2f58 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:854) @!%ssa_184 bra else_10;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:934) mov.b32 %ssa_437_0, %ssa_427;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x2fc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:892) bra end_if_10;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3030 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:934) mov.b32 %ssa_437_0, %ssa_427;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x31a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1066) @!%ssa_221 bra else_11;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x31b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1070) bra loop_4_exit;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x31b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1070) bra loop_4_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x31d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1093) add.f32 %ssa_222, %ssa_148, %ssa_213;// vec1 32 ssa_222 = fadd ssa_148, ssa_213
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x31b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1074) bra end_if_11;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x31c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1084) mov.s32 %ssa_192, %ssa_205; // vec1 32 ssa_192 = phi block_4: ssa_166, block_8: ssa_205
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x31c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1087) bra loop_4;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3070 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:956) mov.f32 %ssa_193, 0F00ffffff; // vec1 32 ssa_193 = load_const (0x00ffffff /* 0.000000 */)
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x32b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1157) bra end_if_9;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3f48 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2286) mov.b32 %ssa_541_0, %ssa_531;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x32c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1168) @!%ssa_228 bra else_12;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2221) mov.b32 %ssa_515_0, %ssa_505;
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x33e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1268) @!%ssa_252 bra else_13;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x34b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1348) mov.b32 %ssa_450_0, %ssa_440;
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x3450 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1306) bra end_if_13;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x34b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1348) mov.b32 %ssa_450_0, %ssa_440;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x3630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1480) @!%ssa_289 bra else_14;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1484) bra loop_5_exit;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x3638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1484) bra loop_5_exit;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1507) mul.f32 %ssa_290, %ssa_281, %ssa_103;// vec1 32 ssa_290 = fmul ssa_281, ssa_103
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x3640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1488) bra end_if_14;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1498) mov.s32 %ssa_260, %ssa_273; // vec1 32 ssa_260 = phi block_14: ssa_166, block_18: ssa_273
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x3650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1501) bra loop_5;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x34f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1370) mov.f32 %ssa_261, 0F00ffffff; // vec1 32 ssa_261 = load_const (0x00ffffff /* 0.000000 */)
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x3758 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1580) bra end_if_12;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3e80 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2221) mov.b32 %ssa_515_0, %ssa_505;
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x3768 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1591) @!%ssa_299 bra else_15;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2156) mov.b32 %ssa_489_0, %ssa_479;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x3970 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1782) @!%ssa_354 bra else_16;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1848) setp.ge.s32 %ssa_370, %ssa_101, %ssa_0_bits; // vec1  1 ssa_370 = ige ssa_101, ssa_0
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x3a08 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1835) bra end_if_16;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3a18 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1848) setp.ge.s32 %ssa_370, %ssa_101, %ssa_0_bits; // vec1  1 ssa_370 = ige ssa_101, ssa_0
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x3a20 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1853) @!%ssa_370 bra else_17;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1933) mov.b32 %ssa_463_0, %ssa_453;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x3a90 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1891) bra end_if_17;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3af8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:1933) mov.b32 %ssa_463_0, %ssa_453;
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x3cc8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2073) bra end_if_15;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x3db8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_CLOSEST_HIT_2.ptx:2156) mov.b32 %ssa_489_0, %ssa_479;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_CLOSEST_HIT_func2_main
Operand information not set. load_vulkan_descriptor %ssa_6, 0, 7, 7; // vec2 32 ssa_6 = intrinsic vulkan_resource_index (%ssa_0) (0, 7, 7) /* desc_set=0 */ /* binding=7 */ /* desc_type=SSBO */
Operand information not set. load_primitive_id %ssa_12;// vec1 32 ssa_12 = intrinsic load_primitive_id () ()
Operand information not set. load_vulkan_descriptor %ssa_15, 0, 5, 7; // vec2 32 ssa_15 = intrinsic vulkan_resource_index (%ssa_0) (0, 5, 7) /* desc_set=0 */ /* binding=5 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_30, 0, 4, 7; // vec2 32 ssa_30 = intrinsic vulkan_resource_index (%ssa_0) (0, 4, 7) /* desc_set=0 */ /* binding=4 */ /* desc_type=SSBO */
Operand information not set. load_vulkan_descriptor %ssa_93, 0, 6, 7; // vec2 32 ssa_93 = intrinsic vulkan_resource_index (%ssa_0) (0, 6, 7) /* desc_set=0 */ /* binding=6 */ /* desc_type=SSBO */
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_CLOSEST_HIT_func2_main'.
gpgpusim: saving image SCENE to file 04-09-2025-11-47-06-SCENE.ppm
GPGPU-Sim PTX: finding reconvergence points for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding dominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding immediate dominators for 'MESA_SHADER_MISS_func1_main'...
Printing basic blocks for function 'MESA_SHADER_MISS_func1_main':
bb_00	:  PC=0x24a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:13) rt_alloc_mem %Ray, 48, 32; // decl_var shader_call_data INTERP_MODE_NONE RayPayload Ray
bb_00	:  PC=0x24b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:21) mov.f32 %const1_f32, 0F3f800000;
bb_00	:  PC=0x24b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:24) mov.f32 %const0_f32, 0F00000000;
bb_00	:  PC=0x24c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:27) mov.u32 %const0_u32, 0;
bb_00	:  PC=0x24c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:30) mov.u16 %const1_u16, 1;
bb_00	:  PC=0x24d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:38) mov.f32 %ssa_0_0, 0F00000000;
bb_00	:  PC=0x24d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:39) mov.f32 %ssa_0_1, 0F00000000;
bb_00	:  PC=0x24e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:40) mov.f32 %ssa_0_2, 0F00000000;
bb_00	:  PC=0x24e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:41) mov.f32 %ssa_0_3, 0Fbf800000;
bb_00	:  PC=0x24f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:45) mov.f32 %ssa_1, 0Fbf800000; // vec1 32 ssa_1 = load_const (0xbf800000 /* -1.000000 */)
bb_00	:  PC=0x24f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:47) mov.b32 %ssa_1_bits, 0Fbf800000;
bb_00	:  PC=0x2500 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:53) mov.f32 %ssa_2_0, 0F3f800000;
bb_00	:  PC=0x2508 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:54) mov.f32 %ssa_2_1, 0F3f800000;
bb_00	:  PC=0x2510 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:55) mov.f32 %ssa_2_2, 0F3f800000;
bb_00	:  PC=0x2518 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:56) mov.f32 %ssa_2_3, 0F00000000;
bb_00	:  PC=0x2520 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:60) mov.f32 %ssa_3, 0F3f800000; // vec1 32 ssa_3 = load_const (0x3f800000 /* 1.000000 */)
bb_00	:  PC=0x2528 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:62) mov.b32 %ssa_3_bits, 0F3f800000;
bb_00	:  PC=0x2530 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:65) mov.f32 %ssa_4, 0F00000000; // vec1 32 ssa_4 = load_const (0x00000000 /* 0.000000 */)
bb_00	:  PC=0x2538 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:67) mov.b32 %ssa_4_bits, 0F00000000;
bb_00	:  PC=0x2540 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:70) load_vulkan_descriptor %ssa_5, 0, 3, 6; // vec2 32 ssa_5 = intrinsic vulkan_resource_index (%ssa_4) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
bb_00	:  PC=0x2548 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:73) mov.b64 %ssa_6, %ssa_5; // vec2 32 ssa_6 = intrinsic load_vulkan_descriptor (%ssa_5) (6) /* desc_type=UBO */
bb_00	:  PC=0x2550 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:76) mov.b64 %ssa_7, %ssa_6; // vec2 32 ssa_7 = deref_cast (UniformBufferObjectStruct *)ssa_6 (ubo UniformBufferObjectStruct)  /* ptr_stride=0, align_mul=0, align_offset=0 */
bb_00	:  PC=0x2558 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:79) add.u64 %ssa_8, %ssa_7, 0; // vec2 32 ssa_8 = deref_struct &ssa_7->Camera (ubo UniformBufferObject) /* &((UniformBufferObjectStruct *)ssa_6)->Camera */
bb_00	:  PC=0x2560 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:82) add.u64 %ssa_9, %ssa_8, 312; // vec2 32 ssa_9 = deref_struct &ssa_8->HasSky (ubo uint) /* &((UniformBufferObjectStruct *)ssa_6)->Camera.HasSky */
bb_00	:  PC=0x2568 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:85) ld.global.u32 %ssa_10, [%ssa_9]; // vec1 32 ssa_10 = intrinsic load_deref (%ssa_9) (16) /* access=16 */
bb_00	:  PC=0x2570 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:88) setp.ne.s32 %ssa_11, %ssa_10, %ssa_4_bits; // vec1  1 ssa_11 = ine ssa_10, ssa_4
bb_00	:  PC=0x2578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:93) @!%ssa_11 bra else_8;

bb_01	:  PC=0x2580 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:102) load_ray_world_direction %ssa_12_address; // vec3 32 ssa_12 = intrinsic load_ray_world_direction () ()
bb_01	:  PC=0x2588 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:103) ld.global.f32 %ssa_12_0, [%ssa_12_address + 0];
bb_01	:  PC=0x2590 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:104) ld.global.f32 %ssa_12_1, [%ssa_12_address + 4];
bb_01	:  PC=0x2598 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:105) ld.global.f32 %ssa_12_2, [%ssa_12_address + 8];
bb_01	:  PC=0x25a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:106) ld.global.f32 %ssa_12_3, [%ssa_12_address + 12];
bb_01	:  PC=0x25a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:109) mul.f32 %ssa_13, %ssa_12_0, %ssa_12_0; // vec1 32 ssa_13 = fmul ssa_12.x, ssa_12.x
bb_01	:  PC=0x25b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:112) mul.f32 %ssa_14, %ssa_12_1, %ssa_12_1; // vec1 32 ssa_14 = fmul ssa_12.y, ssa_12.y
bb_01	:  PC=0x25b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:115) mul.f32 %ssa_15, %ssa_12_2, %ssa_12_2; // vec1 32 ssa_15 = fmul ssa_12.z, ssa_12.z
bb_01	:  PC=0x25c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:121) mov.f32 %ssa_16_0, %ssa_13;
bb_01	:  PC=0x25c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:122) mov.f32 %ssa_16_1, %ssa_14;
bb_01	:  PC=0x25d0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:123) mov.f32 %ssa_16_2, %ssa_15; // vec3 32 ssa_16 = vec3 ssa_13, ssa_14, ssa_15
bb_01	:  PC=0x25d8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:126) add.f32 %ssa_17, %ssa_16_0, %ssa_16_1;
bb_01	:  PC=0x25e0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:127) add.f32 %ssa_17, %ssa_17, %ssa_16_2; // vec1 32 ssa_17 = fsum3 ssa_16
bb_01	:  PC=0x25e8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:130) rsqrt.approx.f32 %ssa_18, %ssa_17;// vec1 32 ssa_18 = frsq ssa_17
bb_01	:  PC=0x25f0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:133) mul.f32 %ssa_19, %ssa_12_1, %ssa_18; // vec1 32 ssa_19 = fmul ssa_12.y, ssa_18
bb_01	:  PC=0x25f8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:136) add.f32 %ssa_20, %ssa_19, %ssa_3;// vec1 32 ssa_20 = fadd ssa_19, ssa_3
bb_01	:  PC=0x2600 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:139) mov.f32 %ssa_21, 0Fbe800000; // vec1 32 ssa_21 = load_const (0xbe800000 /* -0.250000 */)
bb_01	:  PC=0x2608 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:141) mov.b32 %ssa_21_bits, 0Fbe800000;
bb_01	:  PC=0x2610 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:144) mul.f32 %ssa_22, %ssa_21, %ssa_20;// vec1 32 ssa_22 = fmul ssa_21, ssa_20
bb_01	:  PC=0x2618 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:147) mov.f32 %ssa_23, 0Fbe19999a; // vec1 32 ssa_23 = load_const (0xbe19999a /* -0.150000 */)
bb_01	:  PC=0x2620 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:149) mov.b32 %ssa_23_bits, 0Fbe19999a;
bb_01	:  PC=0x2628 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:152) mul.f32 %ssa_24, %ssa_23, %ssa_20;// vec1 32 ssa_24 = fmul ssa_23, ssa_20
bb_01	:  PC=0x2630 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:155) add.f32 %ssa_25, %ssa_2_0, %ssa_22; // vec1 32 ssa_25 = fadd ssa_2.x, ssa_22
bb_01	:  PC=0x2638 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:158) add.f32 %ssa_26, %ssa_2_1, %ssa_24; // vec1 32 ssa_26 = fadd ssa_2.y, ssa_24
bb_01	:  PC=0x2640 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:164) mov.f32 %ssa_27_0, %ssa_25;
bb_01	:  PC=0x2648 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:165) mov.f32 %ssa_27_1, %ssa_26;
bb_01	:  PC=0x2650 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:166) mov.f32 %ssa_27_2, %ssa_3;
bb_01	:  PC=0x2658 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:167) mov.f32 %ssa_27_3, %ssa_1; // vec4 32 ssa_27 = vec4 ssa_25, ssa_26, ssa_3, ssa_1
bb_01	:  PC=0x2660 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:170) mov.b64 %ssa_28, %Ray; // vec1 32 ssa_28 = deref_var &Ray (shader_call_data RayPayload) 
bb_01	:  PC=0x2668 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:173) add.u64 %ssa_29, %ssa_28, 0; // vec1 32 ssa_29 = deref_struct &ssa_28->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_01	:  PC=0x2670 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:175) st.global.f32 [%ssa_29 + 0], %ssa_27_0;
bb_01	:  PC=0x2678 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:176) st.global.f32 [%ssa_29 + 4], %ssa_27_1;
bb_01	:  PC=0x2680 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:177) st.global.f32 [%ssa_29 + 8], %ssa_27_2;
bb_01	:  PC=0x2688 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:178) st.global.f32 [%ssa_29 + 12], %ssa_27_3;
bb_01	:  PC=0x2690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:184) bra end_if_8;

bb_02	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:189) .reg .b64 %ssa_30;
bb_02	:  PC=0x2698 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:190) mov.b64 %ssa_30, %Ray; // vec1 32 ssa_30 = deref_var &Ray (shader_call_data RayPayload) 
bb_02	:  PC=0x26a0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:193) add.u64 %ssa_31, %ssa_30, 0; // vec1 32 ssa_31 = deref_struct &ssa_30->ColorAndDistance (shader_call_data vec4) /* &Ray.ColorAndDistance */
bb_02	:  PC=0x26a8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:195) st.global.f32 [%ssa_31 + 0], %ssa_0_0;
bb_02	:  PC=0x26b0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:196) st.global.f32 [%ssa_31 + 4], %ssa_0_1;
bb_02	:  PC=0x26b8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:197) st.global.f32 [%ssa_31 + 8], %ssa_0_2;
bb_02	:  PC=0x26c0 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:198) st.global.f32 [%ssa_31 + 12], %ssa_0_3;

bb_03	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:210) shader_exit:
bb_03	:                 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
bb_03	:  PC=0x26c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;

Summary of basic blocks for 'MESA_SHADER_MISS_func1_main':
bb_00	: first: rt_alloc_mem	 last: bra	
bb_01	: first: load_ray_world_direction	 last: bra	
bb_02	: first: mov	 last: st	
bb_03	: first: ret	 last: ret	
bb_04	: first: NULL	 last: NULL	

GPGPU-Sim PTX: Finding postdominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: Finding immediate postdominators for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: pre-decoding instructions for 'MESA_SHADER_MISS_func1_main'...
GPGPU-Sim PTX: reconvergence points for MESA_SHADER_MISS_func1_main...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x2578 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:93) @!%ssa_11 bra else_8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x26c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x2690 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:184) bra end_if_8;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x26c8 (/cluster/home/jorgfi/vulkan-sim-root/vulkan-sim/../mesa-vulkan-sim/gpgpusimShaders/MESA_SHADER_MISS_1.ptx:211) ret ;
GPGPU-Sim PTX: ... end of reconvergence points for MESA_SHADER_MISS_func1_main
Operand information not set. load_vulkan_descriptor %ssa_5, 0, 3, 6; // vec2 32 ssa_5 = intrinsic vulkan_resource_index (%ssa_4) (0, 3, 6) /* desc_set=0 */ /* binding=3 */ /* desc_type=UBO */
GPGPU-Sim PTX: ... done pre-decoding instructions for 'MESA_SHADER_MISS_func1_main'.
GPGPU-Sim: Done functional simulation (396980340 instructions simulated).
Stats for Kernel 0 Classification

Min 0.000000 Max 15.000000 Average 17.848706 
[ 63885540 -521765506 0 163448982 20928586 527598510 0 0 0 0 0 121833508 10525360 10525360 0 527598510 0 0 0 0 0 0 0 0 0 ]
Stats for Kernel 0 OP Classification

Min 1.000000 Max 143.000000 Average 427.901430 
[ 0 823946436 0 0 37038225 0 0 0 0 0 0 216547018 0 0 0 0 0 0 0 0 0 0 0 145570559 0 0 0 0 0 0 0 375474406 0 0 0 0 0 0 0 0 0 1793084278 0 657228435 29733890 0 0 0 0 0 0 0 0 0 0 2883584 0 0 10787504 0 17258570 0 79005512 142058455 0 0 16252928 16252928 0 0 786432 0 0 152124104 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 32505856 0 0 0 524288 10525360 132358868 ]


gpgpu_simulation_time = 0 days, 1 hrs, 42 min, 58 sec (6178 sec)
gpgpu_simulation_rate = 64257 (inst/sec)
Destroy streams for kernel 1: size 0
Max simulated kernels of 1 has reached, exiting.
GPGPU-Sim: *** exit detected ***
